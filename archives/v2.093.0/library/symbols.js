// symbol index generated by DDOX - do not edit
var symbols = [
{name: 'std.algorithm.comparison', kind: "module", path: './std/algorithm/comparison.html', attributes: []},
{name: 'std.algorithm.comparison.AllocateGC', kind: "aliasdeclaration", path: './std/algorithm/comparison/allocate_gc.html', attributes: []},
{name: 'std.algorithm.comparison.among', kind: "functiondeclaration", path: './std/algorithm/comparison/among.html', attributes: []},
{name: 'std.algorithm.comparison.among.among', kind: "functiondeclaration", path: './std/algorithm/comparison/among.among.html', attributes: []},
{name: 'std.algorithm.comparison.castSwitch', kind: "functiondeclaration", path: './std/algorithm/comparison/cast_switch.html', attributes: ["auto"]},
{name: 'std.algorithm.comparison.clamp', kind: "functiondeclaration", path: './std/algorithm/comparison/clamp.html', attributes: ["auto"]},
{name: 'std.algorithm.comparison.cmp', kind: "functiondeclaration", path: './std/algorithm/comparison/cmp.html', attributes: ["auto"]},
{name: 'std.algorithm.comparison.EditOp', kind: "enumdeclaration", path: './std/algorithm/comparison/edit_op.html', attributes: []},
{name: 'std.algorithm.comparison.EditOp.insert', kind: "enummemberdeclaration", path: './std/algorithm/comparison/edit_op.html#insert', attributes: []},
{name: 'std.algorithm.comparison.EditOp.none', kind: "enummemberdeclaration", path: './std/algorithm/comparison/edit_op.html#none', attributes: []},
{name: 'std.algorithm.comparison.EditOp.remove', kind: "enummemberdeclaration", path: './std/algorithm/comparison/edit_op.html#remove', attributes: []},
{name: 'std.algorithm.comparison.EditOp.substitute', kind: "enummemberdeclaration", path: './std/algorithm/comparison/edit_op.html#substitute', attributes: []},
{name: 'std.algorithm.comparison.either', kind: "functiondeclaration", path: './std/algorithm/comparison/either.html', attributes: []},
{name: 'std.algorithm.comparison.equal', kind: "templatedeclaration", path: './std/algorithm/comparison/equal.html', attributes: []},
{name: 'std.algorithm.comparison.equal.equal', kind: "functiondeclaration", path: './std/algorithm/comparison/equal.equal.html', attributes: []},
{name: 'std.algorithm.comparison.isPermutation', kind: "functiondeclaration", path: './std/algorithm/comparison/is_permutation.html', attributes: []},
{name: 'std.algorithm.comparison.isSameLength', kind: "functiondeclaration", path: './std/algorithm/comparison/is_same_length.html', attributes: []},
{name: 'std.algorithm.comparison.levenshteinDistance', kind: "functiondeclaration", path: './std/algorithm/comparison/levenshtein_distance.html', attributes: []},
{name: 'std.algorithm.comparison.levenshteinDistanceAndPath', kind: "functiondeclaration", path: './std/algorithm/comparison/levenshtein_distance_and_path.html', attributes: []},
{name: 'std.algorithm.comparison.max', kind: "functiondeclaration", path: './std/algorithm/comparison/max.html', attributes: []},
{name: 'std.algorithm.comparison.min', kind: "functiondeclaration", path: './std/algorithm/comparison/min.html', attributes: []},
{name: 'std.algorithm.comparison.mismatch', kind: "functiondeclaration", path: './std/algorithm/comparison/mismatch.html', attributes: []},
{name: 'std.algorithm.comparison.predSwitch', kind: "functiondeclaration", path: './std/algorithm/comparison/pred_switch.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration', kind: "module", path: './std/algorithm/iteration.html', attributes: []},
{name: 'std.algorithm.iteration.cache', kind: "functiondeclaration", path: './std/algorithm/iteration/cache.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.cacheBidirectional', kind: "functiondeclaration", path: './std/algorithm/iteration/cache_bidirectional.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.chunkBy', kind: "functiondeclaration", path: './std/algorithm/iteration/chunk_by.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.cumulativeFold', kind: "templatedeclaration", path: './std/algorithm/iteration/cumulative_fold.html', attributes: []},
{name: 'std.algorithm.iteration.cumulativeFold.cumulativeFold', kind: "functiondeclaration", path: './std/algorithm/iteration/cumulative_fold.cumulative_fold.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.each', kind: "templatedeclaration", path: './std/algorithm/iteration/each.html', attributes: []},
{name: 'std.algorithm.iteration.each.each', kind: "functiondeclaration", path: './std/algorithm/iteration/each.each.html', attributes: []},
{name: 'std.algorithm.iteration.filter', kind: "templatedeclaration", path: './std/algorithm/iteration/filter.html', attributes: []},
{name: 'std.algorithm.iteration.filter.filter', kind: "functiondeclaration", path: './std/algorithm/iteration/filter.filter.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.filterBidirectional', kind: "templatedeclaration", path: './std/algorithm/iteration/filter_bidirectional.html', attributes: []},
{name: 'std.algorithm.iteration.filterBidirectional.filterBidirectional', kind: "functiondeclaration", path: './std/algorithm/iteration/filter_bidirectional.filter_bidirectional.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.fold', kind: "templatedeclaration", path: './std/algorithm/iteration/fold.html', attributes: []},
{name: 'std.algorithm.iteration.fold.fold', kind: "functiondeclaration", path: './std/algorithm/iteration/fold.fold.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.group', kind: "functiondeclaration", path: './std/algorithm/iteration/group.html', attributes: []},
{name: 'std.algorithm.iteration.Group', kind: "structdeclaration", path: './std/algorithm/iteration/group.html', attributes: []},
{name: 'std.algorithm.iteration.Group.empty', kind: "enummemberdeclaration", path: './std/algorithm/iteration/group.empty.html', attributes: []},
{name: 'std.algorithm.iteration.Group.front', kind: "functiondeclaration", path: './std/algorithm/iteration/group.front.html', attributes: ["auto", "property", "ref"]},
{name: 'std.algorithm.iteration.Group.popFront', kind: "functiondeclaration", path: './std/algorithm/iteration/group.pop_front.html', attributes: []},
{name: 'std.algorithm.iteration.Group.save', kind: "functiondeclaration", path: './std/algorithm/iteration/group.save.html', attributes: ["property"]},
{name: 'std.algorithm.iteration.Group.this', kind: "functiondeclaration", path: './std/algorithm/iteration/group.this.html', attributes: []},
{name: 'std.algorithm.iteration.joiner', kind: "functiondeclaration", path: './std/algorithm/iteration/joiner.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.map', kind: "templatedeclaration", path: './std/algorithm/iteration/map.html', attributes: []},
{name: 'std.algorithm.iteration.map.map', kind: "functiondeclaration", path: './std/algorithm/iteration/map.map.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.mean', kind: "functiondeclaration", path: './std/algorithm/iteration/mean.html', attributes: []},
{name: 'std.algorithm.iteration.permutations', kind: "functiondeclaration", path: './std/algorithm/iteration/permutations.html', attributes: []},
{name: 'std.algorithm.iteration.Permutations', kind: "structdeclaration", path: './std/algorithm/iteration/permutations.html', attributes: []},
{name: 'std.algorithm.iteration.Permutations.empty', kind: "functiondeclaration", path: './std/algorithm/iteration/permutations.empty.html', attributes: ["const", "pure", "nothrow", "nogc", "property", "safe"]},
{name: 'std.algorithm.iteration.Permutations.front', kind: "functiondeclaration", path: './std/algorithm/iteration/permutations.front.html', attributes: ["auto", "property"]},
{name: 'std.algorithm.iteration.Permutations.popFront', kind: "functiondeclaration", path: './std/algorithm/iteration/permutations.pop_front.html', attributes: []},
{name: 'std.algorithm.iteration.Permutations.this', kind: "functiondeclaration", path: './std/algorithm/iteration/permutations.this.html', attributes: []},
{name: 'std.algorithm.iteration.reduce', kind: "templatedeclaration", path: './std/algorithm/iteration/reduce.html', attributes: []},
{name: 'std.algorithm.iteration.reduce.reduce', kind: "functiondeclaration", path: './std/algorithm/iteration/reduce.reduce.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.splitter', kind: "functiondeclaration", path: './std/algorithm/iteration/splitter.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.substitute', kind: "templatedeclaration", path: './std/algorithm/iteration/substitute.html', attributes: []},
{name: 'std.algorithm.iteration.substitute.substitute', kind: "functiondeclaration", path: './std/algorithm/iteration/substitute.substitute.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.sum', kind: "functiondeclaration", path: './std/algorithm/iteration/sum.html', attributes: ["auto"]},
{name: 'std.algorithm.iteration.uniq', kind: "functiondeclaration", path: './std/algorithm/iteration/uniq.html', attributes: ["auto"]},
{name: 'std.algorithm.mutation', kind: "module", path: './std/algorithm/mutation.html', attributes: []},
{name: 'std.algorithm.mutation.bringToFront', kind: "functiondeclaration", path: './std/algorithm/mutation/bring_to_front.html', attributes: []},
{name: 'std.algorithm.mutation.copy', kind: "functiondeclaration", path: './std/algorithm/mutation/copy.html', attributes: []},
{name: 'std.algorithm.mutation.fill', kind: "functiondeclaration", path: './std/algorithm/mutation/fill.html', attributes: []},
{name: 'std.algorithm.mutation.initializeAll', kind: "functiondeclaration", path: './std/algorithm/mutation/initialize_all.html', attributes: []},
{name: 'std.algorithm.mutation.move', kind: "functiondeclaration", path: './std/algorithm/mutation/move.html', attributes: []},
{name: 'std.algorithm.mutation.moveAll', kind: "functiondeclaration", path: './std/algorithm/mutation/move_all.html', attributes: []},
{name: 'std.algorithm.mutation.moveEmplace', kind: "functiondeclaration", path: './std/algorithm/mutation/move_emplace.html', attributes: ["pure", "system"]},
{name: 'std.algorithm.mutation.moveEmplaceAll', kind: "functiondeclaration", path: './std/algorithm/mutation/move_emplace_all.html', attributes: ["system"]},
{name: 'std.algorithm.mutation.moveEmplaceSome', kind: "functiondeclaration", path: './std/algorithm/mutation/move_emplace_some.html', attributes: ["system"]},
{name: 'std.algorithm.mutation.moveSome', kind: "functiondeclaration", path: './std/algorithm/mutation/move_some.html', attributes: []},
{name: 'std.algorithm.mutation.remove', kind: "functiondeclaration", path: './std/algorithm/mutation/remove.html', attributes: []},
{name: 'std.algorithm.mutation.reverse', kind: "functiondeclaration", path: './std/algorithm/mutation/reverse.html', attributes: []},
{name: 'std.algorithm.mutation.strip', kind: "functiondeclaration", path: './std/algorithm/mutation/strip.html', attributes: []},
{name: 'std.algorithm.mutation.stripLeft', kind: "functiondeclaration", path: './std/algorithm/mutation/strip_left.html', attributes: []},
{name: 'std.algorithm.mutation.stripRight', kind: "functiondeclaration", path: './std/algorithm/mutation/strip_right.html', attributes: []},
{name: 'std.algorithm.mutation.swap', kind: "functiondeclaration", path: './std/algorithm/mutation/swap.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.algorithm.mutation.swapAt', kind: "functiondeclaration", path: './std/algorithm/mutation/swap_at.html', attributes: []},
{name: 'std.algorithm.mutation.swapRanges', kind: "functiondeclaration", path: './std/algorithm/mutation/swap_ranges.html', attributes: []},
{name: 'std.algorithm.mutation.SwapStrategy', kind: "enumdeclaration", path: './std/algorithm/mutation/swap_strategy.html', attributes: []},
{name: 'std.algorithm.mutation.SwapStrategy.semistable', kind: "enummemberdeclaration", path: './std/algorithm/mutation/swap_strategy.html#semistable', attributes: []},
{name: 'std.algorithm.mutation.SwapStrategy.stable', kind: "enummemberdeclaration", path: './std/algorithm/mutation/swap_strategy.html#stable', attributes: []},
{name: 'std.algorithm.mutation.SwapStrategy.unstable', kind: "enummemberdeclaration", path: './std/algorithm/mutation/swap_strategy.html#unstable', attributes: []},
{name: 'std.algorithm.mutation.uninitializedFill', kind: "functiondeclaration", path: './std/algorithm/mutation/uninitialized_fill.html', attributes: []},
{name: 'std.algorithm.searching', kind: "module", path: './std/algorithm/searching.html', attributes: []},
{name: 'std.algorithm.searching.all', kind: "templatedeclaration", path: './std/algorithm/searching/all.html', attributes: []},
{name: 'std.algorithm.searching.all.all', kind: "functiondeclaration", path: './std/algorithm/searching/all.all.html', attributes: []},
{name: 'std.algorithm.searching.any', kind: "templatedeclaration", path: './std/algorithm/searching/any.html', attributes: []},
{name: 'std.algorithm.searching.any.any', kind: "functiondeclaration", path: './std/algorithm/searching/any.any.html', attributes: []},
{name: 'std.algorithm.searching.balancedParens', kind: "functiondeclaration", path: './std/algorithm/searching/balanced_parens.html', attributes: []},
{name: 'std.algorithm.searching.BoyerMooreFinder', kind: "structdeclaration", path: './std/algorithm/searching/boyer_moore_finder.html', attributes: []},
{name: 'std.algorithm.searching.BoyerMooreFinder.beFound', kind: "functiondeclaration", path: './std/algorithm/searching/boyer_moore_finder.be_found.html', attributes: ["scope"]},
{name: 'std.algorithm.searching.BoyerMooreFinder.length', kind: "functiondeclaration", path: './std/algorithm/searching/boyer_moore_finder.length.html', attributes: ["property"]},
{name: 'std.algorithm.searching.BoyerMooreFinder.opDollar', kind: "aliasdeclaration", path: './std/algorithm/searching/boyer_moore_finder.op_dollar.html', attributes: []},
{name: 'std.algorithm.searching.BoyerMooreFinder.this', kind: "functiondeclaration", path: './std/algorithm/searching/boyer_moore_finder.this.html', attributes: []},
{name: 'std.algorithm.searching.boyerMooreFinder', kind: "functiondeclaration", path: './std/algorithm/searching/boyer_moore_finder.html', attributes: []},
{name: 'std.algorithm.searching.canFind', kind: "templatedeclaration", path: './std/algorithm/searching/can_find.html', attributes: []},
{name: 'std.algorithm.searching.canFind.canFind', kind: "functiondeclaration", path: './std/algorithm/searching/can_find.can_find.html', attributes: []},
{name: 'std.algorithm.searching.commonPrefix', kind: "functiondeclaration", path: './std/algorithm/searching/common_prefix.html', attributes: ["auto"]},
{name: 'std.algorithm.searching.count', kind: "functiondeclaration", path: './std/algorithm/searching/count.html', attributes: []},
{name: 'std.algorithm.searching.countUntil', kind: "functiondeclaration", path: './std/algorithm/searching/count_until.html', attributes: []},
{name: 'std.algorithm.searching.endsWith', kind: "functiondeclaration", path: './std/algorithm/searching/ends_with.html', attributes: []},
{name: 'std.algorithm.searching.find', kind: "functiondeclaration", path: './std/algorithm/searching/find.html', attributes: []},
{name: 'std.algorithm.searching.findAdjacent', kind: "functiondeclaration", path: './std/algorithm/searching/find_adjacent.html', attributes: []},
{name: 'std.algorithm.searching.findAmong', kind: "functiondeclaration", path: './std/algorithm/searching/find_among.html', attributes: []},
{name: 'std.algorithm.searching.findSkip', kind: "functiondeclaration", path: './std/algorithm/searching/find_skip.html', attributes: []},
{name: 'std.algorithm.searching.findSplit', kind: "functiondeclaration", path: './std/algorithm/searching/find_split.html', attributes: ["auto"]},
{name: 'std.algorithm.searching.findSplitAfter', kind: "functiondeclaration", path: './std/algorithm/searching/find_split_after.html', attributes: ["auto"]},
{name: 'std.algorithm.searching.findSplitBefore', kind: "functiondeclaration", path: './std/algorithm/searching/find_split_before.html', attributes: ["auto"]},
{name: 'std.algorithm.searching.maxCount', kind: "functiondeclaration", path: './std/algorithm/searching/max_count.html', attributes: []},
{name: 'std.algorithm.searching.maxElement', kind: "functiondeclaration", path: './std/algorithm/searching/max_element.html', attributes: ["auto"]},
{name: 'std.algorithm.searching.maxIndex', kind: "functiondeclaration", path: './std/algorithm/searching/max_index.html', attributes: []},
{name: 'std.algorithm.searching.maxPos', kind: "functiondeclaration", path: './std/algorithm/searching/max_pos.html', attributes: []},
{name: 'std.algorithm.searching.minCount', kind: "functiondeclaration", path: './std/algorithm/searching/min_count.html', attributes: []},
{name: 'std.algorithm.searching.minElement', kind: "functiondeclaration", path: './std/algorithm/searching/min_element.html', attributes: ["auto"]},
{name: 'std.algorithm.searching.minIndex', kind: "functiondeclaration", path: './std/algorithm/searching/min_index.html', attributes: []},
{name: 'std.algorithm.searching.minPos', kind: "functiondeclaration", path: './std/algorithm/searching/min_pos.html', attributes: []},
{name: 'std.algorithm.searching.OpenRight', kind: "aliasdeclaration", path: './std/algorithm/searching/open_right.html', attributes: []},
{name: 'std.algorithm.searching.skipOver', kind: "templatedeclaration", path: './std/algorithm/searching/skip_over.html', attributes: []},
{name: 'std.algorithm.searching.skipOver.skipOver', kind: "functiondeclaration", path: './std/algorithm/searching/skip_over.skip_over.html', attributes: []},
{name: 'std.algorithm.searching.startsWith', kind: "functiondeclaration", path: './std/algorithm/searching/starts_with.html', attributes: []},
{name: 'std.algorithm.searching.until', kind: "functiondeclaration", path: './std/algorithm/searching/until.html', attributes: []},
{name: 'std.algorithm.searching.Until', kind: "structdeclaration", path: './std/algorithm/searching/until.html', attributes: []},
{name: 'std.algorithm.searching.Until.empty', kind: "functiondeclaration", path: './std/algorithm/searching/until.empty.html', attributes: ["property"]},
{name: 'std.algorithm.searching.Until.front', kind: "functiondeclaration", path: './std/algorithm/searching/until.front.html', attributes: ["auto", "property", "ref"]},
{name: 'std.algorithm.searching.Until.popFront', kind: "functiondeclaration", path: './std/algorithm/searching/until.pop_front.html', attributes: []},
{name: 'std.algorithm.searching.Until.save', kind: "functiondeclaration", path: './std/algorithm/searching/until.save.html', attributes: ["property"]},
{name: 'std.algorithm.searching.Until.this', kind: "functiondeclaration", path: './std/algorithm/searching/until.this.html', attributes: []},
{name: 'std.algorithm.setops', kind: "module", path: './std/algorithm/setops.html', attributes: []},
{name: 'std.algorithm.setops.cartesianProduct', kind: "functiondeclaration", path: './std/algorithm/setops/cartesian_product.html', attributes: ["auto"]},
{name: 'std.algorithm.setops.largestPartialIntersection', kind: "functiondeclaration", path: './std/algorithm/setops/largest_partial_intersection.html', attributes: []},
{name: 'std.algorithm.setops.largestPartialIntersectionWeighted', kind: "functiondeclaration", path: './std/algorithm/setops/largest_partial_intersection_weighted.html', attributes: []},
{name: 'std.algorithm.setops.MultiwayMerge', kind: "structdeclaration", path: './std/algorithm/setops/multiway_merge.html', attributes: []},
{name: 'std.algorithm.setops.MultiwayMerge.compFront', kind: "functiondeclaration", path: './std/algorithm/setops/multiway_merge.comp_front.html', attributes: ["static"]},
{name: 'std.algorithm.setops.MultiwayMerge.empty', kind: "functiondeclaration", path: './std/algorithm/setops/multiway_merge.empty.html', attributes: ["property"]},
{name: 'std.algorithm.setops.MultiwayMerge.front', kind: "functiondeclaration", path: './std/algorithm/setops/multiway_merge.front.html', attributes: ["auto", "property", "ref"]},
{name: 'std.algorithm.setops.MultiwayMerge.popFront', kind: "functiondeclaration", path: './std/algorithm/setops/multiway_merge.pop_front.html', attributes: []},
{name: 'std.algorithm.setops.MultiwayMerge.this', kind: "functiondeclaration", path: './std/algorithm/setops/multiway_merge.this.html', attributes: []},
{name: 'std.algorithm.setops.multiwayMerge', kind: "functiondeclaration", path: './std/algorithm/setops/multiway_merge.html', attributes: []},
{name: 'std.algorithm.setops.multiwayUnion', kind: "functiondeclaration", path: './std/algorithm/setops/multiway_union.html', attributes: ["auto"]},
{name: 'std.algorithm.setops.SetDifference', kind: "structdeclaration", path: './std/algorithm/setops/set_difference.html', attributes: []},
{name: 'std.algorithm.setops.SetDifference.empty', kind: "functiondeclaration", path: './std/algorithm/setops/set_difference.empty.html', attributes: ["property"]},
{name: 'std.algorithm.setops.SetDifference.front', kind: "functiondeclaration", path: './std/algorithm/setops/set_difference.front.html', attributes: ["auto", "property", "ref"]},
{name: 'std.algorithm.setops.SetDifference.popFront', kind: "functiondeclaration", path: './std/algorithm/setops/set_difference.pop_front.html', attributes: []},
{name: 'std.algorithm.setops.SetDifference.save', kind: "functiondeclaration", path: './std/algorithm/setops/set_difference.save.html', attributes: ["property"]},
{name: 'std.algorithm.setops.SetDifference.this', kind: "functiondeclaration", path: './std/algorithm/setops/set_difference.this.html', attributes: []},
{name: 'std.algorithm.setops.setDifference', kind: "functiondeclaration", path: './std/algorithm/setops/set_difference.html', attributes: []},
{name: 'std.algorithm.setops.SetIntersection', kind: "structdeclaration", path: './std/algorithm/setops/set_intersection.html', attributes: []},
{name: 'std.algorithm.setops.SetIntersection.empty', kind: "functiondeclaration", path: './std/algorithm/setops/set_intersection.empty.html', attributes: ["property"]},
{name: 'std.algorithm.setops.SetIntersection.front', kind: "functiondeclaration", path: './std/algorithm/setops/set_intersection.front.html', attributes: ["property"]},
{name: 'std.algorithm.setops.SetIntersection.popFront', kind: "functiondeclaration", path: './std/algorithm/setops/set_intersection.pop_front.html', attributes: []},
{name: 'std.algorithm.setops.SetIntersection.save', kind: "functiondeclaration", path: './std/algorithm/setops/set_intersection.save.html', attributes: ["property"]},
{name: 'std.algorithm.setops.SetIntersection.this', kind: "functiondeclaration", path: './std/algorithm/setops/set_intersection.this.html', attributes: []},
{name: 'std.algorithm.setops.setIntersection', kind: "functiondeclaration", path: './std/algorithm/setops/set_intersection.html', attributes: []},
{name: 'std.algorithm.setops.SetSymmetricDifference', kind: "structdeclaration", path: './std/algorithm/setops/set_symmetric_difference.html', attributes: []},
{name: 'std.algorithm.setops.SetSymmetricDifference.empty', kind: "functiondeclaration", path: './std/algorithm/setops/set_symmetric_difference.empty.html', attributes: ["property"]},
{name: 'std.algorithm.setops.SetSymmetricDifference.front', kind: "functiondeclaration", path: './std/algorithm/setops/set_symmetric_difference.front.html', attributes: ["auto", "property", "ref"]},
{name: 'std.algorithm.setops.SetSymmetricDifference.opSlice', kind: "functiondeclaration", path: './std/algorithm/setops/set_symmetric_difference.op_slice.html', attributes: ["auto", "ref"]},
{name: 'std.algorithm.setops.SetSymmetricDifference.popFront', kind: "functiondeclaration", path: './std/algorithm/setops/set_symmetric_difference.pop_front.html', attributes: []},
{name: 'std.algorithm.setops.SetSymmetricDifference.save', kind: "functiondeclaration", path: './std/algorithm/setops/set_symmetric_difference.save.html', attributes: ["property"]},
{name: 'std.algorithm.setops.SetSymmetricDifference.this', kind: "functiondeclaration", path: './std/algorithm/setops/set_symmetric_difference.this.html', attributes: []},
{name: 'std.algorithm.setops.setSymmetricDifference', kind: "functiondeclaration", path: './std/algorithm/setops/set_symmetric_difference.html', attributes: []},
{name: 'std.algorithm.sorting', kind: "module", path: './std/algorithm/sorting.html', attributes: []},
{name: 'std.algorithm.sorting.completeSort', kind: "functiondeclaration", path: './std/algorithm/sorting/complete_sort.html', attributes: []},
{name: 'std.algorithm.sorting.isPartitioned', kind: "functiondeclaration", path: './std/algorithm/sorting/is_partitioned.html', attributes: []},
{name: 'std.algorithm.sorting.isSorted', kind: "functiondeclaration", path: './std/algorithm/sorting/is_sorted.html', attributes: []},
{name: 'std.algorithm.sorting.isStrictlyMonotonic', kind: "functiondeclaration", path: './std/algorithm/sorting/is_strictly_monotonic.html', attributes: []},
{name: 'std.algorithm.sorting.makeIndex', kind: "functiondeclaration", path: './std/algorithm/sorting/make_index.html', attributes: []},
{name: 'std.algorithm.sorting.merge', kind: "functiondeclaration", path: './std/algorithm/sorting/merge.html', attributes: []},
{name: 'std.algorithm.sorting.multiSort', kind: "templatedeclaration", path: './std/algorithm/sorting/multi_sort.html', attributes: []},
{name: 'std.algorithm.sorting.multiSort.multiSort', kind: "functiondeclaration", path: './std/algorithm/sorting/multi_sort.multi_sort.html', attributes: ["auto"]},
{name: 'std.algorithm.sorting.nextEvenPermutation', kind: "functiondeclaration", path: './std/algorithm/sorting/next_even_permutation.html', attributes: []},
{name: 'std.algorithm.sorting.nextPermutation', kind: "functiondeclaration", path: './std/algorithm/sorting/next_permutation.html', attributes: []},
{name: 'std.algorithm.sorting.nthPermutation', kind: "functiondeclaration", path: './std/algorithm/sorting/nth_permutation.html', attributes: ["auto", "ref"]},
{name: 'std.algorithm.sorting.nthPermutationImpl', kind: "functiondeclaration", path: './std/algorithm/sorting/nth_permutation_impl.html', attributes: []},
{name: 'std.algorithm.sorting.ordered', kind: "functiondeclaration", path: './std/algorithm/sorting/ordered.html', attributes: []},
{name: 'std.algorithm.sorting.partialSort', kind: "functiondeclaration", path: './std/algorithm/sorting/partial_sort.html', attributes: []},
{name: 'std.algorithm.sorting.partition', kind: "functiondeclaration", path: './std/algorithm/sorting/partition.html', attributes: []},
{name: 'std.algorithm.sorting.partition3', kind: "functiondeclaration", path: './std/algorithm/sorting/partition3.html', attributes: ["auto"]},
{name: 'std.algorithm.sorting.pivotPartition', kind: "functiondeclaration", path: './std/algorithm/sorting/pivot_partition.html', attributes: []},
{name: 'std.algorithm.sorting.schwartzSort', kind: "functiondeclaration", path: './std/algorithm/sorting/schwartz_sort.html', attributes: []},
{name: 'std.algorithm.sorting.sort', kind: "functiondeclaration", path: './std/algorithm/sorting/sort.html', attributes: []},
{name: 'std.algorithm.sorting.SortOutput', kind: "aliasdeclaration", path: './std/algorithm/sorting/sort_output.html', attributes: []},
{name: 'std.algorithm.sorting.strictlyOrdered', kind: "functiondeclaration", path: './std/algorithm/sorting/strictly_ordered.html', attributes: []},
{name: 'std.algorithm.sorting.topN', kind: "functiondeclaration", path: './std/algorithm/sorting/top_n.html', attributes: ["auto"]},
{name: 'std.algorithm.sorting.topNCopy', kind: "functiondeclaration", path: './std/algorithm/sorting/top_n_copy.html', attributes: []},
{name: 'std.algorithm.sorting.topNIndex', kind: "functiondeclaration", path: './std/algorithm/sorting/top_n_index.html', attributes: []},
{name: 'std.container.array', kind: "module", path: './std/container/array.html', attributes: []},
{name: 'std.container.array.Array', kind: "structdeclaration", path: './std/container/array/array.html', attributes: []},
{name: 'std.container.array.Array.back', kind: "functiondeclaration", path: './std/container/array/array.back.html', attributes: ["inout", "property", "ref"]},
{name: 'std.container.array.Array.capacity', kind: "functiondeclaration", path: './std/container/array/array.capacity.html', attributes: ["property"]},
{name: 'std.container.array.Array.clear', kind: "functiondeclaration", path: './std/container/array/array.clear.html', attributes: []},
{name: 'std.container.array.Array.ConstRange', kind: "aliasdeclaration", path: './std/container/array/array.const_range.html', attributes: []},
{name: 'std.container.array.Array.dup', kind: "functiondeclaration", path: './std/container/array/array.dup.html', attributes: ["property"]},
{name: 'std.container.array.Array.empty', kind: "functiondeclaration", path: './std/container/array/array.empty.html', attributes: ["const", "property"]},
{name: 'std.container.array.Array.front', kind: "functiondeclaration", path: './std/container/array/array.front.html', attributes: ["inout", "property", "ref"]},
{name: 'std.container.array.Array.ImmutableRange', kind: "aliasdeclaration", path: './std/container/array/array.immutable_range.html', attributes: []},
{name: 'std.container.array.Array.insert', kind: "aliasdeclaration", path: './std/container/array/array.insert.html', attributes: []},
{name: 'std.container.array.Array.insertAfter', kind: "functiondeclaration", path: './std/container/array/array.insert_after.html', attributes: []},
{name: 'std.container.array.Array.insertBack', kind: "functiondeclaration", path: './std/container/array/array.insert_back.html', attributes: []},
{name: 'std.container.array.Array.insertBefore', kind: "functiondeclaration", path: './std/container/array/array.insert_before.html', attributes: []},
{name: 'std.container.array.Array.length', kind: "functiondeclaration", path: './std/container/array/array.length.html', attributes: ["const", "property"]},
{name: 'std.container.array.Array.linearRemove', kind: "functiondeclaration", path: './std/container/array/array.linear_remove.html', attributes: []},
{name: 'std.container.array.Array.opBinary', kind: "functiondeclaration", path: './std/container/array/array.op_binary.html', attributes: []},
{name: 'std.container.array.Array.opDollar', kind: "functiondeclaration", path: './std/container/array/array.op_dollar.html', attributes: ["const"]},
{name: 'std.container.array.Array.opEquals', kind: "functiondeclaration", path: './std/container/array/array.op_equals.html', attributes: ["const"]},
{name: 'std.container.array.Array.opIndex', kind: "functiondeclaration", path: './std/container/array/array.op_index.html', attributes: ["inout", "ref"]},
{name: 'std.container.array.Array.opOpAssign', kind: "functiondeclaration", path: './std/container/array/array.op_op_assign.html', attributes: []},
{name: 'std.container.array.Array.opSlice', kind: "functiondeclaration", path: './std/container/array/array.op_slice.html', attributes: []},
{name: 'std.container.array.Array.opSliceAssign', kind: "functiondeclaration", path: './std/container/array/array.op_slice_assign.html', attributes: []},
{name: 'std.container.array.Array.opSliceOpAssign', kind: "functiondeclaration", path: './std/container/array/array.op_slice_op_assign.html', attributes: []},
{name: 'std.container.array.Array.opSliceUnary', kind: "functiondeclaration", path: './std/container/array/array.op_slice_unary.html', attributes: []},
{name: 'std.container.array.Array.Range', kind: "aliasdeclaration", path: './std/container/array/array.range.html', attributes: []},
{name: 'std.container.array.Array.removeAny', kind: "functiondeclaration", path: './std/container/array/array.remove_any.html', attributes: []},
{name: 'std.container.array.Array.removeBack', kind: "functiondeclaration", path: './std/container/array/array.remove_back.html', attributes: []},
{name: 'std.container.array.Array.replace', kind: "functiondeclaration", path: './std/container/array/array.replace.html', attributes: []},
{name: 'std.container.array.Array.reserve', kind: "functiondeclaration", path: './std/container/array/array.reserve.html', attributes: []},
{name: 'std.container.array.Array.stableInsertBefore', kind: "aliasdeclaration", path: './std/container/array/array.stable_insert_before.html', attributes: []},
{name: 'std.container.array.Array.stableRemoveAny', kind: "aliasdeclaration", path: './std/container/array/array.stable_remove_any.html', attributes: []},
{name: 'std.container.array.Array.stableRemoveBack', kind: "aliasdeclaration", path: './std/container/array/array.stable_remove_back.html', attributes: []},
{name: 'std.container.array.Array.this', kind: "functiondeclaration", path: './std/container/array/array.this.html', attributes: []},
{name: 'std.container.array.Array.back', kind: "functiondeclaration", path: './std/container/array/array.back.html', attributes: ["property"]},
{name: 'std.container.array.Array.capacity', kind: "functiondeclaration", path: './std/container/array/array.capacity.html', attributes: ["property"]},
{name: 'std.container.array.Array.clear', kind: "functiondeclaration", path: './std/container/array/array.clear.html', attributes: []},
{name: 'std.container.array.Array.dup', kind: "functiondeclaration", path: './std/container/array/array.dup.html', attributes: ["property"]},
{name: 'std.container.array.Array.empty', kind: "functiondeclaration", path: './std/container/array/array.empty.html', attributes: ["property"]},
{name: 'std.container.array.Array.front', kind: "functiondeclaration", path: './std/container/array/array.front.html', attributes: ["property"]},
{name: 'std.container.array.Array.insert', kind: "aliasdeclaration", path: './std/container/array/array.insert.html', attributes: []},
{name: 'std.container.array.Array.insertAfter', kind: "functiondeclaration", path: './std/container/array/array.insert_after.html', attributes: []},
{name: 'std.container.array.Array.insertBack', kind: "functiondeclaration", path: './std/container/array/array.insert_back.html', attributes: []},
{name: 'std.container.array.Array.insertBefore', kind: "functiondeclaration", path: './std/container/array/array.insert_before.html', attributes: []},
{name: 'std.container.array.Array.length', kind: "functiondeclaration", path: './std/container/array/array.length.html', attributes: ["const", "property"]},
{name: 'std.container.array.Array.linearInsert', kind: "aliasdeclaration", path: './std/container/array/array.linear_insert.html', attributes: []},
{name: 'std.container.array.Array.linearRemove', kind: "functiondeclaration", path: './std/container/array/array.linear_remove.html', attributes: []},
{name: 'std.container.array.Array.moveAt', kind: "functiondeclaration", path: './std/container/array/array.move_at.html', attributes: []},
{name: 'std.container.array.Array.opBinary', kind: "functiondeclaration", path: './std/container/array/array.op_binary.html', attributes: []},
{name: 'std.container.array.Array.opIndex', kind: "functiondeclaration", path: './std/container/array/array.op_index.html', attributes: []},
{name: 'std.container.array.Array.opIndexAssign', kind: "functiondeclaration", path: './std/container/array/array.op_index_assign.html', attributes: []},
{name: 'std.container.array.Array.opIndexOpAssign', kind: "functiondeclaration", path: './std/container/array/array.op_index_op_assign.html', attributes: []},
{name: 'std.container.array.Array.opOpAssign', kind: "functiondeclaration", path: './std/container/array/array.op_op_assign.html', attributes: []},
{name: 'std.container.array.Array.opSlice', kind: "functiondeclaration", path: './std/container/array/array.op_slice.html', attributes: []},
{name: 'std.container.array.Array.Range', kind: "structdeclaration", path: './std/container/array/array.range.html', attributes: []},
{name: 'std.container.array.Array.Range.back', kind: "functiondeclaration", path: './std/container/array/array.range.back.html', attributes: ["property"]},
{name: 'std.container.array.Array.Range.empty', kind: "functiondeclaration", path: './std/container/array/array.range.empty.html', attributes: ["property"]},
{name: 'std.container.array.Array.Range.front', kind: "functiondeclaration", path: './std/container/array/array.range.front.html', attributes: ["property"]},
{name: 'std.container.array.Array.Range.length', kind: "functiondeclaration", path: './std/container/array/array.range.length.html', attributes: ["const", "property"]},
{name: 'std.container.array.Array.Range.moveAt', kind: "functiondeclaration", path: './std/container/array/array.range.move_at.html', attributes: []},
{name: 'std.container.array.Array.Range.moveBack', kind: "functiondeclaration", path: './std/container/array/array.range.move_back.html', attributes: []},
{name: 'std.container.array.Array.Range.moveFront', kind: "functiondeclaration", path: './std/container/array/array.range.move_front.html', attributes: []},
{name: 'std.container.array.Array.Range.opIndex', kind: "functiondeclaration", path: './std/container/array/array.range.op_index.html', attributes: []},
{name: 'std.container.array.Array.Range.opIndexAssign', kind: "functiondeclaration", path: './std/container/array/array.range.op_index_assign.html', attributes: []},
{name: 'std.container.array.Array.Range.opSlice', kind: "functiondeclaration", path: './std/container/array/array.range.op_slice.html', attributes: []},
{name: 'std.container.array.Array.Range.popBack', kind: "functiondeclaration", path: './std/container/array/array.range.pop_back.html', attributes: []},
{name: 'std.container.array.Array.Range.popFront', kind: "functiondeclaration", path: './std/container/array/array.range.pop_front.html', attributes: []},
{name: 'std.container.array.Array.Range.save', kind: "functiondeclaration", path: './std/container/array/array.range.save.html', attributes: ["property"]},
{name: 'std.container.array.Array.removeAny', kind: "functiondeclaration", path: './std/container/array/array.remove_any.html', attributes: []},
{name: 'std.container.array.Array.removeBack', kind: "functiondeclaration", path: './std/container/array/array.remove_back.html', attributes: []},
{name: 'std.container.array.Array.replace', kind: "functiondeclaration", path: './std/container/array/array.replace.html', attributes: []},
{name: 'std.container.array.Array.reserve', kind: "functiondeclaration", path: './std/container/array/array.reserve.html', attributes: []},
{name: 'std.container.array.Array.stableInsert', kind: "aliasdeclaration", path: './std/container/array/array.stable_insert.html', attributes: []},
{name: 'std.container.array.Array.stableInsertAfter', kind: "aliasdeclaration", path: './std/container/array/array.stable_insert_after.html', attributes: []},
{name: 'std.container.array.Array.stableInsertBack', kind: "aliasdeclaration", path: './std/container/array/array.stable_insert_back.html', attributes: []},
{name: 'std.container.array.Array.stableInsertBefore', kind: "aliasdeclaration", path: './std/container/array/array.stable_insert_before.html', attributes: []},
{name: 'std.container.array.Array.stableLinearInsert', kind: "aliasdeclaration", path: './std/container/array/array.stable_linear_insert.html', attributes: []},
{name: 'std.container.array.Array.stableRemoveAny', kind: "aliasdeclaration", path: './std/container/array/array.stable_remove_any.html', attributes: []},
{name: 'std.container.array.Array.stableRemoveBack', kind: "aliasdeclaration", path: './std/container/array/array.stable_remove_back.html', attributes: []},
{name: 'std.container.array.Array.stableReplace', kind: "aliasdeclaration", path: './std/container/array/array.stable_replace.html', attributes: []},
{name: 'std.container.binaryheap', kind: "module", path: './std/container/binaryheap.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap', kind: "structdeclaration", path: './std/container/binaryheap/binary_heap.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.acquire', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.acquire.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.assume', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.assume.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.capacity', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.capacity.html', attributes: ["property"]},
{name: 'std.container.binaryheap.BinaryHeap.clear', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.clear.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.conditionalInsert', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.conditional_insert.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.conditionalSwap', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.conditional_swap.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.dup', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.dup.html', attributes: ["property"]},
{name: 'std.container.binaryheap.BinaryHeap.empty', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.empty.html', attributes: ["property"]},
{name: 'std.container.binaryheap.BinaryHeap.front', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.front.html', attributes: ["property"]},
{name: 'std.container.binaryheap.BinaryHeap.insert', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.insert.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.length', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.length.html', attributes: ["property"]},
{name: 'std.container.binaryheap.BinaryHeap.popFront', kind: "aliasdeclaration", path: './std/container/binaryheap/binary_heap.pop_front.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.release', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.release.html', attributes: ["auto"]},
{name: 'std.container.binaryheap.BinaryHeap.removeAny', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.remove_any.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.removeFront', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.remove_front.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.replaceFront', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.replace_front.html', attributes: []},
{name: 'std.container.binaryheap.BinaryHeap.this', kind: "functiondeclaration", path: './std/container/binaryheap/binary_heap.this.html', attributes: []},
{name: 'std.container.binaryheap.heapify', kind: "functiondeclaration", path: './std/container/binaryheap/heapify.html', attributes: []},
{name: 'std.container.dlist', kind: "module", path: './std/container/dlist.html', attributes: []},
{name: 'std.container.dlist.DList', kind: "structdeclaration", path: './std/container/dlist/d_list.html', attributes: []},
{name: 'std.container.dlist.DList.back', kind: "functiondeclaration", path: './std/container/dlist/d_list.back.html', attributes: ["inout", "property", "ref"]},
{name: 'std.container.dlist.DList.clear', kind: "functiondeclaration", path: './std/container/dlist/d_list.clear.html', attributes: []},
{name: 'std.container.dlist.DList.dup', kind: "functiondeclaration", path: './std/container/dlist/d_list.dup.html', attributes: ["property"]},
{name: 'std.container.dlist.DList.empty', kind: "functiondeclaration", path: './std/container/dlist/d_list.empty.html', attributes: ["const", "nothrow", "property"]},
{name: 'std.container.dlist.DList.front', kind: "functiondeclaration", path: './std/container/dlist/d_list.front.html', attributes: ["inout", "property", "ref"]},
{name: 'std.container.dlist.DList.insert', kind: "aliasdeclaration", path: './std/container/dlist/d_list.insert.html', attributes: []},
{name: 'std.container.dlist.DList.insertAfter', kind: "functiondeclaration", path: './std/container/dlist/d_list.insert_after.html', attributes: []},
{name: 'std.container.dlist.DList.insertBack', kind: "functiondeclaration", path: './std/container/dlist/d_list.insert_back.html', attributes: []},
{name: 'std.container.dlist.DList.insertBefore', kind: "functiondeclaration", path: './std/container/dlist/d_list.insert_before.html', attributes: []},
{name: 'std.container.dlist.DList.insertFront', kind: "functiondeclaration", path: './std/container/dlist/d_list.insert_front.html', attributes: []},
{name: 'std.container.dlist.DList.linearRemove', kind: "functiondeclaration", path: './std/container/dlist/d_list.linear_remove.html', attributes: []},
{name: 'std.container.dlist.DList.linearRemoveElement', kind: "functiondeclaration", path: './std/container/dlist/d_list.linear_remove_element.html', attributes: []},
{name: 'std.container.dlist.DList.opBinary', kind: "functiondeclaration", path: './std/container/dlist/d_list.op_binary.html', attributes: []},
{name: 'std.container.dlist.DList.opBinaryRight', kind: "functiondeclaration", path: './std/container/dlist/d_list.op_binary_right.html', attributes: []},
{name: 'std.container.dlist.DList.opEquals', kind: "functiondeclaration", path: './std/container/dlist/d_list.op_equals.html', attributes: ["const"]},
{name: 'std.container.dlist.DList.opOpAssign', kind: "functiondeclaration", path: './std/container/dlist/d_list.op_op_assign.html', attributes: []},
{name: 'std.container.dlist.DList.opSlice', kind: "functiondeclaration", path: './std/container/dlist/d_list.op_slice.html', attributes: []},
{name: 'std.container.dlist.DList.popFirstOf', kind: "functiondeclaration", path: './std/container/dlist/d_list.pop_first_of.html', attributes: []},
{name: 'std.container.dlist.DList.popLastOf', kind: "functiondeclaration", path: './std/container/dlist/d_list.pop_last_of.html', attributes: []},
{name: 'std.container.dlist.DList.Range', kind: "structdeclaration", path: './std/container/dlist/d_list.range.html', attributes: []},
{name: 'std.container.dlist.DList.remove', kind: "functiondeclaration", path: './std/container/dlist/d_list.remove.html', attributes: []},
{name: 'std.container.dlist.DList.removeAny', kind: "functiondeclaration", path: './std/container/dlist/d_list.remove_any.html', attributes: []},
{name: 'std.container.dlist.DList.removeBack', kind: "functiondeclaration", path: './std/container/dlist/d_list.remove_back.html', attributes: []},
{name: 'std.container.dlist.DList.removeFront', kind: "functiondeclaration", path: './std/container/dlist/d_list.remove_front.html', attributes: []},
{name: 'std.container.dlist.DList.stableInsert', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_insert.html', attributes: []},
{name: 'std.container.dlist.DList.stableInsertAfter', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_insert_after.html', attributes: []},
{name: 'std.container.dlist.DList.stableInsertBack', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_insert_back.html', attributes: []},
{name: 'std.container.dlist.DList.stableInsertBefore', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_insert_before.html', attributes: []},
{name: 'std.container.dlist.DList.stableInsertFront', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_insert_front.html', attributes: []},
{name: 'std.container.dlist.DList.stableLinearRemove', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_linear_remove.html', attributes: []},
{name: 'std.container.dlist.DList.stableRemove', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_remove.html', attributes: []},
{name: 'std.container.dlist.DList.stableRemoveAny', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_remove_any.html', attributes: []},
{name: 'std.container.dlist.DList.stableRemoveBack', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_remove_back.html', attributes: []},
{name: 'std.container.dlist.DList.stableRemoveFront', kind: "aliasdeclaration", path: './std/container/dlist/d_list.stable_remove_front.html', attributes: []},
{name: 'std.container.dlist.DList.this', kind: "functiondeclaration", path: './std/container/dlist/d_list.this.html', attributes: []},
{name: 'std.container.rbtree', kind: "module", path: './std/container/rbtree.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree', kind: "classdeclaration", path: './std/container/rbtree/red_black_tree.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.back', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.back.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.clear', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.clear.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.ConstRange', kind: "aliasdeclaration", path: './std/container/rbtree/red_black_tree.const_range.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.dup', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.dup.html', attributes: ["property"]},
{name: 'std.container.rbtree.RedBlackTree.Elem', kind: "aliasdeclaration", path: './std/container/rbtree/red_black_tree.elem.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.empty', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.empty.html', attributes: ["property"]},
{name: 'std.container.rbtree.RedBlackTree.equalRange', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.equal_range.html', attributes: ["auto"]},
{name: 'std.container.rbtree.RedBlackTree.front', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.front.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.ImmutableRange', kind: "aliasdeclaration", path: './std/container/rbtree/red_black_tree.immutable_range.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.insert', kind: "aliasdeclaration", path: './std/container/rbtree/red_black_tree.insert.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.length', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.length.html', attributes: ["const", "property"]},
{name: 'std.container.rbtree.RedBlackTree.lowerBound', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.lower_bound.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.opBinaryRight', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.op_binary_right.html', attributes: ["const"]},
{name: 'std.container.rbtree.RedBlackTree.opEquals', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.op_equals.html', attributes: ["override"]},
{name: 'std.container.rbtree.RedBlackTree.opSlice', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.op_slice.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.Range', kind: "aliasdeclaration", path: './std/container/rbtree/red_black_tree.range.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.remove', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.remove.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.removeAny', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.remove_any.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.removeBack', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.remove_back.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.removeFront', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.remove_front.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.removeKey', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.remove_key.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.stableInsert', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.stable_insert.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.this', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.this.html', attributes: []},
{name: 'std.container.rbtree.RedBlackTree.toHash', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.to_hash.html', attributes: ["override", "nothrow", "safe"]},
{name: 'std.container.rbtree.RedBlackTree.toString', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.to_string.html', attributes: ["const"]},
{name: 'std.container.rbtree.RedBlackTree.upperBound', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.upper_bound.html', attributes: []},
{name: 'object.Object.factory', kind: "functiondeclaration", path: './object/object.factory.html', attributes: ["static"]},
{name: 'object.Object.opCmp', kind: "functiondeclaration", path: './object/object.op_cmp.html', attributes: []},
{name: 'object.Object.opEquals', kind: "functiondeclaration", path: './object/object.op_equals.html', attributes: []},
{name: 'object.Object.toHash', kind: "functiondeclaration", path: './object/object.to_hash.html', attributes: ["nothrow", "trusted"]},
{name: 'object.Object.toString', kind: "functiondeclaration", path: './object/object.to_string.html', attributes: []},
{name: 'std.container.rbtree.redBlackTree', kind: "functiondeclaration", path: './std/container/rbtree/red_black_tree.html', attributes: ["auto"]},
{name: 'std.container.slist', kind: "module", path: './std/container/slist.html', attributes: []},
{name: 'std.container.slist.SList', kind: "structdeclaration", path: './std/container/slist/s_list.html', attributes: []},
{name: 'std.container.slist.SList.clear', kind: "functiondeclaration", path: './std/container/slist/s_list.clear.html', attributes: []},
{name: 'std.container.slist.SList.dup', kind: "functiondeclaration", path: './std/container/slist/s_list.dup.html', attributes: ["property"]},
{name: 'std.container.slist.SList.empty', kind: "functiondeclaration", path: './std/container/slist/s_list.empty.html', attributes: ["const", "property"]},
{name: 'std.container.slist.SList.front', kind: "functiondeclaration", path: './std/container/slist/s_list.front.html', attributes: ["property", "ref"]},
{name: 'std.container.slist.SList.insert', kind: "aliasdeclaration", path: './std/container/slist/s_list.insert.html', attributes: []},
{name: 'std.container.slist.SList.insertAfter', kind: "functiondeclaration", path: './std/container/slist/s_list.insert_after.html', attributes: []},
{name: 'std.container.slist.SList.insertFront', kind: "functiondeclaration", path: './std/container/slist/s_list.insert_front.html', attributes: []},
{name: 'std.container.slist.SList.linearRemove', kind: "functiondeclaration", path: './std/container/slist/s_list.linear_remove.html', attributes: []},
{name: 'std.container.slist.SList.linearRemoveElement', kind: "functiondeclaration", path: './std/container/slist/s_list.linear_remove_element.html', attributes: []},
{name: 'std.container.slist.SList.opBinary', kind: "functiondeclaration", path: './std/container/slist/s_list.op_binary.html', attributes: []},
{name: 'std.container.slist.SList.opBinaryRight', kind: "functiondeclaration", path: './std/container/slist/s_list.op_binary_right.html', attributes: []},
{name: 'std.container.slist.SList.opEquals', kind: "functiondeclaration", path: './std/container/slist/s_list.op_equals.html', attributes: ["const"]},
{name: 'std.container.slist.SList.opSlice', kind: "functiondeclaration", path: './std/container/slist/s_list.op_slice.html', attributes: []},
{name: 'std.container.slist.SList.Range', kind: "structdeclaration", path: './std/container/slist/s_list.range.html', attributes: []},
{name: 'std.container.slist.SList.Range.empty', kind: "functiondeclaration", path: './std/container/slist/s_list.range.empty.html', attributes: ["const", "property"]},
{name: 'std.container.slist.SList.Range.front', kind: "functiondeclaration", path: './std/container/slist/s_list.range.front.html', attributes: ["property", "ref"]},
{name: 'std.container.slist.SList.Range.popFront', kind: "functiondeclaration", path: './std/container/slist/s_list.range.pop_front.html', attributes: []},
{name: 'std.container.slist.SList.Range.save', kind: "functiondeclaration", path: './std/container/slist/s_list.range.save.html', attributes: ["property"]},
{name: 'std.container.slist.SList.removeAny', kind: "functiondeclaration", path: './std/container/slist/s_list.remove_any.html', attributes: []},
{name: 'std.container.slist.SList.removeFront', kind: "functiondeclaration", path: './std/container/slist/s_list.remove_front.html', attributes: []},
{name: 'std.container.slist.SList.reverse', kind: "functiondeclaration", path: './std/container/slist/s_list.reverse.html', attributes: []},
{name: 'std.container.slist.SList.stableInsert', kind: "aliasdeclaration", path: './std/container/slist/s_list.stable_insert.html', attributes: []},
{name: 'std.container.slist.SList.stableInsertAfter', kind: "aliasdeclaration", path: './std/container/slist/s_list.stable_insert_after.html', attributes: []},
{name: 'std.container.slist.SList.stableInsertFront', kind: "aliasdeclaration", path: './std/container/slist/s_list.stable_insert_front.html', attributes: []},
{name: 'std.container.slist.SList.stableLinearRemove', kind: "aliasdeclaration", path: './std/container/slist/s_list.stable_linear_remove.html', attributes: []},
{name: 'std.container.slist.SList.stableRemoveAny', kind: "aliasdeclaration", path: './std/container/slist/s_list.stable_remove_any.html', attributes: []},
{name: 'std.container.slist.SList.stableRemoveFront', kind: "aliasdeclaration", path: './std/container/slist/s_list.stable_remove_front.html', attributes: []},
{name: 'std.container.slist.SList.this', kind: "functiondeclaration", path: './std/container/slist/s_list.this.html', attributes: []},
{name: 'std.container.util', kind: "module", path: './std/container/util.html', attributes: []},
{name: 'std.container.util.make', kind: "templatedeclaration", path: './std/container/util/make.html', attributes: []},
{name: 'std.container.util.make.make', kind: "functiondeclaration", path: './std/container/util/make.make.html', attributes: []},
{name: 'std.container.util.make.make', kind: "functiondeclaration", path: './std/container/util/make.make.html', attributes: ["auto"]},
{name: 'std.datetime.date', kind: "module", path: './std/datetime/date.html', attributes: []},
{name: 'std.datetime.date.AllowDayOverflow', kind: "aliasdeclaration", path: './std/datetime/date/allow_day_overflow.html', attributes: []},
{name: 'std.datetime.date.cmpTimeUnits', kind: "functiondeclaration", path: './std/datetime/date/cmp_time_units.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.date.CmpTimeUnits', kind: "enummemberdeclaration", path: './std/datetime/date/cmp_time_units.html', attributes: []},
{name: 'std.datetime.date.Date', kind: "structdeclaration", path: './std/datetime/date/date.html', attributes: []},
{name: 'std.datetime.date.Date.add', kind: "functiondeclaration", path: './std/datetime/date/date.add.html', attributes: ["pure", "nothrow", "nogc", "ref", "safe"]},
{name: 'std.datetime.date.Date.day', kind: "functiondeclaration", path: './std/datetime/date/date.day.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.Date.dayOfGregorianCal', kind: "functiondeclaration", path: './std/datetime/date/date.day_of_gregorian_cal.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.Date.dayOfWeek', kind: "functiondeclaration", path: './std/datetime/date/date.day_of_week.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.Date.dayOfYear', kind: "functiondeclaration", path: './std/datetime/date/date.day_of_year.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.Date.daysInMonth', kind: "functiondeclaration", path: './std/datetime/date/date.days_in_month.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.Date.diffMonths', kind: "functiondeclaration", path: './std/datetime/date/date.diff_months.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.datetime.date.Date.endOfMonth', kind: "functiondeclaration", path: './std/datetime/date/date.end_of_month.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.date.Date.fromISOExtString', kind: "functiondeclaration", path: './std/datetime/date/date.from_iso_ext_string.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.date.Date.fromISOString', kind: "functiondeclaration", path: './std/datetime/date/date.from_iso_string.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.date.Date.fromSimpleString', kind: "functiondeclaration", path: './std/datetime/date/date.from_simple_string.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.date.Date.isAD', kind: "functiondeclaration", path: './std/datetime/date/date.is_ad.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.Date.isLeapYear', kind: "functiondeclaration", path: './std/datetime/date/date.is_leap_year.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.Date.isoWeek', kind: "functiondeclaration", path: './std/datetime/date/date.iso_week.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.date.Date.isoWeekAndYear', kind: "functiondeclaration", path: './std/datetime/date/date.iso_week_and_year.html', attributes: ["auto"]},
{name: 'std.datetime.date.Date.isoWeekYear', kind: "functiondeclaration", path: './std/datetime/date/date.iso_week_year.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.date.Date.julianDay', kind: "functiondeclaration", path: './std/datetime/date/date.julian_day.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.Date.max', kind: "functiondeclaration", path: './std/datetime/date/date.max.html', attributes: ["static", "pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.datetime.date.Date.min', kind: "functiondeclaration", path: './std/datetime/date/date.min.html', attributes: ["static", "pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.datetime.date.Date.modJulianDay', kind: "functiondeclaration", path: './std/datetime/date/date.mod_julian_day.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.Date.month', kind: "functiondeclaration", path: './std/datetime/date/date.month.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.Date.opBinary', kind: "functiondeclaration", path: './std/datetime/date/date.op_binary.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.datetime.date.Date.opCmp', kind: "functiondeclaration", path: './std/datetime/date/date.op_cmp.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.datetime.date.Date.opOpAssign', kind: "functiondeclaration", path: './std/datetime/date/date.op_op_assign.html', attributes: ["pure", "nothrow", "nogc", "ref", "safe"]},
{name: 'std.datetime.date.Date.roll', kind: "functiondeclaration", path: './std/datetime/date/date.roll.html', attributes: ["pure", "nothrow", "nogc", "ref", "safe"]},
{name: 'std.datetime.date.Date.this', kind: "functiondeclaration", path: './std/datetime/date/date.this.html', attributes: ["pure", "ref", "safe"]},
{name: 'std.datetime.date.Date.toISOExtString', kind: "functiondeclaration", path: './std/datetime/date/date.to_iso_ext_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.date.Date.toISOString', kind: "functiondeclaration", path: './std/datetime/date/date.to_iso_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.date.Date.toSimpleString', kind: "functiondeclaration", path: './std/datetime/date/date.to_simple_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.date.Date.toString', kind: "functiondeclaration", path: './std/datetime/date/date.to_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.date.Date.year', kind: "functiondeclaration", path: './std/datetime/date/date.year.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.Date.yearBC', kind: "functiondeclaration", path: './std/datetime/date/date.year_bc.html', attributes: ["pure", "property", "safe", "const"]},
{name: 'std.datetime.date.DateTime', kind: "structdeclaration", path: './std/datetime/date/date_time.html', attributes: []},
{name: 'std.datetime.date.DateTime.add', kind: "functiondeclaration", path: './std/datetime/date/date_time.add.html', attributes: ["pure", "nothrow", "nogc", "ref", "safe"]},
{name: 'std.datetime.date.DateTime.date', kind: "functiondeclaration", path: './std/datetime/date/date_time.date.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.DateTime.day', kind: "functiondeclaration", path: './std/datetime/date/date_time.day.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.DateTime.dayOfGregorianCal', kind: "functiondeclaration", path: './std/datetime/date/date_time.day_of_gregorian_cal.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.DateTime.dayOfWeek', kind: "functiondeclaration", path: './std/datetime/date/date_time.day_of_week.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.DateTime.dayOfYear', kind: "functiondeclaration", path: './std/datetime/date/date_time.day_of_year.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.DateTime.daysInMonth', kind: "functiondeclaration", path: './std/datetime/date/date_time.days_in_month.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.DateTime.diffMonths', kind: "functiondeclaration", path: './std/datetime/date/date_time.diff_months.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.datetime.date.DateTime.endOfMonth', kind: "functiondeclaration", path: './std/datetime/date/date_time.end_of_month.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.date.DateTime.fromISOExtString', kind: "functiondeclaration", path: './std/datetime/date/date_time.from_iso_ext_string.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.date.DateTime.fromISOString', kind: "functiondeclaration", path: './std/datetime/date/date_time.from_iso_string.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.date.DateTime.fromSimpleString', kind: "functiondeclaration", path: './std/datetime/date/date_time.from_simple_string.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.date.DateTime.hour', kind: "functiondeclaration", path: './std/datetime/date/date_time.hour.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.DateTime.isAD', kind: "functiondeclaration", path: './std/datetime/date/date_time.is_ad.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.DateTime.isLeapYear', kind: "functiondeclaration", path: './std/datetime/date/date_time.is_leap_year.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.DateTime.isoWeek', kind: "functiondeclaration", path: './std/datetime/date/date_time.iso_week.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.date.DateTime.isoWeekYear', kind: "functiondeclaration", path: './std/datetime/date/date_time.iso_week_year.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.date.DateTime.julianDay', kind: "functiondeclaration", path: './std/datetime/date/date_time.julian_day.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.DateTime.max', kind: "functiondeclaration", path: './std/datetime/date/date_time.max.html', attributes: ["static", "pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.datetime.date.DateTime.min', kind: "functiondeclaration", path: './std/datetime/date/date_time.min.html', attributes: ["static", "pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.datetime.date.DateTime.minute', kind: "functiondeclaration", path: './std/datetime/date/date_time.minute.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.DateTime.modJulianDay', kind: "functiondeclaration", path: './std/datetime/date/date_time.mod_julian_day.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.DateTime.month', kind: "functiondeclaration", path: './std/datetime/date/date_time.month.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.DateTime.opBinary', kind: "functiondeclaration", path: './std/datetime/date/date_time.op_binary.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.datetime.date.DateTime.opCmp', kind: "functiondeclaration", path: './std/datetime/date/date_time.op_cmp.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.datetime.date.DateTime.opOpAssign', kind: "functiondeclaration", path: './std/datetime/date/date_time.op_op_assign.html', attributes: ["pure", "nothrow", "nogc", "ref", "safe"]},
{name: 'std.datetime.date.DateTime.roll', kind: "functiondeclaration", path: './std/datetime/date/date_time.roll.html', attributes: ["pure", "nothrow", "nogc", "ref", "safe"]},
{name: 'std.datetime.date.DateTime.second', kind: "functiondeclaration", path: './std/datetime/date/date_time.second.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.DateTime.this', kind: "functiondeclaration", path: './std/datetime/date/date_time.this.html', attributes: ["pure", "nothrow", "ref", "nogc", "safe"]},
{name: 'std.datetime.date.DateTime.timeOfDay', kind: "functiondeclaration", path: './std/datetime/date/date_time.time_of_day.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.DateTime.toISOExtString', kind: "functiondeclaration", path: './std/datetime/date/date_time.to_iso_ext_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.date.DateTime.toISOString', kind: "functiondeclaration", path: './std/datetime/date/date_time.to_iso_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.date.DateTime.toSimpleString', kind: "functiondeclaration", path: './std/datetime/date/date_time.to_simple_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.date.DateTime.toString', kind: "functiondeclaration", path: './std/datetime/date/date_time.to_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.date.DateTime.year', kind: "functiondeclaration", path: './std/datetime/date/date_time.year.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.DateTime.yearBC', kind: "functiondeclaration", path: './std/datetime/date/date_time.year_bc.html', attributes: ["pure", "property", "safe", "const"]},
{name: 'std.datetime.date.DateTimeException', kind: "aliasdeclaration", path: './std/datetime/date/date_time_exception.html', attributes: []},
{name: 'std.datetime.date.DayOfWeek', kind: "enumdeclaration", path: './std/datetime/date/day_of_week.html', attributes: []},
{name: 'std.datetime.date.DayOfWeek.fri', kind: "enummemberdeclaration", path: './std/datetime/date/day_of_week.html#fri', attributes: []},
{name: 'std.datetime.date.DayOfWeek.mon', kind: "enummemberdeclaration", path: './std/datetime/date/day_of_week.html#mon', attributes: []},
{name: 'std.datetime.date.DayOfWeek.sat', kind: "enummemberdeclaration", path: './std/datetime/date/day_of_week.html#sat', attributes: []},
{name: 'std.datetime.date.DayOfWeek.sun', kind: "enummemberdeclaration", path: './std/datetime/date/day_of_week.html#sun', attributes: []},
{name: 'std.datetime.date.DayOfWeek.thu', kind: "enummemberdeclaration", path: './std/datetime/date/day_of_week.html#thu', attributes: []},
{name: 'std.datetime.date.DayOfWeek.tue', kind: "enummemberdeclaration", path: './std/datetime/date/day_of_week.html#tue', attributes: []},
{name: 'std.datetime.date.DayOfWeek.wed', kind: "enummemberdeclaration", path: './std/datetime/date/day_of_week.html#wed', attributes: []},
{name: 'std.datetime.date.daysToDayOfWeek', kind: "functiondeclaration", path: './std/datetime/date/days_to_day_of_week.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.datetime.date.enforceValid', kind: "functiondeclaration", path: './std/datetime/date/enforce_valid.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.date.isTimePoint', kind: "enummemberdeclaration", path: './std/datetime/date/is_time_point.html', attributes: []},
{name: 'std.datetime.date.Month', kind: "enumdeclaration", path: './std/datetime/date/month.html', attributes: []},
{name: 'std.datetime.date.Month.apr', kind: "enummemberdeclaration", path: './std/datetime/date/month.html#apr', attributes: []},
{name: 'std.datetime.date.Month.aug', kind: "enummemberdeclaration", path: './std/datetime/date/month.html#aug', attributes: []},
{name: 'std.datetime.date.Month.dec', kind: "enummemberdeclaration", path: './std/datetime/date/month.html#dec', attributes: []},
{name: 'std.datetime.date.Month.feb', kind: "enummemberdeclaration", path: './std/datetime/date/month.html#feb', attributes: []},
{name: 'std.datetime.date.Month.jan', kind: "enummemberdeclaration", path: './std/datetime/date/month.html#jan', attributes: []},
{name: 'std.datetime.date.Month.jul', kind: "enummemberdeclaration", path: './std/datetime/date/month.html#jul', attributes: []},
{name: 'std.datetime.date.Month.jun', kind: "enummemberdeclaration", path: './std/datetime/date/month.html#jun', attributes: []},
{name: 'std.datetime.date.Month.mar', kind: "enummemberdeclaration", path: './std/datetime/date/month.html#mar', attributes: []},
{name: 'std.datetime.date.Month.may', kind: "enummemberdeclaration", path: './std/datetime/date/month.html#may', attributes: []},
{name: 'std.datetime.date.Month.nov', kind: "enummemberdeclaration", path: './std/datetime/date/month.html#nov', attributes: []},
{name: 'std.datetime.date.Month.oct', kind: "enummemberdeclaration", path: './std/datetime/date/month.html#oct', attributes: []},
{name: 'std.datetime.date.Month.sep', kind: "enummemberdeclaration", path: './std/datetime/date/month.html#sep', attributes: []},
{name: 'std.datetime.date.monthsToMonth', kind: "functiondeclaration", path: './std/datetime/date/months_to_month.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.date.TimeOfDay', kind: "structdeclaration", path: './std/datetime/date/time_of_day.html', attributes: []},
{name: 'std.datetime.date.TimeOfDay.fromISOExtString', kind: "functiondeclaration", path: './std/datetime/date/time_of_day.from_iso_ext_string.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.date.TimeOfDay.fromISOString', kind: "functiondeclaration", path: './std/datetime/date/time_of_day.from_iso_string.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.date.TimeOfDay.hour', kind: "functiondeclaration", path: './std/datetime/date/time_of_day.hour.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.TimeOfDay.max', kind: "functiondeclaration", path: './std/datetime/date/time_of_day.max.html', attributes: ["static", "pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.datetime.date.TimeOfDay.min', kind: "functiondeclaration", path: './std/datetime/date/time_of_day.min.html', attributes: ["static", "pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.datetime.date.TimeOfDay.minute', kind: "functiondeclaration", path: './std/datetime/date/time_of_day.minute.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.TimeOfDay.opBinary', kind: "functiondeclaration", path: './std/datetime/date/time_of_day.op_binary.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.datetime.date.TimeOfDay.opCmp', kind: "functiondeclaration", path: './std/datetime/date/time_of_day.op_cmp.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.datetime.date.TimeOfDay.opOpAssign', kind: "functiondeclaration", path: './std/datetime/date/time_of_day.op_op_assign.html', attributes: ["pure", "nothrow", "nogc", "ref", "safe"]},
{name: 'std.datetime.date.TimeOfDay.roll', kind: "functiondeclaration", path: './std/datetime/date/time_of_day.roll.html', attributes: ["pure", "nothrow", "nogc", "ref", "safe"]},
{name: 'std.datetime.date.TimeOfDay.second', kind: "functiondeclaration", path: './std/datetime/date/time_of_day.second.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.date.TimeOfDay.this', kind: "functiondeclaration", path: './std/datetime/date/time_of_day.this.html', attributes: ["pure", "ref", "safe"]},
{name: 'std.datetime.date.TimeOfDay.toISOExtString', kind: "functiondeclaration", path: './std/datetime/date/time_of_day.to_iso_ext_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.date.TimeOfDay.toISOString', kind: "functiondeclaration", path: './std/datetime/date/time_of_day.to_iso_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.date.TimeOfDay.toString', kind: "functiondeclaration", path: './std/datetime/date/time_of_day.to_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'std.datetime.date.timeStrings', kind: "variabledeclaration", path: './std/datetime/date/time_strings.html', attributes: []},
{name: 'std.datetime.date.valid', kind: "functiondeclaration", path: './std/datetime/date/valid.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.datetime.date.validTimeUnits', kind: "functiondeclaration", path: './std/datetime/date/valid_time_units.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.datetime.date.yearIsLeapYear', kind: "functiondeclaration", path: './std/datetime/date/year_is_leap_year.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.datetime.interval', kind: "module", path: './std/datetime/interval.html', attributes: []},
{name: 'std.datetime.interval.Direction', kind: "enumdeclaration", path: './std/datetime/interval/direction.html', attributes: []},
{name: 'std.datetime.interval.Direction.both', kind: "enummemberdeclaration", path: './std/datetime/interval/direction.html#both', attributes: []},
{name: 'std.datetime.interval.Direction.bwd', kind: "enummemberdeclaration", path: './std/datetime/interval/direction.html#bwd', attributes: []},
{name: 'std.datetime.interval.Direction.fwd', kind: "enummemberdeclaration", path: './std/datetime/interval/direction.html#fwd', attributes: []},
{name: 'std.datetime.interval.everyDayOfWeek', kind: "functiondeclaration", path: './std/datetime/interval/every_day_of_week.html', attributes: ["nothrow"]},
{name: 'std.datetime.interval.everyDuration', kind: "functiondeclaration", path: './std/datetime/interval/every_duration.html', attributes: ["nothrow"]},
{name: 'std.datetime.interval.everyMonth', kind: "functiondeclaration", path: './std/datetime/interval/every_month.html', attributes: []},
{name: 'std.datetime.interval.Interval', kind: "structdeclaration", path: './std/datetime/interval/interval.html', attributes: []},
{name: 'std.datetime.interval.Interval.begin', kind: "functiondeclaration", path: './std/datetime/interval/interval.begin.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.interval.Interval.bwdRange', kind: "functiondeclaration", path: './std/datetime/interval/interval.bwd_range.html', attributes: ["const"]},
{name: 'std.datetime.interval.Interval.contains', kind: "functiondeclaration", path: './std/datetime/interval/interval.contains.html', attributes: ["const", "pure"]},
{name: 'std.datetime.interval.Interval.empty', kind: "functiondeclaration", path: './std/datetime/interval/interval.empty.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.interval.Interval.end', kind: "functiondeclaration", path: './std/datetime/interval/interval.end.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.interval.Interval.expand', kind: "functiondeclaration", path: './std/datetime/interval/interval.expand.html', attributes: ["pure"]},
{name: 'std.datetime.interval.Interval.fwdRange', kind: "functiondeclaration", path: './std/datetime/interval/interval.fwd_range.html', attributes: ["const"]},
{name: 'std.datetime.interval.Interval.intersection', kind: "functiondeclaration", path: './std/datetime/interval/interval.intersection.html', attributes: ["const"]},
{name: 'std.datetime.interval.Interval.intersects', kind: "functiondeclaration", path: './std/datetime/interval/interval.intersects.html', attributes: ["const", "pure"]},
{name: 'std.datetime.interval.Interval.isAdjacent', kind: "functiondeclaration", path: './std/datetime/interval/interval.is_adjacent.html', attributes: ["const", "pure"]},
{name: 'std.datetime.interval.Interval.isAfter', kind: "functiondeclaration", path: './std/datetime/interval/interval.is_after.html', attributes: ["const", "pure"]},
{name: 'std.datetime.interval.Interval.isBefore', kind: "functiondeclaration", path: './std/datetime/interval/interval.is_before.html', attributes: ["const", "pure"]},
{name: 'std.datetime.interval.Interval.length', kind: "functiondeclaration", path: './std/datetime/interval/interval.length.html', attributes: ["auto", "const", "pure", "nothrow", "property"]},
{name: 'std.datetime.interval.Interval.merge', kind: "functiondeclaration", path: './std/datetime/interval/interval.merge.html', attributes: ["const"]},
{name: 'std.datetime.interval.Interval.opAssign', kind: "functiondeclaration", path: './std/datetime/interval/interval.op_assign.html', attributes: ["pure", "nothrow", "ref"]},
{name: 'std.datetime.interval.Interval.shift', kind: "functiondeclaration", path: './std/datetime/interval/interval.shift.html', attributes: ["pure"]},
{name: 'std.datetime.interval.Interval.span', kind: "functiondeclaration", path: './std/datetime/interval/interval.span.html', attributes: ["const", "pure"]},
{name: 'std.datetime.interval.Interval.this', kind: "functiondeclaration", path: './std/datetime/interval/interval.this.html', attributes: ["pure"]},
{name: 'std.datetime.interval.Interval.toString', kind: "functiondeclaration", path: './std/datetime/interval/interval.to_string.html', attributes: ["const", "nothrow", "safe"]},
{name: 'std.datetime.interval.IntervalRange', kind: "structdeclaration", path: './std/datetime/interval/interval_range.html', attributes: []},
{name: 'std.datetime.interval.IntervalRange.direction', kind: "functiondeclaration", path: './std/datetime/interval/interval_range.direction.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.interval.IntervalRange.empty', kind: "functiondeclaration", path: './std/datetime/interval/interval_range.empty.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.interval.IntervalRange.front', kind: "functiondeclaration", path: './std/datetime/interval/interval_range.front.html', attributes: ["const", "pure", "property"]},
{name: 'std.datetime.interval.IntervalRange.func', kind: "functiondeclaration", path: './std/datetime/interval/interval_range.func.html', attributes: ["pure", "nothrow", "property"]},
{name: 'std.datetime.interval.IntervalRange.interval', kind: "functiondeclaration", path: './std/datetime/interval/interval_range.interval.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.interval.IntervalRange.opAssign', kind: "functiondeclaration", path: './std/datetime/interval/interval_range.op_assign.html', attributes: ["pure", "nothrow", "ref"]},
{name: 'std.datetime.interval.IntervalRange.popFront', kind: "functiondeclaration", path: './std/datetime/interval/interval_range.pop_front.html', attributes: []},
{name: 'std.datetime.interval.IntervalRange.save', kind: "functiondeclaration", path: './std/datetime/interval/interval_range.save.html', attributes: ["pure", "nothrow", "property"]},
{name: 'std.datetime.interval.NegInfInterval', kind: "structdeclaration", path: './std/datetime/interval/neg_inf_interval.html', attributes: []},
{name: 'std.datetime.interval.NegInfInterval.bwdRange', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval.bwd_range.html', attributes: ["const"]},
{name: 'std.datetime.interval.NegInfInterval.contains', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval.contains.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.datetime.interval.NegInfInterval.empty', kind: "enummemberdeclaration", path: './std/datetime/interval/neg_inf_interval.empty.html', attributes: []},
{name: 'std.datetime.interval.NegInfInterval.end', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval.end.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.interval.NegInfInterval.expand', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval.expand.html', attributes: []},
{name: 'std.datetime.interval.NegInfInterval.intersection', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval.intersection.html', attributes: ["const"]},
{name: 'std.datetime.interval.NegInfInterval.intersects', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval.intersects.html', attributes: ["const", "pure"]},
{name: 'std.datetime.interval.NegInfInterval.isAdjacent', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval.is_adjacent.html', attributes: ["const", "pure"]},
{name: 'std.datetime.interval.NegInfInterval.isAfter', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval.is_after.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.datetime.interval.NegInfInterval.isBefore', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval.is_before.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.datetime.interval.NegInfInterval.merge', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval.merge.html', attributes: ["const"]},
{name: 'std.datetime.interval.NegInfInterval.opAssign', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval.op_assign.html', attributes: ["pure", "nothrow", "ref"]},
{name: 'std.datetime.interval.NegInfInterval.shift', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval.shift.html', attributes: ["pure", "nothrow"]},
{name: 'std.datetime.interval.NegInfInterval.span', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval.span.html', attributes: ["const", "pure"]},
{name: 'std.datetime.interval.NegInfInterval.this', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval.this.html', attributes: ["pure", "nothrow"]},
{name: 'std.datetime.interval.NegInfInterval.toString', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval.to_string.html', attributes: ["const", "nothrow"]},
{name: 'std.datetime.interval.NegInfIntervalRange', kind: "structdeclaration", path: './std/datetime/interval/neg_inf_interval_range.html', attributes: []},
{name: 'std.datetime.interval.NegInfIntervalRange.empty', kind: "enummemberdeclaration", path: './std/datetime/interval/neg_inf_interval_range.empty.html', attributes: []},
{name: 'std.datetime.interval.NegInfIntervalRange.front', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval_range.front.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.interval.NegInfIntervalRange.func', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval_range.func.html', attributes: ["pure", "nothrow", "property"]},
{name: 'std.datetime.interval.NegInfIntervalRange.interval', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval_range.interval.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.interval.NegInfIntervalRange.opAssign', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval_range.op_assign.html', attributes: ["pure", "nothrow", "ref"]},
{name: 'std.datetime.interval.NegInfIntervalRange.popFront', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval_range.pop_front.html', attributes: []},
{name: 'std.datetime.interval.NegInfIntervalRange.save', kind: "functiondeclaration", path: './std/datetime/interval/neg_inf_interval_range.save.html', attributes: ["pure", "nothrow", "property"]},
{name: 'std.datetime.interval.PopFirst', kind: "aliasdeclaration", path: './std/datetime/interval/pop_first.html', attributes: []},
{name: 'std.datetime.interval.PosInfInterval', kind: "structdeclaration", path: './std/datetime/interval/pos_inf_interval.html', attributes: []},
{name: 'std.datetime.interval.PosInfInterval.begin', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval.begin.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.interval.PosInfInterval.contains', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval.contains.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.datetime.interval.PosInfInterval.empty', kind: "enummemberdeclaration", path: './std/datetime/interval/pos_inf_interval.empty.html', attributes: []},
{name: 'std.datetime.interval.PosInfInterval.expand', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval.expand.html', attributes: []},
{name: 'std.datetime.interval.PosInfInterval.fwdRange', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval.fwd_range.html', attributes: ["const"]},
{name: 'std.datetime.interval.PosInfInterval.intersection', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval.intersection.html', attributes: ["const"]},
{name: 'std.datetime.interval.PosInfInterval.intersects', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval.intersects.html', attributes: ["const", "pure"]},
{name: 'std.datetime.interval.PosInfInterval.isAdjacent', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval.is_adjacent.html', attributes: ["const", "pure"]},
{name: 'std.datetime.interval.PosInfInterval.isAfter', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval.is_after.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.datetime.interval.PosInfInterval.isBefore', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval.is_before.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.datetime.interval.PosInfInterval.merge', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval.merge.html', attributes: ["const"]},
{name: 'std.datetime.interval.PosInfInterval.opAssign', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval.op_assign.html', attributes: ["pure", "nothrow", "ref"]},
{name: 'std.datetime.interval.PosInfInterval.shift', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval.shift.html', attributes: ["pure", "nothrow"]},
{name: 'std.datetime.interval.PosInfInterval.span', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval.span.html', attributes: ["const", "pure"]},
{name: 'std.datetime.interval.PosInfInterval.this', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval.this.html', attributes: ["pure", "nothrow"]},
{name: 'std.datetime.interval.PosInfInterval.toString', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval.to_string.html', attributes: ["const", "nothrow"]},
{name: 'std.datetime.interval.PosInfIntervalRange', kind: "structdeclaration", path: './std/datetime/interval/pos_inf_interval_range.html', attributes: []},
{name: 'std.datetime.interval.PosInfIntervalRange.empty', kind: "enummemberdeclaration", path: './std/datetime/interval/pos_inf_interval_range.empty.html', attributes: []},
{name: 'std.datetime.interval.PosInfIntervalRange.front', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval_range.front.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.interval.PosInfIntervalRange.func', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval_range.func.html', attributes: ["pure", "nothrow", "property"]},
{name: 'std.datetime.interval.PosInfIntervalRange.interval', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval_range.interval.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.datetime.interval.PosInfIntervalRange.opAssign', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval_range.op_assign.html', attributes: ["pure", "nothrow", "ref"]},
{name: 'std.datetime.interval.PosInfIntervalRange.popFront', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval_range.pop_front.html', attributes: []},
{name: 'std.datetime.interval.PosInfIntervalRange.save', kind: "functiondeclaration", path: './std/datetime/interval/pos_inf_interval_range.save.html', attributes: ["pure", "nothrow", "property"]},
{name: 'std.datetime.stopwatch', kind: "module", path: './std/datetime/stopwatch.html', attributes: []},
{name: 'std.datetime.stopwatch.AutoStart', kind: "aliasdeclaration", path: './std/datetime/stopwatch/auto_start.html', attributes: []},
{name: 'std.datetime.stopwatch.benchmark', kind: "functiondeclaration", path: './std/datetime/stopwatch/benchmark.html', attributes: []},
{name: 'std.datetime.stopwatch.StopWatch', kind: "structdeclaration", path: './std/datetime/stopwatch/stop_watch.html', attributes: []},
{name: 'std.datetime.stopwatch.StopWatch.peek', kind: "functiondeclaration", path: './std/datetime/stopwatch/stop_watch.peek.html', attributes: ["nothrow", "nogc", "safe", "const"]},
{name: 'std.datetime.stopwatch.StopWatch.reset', kind: "functiondeclaration", path: './std/datetime/stopwatch/stop_watch.reset.html', attributes: ["nothrow", "nogc", "safe"]},
{name: 'std.datetime.stopwatch.StopWatch.running', kind: "functiondeclaration", path: './std/datetime/stopwatch/stop_watch.running.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.datetime.stopwatch.StopWatch.setTimeElapsed', kind: "functiondeclaration", path: './std/datetime/stopwatch/stop_watch.set_time_elapsed.html', attributes: ["nothrow", "nogc", "safe"]},
{name: 'std.datetime.stopwatch.StopWatch.start', kind: "functiondeclaration", path: './std/datetime/stopwatch/stop_watch.start.html', attributes: ["nothrow", "nogc", "safe"]},
{name: 'std.datetime.stopwatch.StopWatch.stop', kind: "functiondeclaration", path: './std/datetime/stopwatch/stop_watch.stop.html', attributes: ["nothrow", "nogc", "safe"]},
{name: 'std.datetime.stopwatch.StopWatch.this', kind: "functiondeclaration", path: './std/datetime/stopwatch/stop_watch.this.html', attributes: ["nothrow", "ref", "nogc", "safe"]},
{name: 'std.datetime.systime', kind: "module", path: './std/datetime/systime.html', attributes: []},
{name: 'std.datetime.systime.Clock', kind: "classdeclaration", path: './std/datetime/systime/clock.html', attributes: []},
{name: 'std.datetime.systime.Clock.currStdTime', kind: "functiondeclaration", path: './std/datetime/systime/clock.curr_std_time.html', attributes: ["property", "trusted"]},
{name: 'std.datetime.systime.Clock.currTime', kind: "functiondeclaration", path: './std/datetime/systime/clock.curr_time.html', attributes: ["safe"]},
{name: 'std.datetime.systime.DosFileTime', kind: "aliasdeclaration", path: './std/datetime/systime/dos_file_time.html', attributes: []},
{name: 'std.datetime.systime.DosFileTimeToSysTime', kind: "functiondeclaration", path: './std/datetime/systime/dos_file_time_to_sys_time.html', attributes: ["safe"]},
{name: 'std.datetime.systime.FILETIMEToStdTime', kind: "functiondeclaration", path: './std/datetime/systime/filetime_to_std_time.html', attributes: ["safe"]},
{name: 'std.datetime.systime.FILETIMEToSysTime', kind: "functiondeclaration", path: './std/datetime/systime/filetime_to_sys_time.html', attributes: ["safe"]},
{name: 'std.datetime.systime.parseRFC822DateTime', kind: "functiondeclaration", path: './std/datetime/systime/parse_rf_c822_date_time.html', attributes: ["safe"]},
{name: 'std.datetime.systime.stdTimeToFILETIME', kind: "functiondeclaration", path: './std/datetime/systime/std_time_tofiletime.html', attributes: ["safe"]},
{name: 'std.datetime.systime.stdTimeToUnixTime', kind: "functiondeclaration", path: './std/datetime/systime/std_time_to_unix_time.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.datetime.systime.SYSTEMTIMEToSysTime', kind: "functiondeclaration", path: './std/datetime/systime/systemtime_to_sys_time.html', attributes: ["safe"]},
{name: 'std.datetime.systime.SysTime', kind: "structdeclaration", path: './std/datetime/systime/sys_time.html', attributes: []},
{name: 'std.datetime.systime.SysTime.add', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.add.html', attributes: ["nothrow", "ref", "scope", "safe"]},
{name: 'std.datetime.systime.SysTime.day', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.day.html', attributes: ["nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.dayOfGregorianCal', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.day_of_gregorian_cal.html', attributes: ["nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.dayOfWeek', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.day_of_week.html', attributes: ["nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.dayOfYear', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.day_of_year.html', attributes: ["nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.daysInMonth', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.days_in_month.html', attributes: ["nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.diffMonths', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.diff_months.html', attributes: ["nothrow", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.dstInEffect', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.dst_in_effect.html', attributes: ["nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.endOfMonth', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.end_of_month.html', attributes: ["nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.fracSecs', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.frac_secs.html', attributes: ["nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.fromISOExtString', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.from_iso_ext_string.html', attributes: ["safe"]},
{name: 'std.datetime.systime.SysTime.fromISOString', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.from_iso_string.html', attributes: ["safe"]},
{name: 'std.datetime.systime.SysTime.fromSimpleString', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.from_simple_string.html', attributes: ["safe"]},
{name: 'std.datetime.systime.SysTime.fromUnixTime', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.from_unix_time.html', attributes: ["static", "pure", "nothrow", "safe"]},
{name: 'std.datetime.systime.SysTime.hour', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.hour.html', attributes: ["nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.isAD', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.is_ad.html', attributes: ["nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.isLeapYear', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.is_leap_year.html', attributes: ["nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.isoWeek', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.iso_week.html', attributes: ["nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.julianDay', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.julian_day.html', attributes: ["nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.max', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.max.html', attributes: ["static", "pure", "nothrow", "property", "safe"]},
{name: 'std.datetime.systime.SysTime.min', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.min.html', attributes: ["static", "pure", "nothrow", "property", "safe"]},
{name: 'std.datetime.systime.SysTime.minute', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.minute.html', attributes: ["nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.modJulianDay', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.mod_julian_day.html', attributes: ["nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.month', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.month.html', attributes: ["nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.opAssign', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.op_assign.html', attributes: ["pure", "nothrow", "ref", "scope", "safe"]},
{name: 'std.datetime.systime.SysTime.opBinary', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.op_binary.html', attributes: ["const", "pure", "nothrow", "scope", "safe"]},
{name: 'std.datetime.systime.SysTime.opCast', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.op_cast.html', attributes: ["const", "nothrow", "scope", "safe"]},
{name: 'std.datetime.systime.SysTime.opCmp', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.op_cmp.html', attributes: ["const", "pure", "nothrow", "scope", "safe"]},
{name: 'std.datetime.systime.SysTime.opEquals', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.op_equals.html', attributes: ["const", "pure", "nothrow", "scope", "safe"]},
{name: 'std.datetime.systime.SysTime.opOpAssign', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.op_op_assign.html', attributes: ["pure", "nothrow", "ref", "scope", "safe"]},
{name: 'std.datetime.systime.SysTime.roll', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.roll.html', attributes: ["nothrow", "ref", "scope", "safe"]},
{name: 'std.datetime.systime.SysTime.second', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.second.html', attributes: ["nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.stdTime', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.std_time.html', attributes: ["pure", "nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.this', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.this.html', attributes: ["nothrow", "ref", "safe"]},
{name: 'std.datetime.systime.SysTime.timezone', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.timezone.html', attributes: ["pure", "nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.toHash', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.to_hash.html', attributes: ["pure", "nothrow", "nogc", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.toISOExtString', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.to_iso_ext_string.html', attributes: ["nothrow", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.toISOString', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.to_iso_string.html', attributes: ["nothrow", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.toLocalTime', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.to_local_time.html', attributes: ["pure", "nothrow", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.toOtherTZ', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.to_other_tz.html', attributes: ["pure", "nothrow", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.toSimpleString', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.to_simple_string.html', attributes: ["nothrow", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.toString', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.to_string.html', attributes: ["nothrow", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.toTimeSpec', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.to_time_spec.html', attributes: ["pure", "nothrow", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.toTimeVal', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.to_time_val.html', attributes: ["pure", "nothrow", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.toTM', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.to_tm.html', attributes: ["nothrow", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.toUnixTime', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.to_unix_time.html', attributes: ["const", "pure", "nothrow", "scope", "safe"]},
{name: 'std.datetime.systime.SysTime.toUTC', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.to_utc.html', attributes: ["pure", "nothrow", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.utcOffset', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.utc_offset.html', attributes: ["nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.year', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.year.html', attributes: ["nothrow", "property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTime.yearBC', kind: "functiondeclaration", path: './std/datetime/systime/sys_time.year_bc.html', attributes: ["property", "scope", "safe", "const"]},
{name: 'std.datetime.systime.SysTimeToDosFileTime', kind: "functiondeclaration", path: './std/datetime/systime/sys_time_to_dos_file_time.html', attributes: ["safe"]},
{name: 'std.datetime.systime.SysTimeToFILETIME', kind: "functiondeclaration", path: './std/datetime/systime/sys_time_tofiletime.html', attributes: ["safe"]},
{name: 'std.datetime.systime.SysTimeToSYSTEMTIME', kind: "functiondeclaration", path: './std/datetime/systime/sys_time_tosystemtime.html', attributes: ["safe"]},
{name: 'std.datetime.systime.unixTimeToStdTime', kind: "functiondeclaration", path: './std/datetime/systime/unix_time_to_std_time.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.datetime.timezone', kind: "module", path: './std/datetime/timezone.html', attributes: []},
{name: 'std.datetime.timezone.clearTZEnvVar', kind: "functiondeclaration", path: './std/datetime/timezone/clear_tz_env_var.html', attributes: ["nothrow", "safe"]},
{name: 'std.datetime.timezone.LocalTime', kind: "classdeclaration", path: './std/datetime/timezone/local_time.html', attributes: []},
{name: 'std.datetime.timezone.LocalTime.dstInEffect', kind: "functiondeclaration", path: './std/datetime/timezone/local_time.dst_in_effect.html', attributes: ["override", "nothrow", "trusted", "const"]},
{name: 'std.datetime.timezone.LocalTime.dstName', kind: "functiondeclaration", path: './std/datetime/timezone/local_time.dst_name.html', attributes: ["override", "nothrow", "property", "trusted", "const"]},
{name: 'std.datetime.timezone.LocalTime.hasDST', kind: "functiondeclaration", path: './std/datetime/timezone/local_time.has_dst.html', attributes: ["override", "nothrow", "property", "trusted", "const"]},
{name: 'std.datetime.timezone.LocalTime.name', kind: "functiondeclaration", path: './std/datetime/timezone/local_time.name.html', attributes: ["override", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.timezone.LocalTime.opCall', kind: "functiondeclaration", path: './std/datetime/timezone/local_time.op_call.html', attributes: ["static", "pure", "nothrow", "trusted"]},
{name: 'std.datetime.timezone.LocalTime.stdName', kind: "functiondeclaration", path: './std/datetime/timezone/local_time.std_name.html', attributes: ["override", "nothrow", "property", "trusted", "const"]},
{name: 'std.datetime.timezone.LocalTime.tzToUTC', kind: "functiondeclaration", path: './std/datetime/timezone/local_time.tz_toutc.html', attributes: ["override", "nothrow", "trusted", "const"]},
{name: 'std.datetime.timezone.LocalTime.utcToTZ', kind: "functiondeclaration", path: './std/datetime/timezone/local_time.utc_totz.html', attributes: ["override", "nothrow", "trusted", "const"]},
{name: 'std.datetime.timezone.TimeZone.dstInEffect', kind: "functiondeclaration", path: './std/datetime/timezone/time_zone.dst_in_effect.html', attributes: ["abstract", "nothrow", "safe", "const"]},
{name: 'std.datetime.timezone.TimeZone.dstName', kind: "functiondeclaration", path: './std/datetime/timezone/time_zone.dst_name.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.timezone.TimeZone.hasDST', kind: "functiondeclaration", path: './std/datetime/timezone/time_zone.has_dst.html', attributes: ["abstract", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.timezone.TimeZone.stdName', kind: "functiondeclaration", path: './std/datetime/timezone/time_zone.std_name.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.timezone.TimeZone.tzToUTC', kind: "functiondeclaration", path: './std/datetime/timezone/time_zone.tz_toutc.html', attributes: ["abstract", "nothrow", "safe", "const"]},
{name: 'std.datetime.timezone.TimeZone.utcOffsetAt', kind: "functiondeclaration", path: './std/datetime/timezone/time_zone.utc_offset_at.html', attributes: ["nothrow", "safe", "const"]},
{name: 'std.datetime.timezone.TimeZone.utcToTZ', kind: "functiondeclaration", path: './std/datetime/timezone/time_zone.utc_totz.html', attributes: ["abstract", "nothrow", "safe", "const"]},
{name: 'std.datetime.timezone.parseTZConversions', kind: "functiondeclaration", path: './std/datetime/timezone/parse_tz_conversions.html', attributes: ["pure", "safe"]},
{name: 'std.datetime.timezone.PosixTimeZone', kind: "classdeclaration", path: './std/datetime/timezone/posix_time_zone.html', attributes: []},
{name: 'std.datetime.timezone.PosixTimeZone.defaultTZDatabaseDir', kind: "enummemberdeclaration", path: './std/datetime/timezone/posix_time_zone.default_tz_database_dir.html', attributes: []},
{name: 'std.datetime.timezone.PosixTimeZone.dstInEffect', kind: "functiondeclaration", path: './std/datetime/timezone/posix_time_zone.dst_in_effect.html', attributes: ["override", "nothrow", "safe", "const"]},
{name: 'std.datetime.timezone.PosixTimeZone.getInstalledTZNames', kind: "functiondeclaration", path: './std/datetime/timezone/posix_time_zone.get_installed_tz_names.html', attributes: ["static", "trusted"]},
{name: 'std.datetime.timezone.PosixTimeZone.getTimeZone', kind: "functiondeclaration", path: './std/datetime/timezone/posix_time_zone.get_time_zone.html', attributes: ["static", "trusted"]},
{name: 'std.datetime.timezone.PosixTimeZone.hasDST', kind: "functiondeclaration", path: './std/datetime/timezone/posix_time_zone.has_dst.html', attributes: ["override", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.timezone.PosixTimeZone.tzToUTC', kind: "functiondeclaration", path: './std/datetime/timezone/posix_time_zone.tz_toutc.html', attributes: ["override", "nothrow", "safe", "const"]},
{name: 'std.datetime.timezone.PosixTimeZone.utcToTZ', kind: "functiondeclaration", path: './std/datetime/timezone/posix_time_zone.utc_totz.html', attributes: ["override", "nothrow", "safe", "const"]},
{name: 'std.datetime.timezone.TimeZone.name', kind: "functiondeclaration", path: './std/datetime/timezone/time_zone.name.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.datetime.timezone.setTZEnvVar', kind: "functiondeclaration", path: './std/datetime/timezone/set_tz_env_var.html', attributes: ["nothrow", "safe"]},
{name: 'std.datetime.timezone.SimpleTimeZone', kind: "classdeclaration", path: './std/datetime/timezone/simple_time_zone.html', attributes: []},
{name: 'std.datetime.timezone.SimpleTimeZone.dstInEffect', kind: "functiondeclaration", path: './std/datetime/timezone/simple_time_zone.dst_in_effect.html', attributes: ["override", "nothrow", "safe", "const"]},
{name: 'std.datetime.timezone.SimpleTimeZone.hasDST', kind: "functiondeclaration", path: './std/datetime/timezone/simple_time_zone.has_dst.html', attributes: ["override", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.timezone.SimpleTimeZone.this', kind: "functiondeclaration", path: './std/datetime/timezone/simple_time_zone.this.html', attributes: ["pure", "safe", "immutable"]},
{name: 'std.datetime.timezone.SimpleTimeZone.tzToUTC', kind: "functiondeclaration", path: './std/datetime/timezone/simple_time_zone.tz_toutc.html', attributes: ["override", "nothrow", "safe", "const"]},
{name: 'std.datetime.timezone.SimpleTimeZone.utcOffset', kind: "functiondeclaration", path: './std/datetime/timezone/simple_time_zone.utc_offset.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.timezone.SimpleTimeZone.utcOffsetAt', kind: "functiondeclaration", path: './std/datetime/timezone/simple_time_zone.utc_offset_at.html', attributes: ["override", "nothrow", "safe", "const"]},
{name: 'std.datetime.timezone.SimpleTimeZone.utcToTZ', kind: "functiondeclaration", path: './std/datetime/timezone/simple_time_zone.utc_totz.html', attributes: ["override", "nothrow", "safe", "const"]},
{name: 'std.datetime.timezone.TimeZone', kind: "classdeclaration", path: './std/datetime/timezone/time_zone.html', attributes: []},
{name: 'std.datetime.timezone.TimeZone.this', kind: "functiondeclaration", path: './std/datetime/timezone/time_zone.this.html', attributes: ["pure", "safe", "immutable"]},
{name: 'std.datetime.timezone.TZConversions', kind: "structdeclaration", path: './std/datetime/timezone/tz_conversions.html', attributes: []},
{name: 'std.datetime.timezone.TZConversions.fromWindows', kind: "variabledeclaration", path: './std/datetime/timezone/tz_conversions.from_windows.html', attributes: []},
{name: 'std.datetime.timezone.TZConversions.toWindows', kind: "variabledeclaration", path: './std/datetime/timezone/tz_conversions.to_windows.html', attributes: []},
{name: 'std.datetime.timezone.UTC', kind: "classdeclaration", path: './std/datetime/timezone/utc.html', attributes: []},
{name: 'std.datetime.timezone.UTC.dstInEffect', kind: "functiondeclaration", path: './std/datetime/timezone/utc.dst_in_effect.html', attributes: ["override", "nothrow", "safe", "const"]},
{name: 'std.datetime.timezone.UTC.hasDST', kind: "functiondeclaration", path: './std/datetime/timezone/utc.has_dst.html', attributes: ["override", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.timezone.UTC.opCall', kind: "functiondeclaration", path: './std/datetime/timezone/utc.op_call.html', attributes: ["static", "pure", "nothrow", "safe"]},
{name: 'std.datetime.timezone.UTC.tzToUTC', kind: "functiondeclaration", path: './std/datetime/timezone/utc.tz_toutc.html', attributes: ["override", "nothrow", "safe", "const"]},
{name: 'std.datetime.timezone.UTC.utcOffsetAt', kind: "functiondeclaration", path: './std/datetime/timezone/utc.utc_offset_at.html', attributes: ["override", "nothrow", "safe", "const"]},
{name: 'std.datetime.timezone.UTC.utcToTZ', kind: "functiondeclaration", path: './std/datetime/timezone/utc.utc_totz.html', attributes: ["override", "nothrow", "safe", "const"]},
{name: 'std.datetime.timezone.WindowsTimeZone', kind: "classdeclaration", path: './std/datetime/timezone/windows_time_zone.html', attributes: []},
{name: 'std.datetime.timezone.WindowsTimeZone.dstInEffect', kind: "functiondeclaration", path: './std/datetime/timezone/windows_time_zone.dst_in_effect.html', attributes: ["override", "nothrow", "safe", "const"]},
{name: 'std.datetime.timezone.WindowsTimeZone.getInstalledTZNames', kind: "functiondeclaration", path: './std/datetime/timezone/windows_time_zone.get_installed_tz_names.html', attributes: ["static", "safe"]},
{name: 'std.datetime.timezone.WindowsTimeZone.getTimeZone', kind: "functiondeclaration", path: './std/datetime/timezone/windows_time_zone.get_time_zone.html', attributes: ["static", "safe"]},
{name: 'std.datetime.timezone.WindowsTimeZone.hasDST', kind: "functiondeclaration", path: './std/datetime/timezone/windows_time_zone.has_dst.html', attributes: ["override", "nothrow", "property", "safe", "const"]},
{name: 'std.datetime.timezone.WindowsTimeZone.tzToUTC', kind: "functiondeclaration", path: './std/datetime/timezone/windows_time_zone.tz_toutc.html', attributes: ["override", "nothrow", "safe", "const"]},
{name: 'std.datetime.timezone.WindowsTimeZone.utcToTZ', kind: "functiondeclaration", path: './std/datetime/timezone/windows_time_zone.utc_totz.html', attributes: ["override", "nothrow", "safe", "const"]},
{name: 'std.digest.crc', kind: "module", path: './std/digest/crc.html', attributes: []},
{name: 'std.digest.crc.CRC', kind: "structdeclaration", path: './std/digest/crc/crc.html', attributes: []},
{name: 'std.digest.crc.CRC.finish', kind: "functiondeclaration", path: './std/digest/crc/crc.finish.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.digest.crc.CRC.peek', kind: "functiondeclaration", path: './std/digest/crc/crc.peek.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.digest.crc.CRC.put', kind: "functiondeclaration", path: './std/digest/crc/crc.put.html', attributes: []},
{name: 'std.digest.crc.CRC.R', kind: "aliasdeclaration", path: './std/digest/crc/crc.r.html', attributes: []},
{name: 'std.digest.crc.CRC.start', kind: "functiondeclaration", path: './std/digest/crc/crc.start.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.digest.crc.CRC32', kind: "aliasdeclaration", path: './std/digest/crc/cr_c32.html', attributes: []},
{name: 'std.digest.crc.CRC32Digest', kind: "aliasdeclaration", path: './std/digest/crc/cr_c32_digest.html', attributes: []},
{name: 'std.digest.crc.crc32Of', kind: "functiondeclaration", path: './std/digest/crc/crc32_of.html', attributes: []},
{name: 'std.digest.crc.CRC64ECMA', kind: "aliasdeclaration", path: './std/digest/crc/cr_c64_ecma.html', attributes: []},
{name: 'std.digest.crc.CRC64ECMADigest', kind: "aliasdeclaration", path: './std/digest/crc/cr_c64_ecma_digest.html', attributes: []},
{name: 'std.digest.crc.crc64ECMAOf', kind: "functiondeclaration", path: './std/digest/crc/crc64_ecma_of.html', attributes: []},
{name: 'std.digest.crc.CRC64ISO', kind: "aliasdeclaration", path: './std/digest/crc/cr_c64_iso.html', attributes: []},
{name: 'std.digest.crc.CRC64ISODigest', kind: "aliasdeclaration", path: './std/digest/crc/cr_c64_iso_digest.html', attributes: []},
{name: 'std.digest.crc.crc64ISOOf', kind: "functiondeclaration", path: './std/digest/crc/crc64_iso_of.html', attributes: []},
{name: 'std.digest.crc.crcHexString', kind: "aliasdeclaration", path: './std/digest/crc/crc_hex_string.html', attributes: []},
{name: 'std.digest.hmac', kind: "module", path: './std/digest/hmac.html', attributes: []},
{name: 'std.digest.hmac.HMAC', kind: "structdeclaration", path: './std/digest/hmac/hmac.html', attributes: []},
{name: 'std.digest.hmac.HMAC.finish', kind: "functiondeclaration", path: './std/digest/hmac/hmac.finish.html', attributes: []},
{name: 'std.digest.hmac.HMAC.put', kind: "functiondeclaration", path: './std/digest/hmac/hmac.put.html', attributes: []},
{name: 'std.digest.hmac.HMAC.start', kind: "functiondeclaration", path: './std/digest/hmac/hmac.start.html', attributes: ["ref"]},
{name: 'std.digest.hmac.HMAC.this', kind: "functiondeclaration", path: './std/digest/hmac/hmac.this.html', attributes: []},
{name: 'std.digest.hmac.hmac', kind: "aliasdeclaration", path: './std/digest/hmac/hmac.html', attributes: []},
{name: 'std.digest.hmac.hmac.hmac', kind: "functiondeclaration", path: './std/digest/hmac/hmac.hmac.html', attributes: ["auto"]},
{name: 'std.digest.md', kind: "module", path: './std/digest/md.html', attributes: []},
{name: 'std.digest.md.MD5', kind: "structdeclaration", path: './std/digest/md/m_d5.html', attributes: []},
{name: 'std.digest.md.MD5.finish', kind: "functiondeclaration", path: './std/digest/md/m_d5.finish.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.digest.md.MD5.put', kind: "functiondeclaration", path: './std/digest/md/m_d5.put.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.digest.md.MD5.start', kind: "functiondeclaration", path: './std/digest/md/m_d5.start.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.digest.md.MD5Digest', kind: "aliasdeclaration", path: './std/digest/md/m_d5_digest.html', attributes: []},
{name: 'std.digest.md.md5Of', kind: "functiondeclaration", path: './std/digest/md/md5_of.html', attributes: ["auto"]},
{name: 'std.digest.murmurhash', kind: "module", path: './std/digest/murmurhash.html', attributes: []},
{name: 'std.digest.murmurhash.MurmurHash3', kind: "structdeclaration", path: './std/digest/murmurhash/murmur_hash3.html', attributes: []},
{name: 'std.digest.murmurhash.MurmurHash3.Element', kind: "aliasdeclaration", path: './std/digest/murmurhash/murmur_hash3.element.html', attributes: []},
{name: 'std.digest.murmurhash.MurmurHash3.finalize', kind: "functiondeclaration", path: './std/digest/murmurhash/murmur_hash3.finalize.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.digest.murmurhash.MurmurHash3.finish', kind: "functiondeclaration", path: './std/digest/murmurhash/murmur_hash3.finish.html', attributes: ["pure", "nothrow"]},
{name: 'std.digest.murmurhash.MurmurHash3.get', kind: "functiondeclaration", path: './std/digest/murmurhash/murmur_hash3.get.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.digest.murmurhash.MurmurHash3.getBytes', kind: "functiondeclaration", path: './std/digest/murmurhash/murmur_hash3.get_bytes.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.digest.murmurhash.MurmurHash3.put', kind: "functiondeclaration", path: './std/digest/murmurhash/murmur_hash3.put.html', attributes: []},
{name: 'std.digest.murmurhash.MurmurHash3.putElement', kind: "functiondeclaration", path: './std/digest/murmurhash/murmur_hash3.put_element.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.digest.murmurhash.MurmurHash3.putElements', kind: "functiondeclaration", path: './std/digest/murmurhash/murmur_hash3.put_elements.html', attributes: []},
{name: 'std.digest.murmurhash.MurmurHash3.putRemainder', kind: "functiondeclaration", path: './std/digest/murmurhash/murmur_hash3.put_remainder.html', attributes: []},
{name: 'std.digest.ripemd', kind: "module", path: './std/digest/ripemd.html', attributes: []},
{name: 'std.digest.ripemd.RIPEMD160', kind: "structdeclaration", path: './std/digest/ripemd/ripem_d160.html', attributes: []},
{name: 'std.digest.ripemd.RIPEMD160.finish', kind: "functiondeclaration", path: './std/digest/ripemd/ripem_d160.finish.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.digest.ripemd.RIPEMD160.put', kind: "functiondeclaration", path: './std/digest/ripemd/ripem_d160.put.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.digest.ripemd.RIPEMD160.start', kind: "functiondeclaration", path: './std/digest/ripemd/ripem_d160.start.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.digest.ripemd.RIPEMD160Digest', kind: "aliasdeclaration", path: './std/digest/ripemd/ripem_d160_digest.html', attributes: []},
{name: 'std.digest.ripemd.ripemd160Of', kind: "functiondeclaration", path: './std/digest/ripemd/ripemd160_of.html', attributes: ["auto"]},
{name: 'std.digest.sha', kind: "module", path: './std/digest/sha.html', attributes: []},
{name: 'std.digest.sha.SHA', kind: "structdeclaration", path: './std/digest/sha/sha.html', attributes: []},
{name: 'std.digest.sha.SHA.finish', kind: "functiondeclaration", path: './std/digest/sha/sha.finish.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.digest.sha.SHA.put', kind: "functiondeclaration", path: './std/digest/sha/sha.put.html', attributes: []},
{name: 'std.digest.sha.SHA.start', kind: "functiondeclaration", path: './std/digest/sha/sha.start.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.digest.sha.SHA1', kind: "aliasdeclaration", path: './std/digest/sha/sh_a1.html', attributes: []},
{name: 'std.digest.sha.SHA1Digest', kind: "aliasdeclaration", path: './std/digest/sha/sh_a1_digest.html', attributes: []},
{name: 'std.digest.sha.sha1Of', kind: "functiondeclaration", path: './std/digest/sha/sha1_of.html', attributes: ["auto"]},
{name: 'std.digest.sha.SHA224', kind: "aliasdeclaration", path: './std/digest/sha/sh_a224.html', attributes: []},
{name: 'std.digest.sha.SHA224Digest', kind: "aliasdeclaration", path: './std/digest/sha/sh_a224_digest.html', attributes: []},
{name: 'std.digest.sha.sha224Of', kind: "functiondeclaration", path: './std/digest/sha/sha224_of.html', attributes: ["auto"]},
{name: 'std.digest.sha.SHA256', kind: "aliasdeclaration", path: './std/digest/sha/sh_a256.html', attributes: []},
{name: 'std.digest.sha.SHA256Digest', kind: "aliasdeclaration", path: './std/digest/sha/sh_a256_digest.html', attributes: []},
{name: 'std.digest.sha.sha256Of', kind: "functiondeclaration", path: './std/digest/sha/sha256_of.html', attributes: ["auto"]},
{name: 'std.digest.sha.SHA384', kind: "aliasdeclaration", path: './std/digest/sha/sh_a384.html', attributes: []},
{name: 'std.digest.sha.SHA384Digest', kind: "aliasdeclaration", path: './std/digest/sha/sh_a384_digest.html', attributes: []},
{name: 'std.digest.sha.sha384Of', kind: "functiondeclaration", path: './std/digest/sha/sha384_of.html', attributes: ["auto"]},
{name: 'std.digest.sha.SHA512', kind: "aliasdeclaration", path: './std/digest/sha/sh_a512.html', attributes: []},
{name: 'std.digest.sha.SHA512_224', kind: "aliasdeclaration", path: './std/digest/sha/sh_a512_224.html', attributes: []},
{name: 'std.digest.sha.SHA512_224Digest', kind: "aliasdeclaration", path: './std/digest/sha/sh_a512_224_digest.html', attributes: []},
{name: 'std.digest.sha.sha512_224Of', kind: "functiondeclaration", path: './std/digest/sha/sha512_224_of.html', attributes: ["auto"]},
{name: 'std.digest.sha.SHA512_256', kind: "aliasdeclaration", path: './std/digest/sha/sh_a512_256.html', attributes: []},
{name: 'std.digest.sha.SHA512_256Digest', kind: "aliasdeclaration", path: './std/digest/sha/sh_a512_256_digest.html', attributes: []},
{name: 'std.digest.sha.sha512_256Of', kind: "functiondeclaration", path: './std/digest/sha/sha512_256_of.html', attributes: ["auto"]},
{name: 'std.digest.sha.SHA512Digest', kind: "aliasdeclaration", path: './std/digest/sha/sh_a512_digest.html', attributes: []},
{name: 'std.digest.sha.sha512Of', kind: "functiondeclaration", path: './std/digest/sha/sha512_of.html', attributes: ["auto"]},
{name: 'std.experimental.allocator.building_blocks.affix_allocator', kind: "module", path: './std/experimental/allocator/building_blocks/affix_allocator.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.affix_allocator.AffixAllocator', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/affix_allocator/affix_allocator.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.affix_allocator.AffixAllocator._parent', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/affix_allocator/affix_allocator._parent.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.affix_allocator.AffixAllocator.alignment', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/affix_allocator/affix_allocator.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.affix_allocator.AffixAllocator.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/affix_allocator/affix_allocator.allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.affix_allocator.AffixAllocator.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/affix_allocator/affix_allocator.deallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.affix_allocator.AffixAllocator.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/affix_allocator/affix_allocator.deallocate_all.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.affix_allocator.AffixAllocator.empty', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/affix_allocator/affix_allocator.empty.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.affix_allocator.AffixAllocator.expand', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/affix_allocator/affix_allocator.expand.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.affix_allocator.AffixAllocator.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/affix_allocator/affix_allocator.good_alloc_size.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.affix_allocator.AffixAllocator.instance', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/affix_allocator/affix_allocator.instance.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.affix_allocator.AffixAllocator.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/affix_allocator/affix_allocator.owns.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.affix_allocator.AffixAllocator.parent', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/affix_allocator/affix_allocator.parent.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.affix_allocator.AffixAllocator.prefix', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/affix_allocator/affix_allocator.prefix.html', attributes: ["auto", "ref"]},
{name: 'std.experimental.allocator.building_blocks.affix_allocator.AffixAllocator.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/affix_allocator/affix_allocator.reallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.affix_allocator.AffixAllocator.suffix', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/affix_allocator/affix_allocator.suffix.html', attributes: ["auto", "ref"]},
{name: 'std.experimental.allocator.building_blocks.aligned_block_list', kind: "module", path: './std/experimental/allocator/building_blocks/aligned_block_list.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.aligned_block_list.AlignedBlockList', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/aligned_block_list/aligned_block_list.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.aligned_block_list.AlignedBlockList.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/aligned_block_list/aligned_block_list.allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.aligned_block_list.AlignedBlockList.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/aligned_block_list/aligned_block_list.deallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.aligned_block_list.AlignedBlockList.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/aligned_block_list/aligned_block_list.owns.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.aligned_block_list.SharedAlignedBlockList', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/aligned_block_list/shared_aligned_block_list.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.aligned_block_list.SharedAlignedBlockList.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/aligned_block_list/shared_aligned_block_list.allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.aligned_block_list.SharedAlignedBlockList.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/aligned_block_list/shared_aligned_block_list.deallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.aligned_block_list.SharedAlignedBlockList.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/aligned_block_list/shared_aligned_block_list.owns.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.allocator_list', kind: "module", path: './std/experimental/allocator/building_blocks/allocator_list.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.allocator_list.AllocatorList', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/allocator_list/allocator_list.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.allocator_list.AllocatorList.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/allocator_list/allocator_list.aligned_allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.allocator_list.AllocatorList.alignment', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/allocator_list/allocator_list.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.allocator_list.AllocatorList.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/allocator_list/allocator_list.allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.allocator_list.AllocatorList.Allocator', kind: "aliasdeclaration", path: './std/experimental/allocator/building_blocks/allocator_list/allocator_list.allocator.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.allocator_list.AllocatorList.bkalloc', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/allocator_list/allocator_list.bkalloc.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.allocator_list.AllocatorList.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/allocator_list/allocator_list.deallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.allocator_list.AllocatorList.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/allocator_list/allocator_list.deallocate_all.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.allocator_list.AllocatorList.empty', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/allocator_list/allocator_list.empty.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.allocator_list.AllocatorList.expand', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/allocator_list/allocator_list.expand.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.allocator_list.AllocatorList.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/allocator_list/allocator_list.owns.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.allocator_list.AllocatorList.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/allocator_list/allocator_list.reallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.allocator_list.AllocatorList.this', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/allocator_list/allocator_list.this.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator', kind: "module", path: './std/experimental/allocator/building_blocks/ascending_page_allocator.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.AscendingPageAllocator', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/ascending_page_allocator.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.AscendingPageAllocator.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/ascending_page_allocator.aligned_allocate.html', attributes: ["nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.AscendingPageAllocator.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/ascending_page_allocator.allocate.html', attributes: ["nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.AscendingPageAllocator.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/ascending_page_allocator.deallocate.html', attributes: ["nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.AscendingPageAllocator.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/ascending_page_allocator.deallocate_all.html', attributes: ["nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.AscendingPageAllocator.empty', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/ascending_page_allocator.empty.html', attributes: ["nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.AscendingPageAllocator.expand', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/ascending_page_allocator.expand.html', attributes: ["nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.AscendingPageAllocator.getAvailableSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/ascending_page_allocator.get_available_size.html', attributes: ["nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.AscendingPageAllocator.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/ascending_page_allocator.good_alloc_size.html', attributes: ["nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.AscendingPageAllocator.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/ascending_page_allocator.owns.html', attributes: ["nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.AscendingPageAllocator.this', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/ascending_page_allocator.this.html', attributes: ["nothrow", "ref", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.SharedAscendingPageAllocator', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/shared_ascending_page_allocator.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.SharedAscendingPageAllocator.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/shared_ascending_page_allocator.aligned_allocate.html', attributes: ["nothrow", "nogc", "shared"]},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.SharedAscendingPageAllocator.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/shared_ascending_page_allocator.allocate.html', attributes: ["nothrow", "nogc", "shared"]},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.SharedAscendingPageAllocator.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/shared_ascending_page_allocator.deallocate.html', attributes: ["nothrow", "nogc", "shared"]},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.SharedAscendingPageAllocator.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/shared_ascending_page_allocator.deallocate_all.html', attributes: ["nothrow", "nogc", "shared"]},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.SharedAscendingPageAllocator.expand', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/shared_ascending_page_allocator.expand.html', attributes: ["nothrow", "nogc", "shared"]},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.SharedAscendingPageAllocator.getAvailableSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/shared_ascending_page_allocator.get_available_size.html', attributes: ["nothrow", "nogc", "shared"]},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.SharedAscendingPageAllocator.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/shared_ascending_page_allocator.good_alloc_size.html', attributes: ["nothrow", "nogc", "shared"]},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.SharedAscendingPageAllocator.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/shared_ascending_page_allocator.owns.html', attributes: ["nothrow", "nogc", "shared"]},
{name: 'std.experimental.allocator.building_blocks.ascending_page_allocator.SharedAscendingPageAllocator.this', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/ascending_page_allocator/shared_ascending_page_allocator.this.html', attributes: ["nothrow", "ref", "nogc", "shared"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block', kind: "module", path: './std/experimental/allocator/building_blocks/bitmapped_block.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlock', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlock.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block.aligned_allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlock.alignedReallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block.aligned_reallocate.html', attributes: ["system"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlock.alignment', kind: "aliasdeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlock.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block.allocate.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlock.allocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block.allocate_all.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlock.allocateFresh', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block.allocate_fresh.html', attributes: ["trusted"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlock.blockSize', kind: "aliasdeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block.block_size.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlock.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block.deallocate.html', attributes: ["nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlock.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block.deallocate_all.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlock.empty', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block.empty.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlock.expand', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block.expand.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlock.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block.good_alloc_size.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlock.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block.owns.html', attributes: ["const", "pure", "nothrow", "nogc", "trusted"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlock.parent', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block.parent.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlock.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block.reallocate.html', attributes: ["system"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlock.this', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block.this.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlockWithInternalPointers', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block_with_internal_pointers.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlockWithInternalPointers.alignment', kind: "aliasdeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block_with_internal_pointers.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlockWithInternalPointers.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block_with_internal_pointers.allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlockWithInternalPointers.allocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block_with_internal_pointers.allocate_all.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlockWithInternalPointers.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block_with_internal_pointers.deallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlockWithInternalPointers.empty', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block_with_internal_pointers.empty.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlockWithInternalPointers.expand', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block_with_internal_pointers.expand.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlockWithInternalPointers.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block_with_internal_pointers.good_alloc_size.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlockWithInternalPointers.resolveInternalPointer', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block_with_internal_pointers.resolve_internal_pointer.html', attributes: ["nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.BitmappedBlockWithInternalPointers.this', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/bitmapped_block_with_internal_pointers.this.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.SharedBitmappedBlock', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/shared_bitmapped_block.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.SharedBitmappedBlock.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/shared_bitmapped_block.aligned_allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.SharedBitmappedBlock.alignedReallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/shared_bitmapped_block.aligned_reallocate.html', attributes: ["system"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.SharedBitmappedBlock.alignment', kind: "aliasdeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/shared_bitmapped_block.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.SharedBitmappedBlock.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/shared_bitmapped_block.allocate.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.SharedBitmappedBlock.allocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/shared_bitmapped_block.allocate_all.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.SharedBitmappedBlock.allocateFresh', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/shared_bitmapped_block.allocate_fresh.html', attributes: ["trusted"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.SharedBitmappedBlock.blockSize', kind: "aliasdeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/shared_bitmapped_block.block_size.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.SharedBitmappedBlock.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/shared_bitmapped_block.deallocate.html', attributes: ["nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.SharedBitmappedBlock.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/shared_bitmapped_block.deallocate_all.html', attributes: ["nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.SharedBitmappedBlock.empty', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/shared_bitmapped_block.empty.html', attributes: ["nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.SharedBitmappedBlock.expand', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/shared_bitmapped_block.expand.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.SharedBitmappedBlock.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/shared_bitmapped_block.good_alloc_size.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.SharedBitmappedBlock.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/shared_bitmapped_block.owns.html', attributes: ["const", "pure", "nothrow", "nogc", "trusted"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.SharedBitmappedBlock.parent', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/shared_bitmapped_block.parent.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.SharedBitmappedBlock.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/shared_bitmapped_block.reallocate.html', attributes: ["system"]},
{name: 'std.experimental.allocator.building_blocks.bitmapped_block.SharedBitmappedBlock.this', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bitmapped_block/shared_bitmapped_block.this.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bucketizer', kind: "module", path: './std/experimental/allocator/building_blocks/bucketizer.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bucketizer.Bucketizer', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/bucketizer/bucketizer.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bucketizer.Bucketizer.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bucketizer/bucketizer.aligned_allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bucketizer.Bucketizer.alignedReallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bucketizer/bucketizer.aligned_reallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bucketizer.Bucketizer.alignment', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/bucketizer/bucketizer.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bucketizer.Bucketizer.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bucketizer/bucketizer.allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bucketizer.Bucketizer.buckets', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/bucketizer/bucketizer.buckets.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bucketizer.Bucketizer.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bucketizer/bucketizer.deallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bucketizer.Bucketizer.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bucketizer/bucketizer.deallocate_all.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bucketizer.Bucketizer.expand', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bucketizer/bucketizer.expand.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bucketizer.Bucketizer.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bucketizer/bucketizer.good_alloc_size.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.bucketizer.Bucketizer.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bucketizer/bucketizer.owns.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bucketizer.Bucketizer.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bucketizer/bucketizer.reallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.bucketizer.Bucketizer.resolveInternalPointer', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/bucketizer/bucketizer.resolve_internal_pointer.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.fallback_allocator', kind: "module", path: './std/experimental/allocator/building_blocks/fallback_allocator.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.fallback_allocator.FallbackAllocator', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/fallback_allocator/fallback_allocator.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.fallback_allocator.FallbackAllocator.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/fallback_allocator/fallback_allocator.aligned_allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.fallback_allocator.FallbackAllocator.alignment', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/fallback_allocator/fallback_allocator.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.fallback_allocator.FallbackAllocator.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/fallback_allocator/fallback_allocator.allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.fallback_allocator.FallbackAllocator.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/fallback_allocator/fallback_allocator.deallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.fallback_allocator.FallbackAllocator.empty', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/fallback_allocator/fallback_allocator.empty.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.fallback_allocator.FallbackAllocator.expand', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/fallback_allocator/fallback_allocator.expand.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.fallback_allocator.FallbackAllocator.fallback', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/fallback_allocator/fallback_allocator.fallback.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.fallback_allocator.FallbackAllocator.instance', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/fallback_allocator/fallback_allocator.instance.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.fallback_allocator.FallbackAllocator.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/fallback_allocator/fallback_allocator.owns.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.fallback_allocator.FallbackAllocator.primary', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/fallback_allocator/fallback_allocator.primary.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.fallback_allocator.FallbackAllocator.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/fallback_allocator/fallback_allocator.reallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.fallback_allocator.FallbackAllocator.resolveInternalPointer', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/fallback_allocator/fallback_allocator.resolve_internal_pointer.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.fallback_allocator.fallbackAllocator', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/fallback_allocator/fallback_allocator.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list', kind: "module", path: './std/experimental/allocator/building_blocks/free_list.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.ContiguousFreeList', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/free_list/contiguous_free_list.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.ContiguousFreeList.alignment', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/free_list/contiguous_free_list.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.ContiguousFreeList.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/contiguous_free_list.allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.ContiguousFreeList.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/contiguous_free_list.deallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.ContiguousFreeList.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/contiguous_free_list.deallocate_all.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.ContiguousFreeList.empty', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/contiguous_free_list.empty.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.ContiguousFreeList.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/contiguous_free_list.good_alloc_size.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.ContiguousFreeList.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/contiguous_free_list.owns.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.ContiguousFreeList.parent', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/free_list/contiguous_free_list.parent.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.ContiguousFreeList.this', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/contiguous_free_list.this.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.FreeList', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/free_list/free_list.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.FreeList.alignment', kind: "aliasdeclaration", path: './std/experimental/allocator/building_blocks/free_list/free_list.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.FreeList.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/free_list.allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.FreeList.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/free_list.deallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.FreeList.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/free_list.deallocate_all.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.FreeList.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/free_list.good_alloc_size.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.FreeList.max', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/free_list.max.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.free_list.FreeList.min', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/free_list.min.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.free_list.FreeList.minimize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/free_list.minimize.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.FreeList.parent', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/free_list/free_list.parent.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.SharedFreeList', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/free_list/shared_free_list.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.SharedFreeList.alignment', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/free_list/shared_free_list.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.SharedFreeList.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/shared_free_list.allocate.html', attributes: ["shared"]},
{name: 'std.experimental.allocator.building_blocks.free_list.SharedFreeList.approxMaxLength', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/shared_free_list.approx_max_length.html', attributes: ["shared", "const", "property"]},
{name: 'std.experimental.allocator.building_blocks.free_list.SharedFreeList.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/shared_free_list.deallocate.html', attributes: ["shared"]},
{name: 'std.experimental.allocator.building_blocks.free_list.SharedFreeList.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/shared_free_list.deallocate_all.html', attributes: ["shared"]},
{name: 'std.experimental.allocator.building_blocks.free_list.SharedFreeList.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/shared_free_list.good_alloc_size.html', attributes: ["shared"]},
{name: 'std.experimental.allocator.building_blocks.free_list.SharedFreeList.max', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/shared_free_list.max.html', attributes: ["property"]},
{name: 'std.experimental.allocator.building_blocks.free_list.SharedFreeList.min', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/shared_free_list.min.html', attributes: ["property"]},
{name: 'std.experimental.allocator.building_blocks.free_list.SharedFreeList.minimize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/shared_free_list.minimize.html', attributes: ["shared"]},
{name: 'std.experimental.allocator.building_blocks.free_list.SharedFreeList.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/shared_free_list.owns.html', attributes: ["shared", "const"]},
{name: 'std.experimental.allocator.building_blocks.free_list.SharedFreeList.parent', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/free_list/shared_free_list.parent.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_list.SharedFreeList.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/shared_free_list.reallocate.html', attributes: ["shared"]},
{name: 'std.experimental.allocator.building_blocks.free_list.SharedFreeList.setBounds', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_list/shared_free_list.set_bounds.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_tree', kind: "module", path: './std/experimental/allocator/building_blocks/free_tree.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_tree.FreeTree', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/free_tree/free_tree.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_tree.FreeTree.alignment', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/free_tree/free_tree.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_tree.FreeTree.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_tree/free_tree.allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_tree.FreeTree.clear', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_tree/free_tree.clear.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_tree.FreeTree.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_tree/free_tree.deallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_tree.FreeTree.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_tree/free_tree.deallocate_all.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.free_tree.FreeTree.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/free_tree/free_tree.good_alloc_size.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.kernighan_ritchie', kind: "module", path: './std/experimental/allocator/building_blocks/kernighan_ritchie.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.kernighan_ritchie.KRRegion', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/kernighan_ritchie/kr_region.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.kernighan_ritchie.KRRegion.alignment', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/kernighan_ritchie/kr_region.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.kernighan_ritchie.KRRegion.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/kernighan_ritchie/kr_region.allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.kernighan_ritchie.KRRegion.allocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/kernighan_ritchie/kr_region.allocate_all.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.kernighan_ritchie.KRRegion.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/kernighan_ritchie/kr_region.deallocate.html', attributes: ["nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.kernighan_ritchie.KRRegion.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/kernighan_ritchie/kr_region.deallocate_all.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.kernighan_ritchie.KRRegion.empty', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/kernighan_ritchie/kr_region.empty.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.kernighan_ritchie.KRRegion.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/kernighan_ritchie/kr_region.good_alloc_size.html', attributes: ["static", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.kernighan_ritchie.KRRegion.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/kernighan_ritchie/kr_region.owns.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.experimental.allocator.building_blocks.kernighan_ritchie.KRRegion.parent', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/kernighan_ritchie/kr_region.parent.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.kernighan_ritchie.KRRegion.switchToFreeList', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/kernighan_ritchie/kr_region.switch_to_free_list.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.kernighan_ritchie.KRRegion.this', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/kernighan_ritchie/kr_region.this.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.null_allocator', kind: "module", path: './std/experimental/allocator/building_blocks/null_allocator.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.null_allocator.NullAllocator', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/null_allocator/null_allocator.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.null_allocator.NullAllocator.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/null_allocator/null_allocator.aligned_allocate.html', attributes: ["pure", "nothrow", "nogc", "safe", "shared"]},
{name: 'std.experimental.allocator.building_blocks.null_allocator.NullAllocator.alignedReallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/null_allocator/null_allocator.aligned_reallocate.html', attributes: ["pure", "nothrow", "nogc", "safe", "shared"]},
{name: 'std.experimental.allocator.building_blocks.null_allocator.NullAllocator.alignment', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/null_allocator/null_allocator.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.null_allocator.NullAllocator.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/null_allocator/null_allocator.allocate.html', attributes: ["pure", "nothrow", "nogc", "safe", "shared"]},
{name: 'std.experimental.allocator.building_blocks.null_allocator.NullAllocator.allocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/null_allocator/null_allocator.allocate_all.html', attributes: ["pure", "nothrow", "nogc", "safe", "shared"]},
{name: 'std.experimental.allocator.building_blocks.null_allocator.NullAllocator.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/null_allocator/null_allocator.deallocate.html', attributes: ["pure", "nothrow", "nogc", "safe", "shared"]},
{name: 'std.experimental.allocator.building_blocks.null_allocator.NullAllocator.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/null_allocator/null_allocator.deallocate_all.html', attributes: ["pure", "nothrow", "nogc", "safe", "shared"]},
{name: 'std.experimental.allocator.building_blocks.null_allocator.NullAllocator.empty', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/null_allocator/null_allocator.empty.html', attributes: ["pure", "nothrow", "nogc", "safe", "const", "shared"]},
{name: 'std.experimental.allocator.building_blocks.null_allocator.NullAllocator.expand', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/null_allocator/null_allocator.expand.html', attributes: ["pure", "nothrow", "nogc", "safe", "shared"]},
{name: 'std.experimental.allocator.building_blocks.null_allocator.NullAllocator.instance', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/null_allocator/null_allocator.instance.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.null_allocator.NullAllocator.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/null_allocator/null_allocator.owns.html', attributes: ["pure", "nothrow", "nogc", "safe", "const", "shared"]},
{name: 'std.experimental.allocator.building_blocks.null_allocator.NullAllocator.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/null_allocator/null_allocator.reallocate.html', attributes: ["pure", "nothrow", "nogc", "safe", "shared"]},
{name: 'std.experimental.allocator.building_blocks.null_allocator.NullAllocator.resolveInternalPointer', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/null_allocator/null_allocator.resolve_internal_pointer.html', attributes: ["pure", "nothrow", "nogc", "safe", "const", "shared"]},
{name: 'std.experimental.allocator.building_blocks.quantizer', kind: "module", path: './std/experimental/allocator/building_blocks/quantizer.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.quantizer.Quantizer', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/quantizer/quantizer.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.quantizer.Quantizer.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/quantizer/quantizer.aligned_allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.quantizer.Quantizer.alignedReallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/quantizer/quantizer.aligned_reallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.quantizer.Quantizer.alignment', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/quantizer/quantizer.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.quantizer.Quantizer.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/quantizer/quantizer.allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.quantizer.Quantizer.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/quantizer/quantizer.deallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.quantizer.Quantizer.expand', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/quantizer/quantizer.expand.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.quantizer.Quantizer.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/quantizer/quantizer.good_alloc_size.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.quantizer.Quantizer.parent', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/quantizer/quantizer.parent.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.quantizer.Quantizer.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/quantizer/quantizer.reallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region', kind: "module", path: './std/experimental/allocator/building_blocks/region.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region.InSituRegion', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/region/in_situ_region.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region.InSituRegion.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/in_situ_region.aligned_allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region.InSituRegion.alignment', kind: "aliasdeclaration", path: './std/experimental/allocator/building_blocks/region/in_situ_region.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region.InSituRegion.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/in_situ_region.allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region.InSituRegion.allocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/in_situ_region.allocate_all.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region.InSituRegion.available', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/in_situ_region.available.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region.InSituRegion.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/in_situ_region.deallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region.InSituRegion.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/in_situ_region.deallocate_all.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region.InSituRegion.expand', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/in_situ_region.expand.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region.InSituRegion.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/in_situ_region.owns.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.region.Region', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/region/region.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region.Region.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/region.aligned_allocate.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.experimental.allocator.building_blocks.region.Region.alignment', kind: "aliasdeclaration", path: './std/experimental/allocator/building_blocks/region/region.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region.Region.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/region.allocate.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.experimental.allocator.building_blocks.region.Region.allocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/region.allocate_all.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.experimental.allocator.building_blocks.region.Region.available', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/region.available.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.region.Region.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/region.deallocate.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.region.Region.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/region.deallocate_all.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.region.Region.empty', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/region.empty.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.region.Region.expand', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/region.expand.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.region.Region.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/region.good_alloc_size.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.region.Region.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/region.owns.html', attributes: ["const", "pure", "nothrow", "nogc", "trusted"]},
{name: 'std.experimental.allocator.building_blocks.region.Region.parent', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/region/region.parent.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region.Region.this', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/region.this.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.region.SbrkRegion', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/region/sbrk_region.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region.SbrkRegion.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/sbrk_region.aligned_allocate.html', attributes: ["shared", "nothrow", "nogc", "trusted"]},
{name: 'std.experimental.allocator.building_blocks.region.SbrkRegion.alignment', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/region/sbrk_region.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region.SbrkRegion.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/sbrk_region.allocate.html', attributes: ["shared", "nothrow", "nogc", "trusted"]},
{name: 'std.experimental.allocator.building_blocks.region.SbrkRegion.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/sbrk_region.deallocate.html', attributes: ["shared", "nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.region.SbrkRegion.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/sbrk_region.deallocate_all.html', attributes: ["shared", "nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.region.SbrkRegion.empty', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/sbrk_region.empty.html', attributes: ["shared", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.region.SbrkRegion.expand', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/sbrk_region.expand.html', attributes: ["shared", "nothrow", "nogc", "trusted"]},
{name: 'std.experimental.allocator.building_blocks.region.SbrkRegion.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/sbrk_region.good_alloc_size.html', attributes: ["shared", "const", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.region.SbrkRegion.instance', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/region/sbrk_region.instance.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region.SbrkRegion.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/sbrk_region.owns.html', attributes: ["shared", "pure", "nothrow", "nogc", "trusted"]},
{name: 'std.experimental.allocator.building_blocks.region.SharedRegion', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/region/shared_region.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region.SharedRegion.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/shared_region.aligned_allocate.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.experimental.allocator.building_blocks.region.SharedRegion.alignment', kind: "aliasdeclaration", path: './std/experimental/allocator/building_blocks/region/shared_region.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region.SharedRegion.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/shared_region.allocate.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.experimental.allocator.building_blocks.region.SharedRegion.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/shared_region.deallocate.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.region.SharedRegion.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/shared_region.deallocate_all.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.region.SharedRegion.empty', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/shared_region.empty.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.region.SharedRegion.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/shared_region.good_alloc_size.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.region.SharedRegion.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/shared_region.owns.html', attributes: ["const", "pure", "nothrow", "nogc", "trusted"]},
{name: 'std.experimental.allocator.building_blocks.region.SharedRegion.parent', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/region/shared_region.parent.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.region.SharedRegion.this', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/region/shared_region.this.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.experimental.allocator.building_blocks.scoped_allocator', kind: "module", path: './std/experimental/allocator/building_blocks/scoped_allocator.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.scoped_allocator.ScopedAllocator', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/scoped_allocator/scoped_allocator.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.scoped_allocator.ScopedAllocator.alignment', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/scoped_allocator/scoped_allocator.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.scoped_allocator.ScopedAllocator.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/scoped_allocator/scoped_allocator.allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.scoped_allocator.ScopedAllocator.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/scoped_allocator/scoped_allocator.deallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.scoped_allocator.ScopedAllocator.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/scoped_allocator/scoped_allocator.deallocate_all.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.scoped_allocator.ScopedAllocator.empty', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/scoped_allocator/scoped_allocator.empty.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.scoped_allocator.ScopedAllocator.expand', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/scoped_allocator/scoped_allocator.expand.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.scoped_allocator.ScopedAllocator.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/scoped_allocator/scoped_allocator.good_alloc_size.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.scoped_allocator.ScopedAllocator.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/scoped_allocator/scoped_allocator.owns.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.scoped_allocator.ScopedAllocator.parent', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/scoped_allocator/scoped_allocator.parent.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.scoped_allocator.ScopedAllocator.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/scoped_allocator/scoped_allocator.reallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.segregator', kind: "module", path: './std/experimental/allocator/building_blocks/segregator.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.segregator.Segregator', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/segregator/segregator.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.segregator.Segregator.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/segregator/segregator.aligned_allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.segregator.Segregator.alignedReallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/segregator/segregator.aligned_reallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.segregator.Segregator.alignment', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/segregator/segregator.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.segregator.Segregator.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/segregator/segregator.allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.segregator.Segregator.allocatorForSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/segregator/segregator.allocator_for_size.html', attributes: ["auto", "ref"]},
{name: 'std.experimental.allocator.building_blocks.segregator.Segregator.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/segregator/segregator.deallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.segregator.Segregator.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/segregator/segregator.deallocate_all.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.segregator.Segregator.empty', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/segregator/segregator.empty.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.segregator.Segregator.expand', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/segregator/segregator.expand.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.segregator.Segregator.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/segregator/segregator.good_alloc_size.html', attributes: ["static"]},
{name: 'std.experimental.allocator.building_blocks.segregator.Segregator.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/segregator/segregator.owns.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.segregator.Segregator.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/segregator/segregator.reallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector', kind: "module", path: './std/experimental/allocator/building_blocks/stats_collector.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options', kind: "enumdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.all', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#all', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.bytesAll', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#bytesAll', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.bytesAllocated', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#bytesAllocated', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.bytesContracted', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#bytesContracted', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.bytesExpanded', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#bytesExpanded', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.bytesHighTide', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#bytesHighTide', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.bytesMoved', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#bytesMoved', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.bytesNotMoved', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#bytesNotMoved', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.bytesSlack', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#bytesSlack', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.bytesUsed', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#bytesUsed', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.numAlignedAllocate', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#numAlignedAllocate', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.numAlignedAllocateOk', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#numAlignedAllocateOk', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.numAll', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#numAll', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.numAllocate', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#numAllocate', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.numAllocateOK', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#numAllocateOK', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.numDeallocate', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#numDeallocate', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.numDeallocateAll', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#numDeallocateAll', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.numExpand', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#numExpand', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.numExpandOK', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#numExpandOK', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.numOwns', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#numOwns', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.numReallocate', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#numReallocate', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.numReallocateInPlace', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#numReallocateInPlace', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.Options.numReallocateOK', kind: "enummemberdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/options.html#numReallocateOK', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.aligned_allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.alignment', kind: "aliasdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.alignment.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.allocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.byFileLine', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.by_file_line.html', attributes: ["auto", "static"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.bytesAllocated', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.bytes_allocated.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.bytesContracted', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.bytes_contracted.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.bytesExpanded', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.bytes_expanded.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.bytesHighTide', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.bytes_high_tide.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.bytesMoved', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.bytes_moved.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.bytesNotMoved', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.bytes_not_moved.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.bytesSlack', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.bytes_slack.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.bytesUsed', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.bytes_used.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.deallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.deallocate_all.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.empty', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.empty.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.expand', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.expand.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.numAlignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.num_aligned_allocate.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.numAlignedAllocateOk', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.num_aligned_allocate_ok.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.numAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.num_allocate.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.numAllocateOK', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.num_allocate_ok.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.numDeallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.num_deallocate.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.numDeallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.num_deallocate_all.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.numExpand', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.num_expand.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.numExpandOK', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.num_expand_ok.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.numOwns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.num_owns.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.numReallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.num_reallocate.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.numReallocateInPlace', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.num_reallocate_in_place.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.numReallocateOK', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.num_reallocate_ok.html', attributes: ["const", "property"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.owns', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.owns.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.parent', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.parent.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.PerCallStatistics', kind: "structdeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.per_call_statistics.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.PerCallStatistics.file', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.per_call_statistics.file.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.PerCallStatistics.line', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.per_call_statistics.line.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.PerCallStatistics.opts', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.per_call_statistics.opts.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.PerCallStatistics.toString', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.per_call_statistics.to_string.html', attributes: ["const"]},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.PerCallStatistics.values', kind: "variabledeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.per_call_statistics.values.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.reallocate.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.reportPerCallStatistics', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.report_per_call_statistics.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks.stats_collector.StatsCollector.reportStatistics', kind: "functiondeclaration", path: './std/experimental/allocator/building_blocks/stats_collector/stats_collector.report_statistics.html', attributes: []},
{name: 'std.experimental.allocator.building_blocks', kind: "module", path: './std/experimental/allocator/building_blocks.html', attributes: []},
{name: 'std.experimental.allocator.common', kind: "module", path: './std/experimental/allocator/common.html', attributes: []},
{name: 'std.experimental.allocator.common.alignedReallocate', kind: "functiondeclaration", path: './std/experimental/allocator/common/aligned_reallocate.html', attributes: []},
{name: 'std.experimental.allocator.common.chooseAtRuntime', kind: "enummemberdeclaration", path: './std/experimental/allocator/common/choose_at_runtime.html', attributes: []},
{name: 'std.experimental.allocator.common.forwardToMember', kind: "functiondeclaration", path: './std/experimental/allocator/common/forward_to_member.html', attributes: []},
{name: 'std.experimental.allocator.common.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/common/good_alloc_size.html', attributes: []},
{name: 'std.experimental.allocator.common.hasStaticallyKnownAlignment', kind: "enummemberdeclaration", path: './std/experimental/allocator/common/has_statically_known_alignment.html', attributes: []},
{name: 'std.experimental.allocator.common.platformAlignment', kind: "enummemberdeclaration", path: './std/experimental/allocator/common/platform_alignment.html', attributes: []},
{name: 'std.experimental.allocator.common.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/common/reallocate.html', attributes: []},
{name: 'std.experimental.allocator.common.stateSize', kind: "enummemberdeclaration", path: './std/experimental/allocator/common/state_size.html', attributes: []},
{name: 'std.experimental.allocator.common.unbounded', kind: "enummemberdeclaration", path: './std/experimental/allocator/common/unbounded.html', attributes: []},
{name: 'std.experimental.allocator.gc_allocator', kind: "module", path: './std/experimental/allocator/gc_allocator.html', attributes: []},
{name: 'std.experimental.allocator.gc_allocator.GCAllocator', kind: "structdeclaration", path: './std/experimental/allocator/gc_allocator/gc_allocator.html', attributes: []},
{name: 'std.experimental.allocator.gc_allocator.GCAllocator.alignment', kind: "enummemberdeclaration", path: './std/experimental/allocator/gc_allocator/gc_allocator.alignment.html', attributes: []},
{name: 'std.experimental.allocator.gc_allocator.GCAllocator.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/gc_allocator/gc_allocator.allocate.html', attributes: ["pure", "nothrow", "trusted", "const", "shared"]},
{name: 'std.experimental.allocator.gc_allocator.GCAllocator.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/gc_allocator/gc_allocator.deallocate.html', attributes: ["pure", "nothrow", "nogc", "const", "shared"]},
{name: 'std.experimental.allocator.gc_allocator.GCAllocator.expand', kind: "functiondeclaration", path: './std/experimental/allocator/gc_allocator/gc_allocator.expand.html', attributes: ["pure", "nothrow", "trusted", "const", "shared"]},
{name: 'std.experimental.allocator.gc_allocator.GCAllocator.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/gc_allocator/gc_allocator.good_alloc_size.html', attributes: ["pure", "nothrow", "nogc", "safe", "const", "shared"]},
{name: 'std.experimental.allocator.gc_allocator.GCAllocator.instance', kind: "variabledeclaration", path: './std/experimental/allocator/gc_allocator/gc_allocator.instance.html', attributes: []},
{name: 'std.experimental.allocator.gc_allocator.GCAllocator.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/gc_allocator/gc_allocator.reallocate.html', attributes: ["pure", "nothrow", "const", "shared"]},
{name: 'std.experimental.allocator.gc_allocator.GCAllocator.resolveInternalPointer', kind: "functiondeclaration", path: './std/experimental/allocator/gc_allocator/gc_allocator.resolve_internal_pointer.html', attributes: ["pure", "nothrow", "nogc", "trusted", "const", "shared"]},
{name: 'std.experimental.allocator.mallocator', kind: "module", path: './std/experimental/allocator/mallocator.html', attributes: []},
{name: 'std.experimental.allocator.mallocator.AlignedMallocator', kind: "structdeclaration", path: './std/experimental/allocator/mallocator/aligned_mallocator.html', attributes: []},
{name: 'std.experimental.allocator.mallocator.AlignedMallocator.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/mallocator/aligned_mallocator.aligned_allocate.html', attributes: ["nothrow", "nogc", "trusted", "shared"]},
{name: 'std.experimental.allocator.mallocator.AlignedMallocator.alignedReallocate', kind: "functiondeclaration", path: './std/experimental/allocator/mallocator/aligned_mallocator.aligned_reallocate.html', attributes: ["nothrow", "nogc", "shared"]},
{name: 'std.experimental.allocator.mallocator.AlignedMallocator.alignment', kind: "enummemberdeclaration", path: './std/experimental/allocator/mallocator/aligned_mallocator.alignment.html', attributes: []},
{name: 'std.experimental.allocator.mallocator.AlignedMallocator.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/mallocator/aligned_mallocator.allocate.html', attributes: ["nothrow", "nogc", "trusted", "shared"]},
{name: 'std.experimental.allocator.mallocator.AlignedMallocator.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/mallocator/aligned_mallocator.deallocate.html', attributes: ["nothrow", "nogc", "shared"]},
{name: 'std.experimental.allocator.mallocator.AlignedMallocator.instance', kind: "variabledeclaration", path: './std/experimental/allocator/mallocator/aligned_mallocator.instance.html', attributes: []},
{name: 'std.experimental.allocator.mallocator.AlignedMallocator.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/mallocator/aligned_mallocator.reallocate.html', attributes: ["nothrow", "nogc", "shared"]},
{name: 'std.experimental.allocator.mallocator.Mallocator', kind: "structdeclaration", path: './std/experimental/allocator/mallocator/mallocator.html', attributes: []},
{name: 'std.experimental.allocator.mallocator.Mallocator.alignment', kind: "enummemberdeclaration", path: './std/experimental/allocator/mallocator/mallocator.alignment.html', attributes: []},
{name: 'std.experimental.allocator.mallocator.Mallocator.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/mallocator/mallocator.allocate.html', attributes: ["pure", "nothrow", "nogc", "trusted", "shared"]},
{name: 'std.experimental.allocator.mallocator.Mallocator.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/mallocator/mallocator.deallocate.html', attributes: ["pure", "nothrow", "nogc", "shared"]},
{name: 'std.experimental.allocator.mallocator.Mallocator.instance', kind: "variabledeclaration", path: './std/experimental/allocator/mallocator/mallocator.instance.html', attributes: []},
{name: 'std.experimental.allocator.mallocator.Mallocator.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/mallocator/mallocator.reallocate.html', attributes: ["pure", "nothrow", "nogc", "shared"]},
{name: 'std.experimental.allocator.mmap_allocator', kind: "module", path: './std/experimental/allocator/mmap_allocator.html', attributes: []},
{name: 'std.experimental.allocator.mmap_allocator.MmapAllocator', kind: "structdeclaration", path: './std/experimental/allocator/mmap_allocator/mmap_allocator.html', attributes: []},
{name: 'std.experimental.allocator.mmap_allocator.MmapAllocator.alignment', kind: "enummemberdeclaration", path: './std/experimental/allocator/mmap_allocator/mmap_allocator.alignment.html', attributes: []},
{name: 'std.experimental.allocator.mmap_allocator.MmapAllocator.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/mmap_allocator/mmap_allocator.allocate.html', attributes: ["pure", "nothrow", "nogc", "safe", "const", "shared"]},
{name: 'std.experimental.allocator.mmap_allocator.MmapAllocator.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/mmap_allocator/mmap_allocator.deallocate.html', attributes: ["pure", "nothrow", "nogc", "const", "shared"]},
{name: 'std.experimental.allocator.mmap_allocator.MmapAllocator.instance', kind: "variabledeclaration", path: './std/experimental/allocator/mmap_allocator/mmap_allocator.instance.html', attributes: []},
{name: 'std.experimental.allocator.showcase', kind: "module", path: './std/experimental/allocator/showcase.html', attributes: []},
{name: 'std.experimental.allocator.showcase.mmapRegionList', kind: "functiondeclaration", path: './std/experimental/allocator/showcase/mmap_region_list.html', attributes: ["auto"]},
{name: 'std.experimental.allocator.showcase.StackFront', kind: "aliasdeclaration", path: './std/experimental/allocator/showcase/stack_front.html', attributes: []},
{name: 'std.experimental.allocator.typed', kind: "module", path: './std/experimental/allocator/typed.html', attributes: []},
{name: 'std.experimental.allocator.typed.AllocFlag', kind: "enumdeclaration", path: './std/experimental/allocator/typed/alloc_flag.html', attributes: []},
{name: 'std.experimental.allocator.typed.AllocFlag.fixedSize', kind: "enummemberdeclaration", path: './std/experimental/allocator/typed/alloc_flag.html#fixedSize', attributes: []},
{name: 'std.experimental.allocator.typed.AllocFlag.hasNoIndirections', kind: "enummemberdeclaration", path: './std/experimental/allocator/typed/alloc_flag.html#hasNoIndirections', attributes: []},
{name: 'std.experimental.allocator.typed.AllocFlag.immutableShared', kind: "enummemberdeclaration", path: './std/experimental/allocator/typed/alloc_flag.html#immutableShared', attributes: []},
{name: 'std.experimental.allocator.typed.AllocFlag.threadLocal', kind: "enummemberdeclaration", path: './std/experimental/allocator/typed/alloc_flag.html#threadLocal', attributes: []},
{name: 'std.experimental.allocator.typed.TypedAllocator', kind: "structdeclaration", path: './std/experimental/allocator/typed/typed_allocator.html', attributes: []},
{name: 'std.experimental.allocator.typed.TypedAllocator.allocatorFor', kind: "functiondeclaration", path: './std/experimental/allocator/typed/typed_allocator.allocator_for.html', attributes: ["auto", "ref"]},
{name: 'std.experimental.allocator.typed.TypedAllocator.dispose', kind: "functiondeclaration", path: './std/experimental/allocator/typed/typed_allocator.dispose.html', attributes: []},
{name: 'std.experimental.allocator.typed.TypedAllocator.expandArray', kind: "functiondeclaration", path: './std/experimental/allocator/typed/typed_allocator.expand_array.html', attributes: []},
{name: 'std.experimental.allocator.typed.TypedAllocator.make', kind: "functiondeclaration", path: './std/experimental/allocator/typed/typed_allocator.make.html', attributes: ["auto"]},
{name: 'std.experimental.allocator.typed.TypedAllocator.makeArray', kind: "functiondeclaration", path: './std/experimental/allocator/typed/typed_allocator.make_array.html', attributes: []},
{name: 'std.experimental.allocator.typed.TypedAllocator.shrinkArray', kind: "functiondeclaration", path: './std/experimental/allocator/typed/typed_allocator.shrink_array.html', attributes: []},
{name: 'std.experimental.allocator.typed.TypedAllocator.type2flags', kind: "functiondeclaration", path: './std/experimental/allocator/typed/typed_allocator.type2flags.html', attributes: []},
{name: 'std.experimental.logger.core', kind: "module", path: './std/experimental/logger/core.html', attributes: []},
{name: 'std.experimental.logger.core.critical', kind: "aliasdeclaration", path: './std/experimental/logger/core/critical.html', attributes: []},
{name: 'std.experimental.logger.core.criticalf', kind: "aliasdeclaration", path: './std/experimental/logger/core/criticalf.html', attributes: []},
{name: 'std.experimental.logger.core.defaultLogFunction', kind: "templatedeclaration", path: './std/experimental/logger/core/default_log_function.html', attributes: []},
{name: 'std.experimental.logger.core.defaultLogFunction.defaultLogFunction', kind: "functiondeclaration", path: './std/experimental/logger/core/default_log_function.default_log_function.html', attributes: []},
{name: 'std.experimental.logger.core.defaultLogFunctionf', kind: "templatedeclaration", path: './std/experimental/logger/core/default_log_functionf.html', attributes: []},
{name: 'std.experimental.logger.core.defaultLogFunctionf.defaultLogFunctionf', kind: "functiondeclaration", path: './std/experimental/logger/core/default_log_functionf.default_log_functionf.html', attributes: []},
{name: 'std.experimental.logger.core.error', kind: "aliasdeclaration", path: './std/experimental/logger/core/error.html', attributes: []},
{name: 'std.experimental.logger.core.errorf', kind: "aliasdeclaration", path: './std/experimental/logger/core/errorf.html', attributes: []},
{name: 'std.experimental.logger.core.fatal', kind: "aliasdeclaration", path: './std/experimental/logger/core/fatal.html', attributes: []},
{name: 'std.experimental.logger.core.fatalf', kind: "aliasdeclaration", path: './std/experimental/logger/core/fatalf.html', attributes: []},
{name: 'std.experimental.logger.core.globalLogLevel', kind: "functiondeclaration", path: './std/experimental/logger/core/global_log_level.html', attributes: ["property", "nogc", "safe"]},
{name: 'std.experimental.logger.core.info', kind: "aliasdeclaration", path: './std/experimental/logger/core/info.html', attributes: []},
{name: 'std.experimental.logger.core.infof', kind: "aliasdeclaration", path: './std/experimental/logger/core/infof.html', attributes: []},
{name: 'std.experimental.logger.core.isLoggingActive', kind: "enummemberdeclaration", path: './std/experimental/logger/core/is_logging_active.html', attributes: []},
{name: 'std.experimental.logger.core.isLoggingActiveAt', kind: "enummemberdeclaration", path: './std/experimental/logger/core/is_logging_active_at.html', attributes: []},
{name: 'std.experimental.logger.core.isLoggingEnabled', kind: "functiondeclaration", path: './std/experimental/logger/core/is_logging_enabled.html', attributes: ["safe"]},
{name: 'std.experimental.logger.core.log', kind: "functiondeclaration", path: './std/experimental/logger/core/log.html', attributes: []},
{name: 'std.experimental.logger.core.logf', kind: "functiondeclaration", path: './std/experimental/logger/core/logf.html', attributes: []},
{name: 'std.experimental.logger.core.Logger', kind: "classdeclaration", path: './std/experimental/logger/core/logger.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.critical', kind: "aliasdeclaration", path: './std/experimental/logger/core/logger.critical.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.criticalf', kind: "aliasdeclaration", path: './std/experimental/logger/core/logger.criticalf.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.error', kind: "aliasdeclaration", path: './std/experimental/logger/core/logger.error.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.errorf', kind: "aliasdeclaration", path: './std/experimental/logger/core/logger.errorf.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.fatal', kind: "aliasdeclaration", path: './std/experimental/logger/core/logger.fatal.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.fatalf', kind: "aliasdeclaration", path: './std/experimental/logger/core/logger.fatalf.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.fatalHandler', kind: "functiondeclaration", path: './std/experimental/logger/core/logger.fatal_handler.html', attributes: ["final", "property", "nogc", "safe"]},
{name: 'std.experimental.logger.core.Logger.forwardMsg', kind: "functiondeclaration", path: './std/experimental/logger/core/logger.forward_msg.html', attributes: ["trusted"]},
{name: 'std.experimental.logger.core.Logger.info', kind: "aliasdeclaration", path: './std/experimental/logger/core/logger.info.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.infof', kind: "aliasdeclaration", path: './std/experimental/logger/core/logger.infof.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.log', kind: "functiondeclaration", path: './std/experimental/logger/core/logger.log.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.logf', kind: "functiondeclaration", path: './std/experimental/logger/core/logger.logf.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.logLevel', kind: "functiondeclaration", path: './std/experimental/logger/core/logger.log_level.html', attributes: ["final", "pure", "property", "nogc", "safe", "const"]},
{name: 'std.experimental.logger.core.Logger.memLogFunctions', kind: "templatedeclaration", path: './std/experimental/logger/core/logger.mem_log_functions.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.memLogFunctions.logImpl', kind: "functiondeclaration", path: './std/experimental/logger/core/logger.mem_log_functions.log_impl.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.memLogFunctions.logImplf', kind: "functiondeclaration", path: './std/experimental/logger/core/logger.mem_log_functions.log_implf.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.this', kind: "functiondeclaration", path: './std/experimental/logger/core/logger.this.html', attributes: ["safe"]},
{name: 'std.experimental.logger.core.Logger.trace', kind: "aliasdeclaration", path: './std/experimental/logger/core/logger.trace.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.tracef', kind: "aliasdeclaration", path: './std/experimental/logger/core/logger.tracef.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.warning', kind: "aliasdeclaration", path: './std/experimental/logger/core/logger.warning.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.warningf', kind: "aliasdeclaration", path: './std/experimental/logger/core/logger.warningf.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.finishLogMsg', kind: "functiondeclaration", path: './std/experimental/logger/core/logger.finish_log_msg.html', attributes: ["safe"]},
{name: 'std.experimental.logger.core.Logger.LogEntry', kind: "structdeclaration", path: './std/experimental/logger/core/logger.log_entry.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.LogEntry.file', kind: "variabledeclaration", path: './std/experimental/logger/core/logger.log_entry.file.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.LogEntry.funcName', kind: "variabledeclaration", path: './std/experimental/logger/core/logger.log_entry.func_name.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.LogEntry.line', kind: "variabledeclaration", path: './std/experimental/logger/core/logger.log_entry.line.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.LogEntry.logger', kind: "variabledeclaration", path: './std/experimental/logger/core/logger.log_entry.logger.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.LogEntry.logLevel', kind: "variabledeclaration", path: './std/experimental/logger/core/logger.log_entry.log_level.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.LogEntry.moduleName', kind: "variabledeclaration", path: './std/experimental/logger/core/logger.log_entry.module_name.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.LogEntry.msg', kind: "variabledeclaration", path: './std/experimental/logger/core/logger.log_entry.msg.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.LogEntry.prettyFuncName', kind: "variabledeclaration", path: './std/experimental/logger/core/logger.log_entry.pretty_func_name.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.LogEntry.threadId', kind: "variabledeclaration", path: './std/experimental/logger/core/logger.log_entry.thread_id.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.LogEntry.timestamp', kind: "variabledeclaration", path: './std/experimental/logger/core/logger.log_entry.timestamp.html', attributes: []},
{name: 'std.experimental.logger.core.Logger.logMsgPart', kind: "functiondeclaration", path: './std/experimental/logger/core/logger.log_msg_part.html', attributes: ["safe"]},
{name: 'std.experimental.logger.core.Logger.writeLogMsg', kind: "functiondeclaration", path: './std/experimental/logger/core/logger.write_log_msg.html', attributes: ["abstract", "safe"]},
{name: 'std.experimental.logger.core.LogLevel', kind: "enumdeclaration", path: './std/experimental/logger/core/log_level.html', attributes: []},
{name: 'std.experimental.logger.core.LogLevel.all', kind: "enummemberdeclaration", path: './std/experimental/logger/core/log_level.html#all', attributes: []},
{name: 'std.experimental.logger.core.LogLevel.critical', kind: "enummemberdeclaration", path: './std/experimental/logger/core/log_level.html#critical', attributes: []},
{name: 'std.experimental.logger.core.LogLevel.error', kind: "enummemberdeclaration", path: './std/experimental/logger/core/log_level.html#error', attributes: []},
{name: 'std.experimental.logger.core.LogLevel.fatal', kind: "enummemberdeclaration", path: './std/experimental/logger/core/log_level.html#fatal', attributes: []},
{name: 'std.experimental.logger.core.LogLevel.info', kind: "enummemberdeclaration", path: './std/experimental/logger/core/log_level.html#info', attributes: []},
{name: 'std.experimental.logger.core.LogLevel.off', kind: "enummemberdeclaration", path: './std/experimental/logger/core/log_level.html#off', attributes: []},
{name: 'std.experimental.logger.core.LogLevel.trace', kind: "enummemberdeclaration", path: './std/experimental/logger/core/log_level.html#trace', attributes: []},
{name: 'std.experimental.logger.core.LogLevel.warning', kind: "enummemberdeclaration", path: './std/experimental/logger/core/log_level.html#warning', attributes: []},
{name: 'std.experimental.logger.core.moduleLogLevel', kind: "enummemberdeclaration", path: './std/experimental/logger/core/module_log_level.html', attributes: []},
{name: 'std.experimental.logger.core.sharedLog', kind: "functiondeclaration", path: './std/experimental/logger/core/shared_log.html', attributes: ["property", "safe"]},
{name: 'std.experimental.logger.core.StdForwardLogger', kind: "classdeclaration", path: './std/experimental/logger/core/std_forward_logger.html', attributes: []},
{name: 'std.experimental.logger.core.StdForwardLogger.this', kind: "functiondeclaration", path: './std/experimental/logger/core/std_forward_logger.this.html', attributes: ["safe"]},
{name: 'std.experimental.logger.core.stdThreadLocalLog', kind: "functiondeclaration", path: './std/experimental/logger/core/std_thread_local_log.html', attributes: ["property", "safe"]},
{name: 'std.experimental.logger.core.trace', kind: "aliasdeclaration", path: './std/experimental/logger/core/trace.html', attributes: []},
{name: 'std.experimental.logger.core.tracef', kind: "aliasdeclaration", path: './std/experimental/logger/core/tracef.html', attributes: []},
{name: 'std.experimental.logger.core.warning', kind: "aliasdeclaration", path: './std/experimental/logger/core/warning.html', attributes: []},
{name: 'std.experimental.logger.core.warningf', kind: "aliasdeclaration", path: './std/experimental/logger/core/warningf.html', attributes: []},
{name: 'std.experimental.logger.filelogger', kind: "module", path: './std/experimental/logger/filelogger.html', attributes: []},
{name: 'std.experimental.logger.filelogger.CreateFolder', kind: "aliasdeclaration", path: './std/experimental/logger/filelogger/create_folder.html', attributes: []},
{name: 'std.experimental.logger.filelogger.FileLogger', kind: "classdeclaration", path: './std/experimental/logger/filelogger/file_logger.html', attributes: []},
{name: 'std.experimental.logger.filelogger.FileLogger.file', kind: "functiondeclaration", path: './std/experimental/logger/filelogger/file_logger.file.html', attributes: ["property", "safe"]},
{name: 'std.experimental.logger.filelogger.FileLogger.getFilename', kind: "functiondeclaration", path: './std/experimental/logger/filelogger/file_logger.get_filename.html', attributes: []},
{name: 'std.experimental.logger.filelogger.FileLogger.this', kind: "functiondeclaration", path: './std/experimental/logger/filelogger/file_logger.this.html', attributes: ["safe"]},
{name: 'std.experimental.logger.filelogger.FileLogger.file_', kind: "variabledeclaration", path: './std/experimental/logger/filelogger/file_logger.file_.html', attributes: []},
{name: 'std.experimental.logger.filelogger.FileLogger.filename', kind: "variabledeclaration", path: './std/experimental/logger/filelogger/file_logger.filename.html', attributes: []},
{name: 'std.experimental.logger.multilogger', kind: "module", path: './std/experimental/logger/multilogger.html', attributes: []},
{name: 'std.experimental.logger.multilogger.MultiLogger', kind: "classdeclaration", path: './std/experimental/logger/multilogger/multi_logger.html', attributes: []},
{name: 'std.experimental.logger.multilogger.MultiLogger.insertLogger', kind: "functiondeclaration", path: './std/experimental/logger/multilogger/multi_logger.insert_logger.html', attributes: ["safe"]},
{name: 'std.experimental.logger.multilogger.MultiLogger.removeLogger', kind: "functiondeclaration", path: './std/experimental/logger/multilogger/multi_logger.remove_logger.html', attributes: ["safe"]},
{name: 'std.experimental.logger.multilogger.MultiLogger.this', kind: "functiondeclaration", path: './std/experimental/logger/multilogger/multi_logger.this.html', attributes: ["safe"]},
{name: 'std.experimental.logger.multilogger.MultiLogger.logger', kind: "variabledeclaration", path: './std/experimental/logger/multilogger/multi_logger.logger.html', attributes: []},
{name: 'std.experimental.logger.multilogger.MultiLoggerEntry', kind: "structdeclaration", path: './std/experimental/logger/multilogger/multi_logger_entry.html', attributes: []},
{name: 'std.experimental.logger.multilogger.MultiLoggerEntry.logger', kind: "variabledeclaration", path: './std/experimental/logger/multilogger/multi_logger_entry.logger.html', attributes: []},
{name: 'std.experimental.logger.multilogger.MultiLoggerEntry.name', kind: "variabledeclaration", path: './std/experimental/logger/multilogger/multi_logger_entry.name.html', attributes: []},
{name: 'std.experimental.logger.nulllogger', kind: "module", path: './std/experimental/logger/nulllogger.html', attributes: []},
{name: 'std.experimental.logger.nulllogger.NullLogger', kind: "classdeclaration", path: './std/experimental/logger/nulllogger/null_logger.html', attributes: []},
{name: 'std.experimental.logger.nulllogger.NullLogger.this', kind: "functiondeclaration", path: './std/experimental/logger/nulllogger/null_logger.this.html', attributes: ["safe"]},
{name: 'std.experimental.allocator', kind: "module", path: './std/experimental/allocator.html', attributes: []},
{name: 'std.experimental.allocator.allocatorObject', kind: "functiondeclaration", path: './std/experimental/allocator/allocator_object.html', attributes: []},
{name: 'std.experimental.allocator.CAllocatorImpl', kind: "classdeclaration", path: './std/experimental/allocator/c_allocator_impl.html', attributes: []},
{name: 'std.experimental.allocator.CAllocatorImpl.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/c_allocator_impl.aligned_allocate.html', attributes: ["override"]},
{name: 'std.experimental.allocator.CAllocatorImpl.alignedReallocate', kind: "functiondeclaration", path: './std/experimental/allocator/c_allocator_impl.aligned_reallocate.html', attributes: []},
{name: 'std.experimental.allocator.CAllocatorImpl.alignment', kind: "functiondeclaration", path: './std/experimental/allocator/c_allocator_impl.alignment.html', attributes: ["override", "property"]},
{name: 'std.experimental.allocator.CAllocatorImpl.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/c_allocator_impl.allocate.html', attributes: ["override"]},
{name: 'std.experimental.allocator.CAllocatorImpl.allocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/c_allocator_impl.allocate_all.html', attributes: ["override"]},
{name: 'std.experimental.allocator.CAllocatorImpl.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/c_allocator_impl.deallocate.html', attributes: ["override"]},
{name: 'std.experimental.allocator.CAllocatorImpl.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/c_allocator_impl.deallocate_all.html', attributes: ["override"]},
{name: 'std.experimental.allocator.CAllocatorImpl.empty', kind: "functiondeclaration", path: './std/experimental/allocator/c_allocator_impl.empty.html', attributes: ["override"]},
{name: 'std.experimental.allocator.CAllocatorImpl.expand', kind: "functiondeclaration", path: './std/experimental/allocator/c_allocator_impl.expand.html', attributes: ["override"]},
{name: 'std.experimental.allocator.CAllocatorImpl.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/c_allocator_impl.good_alloc_size.html', attributes: ["override"]},
{name: 'std.experimental.allocator.CAllocatorImpl.impl', kind: "functiondeclaration", path: './std/experimental/allocator/c_allocator_impl.impl.html', attributes: ["pure", "nogc", "ref", "safe"]},
{name: 'std.experimental.allocator.CAllocatorImpl.owns', kind: "functiondeclaration", path: './std/experimental/allocator/c_allocator_impl.owns.html', attributes: ["override"]},
{name: 'std.experimental.allocator.CAllocatorImpl.pimpl', kind: "variabledeclaration", path: './std/experimental/allocator/c_allocator_impl.pimpl.html', attributes: []},
{name: 'std.experimental.allocator.CAllocatorImpl.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/c_allocator_impl.reallocate.html', attributes: ["override"]},
{name: 'std.experimental.allocator.CAllocatorImpl.this', kind: "functiondeclaration", path: './std/experimental/allocator/c_allocator_impl.this.html', attributes: ["pure", "nogc", "safe"]},
{name: 'std.experimental.allocator.CSharedAllocatorImpl', kind: "classdeclaration", path: './std/experimental/allocator/c_shared_allocator_impl.html', attributes: []},
{name: 'std.experimental.allocator.CSharedAllocatorImpl.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/c_shared_allocator_impl.aligned_allocate.html', attributes: ["override", "shared"]},
{name: 'std.experimental.allocator.CSharedAllocatorImpl.alignedReallocate', kind: "functiondeclaration", path: './std/experimental/allocator/c_shared_allocator_impl.aligned_reallocate.html', attributes: ["shared"]},
{name: 'std.experimental.allocator.CSharedAllocatorImpl.alignment', kind: "functiondeclaration", path: './std/experimental/allocator/c_shared_allocator_impl.alignment.html', attributes: ["override", "shared", "property"]},
{name: 'std.experimental.allocator.CSharedAllocatorImpl.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/c_shared_allocator_impl.allocate.html', attributes: ["override", "shared"]},
{name: 'std.experimental.allocator.CSharedAllocatorImpl.allocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/c_shared_allocator_impl.allocate_all.html', attributes: ["override", "shared"]},
{name: 'std.experimental.allocator.CSharedAllocatorImpl.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/c_shared_allocator_impl.deallocate.html', attributes: ["override", "shared"]},
{name: 'std.experimental.allocator.CSharedAllocatorImpl.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/c_shared_allocator_impl.deallocate_all.html', attributes: ["override", "shared"]},
{name: 'std.experimental.allocator.CSharedAllocatorImpl.empty', kind: "functiondeclaration", path: './std/experimental/allocator/c_shared_allocator_impl.empty.html', attributes: ["override", "shared"]},
{name: 'std.experimental.allocator.CSharedAllocatorImpl.expand', kind: "functiondeclaration", path: './std/experimental/allocator/c_shared_allocator_impl.expand.html', attributes: ["override", "shared"]},
{name: 'std.experimental.allocator.CSharedAllocatorImpl.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/c_shared_allocator_impl.good_alloc_size.html', attributes: ["override", "shared"]},
{name: 'std.experimental.allocator.CSharedAllocatorImpl.impl', kind: "functiondeclaration", path: './std/experimental/allocator/c_shared_allocator_impl.impl.html', attributes: ["shared", "pure", "nogc", "ref", "safe"]},
{name: 'std.experimental.allocator.CSharedAllocatorImpl.owns', kind: "functiondeclaration", path: './std/experimental/allocator/c_shared_allocator_impl.owns.html', attributes: ["override", "shared"]},
{name: 'std.experimental.allocator.CSharedAllocatorImpl.pimpl', kind: "variabledeclaration", path: './std/experimental/allocator/c_shared_allocator_impl.pimpl.html', attributes: []},
{name: 'std.experimental.allocator.CSharedAllocatorImpl.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/c_shared_allocator_impl.reallocate.html', attributes: ["override", "shared"]},
{name: 'std.experimental.allocator.CSharedAllocatorImpl.this', kind: "functiondeclaration", path: './std/experimental/allocator/c_shared_allocator_impl.this.html', attributes: ["shared", "pure", "nogc", "safe"]},
{name: 'std.experimental.allocator.dispose', kind: "functiondeclaration", path: './std/experimental/allocator/dispose.html', attributes: []},
{name: 'std.experimental.allocator.disposeMultidimensionalArray', kind: "functiondeclaration", path: './std/experimental/allocator/dispose_multidimensional_array.html', attributes: []},
{name: 'std.experimental.allocator.expandArray', kind: "functiondeclaration", path: './std/experimental/allocator/expand_array.html', attributes: []},
{name: 'std.experimental.allocator.IAllocator', kind: "interfacedeclaration", path: './std/experimental/allocator/i_allocator.html', attributes: []},
{name: 'std.experimental.allocator.IAllocator.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/i_allocator.aligned_allocate.html', attributes: ["abstract"]},
{name: 'std.experimental.allocator.IAllocator.alignedReallocate', kind: "functiondeclaration", path: './std/experimental/allocator/i_allocator.aligned_reallocate.html', attributes: ["abstract"]},
{name: 'std.experimental.allocator.IAllocator.alignment', kind: "functiondeclaration", path: './std/experimental/allocator/i_allocator.alignment.html', attributes: ["abstract", "nothrow", "property"]},
{name: 'std.experimental.allocator.IAllocator.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/i_allocator.allocate.html', attributes: ["abstract"]},
{name: 'std.experimental.allocator.IAllocator.allocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/i_allocator.allocate_all.html', attributes: ["abstract"]},
{name: 'std.experimental.allocator.IAllocator.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/i_allocator.deallocate.html', attributes: ["abstract"]},
{name: 'std.experimental.allocator.IAllocator.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/i_allocator.deallocate_all.html', attributes: ["abstract"]},
{name: 'std.experimental.allocator.IAllocator.decRef', kind: "functiondeclaration", path: './std/experimental/allocator/i_allocator.dec_ref.html', attributes: ["abstract", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.IAllocator.empty', kind: "functiondeclaration", path: './std/experimental/allocator/i_allocator.empty.html', attributes: ["abstract"]},
{name: 'std.experimental.allocator.IAllocator.expand', kind: "functiondeclaration", path: './std/experimental/allocator/i_allocator.expand.html', attributes: ["abstract"]},
{name: 'std.experimental.allocator.IAllocator.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/i_allocator.good_alloc_size.html', attributes: ["abstract"]},
{name: 'std.experimental.allocator.IAllocator.incRef', kind: "functiondeclaration", path: './std/experimental/allocator/i_allocator.inc_ref.html', attributes: ["abstract", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.experimental.allocator.IAllocator.owns', kind: "functiondeclaration", path: './std/experimental/allocator/i_allocator.owns.html', attributes: ["abstract"]},
{name: 'std.experimental.allocator.IAllocator.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/i_allocator.reallocate.html', attributes: ["abstract"]},
{name: 'std.experimental.allocator.IAllocator.resolveInternalPointer', kind: "functiondeclaration", path: './std/experimental/allocator/i_allocator.resolve_internal_pointer.html', attributes: ["abstract"]},
{name: 'std.experimental.allocator.ISharedAllocator', kind: "interfacedeclaration", path: './std/experimental/allocator/i_shared_allocator.html', attributes: []},
{name: 'std.experimental.allocator.ISharedAllocator.alignedAllocate', kind: "functiondeclaration", path: './std/experimental/allocator/i_shared_allocator.aligned_allocate.html', attributes: ["abstract", "nothrow", "shared"]},
{name: 'std.experimental.allocator.ISharedAllocator.alignedReallocate', kind: "functiondeclaration", path: './std/experimental/allocator/i_shared_allocator.aligned_reallocate.html', attributes: ["abstract", "nothrow", "shared"]},
{name: 'std.experimental.allocator.ISharedAllocator.alignment', kind: "functiondeclaration", path: './std/experimental/allocator/i_shared_allocator.alignment.html', attributes: ["abstract", "nothrow", "property", "shared"]},
{name: 'std.experimental.allocator.ISharedAllocator.allocate', kind: "functiondeclaration", path: './std/experimental/allocator/i_shared_allocator.allocate.html', attributes: ["abstract", "nothrow", "shared"]},
{name: 'std.experimental.allocator.ISharedAllocator.allocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/i_shared_allocator.allocate_all.html', attributes: ["abstract", "nothrow", "shared"]},
{name: 'std.experimental.allocator.ISharedAllocator.deallocate', kind: "functiondeclaration", path: './std/experimental/allocator/i_shared_allocator.deallocate.html', attributes: ["abstract", "nothrow", "shared"]},
{name: 'std.experimental.allocator.ISharedAllocator.deallocateAll', kind: "functiondeclaration", path: './std/experimental/allocator/i_shared_allocator.deallocate_all.html', attributes: ["abstract", "nothrow", "shared"]},
{name: 'std.experimental.allocator.ISharedAllocator.decRef', kind: "functiondeclaration", path: './std/experimental/allocator/i_shared_allocator.dec_ref.html', attributes: ["abstract", "pure", "nothrow", "nogc", "safe", "shared"]},
{name: 'std.experimental.allocator.ISharedAllocator.empty', kind: "functiondeclaration", path: './std/experimental/allocator/i_shared_allocator.empty.html', attributes: ["abstract", "nothrow", "shared"]},
{name: 'std.experimental.allocator.ISharedAllocator.expand', kind: "functiondeclaration", path: './std/experimental/allocator/i_shared_allocator.expand.html', attributes: ["abstract", "nothrow", "shared"]},
{name: 'std.experimental.allocator.ISharedAllocator.goodAllocSize', kind: "functiondeclaration", path: './std/experimental/allocator/i_shared_allocator.good_alloc_size.html', attributes: ["abstract", "nothrow", "shared"]},
{name: 'std.experimental.allocator.ISharedAllocator.incRef', kind: "functiondeclaration", path: './std/experimental/allocator/i_shared_allocator.inc_ref.html', attributes: ["abstract", "pure", "nothrow", "nogc", "safe", "shared"]},
{name: 'std.experimental.allocator.ISharedAllocator.owns', kind: "functiondeclaration", path: './std/experimental/allocator/i_shared_allocator.owns.html', attributes: ["abstract", "nothrow", "shared"]},
{name: 'std.experimental.allocator.ISharedAllocator.reallocate', kind: "functiondeclaration", path: './std/experimental/allocator/i_shared_allocator.reallocate.html', attributes: ["abstract", "nothrow", "shared"]},
{name: 'std.experimental.allocator.ISharedAllocator.resolveInternalPointer', kind: "functiondeclaration", path: './std/experimental/allocator/i_shared_allocator.resolve_internal_pointer.html', attributes: ["abstract", "nothrow", "shared"]},
{name: 'std.experimental.allocator.make', kind: "functiondeclaration", path: './std/experimental/allocator/make.html', attributes: ["auto"]},
{name: 'std.experimental.allocator.makeArray', kind: "functiondeclaration", path: './std/experimental/allocator/make_array.html', attributes: []},
{name: 'std.experimental.allocator.makeMultidimensionalArray', kind: "functiondeclaration", path: './std/experimental/allocator/make_multidimensional_array.html', attributes: ["auto"]},
{name: 'std.experimental.allocator.processAllocator', kind: "functiondeclaration", path: './std/experimental/allocator/process_allocator.html', attributes: ["nothrow", "ref", "property", "nogc", "trusted"]},
{name: 'std.experimental.allocator.RCIAllocator', kind: "structdeclaration", path: './std/experimental/allocator/rci_allocator.html', attributes: []},
{name: 'std.experimental.allocator.RCISharedAllocator', kind: "structdeclaration", path: './std/experimental/allocator/rci_shared_allocator.html', attributes: []},
{name: 'std.experimental.allocator.sharedAllocatorObject', kind: "functiondeclaration", path: './std/experimental/allocator/shared_allocator_object.html', attributes: ["nothrow"]},
{name: 'std.experimental.allocator.shrinkArray', kind: "functiondeclaration", path: './std/experimental/allocator/shrink_array.html', attributes: []},
{name: 'std.experimental.allocator.theAllocator', kind: "functiondeclaration", path: './std/experimental/allocator/the_allocator.html', attributes: ["nothrow", "ref", "property", "nogc", "safe"]},
{name: 'std.experimental.checkedint', kind: "module", path: './std/experimental/checkedint.html', attributes: []},
{name: 'std.experimental.checkedint.Abort', kind: "structdeclaration", path: './std/experimental/checkedint/abort.html', attributes: []},
{name: 'std.experimental.checkedint.Abort.hookOpCmp', kind: "functiondeclaration", path: './std/experimental/checkedint/abort.hook_op_cmp.html', attributes: []},
{name: 'std.experimental.checkedint.Abort.hookOpEquals', kind: "functiondeclaration", path: './std/experimental/checkedint/abort.hook_op_equals.html', attributes: []},
{name: 'std.experimental.checkedint.Abort.onBadCast', kind: "functiondeclaration", path: './std/experimental/checkedint/abort.on_bad_cast.html', attributes: []},
{name: 'std.experimental.checkedint.Abort.onLowerBound', kind: "functiondeclaration", path: './std/experimental/checkedint/abort.on_lower_bound.html', attributes: []},
{name: 'std.experimental.checkedint.Abort.onOverflow', kind: "functiondeclaration", path: './std/experimental/checkedint/abort.on_overflow.html', attributes: []},
{name: 'std.experimental.checkedint.Abort.onUpperBound', kind: "functiondeclaration", path: './std/experimental/checkedint/abort.on_upper_bound.html', attributes: []},
{name: 'std.experimental.checkedint.Checked', kind: "structdeclaration", path: './std/experimental/checkedint/checked.html', attributes: []},
{name: 'std.experimental.checkedint.Checked.get', kind: "functiondeclaration", path: './std/experimental/checkedint/checked.get.html', attributes: ["auto", "inout"]},
{name: 'std.experimental.checkedint.Checked.hook', kind: "variabledeclaration", path: './std/experimental/checkedint/checked.hook.html', attributes: []},
{name: 'std.experimental.checkedint.Checked.max', kind: "enummemberdeclaration", path: './std/experimental/checkedint/checked.max.html', attributes: []},
{name: 'std.experimental.checkedint.Checked.min', kind: "enummemberdeclaration", path: './std/experimental/checkedint/checked.min.html', attributes: []},
{name: 'std.experimental.checkedint.Checked.opAssign', kind: "functiondeclaration", path: './std/experimental/checkedint/checked.op_assign.html', attributes: []},
{name: 'std.experimental.checkedint.Checked.opBinary', kind: "functiondeclaration", path: './std/experimental/checkedint/checked.op_binary.html', attributes: ["auto"]},
{name: 'std.experimental.checkedint.Checked.opBinaryRight', kind: "functiondeclaration", path: './std/experimental/checkedint/checked.op_binary_right.html', attributes: ["auto"]},
{name: 'std.experimental.checkedint.Checked.opCast', kind: "functiondeclaration", path: './std/experimental/checkedint/checked.op_cast.html', attributes: []},
{name: 'std.experimental.checkedint.Checked.opCmp', kind: "functiondeclaration", path: './std/experimental/checkedint/checked.op_cmp.html', attributes: ["auto"]},
{name: 'std.experimental.checkedint.Checked.opEquals', kind: "functiondeclaration", path: './std/experimental/checkedint/checked.op_equals.html', attributes: []},
{name: 'std.experimental.checkedint.Checked.opOpAssign', kind: "functiondeclaration", path: './std/experimental/checkedint/checked.op_op_assign.html', attributes: ["ref"]},
{name: 'std.experimental.checkedint.Checked.opUnary', kind: "functiondeclaration", path: './std/experimental/checkedint/checked.op_unary.html', attributes: ["auto"]},
{name: 'std.experimental.checkedint.Checked.Representation', kind: "aliasdeclaration", path: './std/experimental/checkedint/checked.representation.html', attributes: []},
{name: 'std.experimental.checkedint.Checked.this', kind: "functiondeclaration", path: './std/experimental/checkedint/checked.this.html', attributes: []},
{name: 'std.experimental.checkedint.Checked.toHash', kind: "functiondeclaration", path: './std/experimental/checkedint/checked.to_hash.html', attributes: ["const", "nothrow", "safe"]},
{name: 'std.experimental.checkedint.checked', kind: "functiondeclaration", path: './std/experimental/checkedint/checked.html', attributes: []},
{name: 'std.experimental.checkedint.isNaN', kind: "functiondeclaration", path: './std/experimental/checkedint/is_nan.html', attributes: []},
{name: 'std.experimental.checkedint.opChecked', kind: "functiondeclaration", path: './std/experimental/checkedint/op_checked.html', attributes: []},
{name: 'std.experimental.checkedint.ProperCompare', kind: "structdeclaration", path: './std/experimental/checkedint/proper_compare.html', attributes: []},
{name: 'std.experimental.checkedint.ProperCompare.hookOpCmp', kind: "functiondeclaration", path: './std/experimental/checkedint/proper_compare.hook_op_cmp.html', attributes: ["auto"]},
{name: 'std.experimental.checkedint.ProperCompare.hookOpEquals', kind: "functiondeclaration", path: './std/experimental/checkedint/proper_compare.hook_op_equals.html', attributes: []},
{name: 'std.experimental.checkedint.Saturate', kind: "structdeclaration", path: './std/experimental/checkedint/saturate.html', attributes: []},
{name: 'std.experimental.checkedint.Saturate.onLowerBound', kind: "functiondeclaration", path: './std/experimental/checkedint/saturate.on_lower_bound.html', attributes: []},
{name: 'std.experimental.checkedint.Saturate.onOverflow', kind: "functiondeclaration", path: './std/experimental/checkedint/saturate.on_overflow.html', attributes: []},
{name: 'std.experimental.checkedint.Saturate.onUpperBound', kind: "functiondeclaration", path: './std/experimental/checkedint/saturate.on_upper_bound.html', attributes: []},
{name: 'std.experimental.checkedint.Throw', kind: "structdeclaration", path: './std/experimental/checkedint/throw.html', attributes: []},
{name: 'std.experimental.checkedint.Throw.CheckFailure', kind: "classdeclaration", path: './std/experimental/checkedint/throw.check_failure.html', attributes: []},
{name: 'object.Throwable.chainTogether', kind: "functiondeclaration", path: './object/throwable.chain_together.html', attributes: ["static", "__future", "pure", "nothrow", "nogc"]},
{name: 'object.Throwable.file', kind: "variabledeclaration", path: './object/throwable.file.html', attributes: []},
{name: 'object.Throwable.info', kind: "variabledeclaration", path: './object/throwable.info.html', attributes: []},
{name: 'object.Throwable.line', kind: "variabledeclaration", path: './object/throwable.line.html', attributes: []},
{name: 'object.Throwable.message', kind: "functiondeclaration", path: './object/throwable.message.html', attributes: ["__future", "const"]},
{name: 'object.Throwable.msg', kind: "variabledeclaration", path: './object/throwable.msg.html', attributes: []},
{name: 'object.Throwable.next', kind: "functiondeclaration", path: './object/throwable.next.html', attributes: ["pure", "nothrow", "property", "nogc", "return", "safe", "inout"]},
{name: 'object.Throwable.opApply', kind: "functiondeclaration", path: './object/throwable.op_apply.html', attributes: []},
{name: 'object.Throwable.refcount', kind: "functiondeclaration", path: './object/throwable.refcount.html', attributes: ["final", "pure", "nothrow", "ref", "nogc"]},
{name: 'object.Throwable.toString', kind: "functiondeclaration", path: './object/throwable.to_string.html', attributes: ["override"]},
{name: 'std.experimental.checkedint.Throw.hookOpCmp', kind: "functiondeclaration", path: './std/experimental/checkedint/throw.hook_op_cmp.html', attributes: []},
{name: 'std.experimental.checkedint.Throw.hookOpEquals', kind: "functiondeclaration", path: './std/experimental/checkedint/throw.hook_op_equals.html', attributes: []},
{name: 'std.experimental.checkedint.Throw.onBadCast', kind: "functiondeclaration", path: './std/experimental/checkedint/throw.on_bad_cast.html', attributes: []},
{name: 'std.experimental.checkedint.Throw.onLowerBound', kind: "functiondeclaration", path: './std/experimental/checkedint/throw.on_lower_bound.html', attributes: []},
{name: 'std.experimental.checkedint.Throw.onOverflow', kind: "functiondeclaration", path: './std/experimental/checkedint/throw.on_overflow.html', attributes: []},
{name: 'std.experimental.checkedint.Throw.onUpperBound', kind: "functiondeclaration", path: './std/experimental/checkedint/throw.on_upper_bound.html', attributes: []},
{name: 'std.experimental.checkedint.Warn', kind: "structdeclaration", path: './std/experimental/checkedint/warn.html', attributes: []},
{name: 'std.experimental.checkedint.Warn.hookOpCmp', kind: "functiondeclaration", path: './std/experimental/checkedint/warn.hook_op_cmp.html', attributes: []},
{name: 'std.experimental.checkedint.Warn.hookOpEquals', kind: "functiondeclaration", path: './std/experimental/checkedint/warn.hook_op_equals.html', attributes: []},
{name: 'std.experimental.checkedint.Warn.onBadCast', kind: "functiondeclaration", path: './std/experimental/checkedint/warn.on_bad_cast.html', attributes: []},
{name: 'std.experimental.checkedint.Warn.onLowerBound', kind: "functiondeclaration", path: './std/experimental/checkedint/warn.on_lower_bound.html', attributes: []},
{name: 'std.experimental.checkedint.Warn.onOverflow', kind: "functiondeclaration", path: './std/experimental/checkedint/warn.on_overflow.html', attributes: []},
{name: 'std.experimental.checkedint.Warn.onUpperBound', kind: "functiondeclaration", path: './std/experimental/checkedint/warn.on_upper_bound.html', attributes: []},
{name: 'std.experimental.checkedint.WithNaN', kind: "structdeclaration", path: './std/experimental/checkedint/with_nan.html', attributes: []},
{name: 'std.experimental.checkedint.WithNaN.defaultValue', kind: "enummemberdeclaration", path: './std/experimental/checkedint/with_nan.default_value.html', attributes: []},
{name: 'std.experimental.checkedint.WithNaN.hookOpBinary', kind: "functiondeclaration", path: './std/experimental/checkedint/with_nan.hook_op_binary.html', attributes: ["auto"]},
{name: 'std.experimental.checkedint.WithNaN.hookOpBinaryRight', kind: "functiondeclaration", path: './std/experimental/checkedint/with_nan.hook_op_binary_right.html', attributes: ["auto"]},
{name: 'std.experimental.checkedint.WithNaN.hookOpCast', kind: "functiondeclaration", path: './std/experimental/checkedint/with_nan.hook_op_cast.html', attributes: []},
{name: 'std.experimental.checkedint.WithNaN.hookOpCmp', kind: "functiondeclaration", path: './std/experimental/checkedint/with_nan.hook_op_cmp.html', attributes: []},
{name: 'std.experimental.checkedint.WithNaN.hookOpEquals', kind: "functiondeclaration", path: './std/experimental/checkedint/with_nan.hook_op_equals.html', attributes: []},
{name: 'std.experimental.checkedint.WithNaN.hookOpOpAssign', kind: "functiondeclaration", path: './std/experimental/checkedint/with_nan.hook_op_op_assign.html', attributes: []},
{name: 'std.experimental.checkedint.WithNaN.hookOpUnary', kind: "functiondeclaration", path: './std/experimental/checkedint/with_nan.hook_op_unary.html', attributes: ["auto"]},
{name: 'std.experimental.checkedint.WithNaN.max', kind: "enummemberdeclaration", path: './std/experimental/checkedint/with_nan.max.html', attributes: []},
{name: 'std.experimental.checkedint.WithNaN.min', kind: "enummemberdeclaration", path: './std/experimental/checkedint/with_nan.min.html', attributes: []},
{name: 'std.experimental.logger', kind: "module", path: './std/experimental/logger.html', attributes: []},
{name: 'std.experimental.typecons', kind: "module", path: './std/experimental/typecons.html', attributes: []},
{name: 'std.experimental.typecons.Final', kind: "aliasdeclaration", path: './std/experimental/typecons/final.html', attributes: []},
{name: 'std.experimental.typecons.makeFinal', kind: "functiondeclaration", path: './std/experimental/typecons/make_final.html', attributes: []},
{name: 'std.experimental.typecons.unwrap', kind: "functiondeclaration", path: './std/experimental/typecons/unwrap.html', attributes: []},
{name: 'std.experimental.typecons.wrap', kind: "templatedeclaration", path: './std/experimental/typecons/wrap.html', attributes: []},
{name: 'std.experimental.typecons.wrap.wrap', kind: "functiondeclaration", path: './std/experimental/typecons/wrap.wrap.html', attributes: ["auto"]},
{name: 'std.net.curl', kind: "module", path: './std/net/curl.html', attributes: []},
{name: 'std.net.curl.AutoProtocol', kind: "structdeclaration", path: './std/net/curl/auto_protocol.html', attributes: []},
{name: 'std.net.curl.byChunk', kind: "functiondeclaration", path: './std/net/curl/by_chunk.html', attributes: ["auto"]},
{name: 'std.net.curl.byChunkAsync', kind: "functiondeclaration", path: './std/net/curl/by_chunk_async.html', attributes: ["auto"]},
{name: 'std.net.curl.byLine', kind: "functiondeclaration", path: './std/net/curl/by_line.html', attributes: ["auto"]},
{name: 'std.net.curl.byLineAsync', kind: "functiondeclaration", path: './std/net/curl/by_line_async.html', attributes: ["auto"]},
{name: 'std.net.curl.connect', kind: "functiondeclaration", path: './std/net/curl/connect.html', attributes: []},
{name: 'std.net.curl.Curl', kind: "structdeclaration", path: './std/net/curl/curl.html', attributes: []},
{name: 'std.net.curl.Curl.clear', kind: "functiondeclaration", path: './std/net/curl/curl.clear.html', attributes: []},
{name: 'std.net.curl.Curl.clearIfSupported', kind: "functiondeclaration", path: './std/net/curl/curl.clear_if_supported.html', attributes: []},
{name: 'std.net.curl.Curl.dup', kind: "functiondeclaration", path: './std/net/curl/curl.dup.html', attributes: []},
{name: 'std.net.curl.Curl.getTiming', kind: "functiondeclaration", path: './std/net/curl/curl.get_timing.html', attributes: []},
{name: 'std.net.curl.Curl.initialize', kind: "functiondeclaration", path: './std/net/curl/curl.initialize.html', attributes: []},
{name: 'std.net.curl.Curl.onProgress', kind: "functiondeclaration", path: './std/net/curl/curl.on_progress.html', attributes: ["property"]},
{name: 'std.net.curl.Curl.onReceive', kind: "functiondeclaration", path: './std/net/curl/curl.on_receive.html', attributes: ["property"]},
{name: 'std.net.curl.Curl.onReceiveHeader', kind: "functiondeclaration", path: './std/net/curl/curl.on_receive_header.html', attributes: ["property"]},
{name: 'std.net.curl.Curl.onSeek', kind: "functiondeclaration", path: './std/net/curl/curl.on_seek.html', attributes: ["property"]},
{name: 'std.net.curl.Curl.onSend', kind: "functiondeclaration", path: './std/net/curl/curl.on_send.html', attributes: ["property"]},
{name: 'std.net.curl.Curl.onSocketOption', kind: "functiondeclaration", path: './std/net/curl/curl.on_socket_option.html', attributes: ["property"]},
{name: 'std.net.curl.Curl.pause', kind: "functiondeclaration", path: './std/net/curl/curl.pause.html', attributes: []},
{name: 'std.net.curl.Curl.perform', kind: "functiondeclaration", path: './std/net/curl/curl.perform.html', attributes: []},
{name: 'std.net.curl.Curl.set', kind: "functiondeclaration", path: './std/net/curl/curl.set.html', attributes: []},
{name: 'std.net.curl.Curl.shutdown', kind: "functiondeclaration", path: './std/net/curl/curl.shutdown.html', attributes: []},
{name: 'std.net.curl.Curl.stopped', kind: "functiondeclaration", path: './std/net/curl/curl.stopped.html', attributes: ["property", "const"]},
{name: 'std.net.curl.CurlCode', kind: "aliasdeclaration", path: './std/net/curl/curl_code.html', attributes: []},
{name: 'std.net.curl.CurlException', kind: "classdeclaration", path: './std/net/curl/curl_exception.html', attributes: []},
{name: 'std.net.curl.CurlException.this', kind: "functiondeclaration", path: './std/net/curl/curl_exception.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.net.curl.CurlTimeoutException', kind: "classdeclaration", path: './std/net/curl/curl_timeout_exception.html', attributes: []},
{name: 'std.net.curl.CurlTimeoutException.this', kind: "functiondeclaration", path: './std/net/curl/curl_timeout_exception.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.net.curl.del', kind: "functiondeclaration", path: './std/net/curl/del.html', attributes: []},
{name: 'std.net.curl.download', kind: "functiondeclaration", path: './std/net/curl/download.html', attributes: []},
{name: 'std.net.curl.FTP', kind: "structdeclaration", path: './std/net/curl/ftp.html', attributes: []},
{name: 'std.net.curl.FTP.addCommand', kind: "functiondeclaration", path: './std/net/curl/ftp.add_command.html', attributes: []},
{name: 'std.net.curl.FTP.clearCommands', kind: "functiondeclaration", path: './std/net/curl/ftp.clear_commands.html', attributes: []},
{name: 'std.net.curl.FTP.connectTimeout', kind: "functiondeclaration", path: './std/net/curl/ftp.connect_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.contentLength', kind: "functiondeclaration", path: './std/net/curl/ftp.content_length.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.CurlProxy', kind: "aliasdeclaration", path: './std/net/curl/ftp.curl_proxy.html', attributes: []},
{name: 'std.net.curl.FTP.dataTimeout', kind: "functiondeclaration", path: './std/net/curl/ftp.data_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.dnsTimeout', kind: "functiondeclaration", path: './std/net/curl/ftp.dns_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.dup', kind: "functiondeclaration", path: './std/net/curl/ftp.dup.html', attributes: []},
{name: 'std.net.curl.FTP.encoding', kind: "functiondeclaration", path: './std/net/curl/ftp.encoding.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.getTiming', kind: "functiondeclaration", path: './std/net/curl/ftp.get_timing.html', attributes: []},
{name: 'std.net.curl.FTP.isStopped', kind: "functiondeclaration", path: './std/net/curl/ftp.is_stopped.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.localPort', kind: "functiondeclaration", path: './std/net/curl/ftp.local_port.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.localPortRange', kind: "functiondeclaration", path: './std/net/curl/ftp.local_port_range.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.netInterface', kind: "functiondeclaration", path: './std/net/curl/ftp.net_interface.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.onProgress', kind: "functiondeclaration", path: './std/net/curl/ftp.on_progress.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.onReceive', kind: "functiondeclaration", path: './std/net/curl/ftp.on_receive.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.onSend', kind: "functiondeclaration", path: './std/net/curl/ftp.on_send.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.opCall', kind: "functiondeclaration", path: './std/net/curl/ftp.op_call.html', attributes: ["static"]},
{name: 'std.net.curl.FTP.operationTimeout', kind: "functiondeclaration", path: './std/net/curl/ftp.operation_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.perform', kind: "functiondeclaration", path: './std/net/curl/ftp.perform.html', attributes: []},
{name: 'std.net.curl.FTP.proxy', kind: "functiondeclaration", path: './std/net/curl/ftp.proxy.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.proxyPort', kind: "functiondeclaration", path: './std/net/curl/ftp.proxy_port.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.proxyType', kind: "functiondeclaration", path: './std/net/curl/ftp.proxy_type.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.requestAbort', kind: "aliasdeclaration", path: './std/net/curl/ftp.request_abort.html', attributes: []},
{name: 'std.net.curl.FTP.requestPause', kind: "aliasdeclaration", path: './std/net/curl/ftp.request_pause.html', attributes: []},
{name: 'std.net.curl.FTP.setAuthentication', kind: "functiondeclaration", path: './std/net/curl/ftp.set_authentication.html', attributes: []},
{name: 'std.net.curl.FTP.setProxyAuthentication', kind: "functiondeclaration", path: './std/net/curl/ftp.set_proxy_authentication.html', attributes: []},
{name: 'std.net.curl.FTP.shutdown', kind: "functiondeclaration", path: './std/net/curl/ftp.shutdown.html', attributes: []},
{name: 'std.net.curl.FTP.tcpNoDelay', kind: "functiondeclaration", path: './std/net/curl/ftp.tcp_no_delay.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.url', kind: "functiondeclaration", path: './std/net/curl/ftp.url.html', attributes: ["property"]},
{name: 'std.net.curl.FTP.verbose', kind: "functiondeclaration", path: './std/net/curl/ftp.verbose.html', attributes: ["property"]},
{name: 'std.net.curl.get', kind: "functiondeclaration", path: './std/net/curl/get.html', attributes: []},
{name: 'std.net.curl.HTTP', kind: "structdeclaration", path: './std/net/curl/http.html', attributes: []},
{name: 'std.net.curl.HTTP.addRequestHeader', kind: "functiondeclaration", path: './std/net/curl/http.add_request_header.html', attributes: []},
{name: 'std.net.curl.HTTP.authenticationMethod', kind: "functiondeclaration", path: './std/net/curl/http.authentication_method.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.AuthMethod', kind: "aliasdeclaration", path: './std/net/curl/http.auth_method.html', attributes: []},
{name: 'std.net.curl.HTTP.caInfo', kind: "functiondeclaration", path: './std/net/curl/http.ca_info.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.clearAllCookies', kind: "functiondeclaration", path: './std/net/curl/http.clear_all_cookies.html', attributes: []},
{name: 'std.net.curl.HTTP.clearRequestHeaders', kind: "functiondeclaration", path: './std/net/curl/http.clear_request_headers.html', attributes: []},
{name: 'std.net.curl.HTTP.clearSessionCookies', kind: "functiondeclaration", path: './std/net/curl/http.clear_session_cookies.html', attributes: []},
{name: 'std.net.curl.HTTP.connectTimeout', kind: "functiondeclaration", path: './std/net/curl/http.connect_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.contentLength', kind: "functiondeclaration", path: './std/net/curl/http.content_length.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.CurlProxy', kind: "aliasdeclaration", path: './std/net/curl/http.curl_proxy.html', attributes: []},
{name: 'std.net.curl.HTTP.dataTimeout', kind: "functiondeclaration", path: './std/net/curl/http.data_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.defaultUserAgent', kind: "functiondeclaration", path: './std/net/curl/http.default_user_agent.html', attributes: ["static", "property"]},
{name: 'std.net.curl.HTTP.dnsTimeout', kind: "functiondeclaration", path: './std/net/curl/http.dns_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.dup', kind: "functiondeclaration", path: './std/net/curl/http.dup.html', attributes: []},
{name: 'std.net.curl.HTTP.flushCookieJar', kind: "functiondeclaration", path: './std/net/curl/http.flush_cookie_jar.html', attributes: []},
{name: 'std.net.curl.HTTP.getTiming', kind: "functiondeclaration", path: './std/net/curl/http.get_timing.html', attributes: []},
{name: 'std.net.curl.HTTP.isStopped', kind: "functiondeclaration", path: './std/net/curl/http.is_stopped.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.localPort', kind: "functiondeclaration", path: './std/net/curl/http.local_port.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.localPortRange', kind: "functiondeclaration", path: './std/net/curl/http.local_port_range.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.maxRedirects', kind: "functiondeclaration", path: './std/net/curl/http.max_redirects.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.method', kind: "functiondeclaration", path: './std/net/curl/http.method.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.Method', kind: "enumdeclaration", path: './std/net/curl/http.method.html', attributes: []},
{name: 'std.net.curl.HTTP.Method.connect', kind: "enummemberdeclaration", path: './std/net/curl/http.method.html#connect', attributes: []},
{name: 'std.net.curl.HTTP.Method.del', kind: "enummemberdeclaration", path: './std/net/curl/http.method.html#del', attributes: []},
{name: 'std.net.curl.HTTP.Method.get', kind: "enummemberdeclaration", path: './std/net/curl/http.method.html#get', attributes: []},
{name: 'std.net.curl.HTTP.Method.head', kind: "enummemberdeclaration", path: './std/net/curl/http.method.html#head', attributes: []},
{name: 'std.net.curl.HTTP.Method.options', kind: "enummemberdeclaration", path: './std/net/curl/http.method.html#options', attributes: []},
{name: 'std.net.curl.HTTP.Method.patch', kind: "enummemberdeclaration", path: './std/net/curl/http.method.html#patch', attributes: []},
{name: 'std.net.curl.HTTP.Method.post', kind: "enummemberdeclaration", path: './std/net/curl/http.method.html#post', attributes: []},
{name: 'std.net.curl.HTTP.Method.put', kind: "enummemberdeclaration", path: './std/net/curl/http.method.html#put', attributes: []},
{name: 'std.net.curl.HTTP.Method.trace', kind: "enummemberdeclaration", path: './std/net/curl/http.method.html#trace', attributes: []},
{name: 'std.net.curl.HTTP.netInterface', kind: "functiondeclaration", path: './std/net/curl/http.net_interface.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.onProgress', kind: "functiondeclaration", path: './std/net/curl/http.on_progress.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.onReceive', kind: "functiondeclaration", path: './std/net/curl/http.on_receive.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.onReceiveHeader', kind: "functiondeclaration", path: './std/net/curl/http.on_receive_header.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.onReceiveStatusLine', kind: "functiondeclaration", path: './std/net/curl/http.on_receive_status_line.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.onSend', kind: "functiondeclaration", path: './std/net/curl/http.on_send.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.opCall', kind: "functiondeclaration", path: './std/net/curl/http.op_call.html', attributes: ["static"]},
{name: 'std.net.curl.HTTP.operationTimeout', kind: "functiondeclaration", path: './std/net/curl/http.operation_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.perform', kind: "functiondeclaration", path: './std/net/curl/http.perform.html', attributes: []},
{name: 'std.net.curl.HTTP.postData', kind: "functiondeclaration", path: './std/net/curl/http.post_data.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.proxy', kind: "functiondeclaration", path: './std/net/curl/http.proxy.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.proxyPort', kind: "functiondeclaration", path: './std/net/curl/http.proxy_port.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.proxyType', kind: "functiondeclaration", path: './std/net/curl/http.proxy_type.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.requestAbort', kind: "aliasdeclaration", path: './std/net/curl/http.request_abort.html', attributes: []},
{name: 'std.net.curl.HTTP.requestPause', kind: "aliasdeclaration", path: './std/net/curl/http.request_pause.html', attributes: []},
{name: 'std.net.curl.HTTP.responseHeaders', kind: "functiondeclaration", path: './std/net/curl/http.response_headers.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.setAuthentication', kind: "functiondeclaration", path: './std/net/curl/http.set_authentication.html', attributes: []},
{name: 'std.net.curl.HTTP.setCookie', kind: "functiondeclaration", path: './std/net/curl/http.set_cookie.html', attributes: []},
{name: 'std.net.curl.HTTP.setCookieJar', kind: "functiondeclaration", path: './std/net/curl/http.set_cookie_jar.html', attributes: []},
{name: 'std.net.curl.HTTP.setPostData', kind: "functiondeclaration", path: './std/net/curl/http.set_post_data.html', attributes: []},
{name: 'std.net.curl.HTTP.setProxyAuthentication', kind: "functiondeclaration", path: './std/net/curl/http.set_proxy_authentication.html', attributes: []},
{name: 'std.net.curl.HTTP.setTimeCondition', kind: "functiondeclaration", path: './std/net/curl/http.set_time_condition.html', attributes: []},
{name: 'std.net.curl.HTTP.setUserAgent', kind: "functiondeclaration", path: './std/net/curl/http.set_user_agent.html', attributes: []},
{name: 'std.net.curl.HTTP.shutdown', kind: "functiondeclaration", path: './std/net/curl/http.shutdown.html', attributes: []},
{name: 'std.net.curl.HTTP.statusLine', kind: "functiondeclaration", path: './std/net/curl/http.status_line.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.StatusLine', kind: "structdeclaration", path: './std/net/curl/http.status_line.html', attributes: []},
{name: 'std.net.curl.HTTP.StatusLine.code', kind: "variabledeclaration", path: './std/net/curl/http.status_line.code.html', attributes: []},
{name: 'std.net.curl.HTTP.StatusLine.majorVersion', kind: "variabledeclaration", path: './std/net/curl/http.status_line.major_version.html', attributes: []},
{name: 'std.net.curl.HTTP.StatusLine.minorVersion', kind: "variabledeclaration", path: './std/net/curl/http.status_line.minor_version.html', attributes: []},
{name: 'std.net.curl.HTTP.StatusLine.reason', kind: "variabledeclaration", path: './std/net/curl/http.status_line.reason.html', attributes: []},
{name: 'std.net.curl.HTTP.StatusLine.reset', kind: "functiondeclaration", path: './std/net/curl/http.status_line.reset.html', attributes: ["safe"]},
{name: 'std.net.curl.HTTP.StatusLine.toString', kind: "functiondeclaration", path: './std/net/curl/http.status_line.to_string.html', attributes: ["const"]},
{name: 'std.net.curl.HTTP.tcpNoDelay', kind: "functiondeclaration", path: './std/net/curl/http.tcp_no_delay.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.TimeCond', kind: "aliasdeclaration", path: './std/net/curl/http.time_cond.html', attributes: []},
{name: 'std.net.curl.HTTP.url', kind: "functiondeclaration", path: './std/net/curl/http.url.html', attributes: ["property"]},
{name: 'std.net.curl.HTTP.verbose', kind: "functiondeclaration", path: './std/net/curl/http.verbose.html', attributes: ["property"]},
{name: 'std.net.curl.HTTPStatusException', kind: "classdeclaration", path: './std/net/curl/http_status_exception.html', attributes: []},
{name: 'std.net.curl.HTTPStatusException.status', kind: "variabledeclaration", path: './std/net/curl/http_status_exception.status.html', attributes: []},
{name: 'std.net.curl.HTTPStatusException.this', kind: "functiondeclaration", path: './std/net/curl/http_status_exception.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.net.curl.options', kind: "functiondeclaration", path: './std/net/curl/options.html', attributes: []},
{name: 'std.net.curl.patch', kind: "functiondeclaration", path: './std/net/curl/patch.html', attributes: []},
{name: 'std.net.curl.post', kind: "functiondeclaration", path: './std/net/curl/post.html', attributes: []},
{name: 'std.net.curl.put', kind: "functiondeclaration", path: './std/net/curl/put.html', attributes: []},
{name: 'std.net.curl.SMTP', kind: "structdeclaration", path: './std/net/curl/smtp.html', attributes: []},
{name: 'std.net.curl.SMTP.connectTimeout', kind: "functiondeclaration", path: './std/net/curl/smtp.connect_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.CurlProxy', kind: "aliasdeclaration", path: './std/net/curl/smtp.curl_proxy.html', attributes: []},
{name: 'std.net.curl.SMTP.dataTimeout', kind: "functiondeclaration", path: './std/net/curl/smtp.data_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.dnsTimeout', kind: "functiondeclaration", path: './std/net/curl/smtp.dns_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.isStopped', kind: "functiondeclaration", path: './std/net/curl/smtp.is_stopped.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.localPort', kind: "functiondeclaration", path: './std/net/curl/smtp.local_port.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.localPortRange', kind: "functiondeclaration", path: './std/net/curl/smtp.local_port_range.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.mailFrom', kind: "functiondeclaration", path: './std/net/curl/smtp.mail_from.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.mailTo', kind: "functiondeclaration", path: './std/net/curl/smtp.mail_to.html', attributes: []},
{name: 'std.net.curl.SMTP.message', kind: "functiondeclaration", path: './std/net/curl/smtp.message.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.netInterface', kind: "functiondeclaration", path: './std/net/curl/smtp.net_interface.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.onProgress', kind: "functiondeclaration", path: './std/net/curl/smtp.on_progress.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.onReceive', kind: "functiondeclaration", path: './std/net/curl/smtp.on_receive.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.onSend', kind: "functiondeclaration", path: './std/net/curl/smtp.on_send.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.opCall', kind: "functiondeclaration", path: './std/net/curl/smtp.op_call.html', attributes: ["static"]},
{name: 'std.net.curl.SMTP.operationTimeout', kind: "functiondeclaration", path: './std/net/curl/smtp.operation_timeout.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.perform', kind: "functiondeclaration", path: './std/net/curl/smtp.perform.html', attributes: []},
{name: 'std.net.curl.SMTP.proxy', kind: "functiondeclaration", path: './std/net/curl/smtp.proxy.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.proxyPort', kind: "functiondeclaration", path: './std/net/curl/smtp.proxy_port.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.proxyType', kind: "functiondeclaration", path: './std/net/curl/smtp.proxy_type.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.requestAbort', kind: "aliasdeclaration", path: './std/net/curl/smtp.request_abort.html', attributes: []},
{name: 'std.net.curl.SMTP.requestPause', kind: "aliasdeclaration", path: './std/net/curl/smtp.request_pause.html', attributes: []},
{name: 'std.net.curl.SMTP.setAuthentication', kind: "functiondeclaration", path: './std/net/curl/smtp.set_authentication.html', attributes: []},
{name: 'std.net.curl.SMTP.setProxyAuthentication', kind: "functiondeclaration", path: './std/net/curl/smtp.set_proxy_authentication.html', attributes: []},
{name: 'std.net.curl.SMTP.shutdown', kind: "functiondeclaration", path: './std/net/curl/smtp.shutdown.html', attributes: []},
{name: 'std.net.curl.SMTP.tcpNoDelay', kind: "functiondeclaration", path: './std/net/curl/smtp.tcp_no_delay.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.url', kind: "functiondeclaration", path: './std/net/curl/smtp.url.html', attributes: ["property"]},
{name: 'std.net.curl.SMTP.verbose', kind: "functiondeclaration", path: './std/net/curl/smtp.verbose.html', attributes: ["property"]},
{name: 'std.net.curl.ThrowOnError', kind: "aliasdeclaration", path: './std/net/curl/throw_on_error.html', attributes: []},
{name: 'std.net.curl.trace', kind: "functiondeclaration", path: './std/net/curl/trace.html', attributes: []},
{name: 'std.net.curl.upload', kind: "functiondeclaration", path: './std/net/curl/upload.html', attributes: []},
{name: 'std.net.isemail', kind: "module", path: './std/net/isemail.html', attributes: []},
{name: 'std.net.isemail.CheckDns', kind: "aliasdeclaration", path: './std/net/isemail/check_dns.html', attributes: []},
{name: 'std.net.isemail.EmailStatus', kind: "structdeclaration", path: './std/net/isemail/email_status.html', attributes: []},
{name: 'std.net.isemail.EmailStatus.domainPart', kind: "functiondeclaration", path: './std/net/isemail/email_status.domain_part.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.net.isemail.EmailStatus.localPart', kind: "functiondeclaration", path: './std/net/isemail/email_status.local_part.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.net.isemail.EmailStatus.status', kind: "functiondeclaration", path: './std/net/isemail/email_status.status.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.net.isemail.EmailStatus.statusCode', kind: "functiondeclaration", path: './std/net/isemail/email_status.status_code.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.net.isemail.EmailStatus.toString', kind: "functiondeclaration", path: './std/net/isemail/email_status.to_string.html', attributes: ["pure", "safe", "const"]},
{name: 'std.net.isemail.EmailStatus.valid', kind: "functiondeclaration", path: './std/net/isemail/email_status.valid.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.net.isemail.EmailStatusCode', kind: "enumdeclaration", path: './std/net/isemail/email_status_code.html', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.any', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#any', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.cFoldingWhitespace', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#cFoldingWhitespace', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.comment', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#comment', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.deprecated_', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#deprecated_', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.deprecatedComment', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#deprecatedComment', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.deprecatedCommentFoldingWhitespaceNearAt', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#deprecatedCommentFoldingWhitespaceNearAt', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.deprecatedCommentText', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#deprecatedCommentText', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.deprecatedFoldingWhitespace', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#deprecatedFoldingWhitespace', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.deprecatedLocalPart', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#deprecatedLocalPart', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.deprecatedQuotedPair', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#deprecatedQuotedPair', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.deprecatedQuotedText', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#deprecatedQuotedText', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.dnsWarning', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#dnsWarning', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.dnsWarningNoMXRecord', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#dnsWarningNoMXRecord', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.dnsWarningNoRecord', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#dnsWarningNoRecord', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.error', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#error', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorBackslashEnd', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorBackslashEnd', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorConsecutiveDots', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorConsecutiveDots', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorCrNoLf', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorCrNoLf', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorDomainHyphenEnd', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorDomainHyphenEnd', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorDomainHyphenStart', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorDomainHyphenStart', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorDotEnd', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorDotEnd', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorDotStart', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorDotStart', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorExpectingCommentText', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorExpectingCommentText', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorExpectingDomainText', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorExpectingDomainText', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorExpectingQuotedPair', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorExpectingQuotedPair', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorExpectingQuotedText', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorExpectingQuotedText', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorExpectingText', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorExpectingText', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorFoldingWhitespaceCrflX2', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorFoldingWhitespaceCrflX2', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorFoldingWhitespaceCrLfEnd', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorFoldingWhitespaceCrLfEnd', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorNoDomain', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorNoDomain', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorNoLocalPart', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorNoLocalPart', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorTextAfterCommentFoldingWhitespace', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorTextAfterCommentFoldingWhitespace', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorTextAfterDomainLiteral', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorTextAfterDomainLiteral', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorTextAfterQuotedString', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorTextAfterQuotedString', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorUnclosedComment', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorUnclosedComment', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorUnclosedDomainLiteral', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorUnclosedDomainLiteral', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.errorUnclosedQuotedString', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#errorUnclosedQuotedString', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.foldingWhitespace', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#foldingWhitespace', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.none', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#none', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5321', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5321', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5321AddressLiteral', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5321AddressLiteral', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5321IpV6Deprecated', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5321IpV6Deprecated', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5321QuotedString', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5321QuotedString', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5321TopLevelDomain', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5321TopLevelDomain', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5321TopLevelDomainNumeric', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5321TopLevelDomainNumeric', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5322', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322Domain', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5322Domain', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322DomainLiteral', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5322DomainLiteral', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322DomainLiteralObsoleteText', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5322DomainLiteralObsoleteText', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322DomainTooLong', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5322DomainTooLong', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322IpV6BadChar', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5322IpV6BadChar', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322IpV6ColonEnd', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5322IpV6ColonEnd', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322IpV6ColonStart', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5322IpV6ColonStart', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322IpV6GroupCount', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5322IpV6GroupCount', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322IpV6MaxGroups', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5322IpV6MaxGroups', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322IpV6TooManyDoubleColons', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5322IpV6TooManyDoubleColons', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322LabelTooLong', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5322LabelTooLong', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322LocalTooLong', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5322LocalTooLong', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.rfc5322TooLong', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#rfc5322TooLong', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.valid', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#valid', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.validCategory', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#validCategory', attributes: []},
{name: 'std.net.isemail.EmailStatusCode.warning', kind: "enummemberdeclaration", path: './std/net/isemail/email_status_code.html#warning', attributes: []},
{name: 'std.net.isemail.isEmail', kind: "functiondeclaration", path: './std/net/isemail/is_email.html', attributes: []},
{name: 'std.net.isemail.statusCodeDescription', kind: "functiondeclaration", path: './std/net/isemail/status_code_description.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.range.interfaces', kind: "module", path: './std/range/interfaces.html', attributes: []},
{name: 'std.range.interfaces.BidirectionalAssignable', kind: "interfacedeclaration", path: './std/range/interfaces/bidirectional_assignable.html', attributes: []},
{name: 'std.range.interfaces.BidirectionalAssignable.back', kind: "functiondeclaration", path: './std/range/interfaces/bidirectional_assignable.back.html', attributes: ["property"]},
{name: 'std.range.interfaces.BidirectionalAssignable.save', kind: "functiondeclaration", path: './std/range/interfaces/bidirectional_assignable.save.html', attributes: ["property"]},
{name: 'std.range.interfaces.BidirectionalRange', kind: "interfacedeclaration", path: './std/range/interfaces/bidirectional_range.html', attributes: []},
{name: 'std.range.interfaces.BidirectionalRange.back', kind: "functiondeclaration", path: './std/range/interfaces/bidirectional_range.back.html', attributes: ["property"]},
{name: 'std.range.interfaces.BidirectionalRange.moveBack', kind: "functiondeclaration", path: './std/range/interfaces/bidirectional_range.move_back.html', attributes: []},
{name: 'std.range.interfaces.BidirectionalRange.popBack', kind: "functiondeclaration", path: './std/range/interfaces/bidirectional_range.pop_back.html', attributes: []},
{name: 'std.range.interfaces.BidirectionalRange.save', kind: "functiondeclaration", path: './std/range/interfaces/bidirectional_range.save.html', attributes: ["property"]},
{name: 'std.range.interfaces.ForwardAssignable', kind: "interfacedeclaration", path: './std/range/interfaces/forward_assignable.html', attributes: []},
{name: 'std.range.interfaces.ForwardAssignable.save', kind: "functiondeclaration", path: './std/range/interfaces/forward_assignable.save.html', attributes: ["property"]},
{name: 'std.range.interfaces.ForwardRange', kind: "interfacedeclaration", path: './std/range/interfaces/forward_range.html', attributes: []},
{name: 'std.range.interfaces.ForwardRange.save', kind: "functiondeclaration", path: './std/range/interfaces/forward_range.save.html', attributes: ["property"]},
{name: 'std.range.interfaces.InputAssignable', kind: "interfacedeclaration", path: './std/range/interfaces/input_assignable.html', attributes: []},
{name: 'std.range.interfaces.InputAssignable.front', kind: "functiondeclaration", path: './std/range/interfaces/input_assignable.front.html', attributes: ["property"]},
{name: 'std.range.interfaces.InputRange', kind: "interfacedeclaration", path: './std/range/interfaces/input_range.html', attributes: []},
{name: 'std.range.interfaces.InputRange.empty', kind: "functiondeclaration", path: './std/range/interfaces/input_range.empty.html', attributes: ["property"]},
{name: 'std.range.interfaces.InputRange.front', kind: "functiondeclaration", path: './std/range/interfaces/input_range.front.html', attributes: ["property"]},
{name: 'std.range.interfaces.InputRange.moveFront', kind: "functiondeclaration", path: './std/range/interfaces/input_range.move_front.html', attributes: []},
{name: 'std.range.interfaces.InputRange.opApply', kind: "functiondeclaration", path: './std/range/interfaces/input_range.op_apply.html', attributes: []},
{name: 'std.range.interfaces.InputRange.popFront', kind: "functiondeclaration", path: './std/range/interfaces/input_range.pop_front.html', attributes: []},
{name: 'std.range.interfaces.InputRangeObject', kind: "aliasdeclaration", path: './std/range/interfaces/input_range_object.html', attributes: []},
{name: 'std.range.interfaces.inputRangeObject', kind: "functiondeclaration", path: './std/range/interfaces/input_range_object.html', attributes: []},
{name: 'std.range.interfaces.MostDerivedInputRange', kind: "aliasdeclaration", path: './std/range/interfaces/most_derived_input_range.html', attributes: []},
{name: 'std.range.interfaces.OutputRange', kind: "interfacedeclaration", path: './std/range/interfaces/output_range.html', attributes: []},
{name: 'std.range.interfaces.OutputRange.put', kind: "functiondeclaration", path: './std/range/interfaces/output_range.put.html', attributes: []},
{name: 'std.range.interfaces.OutputRangeObject', kind: "classdeclaration", path: './std/range/interfaces/output_range_object.html', attributes: []},
{name: 'std.range.interfaces.OutputRangeObject.this', kind: "functiondeclaration", path: './std/range/interfaces/output_range_object.this.html', attributes: []},
{name: 'std.range.interfaces.outputRangeObject', kind: "templatedeclaration", path: './std/range/interfaces/output_range_object.html', attributes: []},
{name: 'std.range.interfaces.outputRangeObject.outputRangeObject', kind: "functiondeclaration", path: './std/range/interfaces/output_range_object.output_range_object.html', attributes: []},
{name: 'std.range.interfaces.RandomAccessFinite', kind: "interfacedeclaration", path: './std/range/interfaces/random_access_finite.html', attributes: []},
{name: 'std.range.interfaces.RandomAccessFinite.length', kind: "functiondeclaration", path: './std/range/interfaces/random_access_finite.length.html', attributes: ["property"]},
{name: 'std.range.interfaces.RandomAccessFinite.moveAt', kind: "functiondeclaration", path: './std/range/interfaces/random_access_finite.move_at.html', attributes: []},
{name: 'std.range.interfaces.RandomAccessFinite.opDollar', kind: "aliasdeclaration", path: './std/range/interfaces/random_access_finite.op_dollar.html', attributes: []},
{name: 'std.range.interfaces.RandomAccessFinite.opIndex', kind: "functiondeclaration", path: './std/range/interfaces/random_access_finite.op_index.html', attributes: []},
{name: 'std.range.interfaces.RandomAccessFinite.opSlice', kind: "functiondeclaration", path: './std/range/interfaces/random_access_finite.op_slice.html', attributes: []},
{name: 'std.range.interfaces.RandomAccessFinite.save', kind: "functiondeclaration", path: './std/range/interfaces/random_access_finite.save.html', attributes: ["property"]},
{name: 'std.range.interfaces.RandomAccessInfinite', kind: "interfacedeclaration", path: './std/range/interfaces/random_access_infinite.html', attributes: []},
{name: 'std.range.interfaces.RandomAccessInfinite.moveAt', kind: "functiondeclaration", path: './std/range/interfaces/random_access_infinite.move_at.html', attributes: []},
{name: 'std.range.interfaces.RandomAccessInfinite.opIndex', kind: "functiondeclaration", path: './std/range/interfaces/random_access_infinite.op_index.html', attributes: []},
{name: 'std.range.interfaces.RandomAccessInfinite.save', kind: "functiondeclaration", path: './std/range/interfaces/random_access_infinite.save.html', attributes: ["property"]},
{name: 'std.range.interfaces.RandomFiniteAssignable', kind: "interfacedeclaration", path: './std/range/interfaces/random_finite_assignable.html', attributes: []},
{name: 'std.range.interfaces.RandomFiniteAssignable.opIndexAssign', kind: "functiondeclaration", path: './std/range/interfaces/random_finite_assignable.op_index_assign.html', attributes: []},
{name: 'std.range.interfaces.RandomFiniteAssignable.save', kind: "functiondeclaration", path: './std/range/interfaces/random_finite_assignable.save.html', attributes: ["property"]},
{name: 'std.range.primitives', kind: "module", path: './std/range/primitives.html', attributes: []},
{name: 'std.range.primitives.autodecodeStrings', kind: "enummemberdeclaration", path: './std/range/primitives/autodecode_strings.html', attributes: []},
{name: 'std.range.primitives.back', kind: "functiondeclaration", path: './std/range/primitives/back.html', attributes: ["pure", "property", "safe"]},
{name: 'std.range.primitives.ElementEncodingType', kind: "aliasdeclaration", path: './std/range/primitives/element_encoding_type.html', attributes: []},
{name: 'std.range.primitives.ElementType', kind: "aliasdeclaration", path: './std/range/primitives/element_type.html', attributes: []},
{name: 'std.range.primitives.empty', kind: "functiondeclaration", path: './std/range/primitives/empty.html', attributes: ["property"]},
{name: 'std.range.primitives.front', kind: "functiondeclaration", path: './std/range/primitives/front.html', attributes: ["pure", "nothrow", "nogc", "property", "ref", "safe"]},
{name: 'std.range.primitives.hasAssignableElements', kind: "enummemberdeclaration", path: './std/range/primitives/has_assignable_elements.html', attributes: []},
{name: 'std.range.primitives.hasLength', kind: "enummemberdeclaration", path: './std/range/primitives/has_length.html', attributes: []},
{name: 'std.range.primitives.hasLvalueElements', kind: "enummemberdeclaration", path: './std/range/primitives/has_lvalue_elements.html', attributes: []},
{name: 'std.range.primitives.hasMobileElements', kind: "enummemberdeclaration", path: './std/range/primitives/has_mobile_elements.html', attributes: []},
{name: 'std.range.primitives.hasSlicing', kind: "enummemberdeclaration", path: './std/range/primitives/has_slicing.html', attributes: []},
{name: 'std.range.primitives.hasSwappableElements', kind: "enummemberdeclaration", path: './std/range/primitives/has_swappable_elements.html', attributes: []},
{name: 'std.range.primitives.isBidirectionalRange', kind: "enummemberdeclaration", path: './std/range/primitives/is_bidirectional_range.html', attributes: []},
{name: 'std.range.primitives.isForwardRange', kind: "enummemberdeclaration", path: './std/range/primitives/is_forward_range.html', attributes: []},
{name: 'std.range.primitives.isInfinite', kind: "enummemberdeclaration", path: './std/range/primitives/is_infinite.html', attributes: []},
{name: 'std.range.primitives.isInputRange', kind: "enummemberdeclaration", path: './std/range/primitives/is_input_range.html', attributes: []},
{name: 'std.range.primitives.isOutputRange', kind: "enummemberdeclaration", path: './std/range/primitives/is_output_range.html', attributes: []},
{name: 'std.range.primitives.isRandomAccessRange', kind: "enummemberdeclaration", path: './std/range/primitives/is_random_access_range.html', attributes: []},
{name: 'std.range.primitives.moveAt', kind: "functiondeclaration", path: './std/range/primitives/move_at.html', attributes: []},
{name: 'std.range.primitives.moveBack', kind: "functiondeclaration", path: './std/range/primitives/move_back.html', attributes: []},
{name: 'std.range.primitives.moveFront', kind: "functiondeclaration", path: './std/range/primitives/move_front.html', attributes: []},
{name: 'std.range.primitives.popBack', kind: "functiondeclaration", path: './std/range/primitives/pop_back.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.range.primitives.popBackExactly', kind: "functiondeclaration", path: './std/range/primitives/pop_back_exactly.html', attributes: []},
{name: 'std.range.primitives.popBackN', kind: "functiondeclaration", path: './std/range/primitives/pop_back_n.html', attributes: []},
{name: 'std.range.primitives.popFront', kind: "functiondeclaration", path: './std/range/primitives/pop_front.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.range.primitives.popFrontExactly', kind: "functiondeclaration", path: './std/range/primitives/pop_front_exactly.html', attributes: []},
{name: 'std.range.primitives.popFrontN', kind: "functiondeclaration", path: './std/range/primitives/pop_front_n.html', attributes: []},
{name: 'std.range.primitives.put', kind: "functiondeclaration", path: './std/range/primitives/put.html', attributes: []},
{name: 'std.range.primitives.save', kind: "functiondeclaration", path: './std/range/primitives/save.html', attributes: ["pure", "nothrow", "nogc", "property", "safe"]},
{name: 'std.range.primitives.walkLength', kind: "functiondeclaration", path: './std/range/primitives/walk_length.html', attributes: ["auto"]},
{name: 'std.windows.charset', kind: "module", path: './std/windows/charset.html', attributes: []},
{name: 'std.windows.charset.fromMBSz', kind: "functiondeclaration", path: './std/windows/charset/from_mb_sz.html', attributes: []},
{name: 'std.windows.charset.toMBSz', kind: "functiondeclaration", path: './std/windows/charset/to_mb_sz.html', attributes: []},
{name: 'std.windows.syserror', kind: "module", path: './std/windows/syserror.html', attributes: []},
{name: 'std.windows.syserror.sysErrorString', kind: "functiondeclaration", path: './std/windows/syserror/sys_error_string.html', attributes: ["trusted"]},
{name: 'std.windows.syserror.wenforce', kind: "functiondeclaration", path: './std/windows/syserror/wenforce.html', attributes: ["safe"]},
{name: 'std.windows.syserror.WindowsException', kind: "classdeclaration", path: './std/windows/syserror/windows_exception.html', attributes: []},
{name: 'std.windows.syserror.WindowsException.code', kind: "functiondeclaration", path: './std/windows/syserror/windows_exception.code.html', attributes: ["final", "property"]},
{name: 'std.algorithm', kind: "module", path: './std/algorithm.html', attributes: []},
{name: 'std.array', kind: "module", path: './std/array.html', attributes: []},
{name: 'std.array.Appender', kind: "structdeclaration", path: './std/array/appender.html', attributes: []},
{name: 'std.array.Appender.capacity', kind: "functiondeclaration", path: './std/array/appender.capacity.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'std.array.Appender.clear', kind: "functiondeclaration", path: './std/array/appender.clear.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.array.Appender.data', kind: "functiondeclaration", path: './std/array/appender.data.html', attributes: ["inout", "pure", "nothrow", "property", "trusted"]},
{name: 'std.array.Appender.opOpAssign', kind: "aliasdeclaration", path: './std/array/appender.op_op_assign.html', attributes: []},
{name: 'std.array.Appender.opSlice', kind: "functiondeclaration", path: './std/array/appender.op_slice.html', attributes: ["inout", "pure", "nothrow", "property", "trusted"]},
{name: 'std.array.Appender.put', kind: "functiondeclaration", path: './std/array/appender.put.html', attributes: []},
{name: 'std.array.Appender.reserve', kind: "functiondeclaration", path: './std/array/appender.reserve.html', attributes: []},
{name: 'std.array.Appender.shrinkTo', kind: "functiondeclaration", path: './std/array/appender.shrink_to.html', attributes: ["pure", "trusted"]},
{name: 'std.array.Appender.this', kind: "functiondeclaration", path: './std/array/appender.this.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.array.Appender.toString', kind: "functiondeclaration", path: './std/array/appender.to_string.html', attributes: ["const"]},
{name: 'std.array.appender', kind: "functiondeclaration", path: './std/array/appender.html', attributes: []},
{name: 'std.array.array', kind: "functiondeclaration", path: './std/array/array.html', attributes: []},
{name: 'std.array.assocArray', kind: "functiondeclaration", path: './std/array/assoc_array.html', attributes: ["auto"]},
{name: 'std.array.byPair', kind: "functiondeclaration", path: './std/array/by_pair.html', attributes: ["auto"]},
{name: 'std.array.insertInPlace', kind: "functiondeclaration", path: './std/array/insert_in_place.html', attributes: []},
{name: 'std.array.join', kind: "functiondeclaration", path: './std/array/join.html', attributes: []},
{name: 'std.array.minimallyInitializedArray', kind: "functiondeclaration", path: './std/array/minimally_initialized_array.html', attributes: ["auto", "nothrow", "trusted"]},
{name: 'std.array.overlap', kind: "functiondeclaration", path: './std/array/overlap.html', attributes: ["trusted"]},
{name: 'std.array.RefAppender', kind: "structdeclaration", path: './std/array/ref_appender.html', attributes: []},
{name: 'std.array.RefAppender.capacity', kind: "functiondeclaration", path: './std/array/ref_appender.capacity.html', attributes: ["const", "property"]},
{name: 'std.array.RefAppender.opDispatch', kind: "functiondeclaration", path: './std/array/ref_appender.op_dispatch.html', attributes: []},
{name: 'std.array.RefAppender.opOpAssign', kind: "functiondeclaration", path: './std/array/ref_appender.op_op_assign.html', attributes: []},
{name: 'std.array.RefAppender.opSlice', kind: "functiondeclaration", path: './std/array/ref_appender.op_slice.html', attributes: ["inout", "property"]},
{name: 'std.array.RefAppender.this', kind: "functiondeclaration", path: './std/array/ref_appender.this.html', attributes: []},
{name: 'std.array.replace', kind: "functiondeclaration", path: './std/array/replace.html', attributes: []},
{name: 'std.array.replaceFirst', kind: "functiondeclaration", path: './std/array/replace_first.html', attributes: []},
{name: 'std.array.replaceInPlace', kind: "functiondeclaration", path: './std/array/replace_in_place.html', attributes: []},
{name: 'std.array.replaceInto', kind: "functiondeclaration", path: './std/array/replace_into.html', attributes: []},
{name: 'std.array.replaceLast', kind: "functiondeclaration", path: './std/array/replace_last.html', attributes: []},
{name: 'std.array.replaceSlice', kind: "functiondeclaration", path: './std/array/replace_slice.html', attributes: []},
{name: 'std.array.replicate', kind: "functiondeclaration", path: './std/array/replicate.html', attributes: []},
{name: 'std.array.sameHead', kind: "functiondeclaration", path: './std/array/same_head.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.array.sameTail', kind: "functiondeclaration", path: './std/array/same_tail.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.array.split', kind: "functiondeclaration", path: './std/array/split.html', attributes: ["pure", "safe"]},
{name: 'std.array.staticArray', kind: "functiondeclaration", path: './std/array/static_array.html', attributes: []},
{name: 'std.array.uninitializedArray', kind: "functiondeclaration", path: './std/array/uninitialized_array.html', attributes: ["auto", "nothrow", "system"]},
{name: 'std.ascii', kind: "module", path: './std/ascii.html', attributes: []},
{name: 'std.ascii.ControlChar', kind: "enumdeclaration", path: './std/ascii/control_char.html', attributes: []},
{name: 'std.ascii.ControlChar.ack', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#ack', attributes: []},
{name: 'std.ascii.ControlChar.bel', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#bel', attributes: []},
{name: 'std.ascii.ControlChar.bs', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#bs', attributes: []},
{name: 'std.ascii.ControlChar.can', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#can', attributes: []},
{name: 'std.ascii.ControlChar.cr', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#cr', attributes: []},
{name: 'std.ascii.ControlChar.dc1', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#dc1', attributes: []},
{name: 'std.ascii.ControlChar.dc2', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#dc2', attributes: []},
{name: 'std.ascii.ControlChar.dc3', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#dc3', attributes: []},
{name: 'std.ascii.ControlChar.dc4', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#dc4', attributes: []},
{name: 'std.ascii.ControlChar.del', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#del', attributes: []},
{name: 'std.ascii.ControlChar.dle', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#dle', attributes: []},
{name: 'std.ascii.ControlChar.em', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#em', attributes: []},
{name: 'std.ascii.ControlChar.enq', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#enq', attributes: []},
{name: 'std.ascii.ControlChar.eot', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#eot', attributes: []},
{name: 'std.ascii.ControlChar.esc', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#esc', attributes: []},
{name: 'std.ascii.ControlChar.etb', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#etb', attributes: []},
{name: 'std.ascii.ControlChar.etx', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#etx', attributes: []},
{name: 'std.ascii.ControlChar.ff', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#ff', attributes: []},
{name: 'std.ascii.ControlChar.fs', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#fs', attributes: []},
{name: 'std.ascii.ControlChar.gs', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#gs', attributes: []},
{name: 'std.ascii.ControlChar.lf', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#lf', attributes: []},
{name: 'std.ascii.ControlChar.nak', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#nak', attributes: []},
{name: 'std.ascii.ControlChar.nul', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#nul', attributes: []},
{name: 'std.ascii.ControlChar.rs', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#rs', attributes: []},
{name: 'std.ascii.ControlChar.si', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#si', attributes: []},
{name: 'std.ascii.ControlChar.so', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#so', attributes: []},
{name: 'std.ascii.ControlChar.soh', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#soh', attributes: []},
{name: 'std.ascii.ControlChar.stx', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#stx', attributes: []},
{name: 'std.ascii.ControlChar.sub', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#sub', attributes: []},
{name: 'std.ascii.ControlChar.syn', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#syn', attributes: []},
{name: 'std.ascii.ControlChar.tab', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#tab', attributes: []},
{name: 'std.ascii.ControlChar.us', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#us', attributes: []},
{name: 'std.ascii.ControlChar.vt', kind: "enummemberdeclaration", path: './std/ascii/control_char.html#vt', attributes: []},
{name: 'std.ascii.digits', kind: "variabledeclaration", path: './std/ascii/digits.html', attributes: []},
{name: 'std.ascii.fullHexDigits', kind: "variabledeclaration", path: './std/ascii/full_hex_digits.html', attributes: []},
{name: 'std.ascii.hexDigits', kind: "variabledeclaration", path: './std/ascii/hex_digits.html', attributes: []},
{name: 'std.ascii.isAlpha', kind: "functiondeclaration", path: './std/ascii/is_alpha.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isAlphaNum', kind: "functiondeclaration", path: './std/ascii/is_alpha_num.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isASCII', kind: "functiondeclaration", path: './std/ascii/is_ascii.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isControl', kind: "functiondeclaration", path: './std/ascii/is_control.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isDigit', kind: "functiondeclaration", path: './std/ascii/is_digit.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isGraphical', kind: "functiondeclaration", path: './std/ascii/is_graphical.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isHexDigit', kind: "functiondeclaration", path: './std/ascii/is_hex_digit.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isLower', kind: "functiondeclaration", path: './std/ascii/is_lower.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isOctalDigit', kind: "functiondeclaration", path: './std/ascii/is_octal_digit.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isPrintable', kind: "functiondeclaration", path: './std/ascii/is_printable.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isPunctuation', kind: "functiondeclaration", path: './std/ascii/is_punctuation.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isUpper', kind: "functiondeclaration", path: './std/ascii/is_upper.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.isWhite', kind: "functiondeclaration", path: './std/ascii/is_white.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.ascii.LetterCase', kind: "enumdeclaration", path: './std/ascii/letter_case.html', attributes: []},
{name: 'std.ascii.LetterCase.lower', kind: "enummemberdeclaration", path: './std/ascii/letter_case.html#lower', attributes: []},
{name: 'std.ascii.LetterCase.upper', kind: "enummemberdeclaration", path: './std/ascii/letter_case.html#upper', attributes: []},
{name: 'std.ascii.letters', kind: "variabledeclaration", path: './std/ascii/letters.html', attributes: []},
{name: 'std.ascii.lowercase', kind: "variabledeclaration", path: './std/ascii/lowercase.html', attributes: []},
{name: 'std.ascii.lowerHexDigits', kind: "variabledeclaration", path: './std/ascii/lower_hex_digits.html', attributes: []},
{name: 'std.ascii.newline', kind: "variabledeclaration", path: './std/ascii/newline.html', attributes: []},
{name: 'std.ascii.octalDigits', kind: "variabledeclaration", path: './std/ascii/octal_digits.html', attributes: []},
{name: 'std.ascii.toLower', kind: "functiondeclaration", path: './std/ascii/to_lower.html', attributes: ["auto"]},
{name: 'std.ascii.toUpper', kind: "functiondeclaration", path: './std/ascii/to_upper.html', attributes: ["auto"]},
{name: 'std.ascii.uppercase', kind: "variabledeclaration", path: './std/ascii/uppercase.html', attributes: []},
{name: 'std.ascii.whitespace', kind: "variabledeclaration", path: './std/ascii/whitespace.html', attributes: []},
{name: 'std.base64', kind: "module", path: './std/base64.html', attributes: []},
{name: 'std.base64.Base64', kind: "aliasdeclaration", path: './std/base64/base64.html', attributes: []},
{name: 'std.base64.Base64Exception', kind: "classdeclaration", path: './std/base64/base64_exception.html', attributes: []},
{name: 'std.base64.Base64Impl', kind: "templatedeclaration", path: './std/base64/base64_impl.html', attributes: []},
{name: 'std.base64.Base64Impl.decode', kind: "functiondeclaration", path: './std/base64/base64_impl.decode.html', attributes: ["pure", "trusted"]},
{name: 'std.base64.Base64Impl.decodeLength', kind: "functiondeclaration", path: './std/base64/base64_impl.decode_length.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.base64.Base64Impl.Decoder', kind: "structdeclaration", path: './std/base64/base64_impl.decoder.html', attributes: []},
{name: 'std.base64.Base64Impl.Decoder.empty', kind: "functiondeclaration", path: './std/base64/base64_impl.decoder.empty.html', attributes: ["property", "trusted"]},
{name: 'std.base64.Base64Impl.Decoder.front', kind: "functiondeclaration", path: './std/base64/base64_impl.decoder.front.html', attributes: ["nothrow", "property", "safe"]},
{name: 'std.base64.Base64Impl.Decoder.popFront', kind: "functiondeclaration", path: './std/base64/base64_impl.decoder.pop_front.html', attributes: []},
{name: 'std.base64.Base64Impl.Decoder.save', kind: "functiondeclaration", path: './std/base64/base64_impl.decoder.save.html', attributes: ["property"]},
{name: 'std.base64.Base64Impl.Decoder.empty', kind: "functiondeclaration", path: './std/base64/base64_impl.decoder.empty.html', attributes: ["const", "nothrow", "property", "safe"]},
{name: 'std.base64.Base64Impl.Decoder.front', kind: "functiondeclaration", path: './std/base64/base64_impl.decoder.front.html', attributes: ["nothrow", "property", "safe"]},
{name: 'std.base64.Base64Impl.Decoder.popFront', kind: "functiondeclaration", path: './std/base64/base64_impl.decoder.pop_front.html', attributes: []},
{name: 'std.base64.Base64Impl.Decoder.save', kind: "functiondeclaration", path: './std/base64/base64_impl.decoder.save.html', attributes: ["property"]},
{name: 'std.base64.Base64Impl.decoder', kind: "functiondeclaration", path: './std/base64/base64_impl.decoder.html', attributes: []},
{name: 'std.base64.Base64Impl.encode', kind: "functiondeclaration", path: './std/base64/base64_impl.encode.html', attributes: ["pure", "trusted"]},
{name: 'std.base64.Base64Impl.encodeLength', kind: "functiondeclaration", path: './std/base64/base64_impl.encode_length.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.base64.Base64Impl.Encoder', kind: "structdeclaration", path: './std/base64/base64_impl.encoder.html', attributes: []},
{name: 'std.base64.Base64Impl.Encoder.empty', kind: "functiondeclaration", path: './std/base64/base64_impl.encoder.empty.html', attributes: ["property", "trusted"]},
{name: 'std.base64.Base64Impl.Encoder.front', kind: "functiondeclaration", path: './std/base64/base64_impl.encoder.front.html', attributes: ["nothrow", "property", "safe"]},
{name: 'std.base64.Base64Impl.Encoder.popFront', kind: "functiondeclaration", path: './std/base64/base64_impl.encoder.pop_front.html', attributes: []},
{name: 'std.base64.Base64Impl.Encoder.save', kind: "functiondeclaration", path: './std/base64/base64_impl.encoder.save.html', attributes: ["property"]},
{name: 'std.base64.Base64Impl.Encoder.empty', kind: "functiondeclaration", path: './std/base64/base64_impl.encoder.empty.html', attributes: ["const", "nothrow", "property", "safe"]},
{name: 'std.base64.Base64Impl.Encoder.front', kind: "functiondeclaration", path: './std/base64/base64_impl.encoder.front.html', attributes: ["nothrow", "property", "safe"]},
{name: 'std.base64.Base64Impl.Encoder.popFront', kind: "functiondeclaration", path: './std/base64/base64_impl.encoder.pop_front.html', attributes: []},
{name: 'std.base64.Base64Impl.Encoder.save', kind: "functiondeclaration", path: './std/base64/base64_impl.encoder.save.html', attributes: ["property"]},
{name: 'std.base64.Base64Impl.encoder', kind: "functiondeclaration", path: './std/base64/base64_impl.encoder.html', attributes: []},
{name: 'std.base64.Base64Impl.NoPadding', kind: "enummemberdeclaration", path: './std/base64/base64_impl.no_padding.html', attributes: []},
{name: 'std.base64.Base64URL', kind: "aliasdeclaration", path: './std/base64/base64_url.html', attributes: []},
{name: 'std.base64.Base64URLNoPadding', kind: "aliasdeclaration", path: './std/base64/base64_url_no_padding.html', attributes: []},
{name: 'std.bigint', kind: "module", path: './std/bigint.html', attributes: []},
{name: 'std.bigint.absUnsign', kind: "functiondeclaration", path: './std/bigint/abs_unsign.html', attributes: []},
{name: 'std.bigint.BigInt', kind: "structdeclaration", path: './std/bigint/big_int.html', attributes: []},
{name: 'std.bigint.BigInt.getDigit', kind: "functiondeclaration", path: './std/bigint/big_int.get_digit.html', attributes: ["const"]},
{name: 'std.bigint.BigInt.opAssign', kind: "functiondeclaration", path: './std/bigint/big_int.op_assign.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.bigint.BigInt.opBinary', kind: "functiondeclaration", path: './std/bigint/big_int.op_binary.html', attributes: ["const", "pure", "nothrow", "safe"]},
{name: 'std.bigint.BigInt.opBinaryRight', kind: "functiondeclaration", path: './std/bigint/big_int.op_binary_right.html', attributes: ["const", "pure", "nothrow", "safe"]},
{name: 'std.bigint.BigInt.opCast', kind: "functiondeclaration", path: './std/bigint/big_int.op_cast.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.bigint.BigInt.opCmp', kind: "functiondeclaration", path: './std/bigint/big_int.op_cmp.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.bigint.BigInt.opEquals', kind: "functiondeclaration", path: './std/bigint/big_int.op_equals.html', attributes: ["const", "pure", "nogc", "safe"]},
{name: 'std.bigint.BigInt.opOpAssign', kind: "functiondeclaration", path: './std/bigint/big_int.op_op_assign.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.bigint.BigInt.opUnary', kind: "functiondeclaration", path: './std/bigint/big_int.op_unary.html', attributes: ["const", "pure", "nothrow", "safe"]},
{name: 'std.bigint.BigInt.this', kind: "functiondeclaration", path: './std/bigint/big_int.this.html', attributes: []},
{name: 'std.bigint.BigInt.toHash', kind: "functiondeclaration", path: './std/bigint/big_int.to_hash.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.bigint.BigInt.toInt', kind: "functiondeclaration", path: './std/bigint/big_int.to_int.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.bigint.BigInt.toLong', kind: "functiondeclaration", path: './std/bigint/big_int.to_long.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.bigint.BigInt.toString', kind: "functiondeclaration", path: './std/bigint/big_int.to_string.html', attributes: ["const"]},
{name: 'std.bigint.BigInt.uintLength', kind: "functiondeclaration", path: './std/bigint/big_int.uint_length.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.bigint.BigInt.ulongLength', kind: "functiondeclaration", path: './std/bigint/big_int.ulong_length.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.bigint.divMod', kind: "functiondeclaration", path: './std/bigint/div_mod.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.bigint.powmod', kind: "functiondeclaration", path: './std/bigint/powmod.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.bigint.toDecimalString', kind: "functiondeclaration", path: './std/bigint/to_decimal_string.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.bigint.toHex', kind: "functiondeclaration", path: './std/bigint/to_hex.html', attributes: ["safe"]},
{name: 'std.bitmanip', kind: "module", path: './std/bitmanip.html', attributes: []},
{name: 'std.bitmanip.append', kind: "functiondeclaration", path: './std/bitmanip/append.html', attributes: []},
{name: 'std.bitmanip.bigEndianToNative', kind: "functiondeclaration", path: './std/bitmanip/big_endian_to_native.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.bitmanip.BitArray', kind: "structdeclaration", path: './std/bitmanip/bit_array.html', attributes: []},
{name: 'std.bitmanip.BitArray.bitsSet', kind: "functiondeclaration", path: './std/bitmanip/bit_array.bits_set.html', attributes: ["auto"]},
{name: 'std.bitmanip.BitArray.count', kind: "functiondeclaration", path: './std/bitmanip/bit_array.count.html', attributes: ["pure", "nothrow", "nogc", "const"]},
{name: 'std.bitmanip.BitArray.dim', kind: "functiondeclaration", path: './std/bitmanip/bit_array.dim.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.bitmanip.BitArray.dup', kind: "functiondeclaration", path: './std/bitmanip/bit_array.dup.html', attributes: ["pure", "nothrow", "property", "const"]},
{name: 'std.bitmanip.BitArray.flip', kind: "functiondeclaration", path: './std/bitmanip/bit_array.flip.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.bitmanip.BitArray.length', kind: "functiondeclaration", path: './std/bitmanip/bit_array.length.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.bitmanip.BitArray.opApply', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_apply.html', attributes: []},
{name: 'std.bitmanip.BitArray.opBinary', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_binary.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.bitmanip.BitArray.opBinaryRight', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_binary_right.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.bitmanip.BitArray.opCast', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_cast.html', attributes: ["inout", "pure", "nothrow", "nogc"]},
{name: 'std.bitmanip.BitArray.opCmp', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_cmp.html', attributes: ["pure", "nothrow", "nogc", "const"]},
{name: 'std.bitmanip.BitArray.opEquals', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_equals.html', attributes: ["pure", "nothrow", "nogc", "const"]},
{name: 'std.bitmanip.BitArray.opIndex', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_index.html', attributes: ["pure", "nothrow", "nogc", "const"]},
{name: 'std.bitmanip.BitArray.opIndexAssign', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_index_assign.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.bitmanip.BitArray.opOpAssign', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_op_assign.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.bitmanip.BitArray.opSliceAssign', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_slice_assign.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'std.bitmanip.BitArray.opUnary', kind: "functiondeclaration", path: './std/bitmanip/bit_array.op_unary.html', attributes: ["const", "pure", "nothrow"]},
{name: 'std.bitmanip.BitArray.reverse', kind: "functiondeclaration", path: './std/bitmanip/bit_array.reverse.html', attributes: ["pure", "nothrow", "property", "nogc"]},
{name: 'std.bitmanip.BitArray.sort', kind: "functiondeclaration", path: './std/bitmanip/bit_array.sort.html', attributes: ["pure", "nothrow", "property", "nogc"]},
{name: 'std.bitmanip.BitArray.this', kind: "functiondeclaration", path: './std/bitmanip/bit_array.this.html', attributes: ["pure", "nothrow"]},
{name: 'std.bitmanip.BitArray.toHash', kind: "functiondeclaration", path: './std/bitmanip/bit_array.to_hash.html', attributes: ["pure", "nothrow", "nogc", "const"]},
{name: 'std.bitmanip.BitArray.toString', kind: "functiondeclaration", path: './std/bitmanip/bit_array.to_string.html', attributes: ["const"]},
{name: 'std.bitmanip.bitfields', kind: "enummemberdeclaration", path: './std/bitmanip/bitfields.html', attributes: []},
{name: 'std.bitmanip.bitsSet', kind: "functiondeclaration", path: './std/bitmanip/bits_set.html', attributes: ["auto", "pure", "nothrow", "nogc"]},
{name: 'std.bitmanip.DoubleRep', kind: "structdeclaration", path: './std/bitmanip/double_rep.html', attributes: []},
{name: 'std.bitmanip.FloatRep', kind: "structdeclaration", path: './std/bitmanip/float_rep.html', attributes: []},
{name: 'std.bitmanip.littleEndianToNative', kind: "functiondeclaration", path: './std/bitmanip/little_endian_to_native.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.bitmanip.nativeToBigEndian', kind: "functiondeclaration", path: './std/bitmanip/native_to_big_endian.html', attributes: ["auto", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.bitmanip.nativeToLittleEndian', kind: "functiondeclaration", path: './std/bitmanip/native_to_little_endian.html', attributes: ["auto", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.bitmanip.peek', kind: "functiondeclaration", path: './std/bitmanip/peek.html', attributes: []},
{name: 'std.bitmanip.read', kind: "functiondeclaration", path: './std/bitmanip/read.html', attributes: []},
{name: 'std.bitmanip.swapEndian', kind: "functiondeclaration", path: './std/bitmanip/swap_endian.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.bitmanip.taggedClassRef', kind: "enummemberdeclaration", path: './std/bitmanip/tagged_class_ref.html', attributes: []},
{name: 'std.bitmanip.taggedPointer', kind: "enummemberdeclaration", path: './std/bitmanip/tagged_pointer.html', attributes: []},
{name: 'std.bitmanip.write', kind: "functiondeclaration", path: './std/bitmanip/write.html', attributes: []},
{name: 'std.compiler', kind: "module", path: './std/compiler.html', attributes: []},
{name: 'std.compiler.D_major', kind: "variabledeclaration", path: './std/compiler/d_major.html', attributes: []},
{name: 'std.compiler.name', kind: "variabledeclaration", path: './std/compiler/name.html', attributes: []},
{name: 'std.compiler.Vendor', kind: "enumdeclaration", path: './std/compiler/vendor.html', attributes: []},
{name: 'std.compiler.Vendor.digitalMars', kind: "enummemberdeclaration", path: './std/compiler/vendor.html#digitalMars', attributes: []},
{name: 'std.compiler.Vendor.dotNET', kind: "enummemberdeclaration", path: './std/compiler/vendor.html#dotNET', attributes: []},
{name: 'std.compiler.Vendor.gnu', kind: "enummemberdeclaration", path: './std/compiler/vendor.html#gnu', attributes: []},
{name: 'std.compiler.Vendor.llvm', kind: "enummemberdeclaration", path: './std/compiler/vendor.html#llvm', attributes: []},
{name: 'std.compiler.Vendor.sdc', kind: "enummemberdeclaration", path: './std/compiler/vendor.html#sdc', attributes: []},
{name: 'std.compiler.Vendor.unknown', kind: "enummemberdeclaration", path: './std/compiler/vendor.html#unknown', attributes: []},
{name: 'std.compiler.vendor', kind: "variabledeclaration", path: './std/compiler/vendor.html', attributes: []},
{name: 'std.compiler.version_major', kind: "variabledeclaration", path: './std/compiler/version_major.html', attributes: []},
{name: 'std.compiler.version_minor', kind: "variabledeclaration", path: './std/compiler/version_minor.html', attributes: []},
{name: 'std.complex', kind: "module", path: './std/complex.html', attributes: []},
{name: 'std.complex.abs', kind: "functiondeclaration", path: './std/complex/abs.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.arg', kind: "functiondeclaration", path: './std/complex/arg.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.complex', kind: "functiondeclaration", path: './std/complex/complex.html', attributes: ["auto", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.Complex', kind: "structdeclaration", path: './std/complex/complex.html', attributes: []},
{name: 'std.complex.Complex.im', kind: "variabledeclaration", path: './std/complex/complex.im.html', attributes: []},
{name: 'std.complex.Complex.re', kind: "variabledeclaration", path: './std/complex/complex.re.html', attributes: []},
{name: 'std.complex.Complex.this', kind: "functiondeclaration", path: './std/complex/complex.this.html', attributes: []},
{name: 'std.complex.Complex.toString', kind: "functiondeclaration", path: './std/complex/complex.to_string.html', attributes: ["const", "safe"]},
{name: 'std.complex.conj', kind: "functiondeclaration", path: './std/complex/conj.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.cos', kind: "functiondeclaration", path: './std/complex/cos.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.coshisinh', kind: "functiondeclaration", path: './std/complex/coshisinh.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.exp', kind: "functiondeclaration", path: './std/complex/exp.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.complex.expi', kind: "functiondeclaration", path: './std/complex/expi.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.complex.fromPolar', kind: "functiondeclaration", path: './std/complex/from_polar.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.log', kind: "functiondeclaration", path: './std/complex/log.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.log10', kind: "functiondeclaration", path: './std/complex/log10.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.norm', kind: "functiondeclaration", path: './std/complex/norm.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.pow', kind: "functiondeclaration", path: './std/complex/pow.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.proj', kind: "functiondeclaration", path: './std/complex/proj.html', attributes: []},
{name: 'std.complex.sin', kind: "functiondeclaration", path: './std/complex/sin.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.sqAbs', kind: "functiondeclaration", path: './std/complex/sq_abs.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.sqrt', kind: "functiondeclaration", path: './std/complex/sqrt.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.complex.tan', kind: "functiondeclaration", path: './std/complex/tan.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.concurrency', kind: "module", path: './std/concurrency.html', attributes: []},
{name: 'std.concurrency.FiberScheduler', kind: "classdeclaration", path: './std/concurrency/fiber_scheduler.html', attributes: []},
{name: 'std.concurrency.FiberScheduler.newCondition', kind: "functiondeclaration", path: './std/concurrency/fiber_scheduler.new_condition.html', attributes: []},
{name: 'std.concurrency.FiberScheduler.spawn', kind: "functiondeclaration", path: './std/concurrency/fiber_scheduler.spawn.html', attributes: []},
{name: 'std.concurrency.FiberScheduler.start', kind: "functiondeclaration", path: './std/concurrency/fiber_scheduler.start.html', attributes: []},
{name: 'std.concurrency.FiberScheduler.thisInfo', kind: "functiondeclaration", path: './std/concurrency/fiber_scheduler.this_info.html', attributes: ["nothrow", "ref", "property"]},
{name: 'std.concurrency.FiberScheduler.yield', kind: "functiondeclaration", path: './std/concurrency/fiber_scheduler.yield.html', attributes: []},
{name: 'std.concurrency.Scheduler.spawn', kind: "functiondeclaration", path: './std/concurrency/scheduler.spawn.html', attributes: ["abstract"]},
{name: 'std.concurrency.FiberScheduler.create', kind: "functiondeclaration", path: './std/concurrency/fiber_scheduler.create.html', attributes: []},
{name: 'std.concurrency.FiberScheduler.InfoFiber', kind: "classdeclaration", path: './std/concurrency/fiber_scheduler.info_fiber.html', attributes: []},
{name: 'std.concurrency.Generator', kind: "classdeclaration", path: './std/concurrency/generator.html', attributes: []},
{name: 'std.concurrency.Generator.empty', kind: "functiondeclaration", path: './std/concurrency/generator.empty.html', attributes: ["final", "property"]},
{name: 'std.concurrency.Generator.front', kind: "functiondeclaration", path: './std/concurrency/generator.front.html', attributes: ["final", "property"]},
{name: 'std.concurrency.Generator.moveFront', kind: "functiondeclaration", path: './std/concurrency/generator.move_front.html', attributes: ["final"]},
{name: 'std.concurrency.Generator.popFront', kind: "functiondeclaration", path: './std/concurrency/generator.pop_front.html', attributes: ["final"]},
{name: 'std.concurrency.Generator.this', kind: "functiondeclaration", path: './std/concurrency/generator.this.html', attributes: []},
{name: 'std.concurrency.initOnce', kind: "functiondeclaration", path: './std/concurrency/init_once.html', attributes: ["auto", "ref"]},
{name: 'std.concurrency.LinkTerminated', kind: "classdeclaration", path: './std/concurrency/link_terminated.html', attributes: []},
{name: 'std.concurrency.LinkTerminated.this', kind: "functiondeclaration", path: './std/concurrency/link_terminated.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.concurrency.locate', kind: "functiondeclaration", path: './std/concurrency/locate.html', attributes: []},
{name: 'std.concurrency.MailboxFull', kind: "classdeclaration", path: './std/concurrency/mailbox_full.html', attributes: []},
{name: 'std.concurrency.MailboxFull.this', kind: "functiondeclaration", path: './std/concurrency/mailbox_full.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.concurrency.MessageMismatch', kind: "classdeclaration", path: './std/concurrency/message_mismatch.html', attributes: []},
{name: 'std.concurrency.MessageMismatch.this', kind: "functiondeclaration", path: './std/concurrency/message_mismatch.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.concurrency.OnCrowding', kind: "enumdeclaration", path: './std/concurrency/on_crowding.html', attributes: []},
{name: 'std.concurrency.OnCrowding.block', kind: "enummemberdeclaration", path: './std/concurrency/on_crowding.html#block', attributes: []},
{name: 'std.concurrency.OnCrowding.ignore', kind: "enummemberdeclaration", path: './std/concurrency/on_crowding.html#ignore', attributes: []},
{name: 'std.concurrency.OnCrowding.throwException', kind: "enummemberdeclaration", path: './std/concurrency/on_crowding.html#throwException', attributes: []},
{name: 'std.concurrency.OwnerTerminated', kind: "classdeclaration", path: './std/concurrency/owner_terminated.html', attributes: []},
{name: 'std.concurrency.OwnerTerminated.this', kind: "functiondeclaration", path: './std/concurrency/owner_terminated.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.concurrency.ownerTid', kind: "functiondeclaration", path: './std/concurrency/owner_tid.html', attributes: ["property"]},
{name: 'std.concurrency.PriorityMessageException', kind: "classdeclaration", path: './std/concurrency/priority_message_exception.html', attributes: []},
{name: 'std.concurrency.PriorityMessageException.message', kind: "variabledeclaration", path: './std/concurrency/priority_message_exception.message.html', attributes: []},
{name: 'std.concurrency.PriorityMessageException.this', kind: "functiondeclaration", path: './std/concurrency/priority_message_exception.this.html', attributes: []},
{name: 'std.concurrency.prioritySend', kind: "functiondeclaration", path: './std/concurrency/priority_send.html', attributes: []},
{name: 'std.concurrency.receive', kind: "functiondeclaration", path: './std/concurrency/receive.html', attributes: []},
{name: 'std.concurrency.receiveOnly', kind: "functiondeclaration", path: './std/concurrency/receive_only.html', attributes: []},
{name: 'std.concurrency.receiveTimeout', kind: "functiondeclaration", path: './std/concurrency/receive_timeout.html', attributes: []},
{name: 'std.concurrency.register', kind: "functiondeclaration", path: './std/concurrency/register.html', attributes: []},
{name: 'std.concurrency.Scheduler', kind: "interfacedeclaration", path: './std/concurrency/scheduler.html', attributes: []},
{name: 'std.concurrency.Scheduler.newCondition', kind: "functiondeclaration", path: './std/concurrency/scheduler.new_condition.html', attributes: ["abstract"]},
{name: 'std.concurrency.Scheduler.start', kind: "functiondeclaration", path: './std/concurrency/scheduler.start.html', attributes: ["abstract"]},
{name: 'std.concurrency.Scheduler.thisInfo', kind: "functiondeclaration", path: './std/concurrency/scheduler.this_info.html', attributes: ["abstract", "nothrow", "ref", "property"]},
{name: 'std.concurrency.Scheduler.yield', kind: "functiondeclaration", path: './std/concurrency/scheduler.yield.html', attributes: ["abstract"]},
{name: 'std.concurrency.scheduler', kind: "variabledeclaration", path: './std/concurrency/scheduler.html', attributes: []},
{name: 'std.concurrency.send', kind: "functiondeclaration", path: './std/concurrency/send.html', attributes: []},
{name: 'std.concurrency.setMaxMailboxSize', kind: "functiondeclaration", path: './std/concurrency/set_max_mailbox_size.html', attributes: ["pure", "safe"]},
{name: 'std.concurrency.spawn', kind: "functiondeclaration", path: './std/concurrency/spawn.html', attributes: []},
{name: 'std.concurrency.spawnLinked', kind: "functiondeclaration", path: './std/concurrency/spawn_linked.html', attributes: []},
{name: 'std.concurrency.thisTid', kind: "functiondeclaration", path: './std/concurrency/this_tid.html', attributes: ["property", "safe"]},
{name: 'std.concurrency.ThreadInfo', kind: "structdeclaration", path: './std/concurrency/thread_info.html', attributes: []},
{name: 'std.concurrency.ThreadInfo.cleanup', kind: "functiondeclaration", path: './std/concurrency/thread_info.cleanup.html', attributes: []},
{name: 'std.concurrency.ThreadInfo.thisInfo', kind: "functiondeclaration", path: './std/concurrency/thread_info.this_info.html', attributes: ["static", "nothrow", "ref", "property", "nogc", "safe"]},
{name: 'std.concurrency.ThreadScheduler', kind: "classdeclaration", path: './std/concurrency/thread_scheduler.html', attributes: []},
{name: 'std.concurrency.ThreadScheduler.newCondition', kind: "functiondeclaration", path: './std/concurrency/thread_scheduler.new_condition.html', attributes: []},
{name: 'std.concurrency.ThreadScheduler.spawn', kind: "functiondeclaration", path: './std/concurrency/thread_scheduler.spawn.html', attributes: []},
{name: 'std.concurrency.ThreadScheduler.start', kind: "functiondeclaration", path: './std/concurrency/thread_scheduler.start.html', attributes: []},
{name: 'std.concurrency.ThreadScheduler.thisInfo', kind: "functiondeclaration", path: './std/concurrency/thread_scheduler.this_info.html', attributes: ["nothrow", "ref", "property"]},
{name: 'std.concurrency.ThreadScheduler.yield', kind: "functiondeclaration", path: './std/concurrency/thread_scheduler.yield.html', attributes: []},
{name: 'std.concurrency.Tid', kind: "structdeclaration", path: './std/concurrency/tid.html', attributes: []},
{name: 'std.concurrency.Tid.toString', kind: "functiondeclaration", path: './std/concurrency/tid.to_string.html', attributes: []},
{name: 'std.concurrency.TidMissingException', kind: "classdeclaration", path: './std/concurrency/tid_missing_exception.html', attributes: []},
{name: 'std.concurrency.unregister', kind: "functiondeclaration", path: './std/concurrency/unregister.html', attributes: []},
{name: 'std.concurrency.yield', kind: "functiondeclaration", path: './std/concurrency/yield.html', attributes: []},
{name: 'std.container', kind: "module", path: './std/container.html', attributes: []},
{name: 'std.conv', kind: "module", path: './std/conv.html', attributes: []},
{name: 'std.conv.asOriginalType', kind: "functiondeclaration", path: './std/conv/as_original_type.html', attributes: []},
{name: 'std.conv.castFrom', kind: "templatedeclaration", path: './std/conv/cast_from.html', attributes: []},
{name: 'std.conv.castFrom.to', kind: "functiondeclaration", path: './std/conv/cast_from.to.html', attributes: ["auto", "ref", "system"]},
{name: 'std.conv.ConvException', kind: "classdeclaration", path: './std/conv/conv_exception.html', attributes: []},
{name: 'std.conv.ConvOverflowException', kind: "classdeclaration", path: './std/conv/conv_overflow_exception.html', attributes: []},
{name: 'std.conv.dtext', kind: "functiondeclaration", path: './std/conv/dtext.html', attributes: []},
{name: 'std.conv.emplace', kind: "functiondeclaration", path: './std/conv/emplace.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.conv.hexString', kind: "enummemberdeclaration", path: './std/conv/hex_string.html', attributes: []},
{name: 'std.conv.octal', kind: "enummemberdeclaration", path: './std/conv/octal.html', attributes: []},
{name: 'std.conv.parse', kind: "functiondeclaration", path: './std/conv/parse.html', attributes: []},
{name: 'std.conv.roundTo', kind: "templatedeclaration", path: './std/conv/round_to.html', attributes: []},
{name: 'std.conv.roundTo.roundTo', kind: "functiondeclaration", path: './std/conv/round_to.round_to.html', attributes: []},
{name: 'std.conv.signed', kind: "functiondeclaration", path: './std/conv/signed.html', attributes: ["auto"]},
{name: 'std.conv.text', kind: "functiondeclaration", path: './std/conv/text.html', attributes: []},
{name: 'std.conv.to', kind: "templatedeclaration", path: './std/conv/to.html', attributes: []},
{name: 'std.conv.to.to', kind: "functiondeclaration", path: './std/conv/to.to.html', attributes: []},
{name: 'std.conv.toChars', kind: "functiondeclaration", path: './std/conv/to_chars.html', attributes: ["auto", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.conv.unsigned', kind: "functiondeclaration", path: './std/conv/unsigned.html', attributes: ["auto"]},
{name: 'std.conv.wtext', kind: "functiondeclaration", path: './std/conv/wtext.html', attributes: []},
{name: 'std.csv', kind: "module", path: './std/csv.html', attributes: []},
{name: 'std.csv.CSVException', kind: "classdeclaration", path: './std/csv/csv_exception.html', attributes: []},
{name: 'std.csv.CSVException.col', kind: "variabledeclaration", path: './std/csv/csv_exception.col.html', attributes: []},
{name: 'std.csv.CSVException.row', kind: "variabledeclaration", path: './std/csv/csv_exception.row.html', attributes: []},
{name: 'std.csv.csvNextToken', kind: "functiondeclaration", path: './std/csv/csv_next_token.html', attributes: []},
{name: 'std.csv.csvReader', kind: "functiondeclaration", path: './std/csv/csv_reader.html', attributes: ["auto"]},
{name: 'std.csv.HeaderMismatchException', kind: "classdeclaration", path: './std/csv/header_mismatch_exception.html', attributes: []},
{name: 'std.csv.IncompleteCellException', kind: "classdeclaration", path: './std/csv/incomplete_cell_exception.html', attributes: []},
{name: 'std.csv.IncompleteCellException.partialData', kind: "variabledeclaration", path: './std/csv/incomplete_cell_exception.partial_data.html', attributes: []},
{name: 'std.csv.Malformed', kind: "enumdeclaration", path: './std/csv/malformed.html', attributes: []},
{name: 'std.csv.Malformed.ignore', kind: "enummemberdeclaration", path: './std/csv/malformed.html#ignore', attributes: []},
{name: 'std.csv.Malformed.throwException', kind: "enummemberdeclaration", path: './std/csv/malformed.html#throwException', attributes: []},
{name: 'std.datetime', kind: "module", path: './std/datetime.html', attributes: []},
{name: 'std.demangle', kind: "module", path: './std/demangle.html', attributes: []},
{name: 'std.demangle.demangle', kind: "functiondeclaration", path: './std/demangle/demangle.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.digest', kind: "module", path: './std/digest.html', attributes: []},
{name: 'std.digest.digest', kind: "functiondeclaration", path: './std/digest/digest.html', attributes: []},
{name: 'std.digest.Digest', kind: "interfacedeclaration", path: './std/digest/digest.html', attributes: []},
{name: 'std.digest.Digest.digest', kind: "functiondeclaration", path: './std/digest/digest.digest.html', attributes: ["final", "abstract", "nothrow", "trusted"]},
{name: 'std.digest.Digest.finish', kind: "functiondeclaration", path: './std/digest/digest.finish.html', attributes: ["abstract", "nothrow", "trusted"]},
{name: 'std.digest.Digest.length', kind: "functiondeclaration", path: './std/digest/digest.length.html', attributes: ["abstract", "nothrow", "property", "trusted", "const"]},
{name: 'std.digest.Digest.put', kind: "functiondeclaration", path: './std/digest/digest.put.html', attributes: ["abstract", "nothrow", "trusted"]},
{name: 'std.digest.Digest.reset', kind: "functiondeclaration", path: './std/digest/digest.reset.html', attributes: ["abstract", "nothrow", "trusted"]},
{name: 'std.digest.DigestType', kind: "aliasdeclaration", path: './std/digest/digest_type.html', attributes: []},
{name: 'std.digest.ExampleDigest', kind: "structdeclaration", path: './std/digest/example_digest.html', attributes: []},
{name: 'std.digest.ExampleDigest.finish', kind: "functiondeclaration", path: './std/digest/example_digest.finish.html', attributes: ["trusted"]},
{name: 'std.digest.ExampleDigest.put', kind: "functiondeclaration", path: './std/digest/example_digest.put.html', attributes: ["trusted"]},
{name: 'std.digest.ExampleDigest.start', kind: "functiondeclaration", path: './std/digest/example_digest.start.html', attributes: ["trusted"]},
{name: 'std.digest.hasBlockSize', kind: "enummemberdeclaration", path: './std/digest/has_block_size.html', attributes: []},
{name: 'std.digest.hasPeek', kind: "enummemberdeclaration", path: './std/digest/has_peek.html', attributes: []},
{name: 'std.digest.hexDigest', kind: "functiondeclaration", path: './std/digest/hex_digest.html', attributes: []},
{name: 'std.digest.isDigest', kind: "enummemberdeclaration", path: './std/digest/is_digest.html', attributes: []},
{name: 'std.digest.makeDigest', kind: "functiondeclaration", path: './std/digest/make_digest.html', attributes: []},
{name: 'std.digest.Order', kind: "enumdeclaration", path: './std/digest/order.html', attributes: []},
{name: 'std.digest.Order.decreasing', kind: "enummemberdeclaration", path: './std/digest/order.html#decreasing', attributes: []},
{name: 'std.digest.Order.increasing', kind: "enummemberdeclaration", path: './std/digest/order.html#increasing', attributes: []},
{name: 'std.digest.secureEqual', kind: "functiondeclaration", path: './std/digest/secure_equal.html', attributes: []},
{name: 'std.digest.toHexString', kind: "functiondeclaration", path: './std/digest/to_hex_string.html', attributes: []},
{name: 'std.digest.WrapperDigest', kind: "classdeclaration", path: './std/digest/wrapper_digest.html', attributes: []},
{name: 'std.digest.WrapperDigest.finish', kind: "functiondeclaration", path: './std/digest/wrapper_digest.finish.html', attributes: ["nothrow"]},
{name: 'std.digest.WrapperDigest.length', kind: "functiondeclaration", path: './std/digest/wrapper_digest.length.html', attributes: ["const", "pure", "nothrow", "property", "trusted"]},
{name: 'std.digest.WrapperDigest.peek', kind: "functiondeclaration", path: './std/digest/wrapper_digest.peek.html', attributes: ["const", "trusted"]},
{name: 'std.digest.WrapperDigest.put', kind: "functiondeclaration", path: './std/digest/wrapper_digest.put.html', attributes: []},
{name: 'std.digest.WrapperDigest.reset', kind: "functiondeclaration", path: './std/digest/wrapper_digest.reset.html', attributes: ["nothrow", "trusted"]},
{name: 'std.digest.WrapperDigest.this', kind: "functiondeclaration", path: './std/digest/wrapper_digest.this.html', attributes: []},
{name: 'std.encoding', kind: "module", path: './std/encoding.html', attributes: []},
{name: 'std.encoding.AsciiChar', kind: "enumdeclaration", path: './std/encoding/ascii_char.html', attributes: []},
{name: 'std.encoding.AsciiString', kind: "aliasdeclaration", path: './std/encoding/ascii_string.html', attributes: []},
{name: 'std.encoding.BOM', kind: "enumdeclaration", path: './std/encoding/bom.html', attributes: []},
{name: 'std.encoding.BOM.bocu1', kind: "enummemberdeclaration", path: './std/encoding/bom.html#bocu1', attributes: []},
{name: 'std.encoding.BOM.gb18030', kind: "enummemberdeclaration", path: './std/encoding/bom.html#gb18030', attributes: []},
{name: 'std.encoding.BOM.none', kind: "enummemberdeclaration", path: './std/encoding/bom.html#none', attributes: []},
{name: 'std.encoding.BOM.scsu', kind: "enummemberdeclaration", path: './std/encoding/bom.html#scsu', attributes: []},
{name: 'std.encoding.BOM.utf1', kind: "enummemberdeclaration", path: './std/encoding/bom.html#utf1', attributes: []},
{name: 'std.encoding.BOM.utf16be', kind: "enummemberdeclaration", path: './std/encoding/bom.html#utf16be', attributes: []},
{name: 'std.encoding.BOM.utf16le', kind: "enummemberdeclaration", path: './std/encoding/bom.html#utf16le', attributes: []},
{name: 'std.encoding.BOM.utf32be', kind: "enummemberdeclaration", path: './std/encoding/bom.html#utf32be', attributes: []},
{name: 'std.encoding.BOM.utf32le', kind: "enummemberdeclaration", path: './std/encoding/bom.html#utf32le', attributes: []},
{name: 'std.encoding.BOM.utf8', kind: "enummemberdeclaration", path: './std/encoding/bom.html#utf8', attributes: []},
{name: 'std.encoding.BOM.utfebcdic', kind: "enummemberdeclaration", path: './std/encoding/bom.html#utfebcdic', attributes: []},
{name: 'std.encoding.BOMSeq', kind: "aliasdeclaration", path: './std/encoding/bom_seq.html', attributes: []},
{name: 'std.encoding.bomTable', kind: "variabledeclaration", path: './std/encoding/bom_table.html', attributes: []},
{name: 'std.encoding.canEncode', kind: "functiondeclaration", path: './std/encoding/can_encode.html', attributes: []},
{name: 'std.encoding.codePoints', kind: "functiondeclaration", path: './std/encoding/code_points.html', attributes: []},
{name: 'std.encoding.codeUnits', kind: "functiondeclaration", path: './std/encoding/code_units.html', attributes: []},
{name: 'std.encoding.decode', kind: "functiondeclaration", path: './std/encoding/decode.html', attributes: []},
{name: 'std.encoding.decodeReverse', kind: "functiondeclaration", path: './std/encoding/decode_reverse.html', attributes: []},
{name: 'std.encoding.encode', kind: "functiondeclaration", path: './std/encoding/encode.html', attributes: []},
{name: 'std.encoding.encodedLength', kind: "functiondeclaration", path: './std/encoding/encoded_length.html', attributes: []},
{name: 'std.encoding.EncodingException', kind: "classdeclaration", path: './std/encoding/encoding_exception.html', attributes: []},
{name: 'std.encoding.encodingName', kind: "functiondeclaration", path: './std/encoding/encoding_name.html', attributes: ["property"]},
{name: 'std.encoding.EncodingScheme', kind: "classdeclaration", path: './std/encoding/encoding_scheme.html', attributes: []},
{name: 'std.encoding.EncodingScheme.canEncode', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.can_encode.html', attributes: ["abstract", "const"]},
{name: 'std.encoding.EncodingScheme.count', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.count.html', attributes: []},
{name: 'std.encoding.EncodingScheme.create', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.create.html', attributes: ["static"]},
{name: 'std.encoding.EncodingScheme.decode', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.decode.html', attributes: ["abstract", "const"]},
{name: 'std.encoding.EncodingScheme.encode', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.encode.html', attributes: ["abstract", "const"]},
{name: 'std.encoding.EncodingScheme.encodedLength', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.encoded_length.html', attributes: ["abstract", "const"]},
{name: 'std.encoding.EncodingScheme.firstSequence', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.first_sequence.html', attributes: []},
{name: 'std.encoding.EncodingScheme.index', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.index.html', attributes: []},
{name: 'std.encoding.EncodingScheme.isValid', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.is_valid.html', attributes: []},
{name: 'std.encoding.EncodingScheme.names', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.names.html', attributes: ["abstract", "const"]},
{name: 'std.encoding.EncodingScheme.register', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.register.html', attributes: []},
{name: 'std.encoding.EncodingScheme.replacementSequence', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.replacement_sequence.html', attributes: ["abstract", "property", "const"]},
{name: 'std.encoding.EncodingScheme.safeDecode', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.safe_decode.html', attributes: ["abstract", "const"]},
{name: 'std.encoding.EncodingScheme.sanitize', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.sanitize.html', attributes: []},
{name: 'std.encoding.EncodingScheme.toString', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.to_string.html', attributes: ["abstract", "override", "const"]},
{name: 'std.encoding.EncodingScheme.validLength', kind: "functiondeclaration", path: './std/encoding/encoding_scheme.valid_length.html', attributes: []},
{name: 'std.encoding.EncodingSchemeASCII', kind: "classdeclaration", path: './std/encoding/encoding_scheme_ascii.html', attributes: []},
{name: 'std.encoding.EncodingSchemeLatin1', kind: "classdeclaration", path: './std/encoding/encoding_scheme_latin1.html', attributes: []},
{name: 'std.encoding.EncodingSchemeLatin2', kind: "classdeclaration", path: './std/encoding/encoding_scheme_latin2.html', attributes: []},
{name: 'std.encoding.EncodingSchemeUtf16Native', kind: "classdeclaration", path: './std/encoding/encoding_scheme_utf16_native.html', attributes: []},
{name: 'std.encoding.EncodingSchemeUtf32Native', kind: "classdeclaration", path: './std/encoding/encoding_scheme_utf32_native.html', attributes: []},
{name: 'std.encoding.EncodingSchemeUtf8', kind: "classdeclaration", path: './std/encoding/encoding_scheme_utf8.html', attributes: []},
{name: 'std.encoding.EncodingSchemeWindows1250', kind: "classdeclaration", path: './std/encoding/encoding_scheme_windows1250.html', attributes: []},
{name: 'std.encoding.EncodingSchemeWindows1251', kind: "classdeclaration", path: './std/encoding/encoding_scheme_windows1251.html', attributes: []},
{name: 'std.encoding.EncodingSchemeWindows1252', kind: "classdeclaration", path: './std/encoding/encoding_scheme_windows1252.html', attributes: []},
{name: 'std.encoding.firstSequence', kind: "functiondeclaration", path: './std/encoding/first_sequence.html', attributes: []},
{name: 'std.encoding.getBOM', kind: "functiondeclaration", path: './std/encoding/get_bom.html', attributes: []},
{name: 'std.encoding.index', kind: "functiondeclaration", path: './std/encoding/index.html', attributes: []},
{name: 'std.encoding.INVALID_SEQUENCE', kind: "enummemberdeclaration", path: './std/encoding/invali_d_sequence.html', attributes: []},
{name: 'std.encoding.isValid', kind: "functiondeclaration", path: './std/encoding/is_valid.html', attributes: []},
{name: 'std.encoding.isValidCodePoint', kind: "functiondeclaration", path: './std/encoding/is_valid_code_point.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.encoding.isValidCodeUnit', kind: "functiondeclaration", path: './std/encoding/is_valid_code_unit.html', attributes: []},
{name: 'std.encoding.lastSequence', kind: "functiondeclaration", path: './std/encoding/last_sequence.html', attributes: []},
{name: 'std.encoding.Latin1Char', kind: "enumdeclaration", path: './std/encoding/latin1_char.html', attributes: []},
{name: 'std.encoding.Latin1String', kind: "aliasdeclaration", path: './std/encoding/latin1_string.html', attributes: []},
{name: 'std.encoding.Latin2Char', kind: "enumdeclaration", path: './std/encoding/latin2_char.html', attributes: []},
{name: 'std.encoding.Latin2String', kind: "aliasdeclaration", path: './std/encoding/latin2_string.html', attributes: []},
{name: 'std.encoding.safeDecode', kind: "functiondeclaration", path: './std/encoding/safe_decode.html', attributes: []},
{name: 'std.encoding.sanitize', kind: "functiondeclaration", path: './std/encoding/sanitize.html', attributes: []},
{name: 'std.encoding.transcode', kind: "functiondeclaration", path: './std/encoding/transcode.html', attributes: []},
{name: 'std.encoding.utfBOM', kind: "enummemberdeclaration", path: './std/encoding/utf_bom.html', attributes: []},
{name: 'std.encoding.validLength', kind: "functiondeclaration", path: './std/encoding/valid_length.html', attributes: []},
{name: 'std.encoding.Windows1250Char', kind: "enumdeclaration", path: './std/encoding/windows1250_char.html', attributes: []},
{name: 'std.encoding.Windows1250String', kind: "aliasdeclaration", path: './std/encoding/windows1250_string.html', attributes: []},
{name: 'std.encoding.Windows1251Char', kind: "enumdeclaration", path: './std/encoding/windows1251_char.html', attributes: []},
{name: 'std.encoding.Windows1251String', kind: "aliasdeclaration", path: './std/encoding/windows1251_string.html', attributes: []},
{name: 'std.encoding.Windows1252Char', kind: "enumdeclaration", path: './std/encoding/windows1252_char.html', attributes: []},
{name: 'std.encoding.Windows1252String', kind: "aliasdeclaration", path: './std/encoding/windows1252_string.html', attributes: []},
{name: 'std.exception', kind: "module", path: './std/exception.html', attributes: []},
{name: 'std.exception.assertNotThrown', kind: "functiondeclaration", path: './std/exception/assert_not_thrown.html', attributes: ["auto"]},
{name: 'std.exception.assertThrown', kind: "functiondeclaration", path: './std/exception/assert_thrown.html', attributes: []},
{name: 'std.exception.assumeUnique', kind: "functiondeclaration", path: './std/exception/assume_unique.html', attributes: ["pure", "nothrow"]},
{name: 'std.exception.assumeWontThrow', kind: "functiondeclaration", path: './std/exception/assume_wont_throw.html', attributes: ["nothrow"]},
{name: 'std.exception.basicExceptionCtors', kind: "templatedeclaration", path: './std/exception/basic_exception_ctors.html', attributes: []},
{name: 'std.exception.basicExceptionCtors.this', kind: "functiondeclaration", path: './std/exception/basic_exception_ctors.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.exception.collectException', kind: "functiondeclaration", path: './std/exception/collect_exception.html', attributes: []},
{name: 'std.exception.collectExceptionMsg', kind: "functiondeclaration", path: './std/exception/collect_exception_msg.html', attributes: []},
{name: 'std.exception.doesPointTo', kind: "functiondeclaration", path: './std/exception/does_point_to.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.exception.emptyExceptionMsg', kind: "enummemberdeclaration", path: './std/exception/empty_exception_msg.html', attributes: []},
{name: 'std.exception.enforce', kind: "templatedeclaration", path: './std/exception/enforce.html', attributes: []},
{name: 'std.exception.enforce.enforce', kind: "functiondeclaration", path: './std/exception/enforce.enforce.html', attributes: []},
{name: 'std.exception.enforceEx', kind: "templatedeclaration", path: './std/exception/enforce_ex.html', attributes: []},
{name: 'std.exception.enforceEx.enforceEx', kind: "functiondeclaration", path: './std/exception/enforce_ex.enforce_ex.html', attributes: []},
{name: 'std.exception.errnoEnforce', kind: "aliasdeclaration", path: './std/exception/errno_enforce.html', attributes: []},
{name: 'std.exception.ErrnoException', kind: "classdeclaration", path: './std/exception/errno_exception.html', attributes: []},
{name: 'std.exception.ErrnoException.errno', kind: "functiondeclaration", path: './std/exception/errno_exception.errno.html', attributes: ["final", "pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.exception.ErrnoException.this', kind: "functiondeclaration", path: './std/exception/errno_exception.this.html', attributes: ["safe"]},
{name: 'std.exception.handle', kind: "functiondeclaration", path: './std/exception/handle.html', attributes: ["auto"]},
{name: 'std.exception.ifThrown', kind: "functiondeclaration", path: './std/exception/if_thrown.html', attributes: []},
{name: 'std.exception.mayPointTo', kind: "functiondeclaration", path: './std/exception/may_point_to.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.exception.RangePrimitive', kind: "enumdeclaration", path: './std/exception/range_primitive.html', attributes: []},
{name: 'std.exception.RangePrimitive.access', kind: "enummemberdeclaration", path: './std/exception/range_primitive.html#access', attributes: []},
{name: 'std.exception.RangePrimitive.back', kind: "enummemberdeclaration", path: './std/exception/range_primitive.html#back', attributes: []},
{name: 'std.exception.RangePrimitive.empty', kind: "enummemberdeclaration", path: './std/exception/range_primitive.html#empty', attributes: []},
{name: 'std.exception.RangePrimitive.front', kind: "enummemberdeclaration", path: './std/exception/range_primitive.html#front', attributes: []},
{name: 'std.exception.RangePrimitive.length', kind: "enummemberdeclaration", path: './std/exception/range_primitive.html#length', attributes: []},
{name: 'std.exception.RangePrimitive.opDollar', kind: "enummemberdeclaration", path: './std/exception/range_primitive.html#opDollar', attributes: []},
{name: 'std.exception.RangePrimitive.opIndex', kind: "enummemberdeclaration", path: './std/exception/range_primitive.html#opIndex', attributes: []},
{name: 'std.exception.RangePrimitive.opSlice', kind: "enummemberdeclaration", path: './std/exception/range_primitive.html#opSlice', attributes: []},
{name: 'std.exception.RangePrimitive.pop', kind: "enummemberdeclaration", path: './std/exception/range_primitive.html#pop', attributes: []},
{name: 'std.exception.RangePrimitive.popBack', kind: "enummemberdeclaration", path: './std/exception/range_primitive.html#popBack', attributes: []},
{name: 'std.exception.RangePrimitive.popFront', kind: "enummemberdeclaration", path: './std/exception/range_primitive.html#popFront', attributes: []},
{name: 'std.exception.RangePrimitive.save', kind: "enummemberdeclaration", path: './std/exception/range_primitive.html#save', attributes: []},
{name: 'std.file', kind: "module", path: './std/file.html', attributes: []},
{name: 'std.file.append', kind: "functiondeclaration", path: './std/file/append.html', attributes: []},
{name: 'std.file.attrIsDir', kind: "functiondeclaration", path: './std/file/attr_is_dir.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.file.attrIsFile', kind: "functiondeclaration", path: './std/file/attr_is_file.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.file.attrIsSymlink', kind: "functiondeclaration", path: './std/file/attr_is_symlink.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.file.chdir', kind: "functiondeclaration", path: './std/file/chdir.html', attributes: []},
{name: 'std.file.copy', kind: "functiondeclaration", path: './std/file/copy.html', attributes: []},
{name: 'std.file.dirEntries', kind: "functiondeclaration", path: './std/file/dir_entries.html', attributes: ["auto"]},
{name: 'std.file.DirEntry', kind: "structdeclaration", path: './std/file/dir_entry.html', attributes: []},
{name: 'std.file.DirEntry.attributes', kind: "functiondeclaration", path: './std/file/dir_entry.attributes.html', attributes: ["property", "safe"]},
{name: 'std.file.DirEntry.isDir', kind: "functiondeclaration", path: './std/file/dir_entry.is_dir.html', attributes: ["property", "safe"]},
{name: 'std.file.DirEntry.isFile', kind: "functiondeclaration", path: './std/file/dir_entry.is_file.html', attributes: ["property", "safe"]},
{name: 'std.file.DirEntry.isSymlink', kind: "functiondeclaration", path: './std/file/dir_entry.is_symlink.html', attributes: ["property", "safe"]},
{name: 'std.file.DirEntry.linkAttributes', kind: "functiondeclaration", path: './std/file/dir_entry.link_attributes.html', attributes: ["property", "safe"]},
{name: 'std.file.DirEntry.name', kind: "functiondeclaration", path: './std/file/dir_entry.name.html', attributes: ["property", "safe", "const"]},
{name: 'std.file.DirEntry.size', kind: "functiondeclaration", path: './std/file/dir_entry.size.html', attributes: ["property", "safe"]},
{name: 'std.file.DirEntry.statBuf', kind: "functiondeclaration", path: './std/file/dir_entry.stat_buf.html', attributes: ["property", "safe"]},
{name: 'std.file.DirEntry.this', kind: "functiondeclaration", path: './std/file/dir_entry.this.html', attributes: ["ref", "safe"]},
{name: 'std.file.DirEntry.timeCreated', kind: "functiondeclaration", path: './std/file/dir_entry.time_created.html', attributes: ["property", "safe", "const"]},
{name: 'std.file.DirEntry.timeLastAccessed', kind: "functiondeclaration", path: './std/file/dir_entry.time_last_accessed.html', attributes: ["property", "safe"]},
{name: 'std.file.DirEntry.timeLastModified', kind: "functiondeclaration", path: './std/file/dir_entry.time_last_modified.html', attributes: ["property", "safe"]},
{name: 'std.file.DirEntry.timeStatusChanged', kind: "functiondeclaration", path: './std/file/dir_entry.time_status_changed.html', attributes: ["property", "safe", "const"]},
{name: 'std.file.exists', kind: "functiondeclaration", path: './std/file/exists.html', attributes: []},
{name: 'std.file.FileException', kind: "classdeclaration", path: './std/file/file_exception.html', attributes: []},
{name: 'std.file.FileException.errno', kind: "variabledeclaration", path: './std/file/file_exception.errno.html', attributes: []},
{name: 'std.file.FileException.this', kind: "functiondeclaration", path: './std/file/file_exception.this.html', attributes: ["pure", "safe"]},
{name: 'std.file.getAttributes', kind: "functiondeclaration", path: './std/file/get_attributes.html', attributes: []},
{name: 'std.file.getAvailableDiskSpace', kind: "functiondeclaration", path: './std/file/get_available_disk_space.html', attributes: ["safe"]},
{name: 'std.file.getcwd', kind: "functiondeclaration", path: './std/file/getcwd.html', attributes: ["trusted"]},
{name: 'std.file.getLinkAttributes', kind: "functiondeclaration", path: './std/file/get_link_attributes.html', attributes: []},
{name: 'std.file.getSize', kind: "functiondeclaration", path: './std/file/get_size.html', attributes: []},
{name: 'std.file.getTimes', kind: "functiondeclaration", path: './std/file/get_times.html', attributes: []},
{name: 'std.file.getTimesWin', kind: "functiondeclaration", path: './std/file/get_times_win.html', attributes: []},
{name: 'std.file.isDir', kind: "functiondeclaration", path: './std/file/is_dir.html', attributes: ["property"]},
{name: 'std.file.isFile', kind: "functiondeclaration", path: './std/file/is_file.html', attributes: ["property"]},
{name: 'std.file.isSymlink', kind: "functiondeclaration", path: './std/file/is_symlink.html', attributes: ["property"]},
{name: 'std.file.mkdir', kind: "functiondeclaration", path: './std/file/mkdir.html', attributes: []},
{name: 'std.file.mkdirRecurse', kind: "functiondeclaration", path: './std/file/mkdir_recurse.html', attributes: ["safe"]},
{name: 'std.file.preserveAttributesDefault', kind: "variabledeclaration", path: './std/file/preserve_attributes_default.html', attributes: []},
{name: 'std.file.read', kind: "functiondeclaration", path: './std/file/read.html', attributes: []},
{name: 'std.file.readLink', kind: "functiondeclaration", path: './std/file/read_link.html', attributes: []},
{name: 'std.file.readText', kind: "functiondeclaration", path: './std/file/read_text.html', attributes: []},
{name: 'std.file.remove', kind: "functiondeclaration", path: './std/file/remove.html', attributes: []},
{name: 'std.file.rename', kind: "functiondeclaration", path: './std/file/rename.html', attributes: []},
{name: 'std.file.rmdir', kind: "functiondeclaration", path: './std/file/rmdir.html', attributes: []},
{name: 'std.file.rmdirRecurse', kind: "functiondeclaration", path: './std/file/rmdir_recurse.html', attributes: []},
{name: 'std.file.setAttributes', kind: "functiondeclaration", path: './std/file/set_attributes.html', attributes: []},
{name: 'std.file.setTimes', kind: "functiondeclaration", path: './std/file/set_times.html', attributes: []},
{name: 'std.file.slurp', kind: "functiondeclaration", path: './std/file/slurp.html', attributes: []},
{name: 'std.file.SpanMode', kind: "enumdeclaration", path: './std/file/span_mode.html', attributes: []},
{name: 'std.file.SpanMode.breadth', kind: "enummemberdeclaration", path: './std/file/span_mode.html#breadth', attributes: []},
{name: 'std.file.SpanMode.depth', kind: "enummemberdeclaration", path: './std/file/span_mode.html#depth', attributes: []},
{name: 'std.file.SpanMode.shallow', kind: "enummemberdeclaration", path: './std/file/span_mode.html#shallow', attributes: []},
{name: 'std.file.symlink', kind: "functiondeclaration", path: './std/file/symlink.html', attributes: []},
{name: 'std.file.tempDir', kind: "functiondeclaration", path: './std/file/temp_dir.html', attributes: ["trusted"]},
{name: 'std.file.thisExePath', kind: "functiondeclaration", path: './std/file/this_exe_path.html', attributes: ["trusted"]},
{name: 'std.file.timeLastAccessed', kind: "functiondeclaration", path: './std/file/time_last_accessed.html', attributes: ["pure", "nothrow"]},
{name: 'std.file.timeLastModified', kind: "functiondeclaration", path: './std/file/time_last_modified.html', attributes: []},
{name: 'std.file.timeStatusChanged', kind: "functiondeclaration", path: './std/file/time_status_changed.html', attributes: ["pure", "nothrow"]},
{name: 'std.file.write', kind: "functiondeclaration", path: './std/file/write.html', attributes: []},
{name: 'std.format', kind: "module", path: './std/format.html', attributes: []},
{name: 'std.format.format', kind: "functiondeclaration", path: './std/format/format.html', attributes: []},
{name: 'std.format.FormatException', kind: "classdeclaration", path: './std/format/format_exception.html', attributes: []},
{name: 'std.format.FormatSpec', kind: "structdeclaration", path: './std/format/format_spec.html', attributes: []},
{name: 'std.format.FormatSpec.DYNAMIC', kind: "enummemberdeclaration", path: './std/format/format_spec.dynamic.html', attributes: []},
{name: 'std.format.FormatSpec.flDash', kind: "variabledeclaration", path: './std/format/format_spec.fl_dash.html', attributes: []},
{name: 'std.format.FormatSpec.flHash', kind: "variabledeclaration", path: './std/format/format_spec.fl_hash.html', attributes: []},
{name: 'std.format.FormatSpec.flPlus', kind: "variabledeclaration", path: './std/format/format_spec.fl_plus.html', attributes: []},
{name: 'std.format.FormatSpec.flSeparator', kind: "variabledeclaration", path: './std/format/format_spec.fl_separator.html', attributes: []},
{name: 'std.format.FormatSpec.flSpace', kind: "variabledeclaration", path: './std/format/format_spec.fl_space.html', attributes: []},
{name: 'std.format.FormatSpec.flZero', kind: "variabledeclaration", path: './std/format/format_spec.fl_zero.html', attributes: []},
{name: 'std.format.FormatSpec.indexEnd', kind: "variabledeclaration", path: './std/format/format_spec.index_end.html', attributes: []},
{name: 'std.format.FormatSpec.indexStart', kind: "variabledeclaration", path: './std/format/format_spec.index_start.html', attributes: []},
{name: 'std.format.FormatSpec.nested', kind: "variabledeclaration", path: './std/format/format_spec.nested.html', attributes: []},
{name: 'std.format.FormatSpec.precision', kind: "variabledeclaration", path: './std/format/format_spec.precision.html', attributes: []},
{name: 'std.format.FormatSpec.sep', kind: "variabledeclaration", path: './std/format/format_spec.sep.html', attributes: []},
{name: 'std.format.FormatSpec.separatorChar', kind: "variabledeclaration", path: './std/format/format_spec.separator_char.html', attributes: []},
{name: 'std.format.FormatSpec.separatorCharPos', kind: "variabledeclaration", path: './std/format/format_spec.separator_char_pos.html', attributes: []},
{name: 'std.format.FormatSpec.separators', kind: "variabledeclaration", path: './std/format/format_spec.separators.html', attributes: []},
{name: 'std.format.FormatSpec.spec', kind: "variabledeclaration", path: './std/format/format_spec.spec.html', attributes: []},
{name: 'std.format.FormatSpec.this', kind: "functiondeclaration", path: './std/format/format_spec.this.html', attributes: ["pure", "safe"]},
{name: 'std.format.FormatSpec.toString', kind: "functiondeclaration", path: './std/format/format_spec.to_string.html', attributes: ["const"]},
{name: 'std.format.FormatSpec.trailing', kind: "variabledeclaration", path: './std/format/format_spec.trailing.html', attributes: []},
{name: 'std.format.FormatSpec.UNSPECIFIED', kind: "enummemberdeclaration", path: './std/format/format_spec.unspecified.html', attributes: []},
{name: 'std.format.FormatSpec.width', kind: "variabledeclaration", path: './std/format/format_spec.width.html', attributes: []},
{name: 'std.format.FormatSpec.writeUpToNextSpec', kind: "functiondeclaration", path: './std/format/format_spec.write_up_to_next_spec.html', attributes: ["scope"]},
{name: 'std.format.formattedRead', kind: "functiondeclaration", path: './std/format/formatted_read.html', attributes: []},
{name: 'std.format.formattedWrite', kind: "functiondeclaration", path: './std/format/formatted_write.html', attributes: []},
{name: 'std.format.formatValue', kind: "functiondeclaration", path: './std/format/format_value.html', attributes: []},
{name: 'std.format.sformat', kind: "functiondeclaration", path: './std/format/sformat.html', attributes: []},
{name: 'std.format.singleSpec', kind: "functiondeclaration", path: './std/format/single_spec.html', attributes: []},
{name: 'std.format.unformatValue', kind: "functiondeclaration", path: './std/format/unformat_value.html', attributes: []},
{name: 'std.functional', kind: "module", path: './std/functional.html', attributes: []},
{name: 'std.functional.adjoin', kind: "aliasdeclaration", path: './std/functional/adjoin.html', attributes: []},
{name: 'std.functional.adjoin.adjoin', kind: "functiondeclaration", path: './std/functional/adjoin.adjoin.html', attributes: ["auto"]},
{name: 'std.functional.binaryFun', kind: "templatedeclaration", path: './std/functional/binary_fun.html', attributes: []},
{name: 'std.functional.binaryFun.binaryFun', kind: "functiondeclaration", path: './std/functional/binary_fun.binary_fun.html', attributes: ["auto"]},
{name: 'std.functional.compose', kind: "aliasdeclaration", path: './std/functional/compose.html', attributes: []},
{name: 'std.functional.curry', kind: "functiondeclaration", path: './std/functional/curry.html', attributes: ["auto"]},
{name: 'std.functional.equalTo', kind: "aliasdeclaration", path: './std/functional/equal_to.html', attributes: []},
{name: 'std.functional.forward', kind: "aliasdeclaration", path: './std/functional/forward.html', attributes: []},
{name: 'std.functional.greaterThan', kind: "aliasdeclaration", path: './std/functional/greater_than.html', attributes: []},
{name: 'std.functional.lessThan', kind: "aliasdeclaration", path: './std/functional/less_than.html', attributes: []},
{name: 'std.functional.memoize', kind: "functiondeclaration", path: './std/functional/memoize.html', attributes: []},
{name: 'std.functional.not', kind: "templatedeclaration", path: './std/functional/not.html', attributes: []},
{name: 'std.functional.not.not', kind: "functiondeclaration", path: './std/functional/not.not.html', attributes: ["auto"]},
{name: 'std.functional.partial', kind: "templatedeclaration", path: './std/functional/partial.html', attributes: []},
{name: 'std.functional.partial.partial', kind: "functiondeclaration", path: './std/functional/partial.partial.html', attributes: ["auto"]},
{name: 'std.functional.pipe', kind: "aliasdeclaration", path: './std/functional/pipe.html', attributes: []},
{name: 'std.functional.reverseArgs', kind: "templatedeclaration", path: './std/functional/reverse_args.html', attributes: []},
{name: 'std.functional.reverseArgs.reverseArgs', kind: "functiondeclaration", path: './std/functional/reverse_args.reverse_args.html', attributes: ["auto"]},
{name: 'std.functional.toDelegate', kind: "functiondeclaration", path: './std/functional/to_delegate.html', attributes: ["auto"]},
{name: 'std.functional.unaryFun', kind: "templatedeclaration", path: './std/functional/unary_fun.html', attributes: []},
{name: 'std.functional.unaryFun.unaryFun', kind: "functiondeclaration", path: './std/functional/unary_fun.unary_fun.html', attributes: ["auto"]},
{name: 'std.getopt', kind: "module", path: './std/getopt.html', attributes: []},
{name: 'std.getopt.arraySep', kind: "variabledeclaration", path: './std/getopt/array_sep.html', attributes: []},
{name: 'std.getopt.assignChar', kind: "variabledeclaration", path: './std/getopt/assign_char.html', attributes: []},
{name: 'std.getopt.config', kind: "enumdeclaration", path: './std/getopt/config.html', attributes: []},
{name: 'std.getopt.config.bundling', kind: "enummemberdeclaration", path: './std/getopt/config.html#bundling', attributes: []},
{name: 'std.getopt.config.caseInsensitive', kind: "enummemberdeclaration", path: './std/getopt/config.html#caseInsensitive', attributes: []},
{name: 'std.getopt.config.caseSensitive', kind: "enummemberdeclaration", path: './std/getopt/config.html#caseSensitive', attributes: []},
{name: 'std.getopt.config.keepEndOfOptions', kind: "enummemberdeclaration", path: './std/getopt/config.html#keepEndOfOptions', attributes: []},
{name: 'std.getopt.config.noBundling', kind: "enummemberdeclaration", path: './std/getopt/config.html#noBundling', attributes: []},
{name: 'std.getopt.config.noPassThrough', kind: "enummemberdeclaration", path: './std/getopt/config.html#noPassThrough', attributes: []},
{name: 'std.getopt.config.passThrough', kind: "enummemberdeclaration", path: './std/getopt/config.html#passThrough', attributes: []},
{name: 'std.getopt.config.required', kind: "enummemberdeclaration", path: './std/getopt/config.html#required', attributes: []},
{name: 'std.getopt.config.stopOnFirstNonOption', kind: "enummemberdeclaration", path: './std/getopt/config.html#stopOnFirstNonOption', attributes: []},
{name: 'std.getopt.defaultGetoptFormatter', kind: "functiondeclaration", path: './std/getopt/default_getopt_formatter.html', attributes: []},
{name: 'std.getopt.defaultGetoptPrinter', kind: "functiondeclaration", path: './std/getopt/default_getopt_printer.html', attributes: []},
{name: 'std.getopt.endOfOptions', kind: "variabledeclaration", path: './std/getopt/end_of_options.html', attributes: []},
{name: 'std.getopt.getopt', kind: "functiondeclaration", path: './std/getopt/getopt.html', attributes: []},
{name: 'std.getopt.GetOptException', kind: "classdeclaration", path: './std/getopt/get_opt_exception.html', attributes: []},
{name: 'std.getopt.GetoptResult', kind: "structdeclaration", path: './std/getopt/getopt_result.html', attributes: []},
{name: 'std.getopt.GetoptResult.helpWanted', kind: "variabledeclaration", path: './std/getopt/getopt_result.help_wanted.html', attributes: []},
{name: 'std.getopt.GetoptResult.options', kind: "variabledeclaration", path: './std/getopt/getopt_result.options.html', attributes: []},
{name: 'std.getopt.Option', kind: "structdeclaration", path: './std/getopt/option.html', attributes: []},
{name: 'std.getopt.Option.help', kind: "variabledeclaration", path: './std/getopt/option.help.html', attributes: []},
{name: 'std.getopt.Option.optLong', kind: "variabledeclaration", path: './std/getopt/option.opt_long.html', attributes: []},
{name: 'std.getopt.Option.optShort', kind: "variabledeclaration", path: './std/getopt/option.opt_short.html', attributes: []},
{name: 'std.getopt.Option.required', kind: "variabledeclaration", path: './std/getopt/option.required.html', attributes: []},
{name: 'std.getopt.optionChar', kind: "variabledeclaration", path: './std/getopt/option_char.html', attributes: []},
{name: 'std.json', kind: "module", path: './std/json.html', attributes: []},
{name: 'std.json.JSONException', kind: "classdeclaration", path: './std/json/json_exception.html', attributes: []},
{name: 'std.json.JSONFloatLiteral', kind: "enumdeclaration", path: './std/json/json_float_literal.html', attributes: []},
{name: 'std.json.JSONFloatLiteral.inf', kind: "enummemberdeclaration", path: './std/json/json_float_literal.html#inf', attributes: []},
{name: 'std.json.JSONFloatLiteral.nan', kind: "enummemberdeclaration", path: './std/json/json_float_literal.html#nan', attributes: []},
{name: 'std.json.JSONFloatLiteral.negativeInf', kind: "enummemberdeclaration", path: './std/json/json_float_literal.html#negativeInf', attributes: []},
{name: 'std.json.JSONOptions', kind: "enumdeclaration", path: './std/json/json_options.html', attributes: []},
{name: 'std.json.JSONOptions.doNotEscapeSlashes', kind: "enummemberdeclaration", path: './std/json/json_options.html#doNotEscapeSlashes', attributes: []},
{name: 'std.json.JSONOptions.escapeNonAsciiChars', kind: "enummemberdeclaration", path: './std/json/json_options.html#escapeNonAsciiChars', attributes: []},
{name: 'std.json.JSONOptions.none', kind: "enummemberdeclaration", path: './std/json/json_options.html#none', attributes: []},
{name: 'std.json.JSONOptions.specialFloatLiterals', kind: "enummemberdeclaration", path: './std/json/json_options.html#specialFloatLiterals', attributes: []},
{name: 'std.json.JSONOptions.strictParsing', kind: "enummemberdeclaration", path: './std/json/json_options.html#strictParsing', attributes: []},
{name: 'std.json.JSONType', kind: "enumdeclaration", path: './std/json/json_type.html', attributes: []},
{name: 'std.json.JSONType.array', kind: "enummemberdeclaration", path: './std/json/json_type.html#array', attributes: []},
{name: 'std.json.JSONType.false_', kind: "enummemberdeclaration", path: './std/json/json_type.html#false_', attributes: []},
{name: 'std.json.JSONType.float_', kind: "enummemberdeclaration", path: './std/json/json_type.html#float_', attributes: []},
{name: 'std.json.JSONType.integer', kind: "enummemberdeclaration", path: './std/json/json_type.html#integer', attributes: []},
{name: 'std.json.JSONType.null_', kind: "enummemberdeclaration", path: './std/json/json_type.html#null_', attributes: []},
{name: 'std.json.JSONType.object', kind: "enummemberdeclaration", path: './std/json/json_type.html#object', attributes: []},
{name: 'std.json.JSONType.string', kind: "enummemberdeclaration", path: './std/json/json_type.html#string', attributes: []},
{name: 'std.json.JSONType.true_', kind: "enummemberdeclaration", path: './std/json/json_type.html#true_', attributes: []},
{name: 'std.json.JSONType.uinteger', kind: "enummemberdeclaration", path: './std/json/json_type.html#uinteger', attributes: []},
{name: 'std.json.JSONValue', kind: "structdeclaration", path: './std/json/json_value.html', attributes: []},
{name: 'std.json.JSONValue.array', kind: "functiondeclaration", path: './std/json/json_value.array.html', attributes: ["pure", "ref", "property", "inout"]},
{name: 'std.json.JSONValue.arrayNoRef', kind: "functiondeclaration", path: './std/json/json_value.array_no_ref.html', attributes: ["pure", "property", "trusted", "inout"]},
{name: 'std.json.JSONValue.boolean', kind: "functiondeclaration", path: './std/json/json_value.boolean.html', attributes: ["pure", "property", "safe", "const"]},
{name: 'std.json.JSONValue.floating', kind: "functiondeclaration", path: './std/json/json_value.floating.html', attributes: ["pure", "property", "safe", "const"]},
{name: 'std.json.JSONValue.get', kind: "functiondeclaration", path: './std/json/json_value.get.html', attributes: ["inout", "const", "pure", "property", "safe"]},
{name: 'std.json.JSONValue.integer', kind: "functiondeclaration", path: './std/json/json_value.integer.html', attributes: ["pure", "property", "safe", "const"]},
{name: 'std.json.JSONValue.isNull', kind: "functiondeclaration", path: './std/json/json_value.is_null.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.json.JSONValue.object', kind: "functiondeclaration", path: './std/json/json_value.object.html', attributes: ["pure", "ref", "property", "inout"]},
{name: 'std.json.JSONValue.objectNoRef', kind: "functiondeclaration", path: './std/json/json_value.object_no_ref.html', attributes: ["pure", "property", "trusted", "inout"]},
{name: 'std.json.JSONValue.opApply', kind: "functiondeclaration", path: './std/json/json_value.op_apply.html', attributes: []},
{name: 'std.json.JSONValue.opBinaryRight', kind: "functiondeclaration", path: './std/json/json_value.op_binary_right.html', attributes: ["auto", "const", "safe"]},
{name: 'std.json.JSONValue.opIndex', kind: "functiondeclaration", path: './std/json/json_value.op_index.html', attributes: ["pure", "ref", "safe", "inout"]},
{name: 'std.json.JSONValue.opIndexAssign', kind: "functiondeclaration", path: './std/json/json_value.op_index_assign.html', attributes: []},
{name: 'std.json.JSONValue.str', kind: "functiondeclaration", path: './std/json/json_value.str.html', attributes: ["pure", "property", "trusted", "const"]},
{name: 'std.json.JSONValue.this', kind: "functiondeclaration", path: './std/json/json_value.this.html', attributes: []},
{name: 'std.json.JSONValue.toPrettyString', kind: "functiondeclaration", path: './std/json/json_value.to_pretty_string.html', attributes: ["const"]},
{name: 'std.json.JSONValue.toString', kind: "functiondeclaration", path: './std/json/json_value.to_string.html', attributes: ["safe", "const"]},
{name: 'std.json.JSONValue.type', kind: "functiondeclaration", path: './std/json/json_value.type.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.json.JSONValue.uinteger', kind: "functiondeclaration", path: './std/json/json_value.uinteger.html', attributes: ["pure", "property", "safe", "const"]},
{name: 'std.json.parseJSON', kind: "functiondeclaration", path: './std/json/parse_json.html', attributes: []},
{name: 'std.json.toJSON', kind: "functiondeclaration", path: './std/json/to_json.html', attributes: ["safe"]},
{name: 'std.math', kind: "module", path: './std/math.html', attributes: []},
{name: 'std.math.abs', kind: "functiondeclaration", path: './std/math/abs.html', attributes: ["auto", "pure", "nothrow", "nogc"]},
{name: 'std.math.acos', kind: "functiondeclaration", path: './std/math/acos.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.acosh', kind: "functiondeclaration", path: './std/math/acosh.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.approxEqual', kind: "functiondeclaration", path: './std/math/approx_equal.html', attributes: []},
{name: 'std.math.asin', kind: "functiondeclaration", path: './std/math/asin.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.asinh', kind: "functiondeclaration", path: './std/math/asinh.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.atan', kind: "functiondeclaration", path: './std/math/atan.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.atan2', kind: "functiondeclaration", path: './std/math/atan2.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.atanh', kind: "functiondeclaration", path: './std/math/atanh.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.cbrt', kind: "functiondeclaration", path: './std/math/cbrt.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.ceil', kind: "functiondeclaration", path: './std/math/ceil.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.cmp', kind: "functiondeclaration", path: './std/math/cmp.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.copysign', kind: "functiondeclaration", path: './std/math/copysign.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.cos', kind: "functiondeclaration", path: './std/math/cos.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.cosh', kind: "functiondeclaration", path: './std/math/cosh.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.E', kind: "enummemberdeclaration", path: './std/math/e.html', attributes: []},
{name: 'std.math.exp', kind: "functiondeclaration", path: './std/math/exp.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.exp2', kind: "functiondeclaration", path: './std/math/exp2.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.expm1', kind: "functiondeclaration", path: './std/math/expm1.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.fabs', kind: "functiondeclaration", path: './std/math/fabs.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.fdim', kind: "functiondeclaration", path: './std/math/fdim.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.feqrel', kind: "functiondeclaration", path: './std/math/feqrel.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.FloatingPointControl', kind: "structdeclaration", path: './std/math/floating_point_control.html', attributes: []},
{name: 'std.math.FloatingPointControl.allExceptions', kind: "enummemberdeclaration", path: './std/math/floating_point_control.all_exceptions.html', attributes: []},
{name: 'std.math.FloatingPointControl.disableExceptions', kind: "functiondeclaration", path: './std/math/floating_point_control.disable_exceptions.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.FloatingPointControl.divByZeroException', kind: "enummemberdeclaration", path: './std/math/floating_point_control.div_by_zero_exception.html', attributes: []},
{name: 'std.math.FloatingPointControl.enabledExceptions', kind: "functiondeclaration", path: './std/math/floating_point_control.enabled_exceptions.html', attributes: ["static", "pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'std.math.FloatingPointControl.enableExceptions', kind: "functiondeclaration", path: './std/math/floating_point_control.enable_exceptions.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.FloatingPointControl.ExceptionMask', kind: "aliasdeclaration", path: './std/math/floating_point_control.exception_mask.html', attributes: []},
{name: 'std.math.FloatingPointControl.hasExceptionTraps', kind: "functiondeclaration", path: './std/math/floating_point_control.has_exception_traps.html', attributes: ["static", "pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.math.FloatingPointControl.inexactException', kind: "enummemberdeclaration", path: './std/math/floating_point_control.inexact_exception.html', attributes: []},
{name: 'std.math.FloatingPointControl.invalidException', kind: "enummemberdeclaration", path: './std/math/floating_point_control.invalid_exception.html', attributes: []},
{name: 'std.math.FloatingPointControl.overflowException', kind: "enummemberdeclaration", path: './std/math/floating_point_control.overflow_exception.html', attributes: []},
{name: 'std.math.FloatingPointControl.roundDown', kind: "enummemberdeclaration", path: './std/math/floating_point_control.round_down.html', attributes: []},
{name: 'std.math.FloatingPointControl.rounding', kind: "functiondeclaration", path: './std/math/floating_point_control.rounding.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'std.math.FloatingPointControl.roundingMask', kind: "enummemberdeclaration", path: './std/math/floating_point_control.rounding_mask.html', attributes: []},
{name: 'std.math.FloatingPointControl.RoundingMode', kind: "aliasdeclaration", path: './std/math/floating_point_control.rounding_mode.html', attributes: []},
{name: 'std.math.FloatingPointControl.roundToNearest', kind: "enummemberdeclaration", path: './std/math/floating_point_control.round_to_nearest.html', attributes: []},
{name: 'std.math.FloatingPointControl.roundToZero', kind: "enummemberdeclaration", path: './std/math/floating_point_control.round_to_zero.html', attributes: []},
{name: 'std.math.FloatingPointControl.roundUp', kind: "enummemberdeclaration", path: './std/math/floating_point_control.round_up.html', attributes: []},
{name: 'std.math.FloatingPointControl.severeExceptions', kind: "enummemberdeclaration", path: './std/math/floating_point_control.severe_exceptions.html', attributes: []},
{name: 'std.math.FloatingPointControl.subnormalException', kind: "enummemberdeclaration", path: './std/math/floating_point_control.subnormal_exception.html', attributes: []},
{name: 'std.math.FloatingPointControl.underflowException', kind: "enummemberdeclaration", path: './std/math/floating_point_control.underflow_exception.html', attributes: []},
{name: 'std.math.floor', kind: "functiondeclaration", path: './std/math/floor.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.fma', kind: "functiondeclaration", path: './std/math/fma.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.fmax', kind: "functiondeclaration", path: './std/math/fmax.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.fmin', kind: "functiondeclaration", path: './std/math/fmin.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.fmod', kind: "functiondeclaration", path: './std/math/fmod.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.FP_ILOGB0', kind: "aliasdeclaration", path: './std/math/f_p_ilog_b0.html', attributes: []},
{name: 'std.math.FP_ILOGBNAN', kind: "aliasdeclaration", path: './std/math/f_p_ilogbnan.html', attributes: []},
{name: 'std.math.frexp', kind: "functiondeclaration", path: './std/math/frexp.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.getNaNPayload', kind: "functiondeclaration", path: './std/math/get_nan_payload.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.hypot', kind: "functiondeclaration", path: './std/math/hypot.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.ieeeFlags', kind: "functiondeclaration", path: './std/math/ieee_flags.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'std.math.IeeeFlags', kind: "structdeclaration", path: './std/math/ieee_flags.html', attributes: []},
{name: 'std.math.IeeeFlags.divByZero', kind: "functiondeclaration", path: './std/math/ieee_flags.div_by_zero.html', attributes: ["nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.math.IeeeFlags.inexact', kind: "functiondeclaration", path: './std/math/ieee_flags.inexact.html', attributes: ["nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.math.IeeeFlags.invalid', kind: "functiondeclaration", path: './std/math/ieee_flags.invalid.html', attributes: ["nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.math.IeeeFlags.overflow', kind: "functiondeclaration", path: './std/math/ieee_flags.overflow.html', attributes: ["nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.math.IeeeFlags.underflow', kind: "functiondeclaration", path: './std/math/ieee_flags.underflow.html', attributes: ["nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.math.ilogb', kind: "functiondeclaration", path: './std/math/ilogb.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.isClose', kind: "functiondeclaration", path: './std/math/is_close.html', attributes: []},
{name: 'std.math.isFinite', kind: "functiondeclaration", path: './std/math/is_finite.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.isIdentical', kind: "functiondeclaration", path: './std/math/is_identical.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.isInfinity', kind: "functiondeclaration", path: './std/math/is_infinity.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.isNaN', kind: "functiondeclaration", path: './std/math/is_nan.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.isNormal', kind: "functiondeclaration", path: './std/math/is_normal.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.isPowerOf2', kind: "functiondeclaration", path: './std/math/is_power_of2.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.isSubnormal', kind: "functiondeclaration", path: './std/math/is_subnormal.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.ldexp', kind: "functiondeclaration", path: './std/math/ldexp.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.LN10', kind: "enummemberdeclaration", path: './std/math/l_n10.html', attributes: []},
{name: 'std.math.LN2', kind: "enummemberdeclaration", path: './std/math/l_n2.html', attributes: []},
{name: 'std.math.log', kind: "functiondeclaration", path: './std/math/log.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.log10', kind: "functiondeclaration", path: './std/math/log10.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.LOG10E', kind: "enummemberdeclaration", path: './std/math/lo_g10_e.html', attributes: []},
{name: 'std.math.log1p', kind: "functiondeclaration", path: './std/math/log1p.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.log2', kind: "functiondeclaration", path: './std/math/log2.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.LOG2', kind: "enummemberdeclaration", path: './std/math/lo_g2.html', attributes: []},
{name: 'std.math.LOG2E', kind: "enummemberdeclaration", path: './std/math/lo_g2e.html', attributes: []},
{name: 'std.math.LOG2T', kind: "enummemberdeclaration", path: './std/math/lo_g2t.html', attributes: []},
{name: 'std.math.logb', kind: "functiondeclaration", path: './std/math/logb.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.lrint', kind: "functiondeclaration", path: './std/math/lrint.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.lround', kind: "functiondeclaration", path: './std/math/lround.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.M_1_PI', kind: "enummemberdeclaration", path: './std/math/m_1__pi.html', attributes: []},
{name: 'std.math.M_2_PI', kind: "enummemberdeclaration", path: './std/math/m_2__pi.html', attributes: []},
{name: 'std.math.M_2_SQRTPI', kind: "enummemberdeclaration", path: './std/math/m_2__sqrtpi.html', attributes: []},
{name: 'std.math.modf', kind: "functiondeclaration", path: './std/math/modf.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.NaN', kind: "functiondeclaration", path: './std/math/nan.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.nearbyint', kind: "functiondeclaration", path: './std/math/nearbyint.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.nextafter', kind: "functiondeclaration", path: './std/math/nextafter.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.nextDown', kind: "functiondeclaration", path: './std/math/next_down.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.nextPow2', kind: "functiondeclaration", path: './std/math/next_pow2.html', attributes: []},
{name: 'std.math.nextUp', kind: "functiondeclaration", path: './std/math/next_up.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.PI', kind: "enummemberdeclaration", path: './std/math/pi.html', attributes: []},
{name: 'std.math.PI_2', kind: "enummemberdeclaration", path: './std/math/p_i_2.html', attributes: []},
{name: 'std.math.PI_4', kind: "enummemberdeclaration", path: './std/math/p_i_4.html', attributes: []},
{name: 'std.math.poly', kind: "functiondeclaration", path: './std/math/poly.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.pow', kind: "functiondeclaration", path: './std/math/pow.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.powmod', kind: "functiondeclaration", path: './std/math/powmod.html', attributes: []},
{name: 'std.math.quantize', kind: "functiondeclaration", path: './std/math/quantize.html', attributes: []},
{name: 'std.math.remainder', kind: "functiondeclaration", path: './std/math/remainder.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.remquo', kind: "functiondeclaration", path: './std/math/remquo.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.resetIeeeFlags', kind: "functiondeclaration", path: './std/math/reset_ieee_flags.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.math.rint', kind: "functiondeclaration", path: './std/math/rint.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.rndtol', kind: "functiondeclaration", path: './std/math/rndtol.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.rndtonl', kind: "functiondeclaration", path: './std/math/rndtonl.html', attributes: ["deprecated", "extern(C)"]},
{name: 'std.math.round', kind: "functiondeclaration", path: './std/math/round.html', attributes: ["auto", "pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.scalbn', kind: "functiondeclaration", path: './std/math/scalbn.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.sgn', kind: "functiondeclaration", path: './std/math/sgn.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.signbit', kind: "functiondeclaration", path: './std/math/signbit.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.sin', kind: "functiondeclaration", path: './std/math/sin.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.sinh', kind: "functiondeclaration", path: './std/math/sinh.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.sqrt', kind: "functiondeclaration", path: './std/math/sqrt.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.SQRT1_2', kind: "enummemberdeclaration", path: './std/math/sqr_t1_2.html', attributes: []},
{name: 'std.math.SQRT2', kind: "enummemberdeclaration", path: './std/math/sqr_t2.html', attributes: []},
{name: 'std.math.tan', kind: "functiondeclaration", path: './std/math/tan.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.tanh', kind: "functiondeclaration", path: './std/math/tanh.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.math.trunc', kind: "functiondeclaration", path: './std/math/trunc.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.math.truncPow2', kind: "functiondeclaration", path: './std/math/trunc_pow2.html', attributes: []},
{name: 'std.mathspecial', kind: "module", path: './std/mathspecial.html', attributes: []},
{name: 'std.mathspecial.beta', kind: "functiondeclaration", path: './std/mathspecial/beta.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.betaIncomplete', kind: "functiondeclaration", path: './std/mathspecial/beta_incomplete.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.betaIncompleteInverse', kind: "functiondeclaration", path: './std/mathspecial/beta_incomplete_inverse.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.digamma', kind: "functiondeclaration", path: './std/mathspecial/digamma.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.erf', kind: "functiondeclaration", path: './std/mathspecial/erf.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.erfc', kind: "functiondeclaration", path: './std/mathspecial/erfc.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.gamma', kind: "functiondeclaration", path: './std/mathspecial/gamma.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.gammaIncomplete', kind: "functiondeclaration", path: './std/mathspecial/gamma_incomplete.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.gammaIncompleteCompl', kind: "functiondeclaration", path: './std/mathspecial/gamma_incomplete_compl.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.gammaIncompleteComplInverse', kind: "functiondeclaration", path: './std/mathspecial/gamma_incomplete_compl_inverse.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.logGamma', kind: "functiondeclaration", path: './std/mathspecial/log_gamma.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.logmdigamma', kind: "functiondeclaration", path: './std/mathspecial/logmdigamma.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.logmdigammaInverse', kind: "functiondeclaration", path: './std/mathspecial/logmdigamma_inverse.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.normalDistribution', kind: "functiondeclaration", path: './std/mathspecial/normal_distribution.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.normalDistributionInverse', kind: "functiondeclaration", path: './std/mathspecial/normal_distribution_inverse.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.mathspecial.sgnGamma', kind: "functiondeclaration", path: './std/mathspecial/sgn_gamma.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.meta', kind: "module", path: './std/meta.html', attributes: []},
{name: 'std.meta.Alias', kind: "aliasdeclaration", path: './std/meta/alias.html', attributes: []},
{name: 'std.meta.AliasSeq', kind: "aliasdeclaration", path: './std/meta/alias_seq.html', attributes: []},
{name: 'std.meta.aliasSeqOf', kind: "enummemberdeclaration", path: './std/meta/alias_seq_of.html', attributes: []},
{name: 'std.meta.allSatisfy', kind: "aliasdeclaration", path: './std/meta/all_satisfy.html', attributes: []},
{name: 'std.meta.anySatisfy', kind: "aliasdeclaration", path: './std/meta/any_satisfy.html', attributes: []},
{name: 'std.meta.ApplyLeft', kind: "templatedeclaration", path: './std/meta/apply_left.html', attributes: []},
{name: 'std.meta.ApplyLeft.ApplyLeft', kind: "aliasdeclaration", path: './std/meta/apply_left.apply_left.html', attributes: []},
{name: 'std.meta.ApplyRight', kind: "templatedeclaration", path: './std/meta/apply_right.html', attributes: []},
{name: 'std.meta.ApplyRight.ApplyRight', kind: "aliasdeclaration", path: './std/meta/apply_right.apply_right.html', attributes: []},
{name: 'std.meta.DerivedToFront', kind: "aliasdeclaration", path: './std/meta/derived_to_front.html', attributes: []},
{name: 'std.meta.Erase', kind: "aliasdeclaration", path: './std/meta/erase.html', attributes: []},
{name: 'std.meta.EraseAll', kind: "aliasdeclaration", path: './std/meta/erase_all.html', attributes: []},
{name: 'std.meta.Filter', kind: "aliasdeclaration", path: './std/meta/filter.html', attributes: []},
{name: 'std.meta.Instantiate', kind: "aliasdeclaration", path: './std/meta/instantiate.html', attributes: []},
{name: 'std.meta.MostDerived', kind: "aliasdeclaration", path: './std/meta/most_derived.html', attributes: []},
{name: 'std.meta.NoDuplicates', kind: "aliasdeclaration", path: './std/meta/no_duplicates.html', attributes: []},
{name: 'std.meta.Repeat', kind: "aliasdeclaration", path: './std/meta/repeat.html', attributes: []},
{name: 'std.meta.Replace', kind: "aliasdeclaration", path: './std/meta/replace.html', attributes: []},
{name: 'std.meta.ReplaceAll', kind: "aliasdeclaration", path: './std/meta/replace_all.html', attributes: []},
{name: 'std.meta.Reverse', kind: "aliasdeclaration", path: './std/meta/reverse.html', attributes: []},
{name: 'std.meta.staticIndexOf', kind: "enummemberdeclaration", path: './std/meta/static_index_of.html', attributes: []},
{name: 'std.meta.staticIsSorted', kind: "enummemberdeclaration", path: './std/meta/static_is_sorted.html', attributes: []},
{name: 'std.meta.staticMap', kind: "aliasdeclaration", path: './std/meta/static_map.html', attributes: []},
{name: 'std.meta.staticSort', kind: "aliasdeclaration", path: './std/meta/static_sort.html', attributes: []},
{name: 'std.meta.Stride', kind: "aliasdeclaration", path: './std/meta/stride.html', attributes: []},
{name: 'std.meta.templateAnd', kind: "templatedeclaration", path: './std/meta/template_and.html', attributes: []},
{name: 'std.meta.templateAnd.templateAnd', kind: "enummemberdeclaration", path: './std/meta/template_and.template_and.html', attributes: []},
{name: 'std.meta.templateNot', kind: "templatedeclaration", path: './std/meta/template_not.html', attributes: []},
{name: 'std.meta.templateNot.templateNot', kind: "enummemberdeclaration", path: './std/meta/template_not.template_not.html', attributes: []},
{name: 'std.meta.templateOr', kind: "templatedeclaration", path: './std/meta/template_or.html', attributes: []},
{name: 'std.meta.templateOr.templateOr', kind: "enummemberdeclaration", path: './std/meta/template_or.template_or.html', attributes: []},
{name: 'std.mmfile', kind: "module", path: './std/mmfile.html', attributes: []},
{name: 'std.mmfile.MmFile', kind: "classdeclaration", path: './std/mmfile/mm_file.html', attributes: []},
{name: 'std.mmfile.MmFile.length', kind: "functiondeclaration", path: './std/mmfile/mm_file.length.html', attributes: ["property", "const"]},
{name: 'std.mmfile.MmFile.Mode', kind: "enumdeclaration", path: './std/mmfile/mm_file.mode.html', attributes: []},
{name: 'std.mmfile.MmFile.Mode.read', kind: "enummemberdeclaration", path: './std/mmfile/mm_file.mode.html#read', attributes: []},
{name: 'std.mmfile.MmFile.Mode.readCopyOnWrite', kind: "enummemberdeclaration", path: './std/mmfile/mm_file.mode.html#readCopyOnWrite', attributes: []},
{name: 'std.mmfile.MmFile.Mode.readWrite', kind: "enummemberdeclaration", path: './std/mmfile/mm_file.mode.html#readWrite', attributes: []},
{name: 'std.mmfile.MmFile.Mode.readWriteNew', kind: "enummemberdeclaration", path: './std/mmfile/mm_file.mode.html#readWriteNew', attributes: []},
{name: 'std.mmfile.MmFile.mode', kind: "functiondeclaration", path: './std/mmfile/mm_file.mode.html', attributes: []},
{name: 'std.mmfile.MmFile.opDollar', kind: "aliasdeclaration", path: './std/mmfile/mm_file.op_dollar.html', attributes: []},
{name: 'std.mmfile.MmFile.opIndex', kind: "functiondeclaration", path: './std/mmfile/mm_file.op_index.html', attributes: []},
{name: 'std.mmfile.MmFile.opIndexAssign', kind: "functiondeclaration", path: './std/mmfile/mm_file.op_index_assign.html', attributes: []},
{name: 'std.mmfile.MmFile.opSlice', kind: "functiondeclaration", path: './std/mmfile/mm_file.op_slice.html', attributes: []},
{name: 'std.mmfile.MmFile.this', kind: "functiondeclaration", path: './std/mmfile/mm_file.this.html', attributes: []},
{name: 'std.numeric', kind: "module", path: './std/numeric.html', attributes: []},
{name: 'std.numeric.cosineSimilarity', kind: "functiondeclaration", path: './std/numeric/cosine_similarity.html', attributes: []},
{name: 'std.numeric.CustomFloat', kind: "aliasdeclaration", path: './std/numeric/custom_float.html', attributes: []},
{name: 'std.numeric.CustomFloat.dig', kind: "functiondeclaration", path: './std/numeric/custom_float.dig.html', attributes: ["static", "property"]},
{name: 'std.numeric.CustomFloat.epsilon', kind: "functiondeclaration", path: './std/numeric/custom_float.epsilon.html', attributes: ["static", "property"]},
{name: 'std.numeric.CustomFloat.get', kind: "functiondeclaration", path: './std/numeric/custom_float.get.html', attributes: ["property"]},
{name: 'std.numeric.CustomFloat.im', kind: "functiondeclaration", path: './std/numeric/custom_float.im.html', attributes: ["static", "property"]},
{name: 'std.numeric.CustomFloat.infinity', kind: "functiondeclaration", path: './std/numeric/custom_float.infinity.html', attributes: ["static", "property"]},
{name: 'std.numeric.CustomFloat.mant_dig', kind: "enummemberdeclaration", path: './std/numeric/custom_float.mant_dig.html', attributes: []},
{name: 'std.numeric.CustomFloat.max', kind: "functiondeclaration", path: './std/numeric/custom_float.max.html', attributes: ["static", "property"]},
{name: 'std.numeric.CustomFloat.max_10_exp', kind: "functiondeclaration", path: './std/numeric/custom_float.max_10_exp.html', attributes: ["static", "property"]},
{name: 'std.numeric.CustomFloat.max_exp', kind: "enummemberdeclaration", path: './std/numeric/custom_float.max_exp.html', attributes: []},
{name: 'std.numeric.CustomFloat.min_10_exp', kind: "functiondeclaration", path: './std/numeric/custom_float.min_10_exp.html', attributes: ["static", "property"]},
{name: 'std.numeric.CustomFloat.min_exp', kind: "enummemberdeclaration", path: './std/numeric/custom_float.min_exp.html', attributes: []},
{name: 'std.numeric.CustomFloat.min_normal', kind: "functiondeclaration", path: './std/numeric/custom_float.min_normal.html', attributes: ["static", "property"]},
{name: 'std.numeric.CustomFloat.nan', kind: "functiondeclaration", path: './std/numeric/custom_float.nan.html', attributes: ["static", "property"]},
{name: 'std.numeric.CustomFloat.opAssign', kind: "functiondeclaration", path: './std/numeric/custom_float.op_assign.html', attributes: []},
{name: 'std.numeric.CustomFloat.opBinary', kind: "functiondeclaration", path: './std/numeric/custom_float.op_binary.html', attributes: []},
{name: 'std.numeric.CustomFloat.opBinaryRight', kind: "functiondeclaration", path: './std/numeric/custom_float.op_binary_right.html', attributes: []},
{name: 'std.numeric.CustomFloat.opCast', kind: "aliasdeclaration", path: './std/numeric/custom_float.op_cast.html', attributes: []},
{name: 'std.numeric.CustomFloat.opCmp', kind: "functiondeclaration", path: './std/numeric/custom_float.op_cmp.html', attributes: []},
{name: 'std.numeric.CustomFloat.opOpAssign', kind: "functiondeclaration", path: './std/numeric/custom_float.op_op_assign.html', attributes: []},
{name: 'std.numeric.CustomFloat.opUnary', kind: "functiondeclaration", path: './std/numeric/custom_float.op_unary.html', attributes: []},
{name: 'std.numeric.CustomFloat.re', kind: "functiondeclaration", path: './std/numeric/custom_float.re.html', attributes: ["property"]},
{name: 'std.numeric.CustomFloat.this', kind: "functiondeclaration", path: './std/numeric/custom_float.this.html', attributes: []},
{name: 'std.numeric.CustomFloat.toString', kind: "templatedeclaration", path: './std/numeric/custom_float.to_string.html', attributes: []},
{name: 'std.numeric.CustomFloat.toString.toString', kind: "functiondeclaration", path: './std/numeric/custom_float.to_string.to_string.html', attributes: []},
{name: 'std.numeric.CustomFloatFlags', kind: "enumdeclaration", path: './std/numeric/custom_float_flags.html', attributes: []},
{name: 'std.numeric.CustomFloatFlags.allowDenorm', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.html#allowDenorm', attributes: []},
{name: 'std.numeric.CustomFloatFlags.allowDenormZeroOnly', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.html#allowDenormZeroOnly', attributes: []},
{name: 'std.numeric.CustomFloatFlags.ieee', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.html#ieee', attributes: []},
{name: 'std.numeric.CustomFloatFlags.infinity', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.html#infinity', attributes: []},
{name: 'std.numeric.CustomFloatFlags.nan', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.html#nan', attributes: []},
{name: 'std.numeric.CustomFloatFlags.negativeUnsigned', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.html#negativeUnsigned', attributes: []},
{name: 'std.numeric.CustomFloatFlags.none', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.html#none', attributes: []},
{name: 'std.numeric.CustomFloatFlags.probability', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.html#probability', attributes: []},
{name: 'std.numeric.CustomFloatFlags.signed', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.html#signed', attributes: []},
{name: 'std.numeric.CustomFloatFlags.storeNormalized', kind: "enummemberdeclaration", path: './std/numeric/custom_float_flags.html#storeNormalized', attributes: []},
{name: 'std.numeric.decimalToFactorial', kind: "functiondeclaration", path: './std/numeric/decimal_to_factorial.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.numeric.dotProduct', kind: "functiondeclaration", path: './std/numeric/dot_product.html', attributes: []},
{name: 'std.numeric.entropy', kind: "functiondeclaration", path: './std/numeric/entropy.html', attributes: []},
{name: 'std.numeric.euclideanDistance', kind: "functiondeclaration", path: './std/numeric/euclidean_distance.html', attributes: []},
{name: 'std.numeric.Fft', kind: "classdeclaration", path: './std/numeric/fft.html', attributes: []},
{name: 'std.numeric.Fft.fft', kind: "functiondeclaration", path: './std/numeric/fft.fft.html', attributes: ["const"]},
{name: 'std.numeric.Fft.inverseFft', kind: "functiondeclaration", path: './std/numeric/fft.inverse_fft.html', attributes: ["const"]},
{name: 'std.numeric.Fft.this', kind: "functiondeclaration", path: './std/numeric/fft.this.html', attributes: []},
{name: 'std.numeric.fft', kind: "functiondeclaration", path: './std/numeric/fft.html', attributes: []},
{name: 'std.numeric.findLocalMin', kind: "functiondeclaration", path: './std/numeric/find_local_min.html', attributes: []},
{name: 'std.numeric.findRoot', kind: "functiondeclaration", path: './std/numeric/find_root.html', attributes: []},
{name: 'std.numeric.FPTemporary', kind: "aliasdeclaration", path: './std/numeric/fp_temporary.html', attributes: []},
{name: 'std.numeric.gapWeightedSimilarity', kind: "functiondeclaration", path: './std/numeric/gap_weighted_similarity.html', attributes: []},
{name: 'std.numeric.GapWeightedSimilarityIncremental', kind: "structdeclaration", path: './std/numeric/gap_weighted_similarity_incremental.html', attributes: []},
{name: 'std.numeric.GapWeightedSimilarityIncremental.empty', kind: "functiondeclaration", path: './std/numeric/gap_weighted_similarity_incremental.empty.html', attributes: ["property"]},
{name: 'std.numeric.GapWeightedSimilarityIncremental.front', kind: "functiondeclaration", path: './std/numeric/gap_weighted_similarity_incremental.front.html', attributes: ["property"]},
{name: 'std.numeric.GapWeightedSimilarityIncremental.opSlice', kind: "functiondeclaration", path: './std/numeric/gap_weighted_similarity_incremental.op_slice.html', attributes: ["ref"]},
{name: 'std.numeric.GapWeightedSimilarityIncremental.popFront', kind: "functiondeclaration", path: './std/numeric/gap_weighted_similarity_incremental.pop_front.html', attributes: []},
{name: 'std.numeric.GapWeightedSimilarityIncremental.this', kind: "functiondeclaration", path: './std/numeric/gap_weighted_similarity_incremental.this.html', attributes: []},
{name: 'std.numeric.gapWeightedSimilarityIncremental', kind: "functiondeclaration", path: './std/numeric/gap_weighted_similarity_incremental.html', attributes: []},
{name: 'std.numeric.gapWeightedSimilarityNormalized', kind: "functiondeclaration", path: './std/numeric/gap_weighted_similarity_normalized.html', attributes: []},
{name: 'std.numeric.gcd', kind: "functiondeclaration", path: './std/numeric/gcd.html', attributes: []},
{name: 'std.numeric.inverseFft', kind: "functiondeclaration", path: './std/numeric/inverse_fft.html', attributes: []},
{name: 'std.numeric.jensenShannonDivergence', kind: "functiondeclaration", path: './std/numeric/jensen_shannon_divergence.html', attributes: []},
{name: 'std.numeric.kullbackLeiblerDivergence', kind: "functiondeclaration", path: './std/numeric/kullback_leibler_divergence.html', attributes: []},
{name: 'std.numeric.normalize', kind: "functiondeclaration", path: './std/numeric/normalize.html', attributes: []},
{name: 'std.numeric.secantMethod', kind: "templatedeclaration", path: './std/numeric/secant_method.html', attributes: []},
{name: 'std.numeric.secantMethod.secantMethod', kind: "functiondeclaration", path: './std/numeric/secant_method.secant_method.html', attributes: []},
{name: 'std.numeric.sumOfLog2s', kind: "functiondeclaration", path: './std/numeric/sum_of_log2s.html', attributes: []},
{name: 'std.outbuffer', kind: "module", path: './std/outbuffer.html', attributes: []},
{name: 'std.outbuffer.OutBuffer', kind: "classdeclaration", path: './std/outbuffer/out_buffer.html', attributes: []},
{name: 'std.outbuffer.OutBuffer.align2', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.align2.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.outbuffer.OutBuffer.align4', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.align4.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.outbuffer.OutBuffer.alignSize', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.align_size.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.outbuffer.OutBuffer.clear', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.clear.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.outbuffer.OutBuffer.fill0', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.fill0.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.outbuffer.OutBuffer.printf', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.printf.html', attributes: ["trusted"]},
{name: 'std.outbuffer.OutBuffer.put', kind: "aliasdeclaration", path: './std/outbuffer/out_buffer.put.html', attributes: []},
{name: 'std.outbuffer.OutBuffer.reserve', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.reserve.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.outbuffer.OutBuffer.spread', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.spread.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.outbuffer.OutBuffer.toBytes', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.to_bytes.html', attributes: ["pure", "nothrow", "scope", "safe", "inout"]},
{name: 'std.outbuffer.OutBuffer.toString', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.to_string.html', attributes: ["override", "pure", "nothrow", "safe", "const"]},
{name: 'std.outbuffer.OutBuffer.vprintf', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.vprintf.html', attributes: ["nothrow", "trusted"]},
{name: 'std.outbuffer.OutBuffer.write', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.write.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.outbuffer.OutBuffer.writef', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.writef.html', attributes: []},
{name: 'std.outbuffer.OutBuffer.writefln', kind: "functiondeclaration", path: './std/outbuffer/out_buffer.writefln.html', attributes: []},
{name: 'std.parallelism', kind: "module", path: './std/parallelism.html', attributes: []},
{name: 'std.parallelism.defaultPoolThreads', kind: "functiondeclaration", path: './std/parallelism/default_pool_threads.html', attributes: ["property", "trusted"]},
{name: 'std.parallelism.parallel', kind: "functiondeclaration", path: './std/parallelism/parallel.html', attributes: []},
{name: 'std.parallelism.scopedTask', kind: "functiondeclaration", path: './std/parallelism/scoped_task.html', attributes: ["auto"]},
{name: 'std.parallelism.Task', kind: "structdeclaration", path: './std/parallelism/task.html', attributes: []},
{name: 'std.parallelism.Task.args', kind: "aliasdeclaration", path: './std/parallelism/task.args.html', attributes: []},
{name: 'std.parallelism.Task.done', kind: "functiondeclaration", path: './std/parallelism/task.done.html', attributes: ["property", "trusted"]},
{name: 'std.parallelism.Task.executeInNewThread', kind: "functiondeclaration", path: './std/parallelism/task.execute_in_new_thread.html', attributes: ["trusted"]},
{name: 'std.parallelism.Task.ReturnType', kind: "aliasdeclaration", path: './std/parallelism/task.return_type.html', attributes: []},
{name: 'std.parallelism.Task.spinForce', kind: "functiondeclaration", path: './std/parallelism/task.spin_force.html', attributes: ["property", "ref", "trusted"]},
{name: 'std.parallelism.Task.workForce', kind: "functiondeclaration", path: './std/parallelism/task.work_force.html', attributes: ["property", "ref", "trusted"]},
{name: 'std.parallelism.Task.yieldForce', kind: "functiondeclaration", path: './std/parallelism/task.yield_force.html', attributes: ["property", "ref", "trusted"]},
{name: 'std.parallelism.task', kind: "functiondeclaration", path: './std/parallelism/task.html', attributes: ["auto"]},
{name: 'std.parallelism.TaskPool', kind: "classdeclaration", path: './std/parallelism/task_pool.html', attributes: []},
{name: 'std.parallelism.TaskPool.amap', kind: "templatedeclaration", path: './std/parallelism/task_pool.amap.html', attributes: []},
{name: 'std.parallelism.TaskPool.amap.amap', kind: "functiondeclaration", path: './std/parallelism/task_pool.amap.amap.html', attributes: ["auto"]},
{name: 'std.parallelism.TaskPool.asyncBuf', kind: "functiondeclaration", path: './std/parallelism/task_pool.async_buf.html', attributes: ["auto"]},
{name: 'std.parallelism.TaskPool.finish', kind: "functiondeclaration", path: './std/parallelism/task_pool.finish.html', attributes: ["trusted"]},
{name: 'std.parallelism.TaskPool.fold', kind: "templatedeclaration", path: './std/parallelism/task_pool.fold.html', attributes: []},
{name: 'std.parallelism.TaskPool.fold.fold', kind: "functiondeclaration", path: './std/parallelism/task_pool.fold.fold.html', attributes: ["auto"]},
{name: 'std.parallelism.TaskPool.isDaemon', kind: "functiondeclaration", path: './std/parallelism/task_pool.is_daemon.html', attributes: ["property", "trusted"]},
{name: 'std.parallelism.TaskPool.map', kind: "templatedeclaration", path: './std/parallelism/task_pool.map.html', attributes: []},
{name: 'std.parallelism.TaskPool.map.map', kind: "functiondeclaration", path: './std/parallelism/task_pool.map.map.html', attributes: ["auto"]},
{name: 'std.parallelism.TaskPool.parallel', kind: "functiondeclaration", path: './std/parallelism/task_pool.parallel.html', attributes: []},
{name: 'std.parallelism.TaskPool.priority', kind: "functiondeclaration", path: './std/parallelism/task_pool.priority.html', attributes: ["property", "trusted"]},
{name: 'std.parallelism.TaskPool.put', kind: "functiondeclaration", path: './std/parallelism/task_pool.put.html', attributes: []},
{name: 'std.parallelism.TaskPool.reduce', kind: "templatedeclaration", path: './std/parallelism/task_pool.reduce.html', attributes: []},
{name: 'std.parallelism.TaskPool.reduce.reduce', kind: "functiondeclaration", path: './std/parallelism/task_pool.reduce.reduce.html', attributes: ["auto"]},
{name: 'std.parallelism.TaskPool.size', kind: "functiondeclaration", path: './std/parallelism/task_pool.size.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.parallelism.TaskPool.stop', kind: "functiondeclaration", path: './std/parallelism/task_pool.stop.html', attributes: ["trusted"]},
{name: 'std.parallelism.TaskPool.this', kind: "functiondeclaration", path: './std/parallelism/task_pool.this.html', attributes: ["trusted"]},
{name: 'std.parallelism.TaskPool.workerIndex', kind: "functiondeclaration", path: './std/parallelism/task_pool.worker_index.html', attributes: ["nothrow", "property", "safe", "const"]},
{name: 'std.parallelism.TaskPool.WorkerLocalStorage', kind: "structdeclaration", path: './std/parallelism/task_pool.worker_local_storage.html', attributes: []},
{name: 'std.parallelism.TaskPool.WorkerLocalStorage.get', kind: "functiondeclaration", path: './std/parallelism/task_pool.worker_local_storage.get.html', attributes: ["property", "ref"]},
{name: 'std.parallelism.TaskPool.WorkerLocalStorage.toRange', kind: "functiondeclaration", path: './std/parallelism/task_pool.worker_local_storage.to_range.html', attributes: ["property"]},
{name: 'std.parallelism.TaskPool.workerLocalStorage', kind: "functiondeclaration", path: './std/parallelism/task_pool.worker_local_storage.html', attributes: []},
{name: 'std.parallelism.TaskPool.WorkerLocalStorageRange', kind: "structdeclaration", path: './std/parallelism/task_pool.worker_local_storage_range.html', attributes: []},
{name: 'std.parallelism.taskPool', kind: "functiondeclaration", path: './std/parallelism/task_pool.html', attributes: ["property", "trusted"]},
{name: 'std.parallelism.totalCPUs', kind: "aliasdeclaration", path: './std/parallelism/total_cp_us.html', attributes: []},
{name: 'std.path', kind: "module", path: './std/path.html', attributes: []},
{name: 'std.path.absolutePath', kind: "functiondeclaration", path: './std/path/absolute_path.html', attributes: ["pure", "safe"]},
{name: 'std.path.asAbsolutePath', kind: "functiondeclaration", path: './std/path/as_absolute_path.html', attributes: ["auto"]},
{name: 'std.path.asNormalizedPath', kind: "functiondeclaration", path: './std/path/as_normalized_path.html', attributes: ["auto"]},
{name: 'std.path.asRelativePath', kind: "functiondeclaration", path: './std/path/as_relative_path.html', attributes: ["auto"]},
{name: 'std.path.baseName', kind: "functiondeclaration", path: './std/path/base_name.html', attributes: ["auto"]},
{name: 'std.path.buildNormalizedPath', kind: "functiondeclaration", path: './std/path/build_normalized_path.html', attributes: []},
{name: 'std.path.buildPath', kind: "functiondeclaration", path: './std/path/build_path.html', attributes: []},
{name: 'std.path.CaseSensitive', kind: "enumdeclaration", path: './std/path/case_sensitive.html', attributes: []},
{name: 'std.path.CaseSensitive.no', kind: "enummemberdeclaration", path: './std/path/case_sensitive.html#no', attributes: []},
{name: 'std.path.CaseSensitive.osDefault', kind: "enummemberdeclaration", path: './std/path/case_sensitive.html#osDefault', attributes: []},
{name: 'std.path.CaseSensitive.yes', kind: "enummemberdeclaration", path: './std/path/case_sensitive.html#yes', attributes: []},
{name: 'std.path.chainPath', kind: "functiondeclaration", path: './std/path/chain_path.html', attributes: ["auto"]},
{name: 'std.path.defaultExtension', kind: "functiondeclaration", path: './std/path/default_extension.html', attributes: []},
{name: 'std.path.dirName', kind: "functiondeclaration", path: './std/path/dir_name.html', attributes: ["auto"]},
{name: 'std.path.dirSeparator', kind: "enummemberdeclaration", path: './std/path/dir_separator.html', attributes: []},
{name: 'std.path.driveName', kind: "functiondeclaration", path: './std/path/drive_name.html', attributes: ["auto"]},
{name: 'std.path.expandTilde', kind: "functiondeclaration", path: './std/path/expand_tilde.html', attributes: ["nothrow", "safe"]},
{name: 'std.path.extension', kind: "functiondeclaration", path: './std/path/extension.html', attributes: ["auto"]},
{name: 'std.path.filenameCharCmp', kind: "functiondeclaration", path: './std/path/filename_char_cmp.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.path.filenameCmp', kind: "functiondeclaration", path: './std/path/filename_cmp.html', attributes: []},
{name: 'std.path.globMatch', kind: "functiondeclaration", path: './std/path/glob_match.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.path.isAbsolute', kind: "functiondeclaration", path: './std/path/is_absolute.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.path.isDirSeparator', kind: "functiondeclaration", path: './std/path/is_dir_separator.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.path.isRooted', kind: "functiondeclaration", path: './std/path/is_rooted.html', attributes: []},
{name: 'std.path.isValidFilename', kind: "functiondeclaration", path: './std/path/is_valid_filename.html', attributes: []},
{name: 'std.path.isValidPath', kind: "functiondeclaration", path: './std/path/is_valid_path.html', attributes: []},
{name: 'std.path.pathSeparator', kind: "enummemberdeclaration", path: './std/path/path_separator.html', attributes: []},
{name: 'std.path.pathSplitter', kind: "functiondeclaration", path: './std/path/path_splitter.html', attributes: ["auto"]},
{name: 'std.path.relativePath', kind: "functiondeclaration", path: './std/path/relative_path.html', attributes: []},
{name: 'std.path.rootName', kind: "functiondeclaration", path: './std/path/root_name.html', attributes: ["auto"]},
{name: 'std.path.setExtension', kind: "functiondeclaration", path: './std/path/set_extension.html', attributes: []},
{name: 'std.path.stripDrive', kind: "functiondeclaration", path: './std/path/strip_drive.html', attributes: ["auto"]},
{name: 'std.path.stripExtension', kind: "functiondeclaration", path: './std/path/strip_extension.html', attributes: ["auto"]},
{name: 'std.path.withDefaultExtension', kind: "functiondeclaration", path: './std/path/with_default_extension.html', attributes: ["auto"]},
{name: 'std.path.withExtension', kind: "functiondeclaration", path: './std/path/with_extension.html', attributes: ["auto"]},
{name: 'std.process', kind: "module", path: './std/process.html', attributes: []},
{name: 'std.process.browse', kind: "functiondeclaration", path: './std/process/browse.html', attributes: []},
{name: 'std.process.Config', kind: "enumdeclaration", path: './std/process/config.html', attributes: []},
{name: 'std.process.Config.detached', kind: "enummemberdeclaration", path: './std/process/config.html#detached', attributes: []},
{name: 'std.process.Config.inheritFDs', kind: "enummemberdeclaration", path: './std/process/config.html#inheritFDs', attributes: []},
{name: 'std.process.Config.newEnv', kind: "enummemberdeclaration", path: './std/process/config.html#newEnv', attributes: []},
{name: 'std.process.Config.retainStderr', kind: "enummemberdeclaration", path: './std/process/config.html#retainStderr', attributes: []},
{name: 'std.process.Config.retainStdin', kind: "enummemberdeclaration", path: './std/process/config.html#retainStdin', attributes: []},
{name: 'std.process.Config.retainStdout', kind: "enummemberdeclaration", path: './std/process/config.html#retainStdout', attributes: []},
{name: 'std.process.Config.stderrPassThrough', kind: "enummemberdeclaration", path: './std/process/config.html#stderrPassThrough', attributes: []},
{name: 'std.process.Config.suppressConsole', kind: "enummemberdeclaration", path: './std/process/config.html#suppressConsole', attributes: []},
{name: 'std.process.environment', kind: "classdeclaration", path: './std/process/environment.html', attributes: []},
{name: 'std.process.environment.get', kind: "functiondeclaration", path: './std/process/environment.get.html', attributes: ["static", "safe"]},
{name: 'std.process.environment.opBinaryRight', kind: "functiondeclaration", path: './std/process/environment.op_binary_right.html', attributes: ["trusted"]},
{name: 'std.process.environment.opIndex', kind: "functiondeclaration", path: './std/process/environment.op_index.html', attributes: ["static", "safe"]},
{name: 'std.process.environment.opIndexAssign', kind: "functiondeclaration", path: './std/process/environment.op_index_assign.html', attributes: ["static", "trusted"]},
{name: 'std.process.environment.remove', kind: "functiondeclaration", path: './std/process/environment.remove.html', attributes: ["static", "nothrow", "nogc", "trusted"]},
{name: 'std.process.environment.toAA', kind: "functiondeclaration", path: './std/process/environment.to_aa.html', attributes: ["static", "trusted"]},
{name: 'std.process.escapeShellCommand', kind: "functiondeclaration", path: './std/process/escape_shell_command.html', attributes: ["pure", "safe"]},
{name: 'std.process.escapeShellFileName', kind: "functiondeclaration", path: './std/process/escape_shell_file_name.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.process.escapeWindowsArgument', kind: "functiondeclaration", path: './std/process/escape_windows_argument.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.process.execute', kind: "functiondeclaration", path: './std/process/execute.html', attributes: ["auto", "trusted"]},
{name: 'std.process.executeShell', kind: "functiondeclaration", path: './std/process/execute_shell.html', attributes: ["auto", "trusted"]},
{name: 'std.process.execv', kind: "functiondeclaration", path: './std/process/execv.html', attributes: []},
{name: 'std.process.execve', kind: "functiondeclaration", path: './std/process/execve.html', attributes: []},
{name: 'std.process.execvp', kind: "functiondeclaration", path: './std/process/execvp.html', attributes: []},
{name: 'std.process.execvpe', kind: "functiondeclaration", path: './std/process/execvpe.html', attributes: []},
{name: 'std.process.kill', kind: "functiondeclaration", path: './std/process/kill.html', attributes: []},
{name: 'std.process.nativeShell', kind: "functiondeclaration", path: './std/process/native_shell.html', attributes: ["pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.process.Pid', kind: "classdeclaration", path: './std/process/pid.html', attributes: []},
{name: 'std.process.Pid.osHandle', kind: "functiondeclaration", path: './std/process/pid.os_handle.html', attributes: ["pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.process.Pid.processID', kind: "functiondeclaration", path: './std/process/pid.process_id.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.process.pipe', kind: "functiondeclaration", path: './std/process/pipe.html', attributes: ["trusted"]},
{name: 'std.process.Pipe', kind: "structdeclaration", path: './std/process/pipe.html', attributes: []},
{name: 'std.process.Pipe.close', kind: "functiondeclaration", path: './std/process/pipe.close.html', attributes: ["safe"]},
{name: 'std.process.Pipe.readEnd', kind: "functiondeclaration", path: './std/process/pipe.read_end.html', attributes: ["nothrow", "property", "safe"]},
{name: 'std.process.Pipe.writeEnd', kind: "functiondeclaration", path: './std/process/pipe.write_end.html', attributes: ["nothrow", "property", "safe"]},
{name: 'std.process.pipeProcess', kind: "functiondeclaration", path: './std/process/pipe_process.html', attributes: ["safe"]},
{name: 'std.process.pipeShell', kind: "functiondeclaration", path: './std/process/pipe_shell.html', attributes: ["safe"]},
{name: 'std.process.ProcessException', kind: "classdeclaration", path: './std/process/process_exception.html', attributes: []},
{name: 'std.process.ProcessPipes', kind: "structdeclaration", path: './std/process/process_pipes.html', attributes: []},
{name: 'std.process.ProcessPipes.pid', kind: "functiondeclaration", path: './std/process/process_pipes.pid.html', attributes: ["nothrow", "property", "safe"]},
{name: 'std.process.ProcessPipes.stderr', kind: "functiondeclaration", path: './std/process/process_pipes.stderr.html', attributes: ["nothrow", "property", "safe"]},
{name: 'std.process.ProcessPipes.stdin', kind: "functiondeclaration", path: './std/process/process_pipes.stdin.html', attributes: ["nothrow", "property", "safe"]},
{name: 'std.process.ProcessPipes.stdout', kind: "functiondeclaration", path: './std/process/process_pipes.stdout.html', attributes: ["nothrow", "property", "safe"]},
{name: 'std.process.Redirect', kind: "enumdeclaration", path: './std/process/redirect.html', attributes: []},
{name: 'std.process.Redirect.all', kind: "enummemberdeclaration", path: './std/process/redirect.html#all', attributes: []},
{name: 'std.process.Redirect.stderr', kind: "enummemberdeclaration", path: './std/process/redirect.html#stderr', attributes: []},
{name: 'std.process.Redirect.stderrToStdout', kind: "enummemberdeclaration", path: './std/process/redirect.html#stderrToStdout', attributes: []},
{name: 'std.process.Redirect.stdin', kind: "enummemberdeclaration", path: './std/process/redirect.html#stdin', attributes: []},
{name: 'std.process.Redirect.stdout', kind: "enummemberdeclaration", path: './std/process/redirect.html#stdout', attributes: []},
{name: 'std.process.Redirect.stdoutToStderr', kind: "enummemberdeclaration", path: './std/process/redirect.html#stdoutToStderr', attributes: []},
{name: 'std.process.spawnProcess', kind: "functiondeclaration", path: './std/process/spawn_process.html', attributes: ["trusted"]},
{name: 'std.process.spawnShell', kind: "functiondeclaration", path: './std/process/spawn_shell.html', attributes: ["trusted"]},
{name: 'std.process.thisProcessID', kind: "functiondeclaration", path: './std/process/this_process_id.html', attributes: ["nothrow", "property", "trusted"]},
{name: 'std.process.thisThreadID', kind: "functiondeclaration", path: './std/process/this_thread_id.html', attributes: ["nothrow", "property", "trusted"]},
{name: 'std.process.tryWait', kind: "functiondeclaration", path: './std/process/try_wait.html', attributes: ["auto", "safe"]},
{name: 'std.process.userShell', kind: "functiondeclaration", path: './std/process/user_shell.html', attributes: ["property", "safe"]},
{name: 'std.process.wait', kind: "functiondeclaration", path: './std/process/wait.html', attributes: ["safe"]},
{name: 'std.random', kind: "module", path: './std/random.html', attributes: []},
{name: 'std.random.choice', kind: "functiondeclaration", path: './std/random/choice.html', attributes: ["auto", "ref"]},
{name: 'std.random.dice', kind: "functiondeclaration", path: './std/random/dice.html', attributes: []},
{name: 'std.random.isSeedable', kind: "enummemberdeclaration", path: './std/random/is_seedable.html', attributes: []},
{name: 'std.random.isUniformRNG', kind: "enummemberdeclaration", path: './std/random/is_uniform_rng.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine', kind: "structdeclaration", path: './std/random/linear_congruential_engine.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine.empty', kind: "enummemberdeclaration", path: './std/random/linear_congruential_engine.empty.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine.front', kind: "functiondeclaration", path: './std/random/linear_congruential_engine.front.html', attributes: ["const", "pure", "nothrow", "nogc", "property", "safe"]},
{name: 'std.random.LinearCongruentialEngine.hasFixedRange', kind: "enummemberdeclaration", path: './std/random/linear_congruential_engine.has_fixed_range.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine.increment', kind: "enummemberdeclaration", path: './std/random/linear_congruential_engine.increment.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine.isUniformRandom', kind: "enummemberdeclaration", path: './std/random/linear_congruential_engine.is_uniform_random.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine.max', kind: "enummemberdeclaration", path: './std/random/linear_congruential_engine.max.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine.min', kind: "enummemberdeclaration", path: './std/random/linear_congruential_engine.min.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine.modulus', kind: "enummemberdeclaration", path: './std/random/linear_congruential_engine.modulus.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine.multiplier', kind: "enummemberdeclaration", path: './std/random/linear_congruential_engine.multiplier.html', attributes: []},
{name: 'std.random.LinearCongruentialEngine.popFront', kind: "functiondeclaration", path: './std/random/linear_congruential_engine.pop_front.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.random.LinearCongruentialEngine.save', kind: "functiondeclaration", path: './std/random/linear_congruential_engine.save.html', attributes: ["const", "pure", "nothrow", "nogc", "property", "safe"]},
{name: 'std.random.LinearCongruentialEngine.seed', kind: "functiondeclaration", path: './std/random/linear_congruential_engine.seed.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.random.LinearCongruentialEngine.this', kind: "functiondeclaration", path: './std/random/linear_congruential_engine.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.random.MersenneTwisterEngine', kind: "structdeclaration", path: './std/random/mersenne_twister_engine.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.defaultSeed', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.default_seed.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.defaultState', kind: "functiondeclaration", path: './std/random/mersenne_twister_engine.default_state.html', attributes: ["static", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.random.MersenneTwisterEngine.empty', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.empty.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.front', kind: "functiondeclaration", path: './std/random/mersenne_twister_engine.front.html', attributes: ["const", "pure", "nothrow", "nogc", "property", "safe"]},
{name: 'std.random.MersenneTwisterEngine.initializationMultiplier', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.initialization_multiplier.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.isUniformRandom', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.is_uniform_random.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.maskBits', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.mask_bits.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.max', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.max.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.min', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.min.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.popFront', kind: "functiondeclaration", path: './std/random/mersenne_twister_engine.pop_front.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.random.MersenneTwisterEngine.save', kind: "functiondeclaration", path: './std/random/mersenne_twister_engine.save.html', attributes: ["const", "pure", "nothrow", "nogc", "property", "safe"]},
{name: 'std.random.MersenneTwisterEngine.seed', kind: "functiondeclaration", path: './std/random/mersenne_twister_engine.seed.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.random.MersenneTwisterEngine.seedImpl', kind: "functiondeclaration", path: './std/random/mersenne_twister_engine.seed_impl.html', attributes: ["static", "nogc"]},
{name: 'std.random.MersenneTwisterEngine.shiftSize', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.shift_size.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.stateSize', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.state_size.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.temperingB', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.tempering_b.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.temperingC', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.tempering_c.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.temperingD', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.tempering_d.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.temperingL', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.tempering_l.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.temperingS', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.tempering_s.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.temperingT', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.tempering_t.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.temperingU', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.tempering_u.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.this', kind: "functiondeclaration", path: './std/random/mersenne_twister_engine.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.random.MersenneTwisterEngine.wordSize', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.word_size.html', attributes: []},
{name: 'std.random.MersenneTwisterEngine.xorMask', kind: "enummemberdeclaration", path: './std/random/mersenne_twister_engine.xor_mask.html', attributes: []},
{name: 'std.random.MinstdRand', kind: "aliasdeclaration", path: './std/random/minstd_rand.html', attributes: []},
{name: 'std.random.MinstdRand0', kind: "aliasdeclaration", path: './std/random/minstd_rand0.html', attributes: []},
{name: 'std.random.Mt19937', kind: "aliasdeclaration", path: './std/random/mt19937.html', attributes: []},
{name: 'std.random.Mt19937_64', kind: "aliasdeclaration", path: './std/random/mt19937_64.html', attributes: []},
{name: 'std.random.partialShuffle', kind: "functiondeclaration", path: './std/random/partial_shuffle.html', attributes: []},
{name: 'std.random.Random', kind: "aliasdeclaration", path: './std/random/random.html', attributes: []},
{name: 'std.random.RandomCover', kind: "structdeclaration", path: './std/random/random_cover.html', attributes: []},
{name: 'std.random.randomCover', kind: "functiondeclaration", path: './std/random/random_cover.html', attributes: ["auto"]},
{name: 'std.random.RandomSample', kind: "structdeclaration", path: './std/random/random_sample.html', attributes: []},
{name: 'std.random.RandomSample.empty', kind: "functiondeclaration", path: './std/random/random_sample.empty.html', attributes: ["const", "property"]},
{name: 'std.random.RandomSample.front', kind: "functiondeclaration", path: './std/random/random_sample.front.html', attributes: ["auto", "property", "ref"]},
{name: 'std.random.RandomSample.index', kind: "functiondeclaration", path: './std/random/random_sample.index.html', attributes: ["property"]},
{name: 'std.random.RandomSample.length', kind: "functiondeclaration", path: './std/random/random_sample.length.html', attributes: ["const", "property"]},
{name: 'std.random.RandomSample.popFront', kind: "functiondeclaration", path: './std/random/random_sample.pop_front.html', attributes: []},
{name: 'std.random.RandomSample.save', kind: "functiondeclaration", path: './std/random/random_sample.save.html', attributes: ["const", "property"]},
{name: 'std.random.randomSample', kind: "functiondeclaration", path: './std/random/random_sample.html', attributes: ["auto"]},
{name: 'std.random.randomShuffle', kind: "functiondeclaration", path: './std/random/random_shuffle.html', attributes: []},
{name: 'std.random.rndGen', kind: "functiondeclaration", path: './std/random/rnd_gen.html', attributes: ["nothrow", "ref", "property", "nogc", "safe"]},
{name: 'std.random.uniform', kind: "functiondeclaration", path: './std/random/uniform.html', attributes: ["auto"]},
{name: 'std.random.uniform01', kind: "functiondeclaration", path: './std/random/uniform01.html', attributes: []},
{name: 'std.random.uniformDistribution', kind: "functiondeclaration", path: './std/random/uniform_distribution.html', attributes: []},
{name: 'std.random.unpredictableSeed', kind: "functiondeclaration", path: './std/random/unpredictable_seed.html', attributes: ["nothrow", "property", "nogc", "trusted"]},
{name: 'std.random.Xorshift', kind: "aliasdeclaration", path: './std/random/xorshift.html', attributes: []},
{name: 'std.random.Xorshift128', kind: "aliasdeclaration", path: './std/random/xorshift128.html', attributes: []},
{name: 'std.random.Xorshift160', kind: "aliasdeclaration", path: './std/random/xorshift160.html', attributes: []},
{name: 'std.random.Xorshift192', kind: "aliasdeclaration", path: './std/random/xorshift192.html', attributes: []},
{name: 'std.random.Xorshift32', kind: "aliasdeclaration", path: './std/random/xorshift32.html', attributes: []},
{name: 'std.random.Xorshift64', kind: "aliasdeclaration", path: './std/random/xorshift64.html', attributes: []},
{name: 'std.random.Xorshift96', kind: "aliasdeclaration", path: './std/random/xorshift96.html', attributes: []},
{name: 'std.random.XorshiftEngine', kind: "structdeclaration", path: './std/random/xorshift_engine.html', attributes: []},
{name: 'std.random.XorshiftEngine.empty', kind: "enummemberdeclaration", path: './std/random/xorshift_engine.empty.html', attributes: []},
{name: 'std.random.XorshiftEngine.front', kind: "functiondeclaration", path: './std/random/xorshift_engine.front.html', attributes: ["const", "pure", "nothrow", "nogc", "property", "safe"]},
{name: 'std.random.XorshiftEngine.isUniformRandom', kind: "enummemberdeclaration", path: './std/random/xorshift_engine.is_uniform_random.html', attributes: []},
{name: 'std.random.XorshiftEngine.max', kind: "enummemberdeclaration", path: './std/random/xorshift_engine.max.html', attributes: []},
{name: 'std.random.XorshiftEngine.min', kind: "enummemberdeclaration", path: './std/random/xorshift_engine.min.html', attributes: []},
{name: 'std.random.XorshiftEngine.popFront', kind: "functiondeclaration", path: './std/random/xorshift_engine.pop_front.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.random.XorshiftEngine.save', kind: "functiondeclaration", path: './std/random/xorshift_engine.save.html', attributes: ["const", "pure", "nothrow", "nogc", "property", "safe"]},
{name: 'std.random.XorshiftEngine.seed', kind: "functiondeclaration", path: './std/random/xorshift_engine.seed.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.random.XorshiftEngine.this', kind: "functiondeclaration", path: './std/random/xorshift_engine.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.range', kind: "module", path: './std/range.html', attributes: []},
{name: 'std.range.assumeSorted', kind: "functiondeclaration", path: './std/range/assume_sorted.html', attributes: ["auto"]},
{name: 'std.range.bitwise', kind: "functiondeclaration", path: './std/range/bitwise.html', attributes: ["auto"]},
{name: 'std.range.chain', kind: "functiondeclaration", path: './std/range/chain.html', attributes: ["auto"]},
{name: 'std.range.choose', kind: "functiondeclaration", path: './std/range/choose.html', attributes: ["auto"]},
{name: 'std.range.chooseAmong', kind: "functiondeclaration", path: './std/range/choose_among.html', attributes: ["auto"]},
{name: 'std.range.Chunks', kind: "structdeclaration", path: './std/range/chunks.html', attributes: []},
{name: 'std.range.Chunks.back', kind: "functiondeclaration", path: './std/range/chunks.back.html', attributes: ["auto", "property"]},
{name: 'std.range.Chunks.empty', kind: "functiondeclaration", path: './std/range/chunks.empty.html', attributes: ["property"]},
{name: 'std.range.Chunks.front', kind: "functiondeclaration", path: './std/range/chunks.front.html', attributes: ["auto", "property"]},
{name: 'std.range.Chunks.length', kind: "functiondeclaration", path: './std/range/chunks.length.html', attributes: ["property"]},
{name: 'std.range.Chunks.opIndex', kind: "functiondeclaration", path: './std/range/chunks.op_index.html', attributes: ["auto"]},
{name: 'std.range.Chunks.opSlice', kind: "functiondeclaration", path: './std/range/chunks.op_slice.html', attributes: []},
{name: 'std.range.Chunks.popBack', kind: "functiondeclaration", path: './std/range/chunks.pop_back.html', attributes: []},
{name: 'std.range.Chunks.popFront', kind: "functiondeclaration", path: './std/range/chunks.pop_front.html', attributes: []},
{name: 'std.range.Chunks.save', kind: "functiondeclaration", path: './std/range/chunks.save.html', attributes: ["property"]},
{name: 'std.range.Chunks.this', kind: "functiondeclaration", path: './std/range/chunks.this.html', attributes: []},
{name: 'std.range.chunks', kind: "functiondeclaration", path: './std/range/chunks.html', attributes: []},
{name: 'std.range.Cycle', kind: "structdeclaration", path: './std/range/cycle.html', attributes: []},
{name: 'std.range.Cycle.empty', kind: "enummemberdeclaration", path: './std/range/cycle.empty.html', attributes: []},
{name: 'std.range.Cycle.front', kind: "functiondeclaration", path: './std/range/cycle.front.html', attributes: ["auto", "property", "ref"]},
{name: 'std.range.Cycle.opDollar', kind: "enummemberdeclaration", path: './std/range/cycle.op_dollar.html', attributes: []},
{name: 'std.range.Cycle.opIndex', kind: "functiondeclaration", path: './std/range/cycle.op_index.html', attributes: ["auto", "ref"]},
{name: 'std.range.Cycle.opIndexAssign', kind: "functiondeclaration", path: './std/range/cycle.op_index_assign.html', attributes: []},
{name: 'std.range.Cycle.opSlice', kind: "functiondeclaration", path: './std/range/cycle.op_slice.html', attributes: ["auto"]},
{name: 'std.range.Cycle.popFront', kind: "functiondeclaration", path: './std/range/cycle.pop_front.html', attributes: []},
{name: 'std.range.Cycle.save', kind: "functiondeclaration", path: './std/range/cycle.save.html', attributes: ["property"]},
{name: 'std.range.Cycle.this', kind: "functiondeclaration", path: './std/range/cycle.this.html', attributes: []},
{name: 'std.range.Cycle.empty', kind: "enummemberdeclaration", path: './std/range/cycle.empty.html', attributes: []},
{name: 'std.range.Cycle.front', kind: "functiondeclaration", path: './std/range/cycle.front.html', attributes: ["inout", "property", "ref", "safe"]},
{name: 'std.range.Cycle.opDollar', kind: "enummemberdeclaration", path: './std/range/cycle.op_dollar.html', attributes: []},
{name: 'std.range.Cycle.opIndex', kind: "functiondeclaration", path: './std/range/cycle.op_index.html', attributes: ["inout", "ref", "safe"]},
{name: 'std.range.Cycle.opSlice', kind: "functiondeclaration", path: './std/range/cycle.op_slice.html', attributes: ["auto", "safe"]},
{name: 'std.range.Cycle.popFront', kind: "functiondeclaration", path: './std/range/cycle.pop_front.html', attributes: ["safe"]},
{name: 'std.range.Cycle.save', kind: "functiondeclaration", path: './std/range/cycle.save.html', attributes: ["inout", "property", "safe"]},
{name: 'std.range.Cycle.this', kind: "functiondeclaration", path: './std/range/cycle.this.html', attributes: ["system"]},
{name: 'std.range.cycle', kind: "functiondeclaration", path: './std/range/cycle.html', attributes: ["auto"]},
{name: 'std.range.drop', kind: "functiondeclaration", path: './std/range/drop.html', attributes: []},
{name: 'std.range.dropBack', kind: "functiondeclaration", path: './std/range/drop_back.html', attributes: []},
{name: 'std.range.dropBackExactly', kind: "functiondeclaration", path: './std/range/drop_back_exactly.html', attributes: []},
{name: 'std.range.dropBackOne', kind: "functiondeclaration", path: './std/range/drop_back_one.html', attributes: []},
{name: 'std.range.dropExactly', kind: "functiondeclaration", path: './std/range/drop_exactly.html', attributes: []},
{name: 'std.range.dropOne', kind: "functiondeclaration", path: './std/range/drop_one.html', attributes: []},
{name: 'std.range.enumerate', kind: "functiondeclaration", path: './std/range/enumerate.html', attributes: ["auto"]},
{name: 'std.range.EvenChunks', kind: "structdeclaration", path: './std/range/even_chunks.html', attributes: []},
{name: 'std.range.EvenChunks.back', kind: "functiondeclaration", path: './std/range/even_chunks.back.html', attributes: ["auto", "property"]},
{name: 'std.range.EvenChunks.empty', kind: "functiondeclaration", path: './std/range/even_chunks.empty.html', attributes: ["property"]},
{name: 'std.range.EvenChunks.front', kind: "functiondeclaration", path: './std/range/even_chunks.front.html', attributes: ["auto", "property"]},
{name: 'std.range.EvenChunks.length', kind: "functiondeclaration", path: './std/range/even_chunks.length.html', attributes: ["const", "property"]},
{name: 'std.range.EvenChunks.opIndex', kind: "functiondeclaration", path: './std/range/even_chunks.op_index.html', attributes: ["auto"]},
{name: 'std.range.EvenChunks.opSlice', kind: "functiondeclaration", path: './std/range/even_chunks.op_slice.html', attributes: []},
{name: 'std.range.EvenChunks.popBack', kind: "functiondeclaration", path: './std/range/even_chunks.pop_back.html', attributes: []},
{name: 'std.range.EvenChunks.popFront', kind: "functiondeclaration", path: './std/range/even_chunks.pop_front.html', attributes: []},
{name: 'std.range.EvenChunks.save', kind: "functiondeclaration", path: './std/range/even_chunks.save.html', attributes: ["property"]},
{name: 'std.range.EvenChunks.this', kind: "functiondeclaration", path: './std/range/even_chunks.this.html', attributes: []},
{name: 'std.range.evenChunks', kind: "functiondeclaration", path: './std/range/even_chunks.html', attributes: []},
{name: 'std.range.FrontTransversal', kind: "structdeclaration", path: './std/range/front_transversal.html', attributes: []},
{name: 'std.range.FrontTransversal.back', kind: "functiondeclaration", path: './std/range/front_transversal.back.html', attributes: ["auto", "property", "ref"]},
{name: 'std.range.FrontTransversal.empty', kind: "enummemberdeclaration", path: './std/range/front_transversal.empty.html', attributes: []},
{name: 'std.range.FrontTransversal.front', kind: "functiondeclaration", path: './std/range/front_transversal.front.html', attributes: ["auto", "property", "ref"]},
{name: 'std.range.FrontTransversal.length', kind: "functiondeclaration", path: './std/range/front_transversal.length.html', attributes: ["property"]},
{name: 'std.range.FrontTransversal.moveAt', kind: "functiondeclaration", path: './std/range/front_transversal.move_at.html', attributes: []},
{name: 'std.range.FrontTransversal.moveBack', kind: "functiondeclaration", path: './std/range/front_transversal.move_back.html', attributes: []},
{name: 'std.range.FrontTransversal.moveFront', kind: "functiondeclaration", path: './std/range/front_transversal.move_front.html', attributes: []},
{name: 'std.range.FrontTransversal.opDollar', kind: "aliasdeclaration", path: './std/range/front_transversal.op_dollar.html', attributes: []},
{name: 'std.range.FrontTransversal.opIndex', kind: "functiondeclaration", path: './std/range/front_transversal.op_index.html', attributes: ["auto", "ref"]},
{name: 'std.range.FrontTransversal.opIndexAssign', kind: "functiondeclaration", path: './std/range/front_transversal.op_index_assign.html', attributes: []},
{name: 'std.range.FrontTransversal.opSlice', kind: "functiondeclaration", path: './std/range/front_transversal.op_slice.html', attributes: []},
{name: 'std.range.FrontTransversal.popBack', kind: "functiondeclaration", path: './std/range/front_transversal.pop_back.html', attributes: []},
{name: 'std.range.FrontTransversal.popFront', kind: "functiondeclaration", path: './std/range/front_transversal.pop_front.html', attributes: []},
{name: 'std.range.FrontTransversal.save', kind: "functiondeclaration", path: './std/range/front_transversal.save.html', attributes: ["property"]},
{name: 'std.range.FrontTransversal.this', kind: "functiondeclaration", path: './std/range/front_transversal.this.html', attributes: []},
{name: 'std.range.frontTransversal', kind: "functiondeclaration", path: './std/range/front_transversal.html', attributes: []},
{name: 'std.range.generate', kind: "functiondeclaration", path: './std/range/generate.html', attributes: ["auto"]},
{name: 'std.range.Indexed', kind: "structdeclaration", path: './std/range/indexed.html', attributes: []},
{name: 'std.range.Indexed.back', kind: "functiondeclaration", path: './std/range/indexed.back.html', attributes: ["auto", "property", "ref"]},
{name: 'std.range.Indexed.front', kind: "functiondeclaration", path: './std/range/indexed.front.html', attributes: ["auto", "property", "ref"]},
{name: 'std.range.Indexed.indices', kind: "functiondeclaration", path: './std/range/indexed.indices.html', attributes: ["property"]},
{name: 'std.range.Indexed.length', kind: "functiondeclaration", path: './std/range/indexed.length.html', attributes: ["property"]},
{name: 'std.range.Indexed.moveAt', kind: "functiondeclaration", path: './std/range/indexed.move_at.html', attributes: ["auto"]},
{name: 'std.range.Indexed.moveBack', kind: "functiondeclaration", path: './std/range/indexed.move_back.html', attributes: ["auto"]},
{name: 'std.range.Indexed.moveFront', kind: "functiondeclaration", path: './std/range/indexed.move_front.html', attributes: ["auto"]},
{name: 'std.range.Indexed.opIndex', kind: "functiondeclaration", path: './std/range/indexed.op_index.html', attributes: ["auto", "ref"]},
{name: 'std.range.Indexed.opIndexAssign', kind: "functiondeclaration", path: './std/range/indexed.op_index_assign.html', attributes: ["auto"]},
{name: 'std.range.Indexed.opSlice', kind: "functiondeclaration", path: './std/range/indexed.op_slice.html', attributes: []},
{name: 'std.range.Indexed.physicalIndex', kind: "functiondeclaration", path: './std/range/indexed.physical_index.html', attributes: []},
{name: 'std.range.Indexed.popBack', kind: "functiondeclaration", path: './std/range/indexed.pop_back.html', attributes: []},
{name: 'std.range.Indexed.popFront', kind: "functiondeclaration", path: './std/range/indexed.pop_front.html', attributes: []},
{name: 'std.range.Indexed.save', kind: "functiondeclaration", path: './std/range/indexed.save.html', attributes: ["property"]},
{name: 'std.range.Indexed.source', kind: "functiondeclaration", path: './std/range/indexed.source.html', attributes: ["property"]},
{name: 'std.range.indexed', kind: "functiondeclaration", path: './std/range/indexed.html', attributes: []},
{name: 'std.range.iota', kind: "functiondeclaration", path: './std/range/iota.html', attributes: ["auto"]},
{name: 'std.range.isTwoWayCompatible', kind: "enummemberdeclaration", path: './std/range/is_two_way_compatible.html', attributes: []},
{name: 'std.range.Lockstep', kind: "structdeclaration", path: './std/range/lockstep.html', attributes: []},
{name: 'std.range.Lockstep.this', kind: "functiondeclaration", path: './std/range/lockstep.this.html', attributes: []},
{name: 'std.range.lockstep', kind: "functiondeclaration", path: './std/range/lockstep.html', attributes: []},
{name: 'std.range.NullSink', kind: "structdeclaration", path: './std/range/null_sink.html', attributes: []},
{name: 'std.range.nullSink', kind: "functiondeclaration", path: './std/range/null_sink.html', attributes: ["pure", "nothrow", "ref", "nogc", "safe"]},
{name: 'std.range.only', kind: "functiondeclaration", path: './std/range/only.html', attributes: ["auto"]},
{name: 'std.range.padLeft', kind: "functiondeclaration", path: './std/range/pad_left.html', attributes: ["auto"]},
{name: 'std.range.padRight', kind: "functiondeclaration", path: './std/range/pad_right.html', attributes: ["auto"]},
{name: 'std.range.radial', kind: "functiondeclaration", path: './std/range/radial.html', attributes: ["auto"]},
{name: 'std.range.Recurrence', kind: "structdeclaration", path: './std/range/recurrence.html', attributes: []},
{name: 'std.range.recurrence', kind: "functiondeclaration", path: './std/range/recurrence.html', attributes: []},
{name: 'std.range.RefRange', kind: "structdeclaration", path: './std/range/ref_range.html', attributes: []},
{name: 'std.range.RefRange.back', kind: "functiondeclaration", path: './std/range/ref_range.back.html', attributes: ["auto", "property"]},
{name: 'std.range.RefRange.empty', kind: "functiondeclaration", path: './std/range/ref_range.empty.html', attributes: ["property"]},
{name: 'std.range.RefRange.front', kind: "functiondeclaration", path: './std/range/ref_range.front.html', attributes: ["auto", "property"]},
{name: 'std.range.RefRange.length', kind: "functiondeclaration", path: './std/range/ref_range.length.html', attributes: ["auto", "property"]},
{name: 'std.range.RefRange.moveAt', kind: "functiondeclaration", path: './std/range/ref_range.move_at.html', attributes: ["auto"]},
{name: 'std.range.RefRange.moveBack', kind: "functiondeclaration", path: './std/range/ref_range.move_back.html', attributes: ["auto"]},
{name: 'std.range.RefRange.moveFront', kind: "functiondeclaration", path: './std/range/ref_range.move_front.html', attributes: ["auto"]},
{name: 'std.range.RefRange.opAssign', kind: "functiondeclaration", path: './std/range/ref_range.op_assign.html', attributes: ["auto"]},
{name: 'std.range.RefRange.opDollar', kind: "aliasdeclaration", path: './std/range/ref_range.op_dollar.html', attributes: []},
{name: 'std.range.RefRange.opIndex', kind: "functiondeclaration", path: './std/range/ref_range.op_index.html', attributes: ["auto", "ref"]},
{name: 'std.range.RefRange.opSlice', kind: "functiondeclaration", path: './std/range/ref_range.op_slice.html', attributes: ["auto"]},
{name: 'std.range.RefRange.popBack', kind: "functiondeclaration", path: './std/range/ref_range.pop_back.html', attributes: []},
{name: 'std.range.RefRange.popFront', kind: "functiondeclaration", path: './std/range/ref_range.pop_front.html', attributes: []},
{name: 'std.range.RefRange.ptr', kind: "functiondeclaration", path: './std/range/ref_range.ptr.html', attributes: ["inout", "pure", "nothrow", "property", "safe"]},
{name: 'std.range.RefRange.save', kind: "functiondeclaration", path: './std/range/ref_range.save.html', attributes: ["auto", "property"]},
{name: 'std.range.RefRange.this', kind: "functiondeclaration", path: './std/range/ref_range.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.range.refRange', kind: "functiondeclaration", path: './std/range/ref_range.html', attributes: ["auto"]},
{name: 'std.range.Repeat', kind: "structdeclaration", path: './std/range/repeat.html', attributes: []},
{name: 'std.range.Repeat.back', kind: "functiondeclaration", path: './std/range/repeat.back.html', attributes: ["inout", "property"]},
{name: 'std.range.Repeat.empty', kind: "enummemberdeclaration", path: './std/range/repeat.empty.html', attributes: []},
{name: 'std.range.Repeat.front', kind: "functiondeclaration", path: './std/range/repeat.front.html', attributes: ["inout", "property"]},
{name: 'std.range.Repeat.opDollar', kind: "enummemberdeclaration", path: './std/range/repeat.op_dollar.html', attributes: []},
{name: 'std.range.Repeat.opIndex', kind: "functiondeclaration", path: './std/range/repeat.op_index.html', attributes: ["inout"]},
{name: 'std.range.Repeat.opSlice', kind: "functiondeclaration", path: './std/range/repeat.op_slice.html', attributes: ["auto"]},
{name: 'std.range.Repeat.popBack', kind: "functiondeclaration", path: './std/range/repeat.pop_back.html', attributes: []},
{name: 'std.range.Repeat.popFront', kind: "functiondeclaration", path: './std/range/repeat.pop_front.html', attributes: []},
{name: 'std.range.Repeat.save', kind: "functiondeclaration", path: './std/range/repeat.save.html', attributes: ["auto", "inout", "property"]},
{name: 'std.range.repeat', kind: "functiondeclaration", path: './std/range/repeat.html', attributes: []},
{name: 'std.range.retro', kind: "functiondeclaration", path: './std/range/retro.html', attributes: ["auto"]},
{name: 'std.range.roundRobin', kind: "functiondeclaration", path: './std/range/round_robin.html', attributes: ["auto"]},
{name: 'std.range.SearchPolicy', kind: "enumdeclaration", path: './std/range/search_policy.html', attributes: []},
{name: 'std.range.SearchPolicy.binarySearch', kind: "enummemberdeclaration", path: './std/range/search_policy.html#binarySearch', attributes: []},
{name: 'std.range.SearchPolicy.gallop', kind: "enummemberdeclaration", path: './std/range/search_policy.html#gallop', attributes: []},
{name: 'std.range.SearchPolicy.gallopBackwards', kind: "enummemberdeclaration", path: './std/range/search_policy.html#gallopBackwards', attributes: []},
{name: 'std.range.SearchPolicy.linear', kind: "enummemberdeclaration", path: './std/range/search_policy.html#linear', attributes: []},
{name: 'std.range.SearchPolicy.trot', kind: "enummemberdeclaration", path: './std/range/search_policy.html#trot', attributes: []},
{name: 'std.range.SearchPolicy.trotBackwards', kind: "enummemberdeclaration", path: './std/range/search_policy.html#trotBackwards', attributes: []},
{name: 'std.range.Sequence', kind: "structdeclaration", path: './std/range/sequence.html', attributes: []},
{name: 'std.range.sequence', kind: "functiondeclaration", path: './std/range/sequence.html', attributes: ["auto"]},
{name: 'std.range.slide', kind: "functiondeclaration", path: './std/range/slide.html', attributes: ["auto"]},
{name: 'std.range.SortedRange', kind: "structdeclaration", path: './std/range/sorted_range.html', attributes: []},
{name: 'std.range.SortedRange.back', kind: "functiondeclaration", path: './std/range/sorted_range.back.html', attributes: ["auto", "property", "ref"]},
{name: 'std.range.SortedRange.contains', kind: "functiondeclaration", path: './std/range/sorted_range.contains.html', attributes: []},
{name: 'std.range.SortedRange.empty', kind: "functiondeclaration", path: './std/range/sorted_range.empty.html', attributes: ["property"]},
{name: 'std.range.SortedRange.equalRange', kind: "functiondeclaration", path: './std/range/sorted_range.equal_range.html', attributes: ["auto"]},
{name: 'std.range.SortedRange.front', kind: "functiondeclaration", path: './std/range/sorted_range.front.html', attributes: ["auto", "property", "ref"]},
{name: 'std.range.SortedRange.groupBy', kind: "functiondeclaration", path: './std/range/sorted_range.group_by.html', attributes: ["auto"]},
{name: 'std.range.SortedRange.length', kind: "functiondeclaration", path: './std/range/sorted_range.length.html', attributes: ["property"]},
{name: 'std.range.SortedRange.lowerBound', kind: "functiondeclaration", path: './std/range/sorted_range.lower_bound.html', attributes: ["auto"]},
{name: 'std.range.SortedRange.opBinaryRight', kind: "functiondeclaration", path: './std/range/sorted_range.op_binary_right.html', attributes: []},
{name: 'std.range.SortedRange.opDollar', kind: "aliasdeclaration", path: './std/range/sorted_range.op_dollar.html', attributes: []},
{name: 'std.range.SortedRange.opIndex', kind: "functiondeclaration", path: './std/range/sorted_range.op_index.html', attributes: ["auto", "ref"]},
{name: 'std.range.SortedRange.opSlice', kind: "functiondeclaration", path: './std/range/sorted_range.op_slice.html', attributes: ["auto", "scope"]},
{name: 'std.range.SortedRange.popBack', kind: "functiondeclaration", path: './std/range/sorted_range.pop_back.html', attributes: []},
{name: 'std.range.SortedRange.popFront', kind: "functiondeclaration", path: './std/range/sorted_range.pop_front.html', attributes: []},
{name: 'std.range.SortedRange.release', kind: "functiondeclaration", path: './std/range/sorted_range.release.html', attributes: ["auto"]},
{name: 'std.range.SortedRange.save', kind: "functiondeclaration", path: './std/range/sorted_range.save.html', attributes: ["auto", "property"]},
{name: 'std.range.SortedRange.trisect', kind: "functiondeclaration", path: './std/range/sorted_range.trisect.html', attributes: ["auto"]},
{name: 'std.range.SortedRange.upperBound', kind: "functiondeclaration", path: './std/range/sorted_range.upper_bound.html', attributes: ["auto"]},
{name: 'std.range.SortedRangeOptions', kind: "enumdeclaration", path: './std/range/sorted_range_options.html', attributes: []},
{name: 'std.range.SortedRangeOptions.assumeSorted', kind: "enummemberdeclaration", path: './std/range/sorted_range_options.html#assumeSorted', attributes: []},
{name: 'std.range.SortedRangeOptions.checkRoughly', kind: "enummemberdeclaration", path: './std/range/sorted_range_options.html#checkRoughly', attributes: []},
{name: 'std.range.SortedRangeOptions.checkStrictly', kind: "enummemberdeclaration", path: './std/range/sorted_range_options.html#checkStrictly', attributes: []},
{name: 'std.range.StoppingPolicy', kind: "enumdeclaration", path: './std/range/stopping_policy.html', attributes: []},
{name: 'std.range.StoppingPolicy.longest', kind: "enummemberdeclaration", path: './std/range/stopping_policy.html#longest', attributes: []},
{name: 'std.range.StoppingPolicy.requireSameLength', kind: "enummemberdeclaration", path: './std/range/stopping_policy.html#requireSameLength', attributes: []},
{name: 'std.range.StoppingPolicy.shortest', kind: "enummemberdeclaration", path: './std/range/stopping_policy.html#shortest', attributes: []},
{name: 'std.range.stride', kind: "functiondeclaration", path: './std/range/stride.html', attributes: ["auto"]},
{name: 'std.range.tail', kind: "functiondeclaration", path: './std/range/tail.html', attributes: ["auto"]},
{name: 'std.range.take', kind: "functiondeclaration", path: './std/range/take.html', attributes: []},
{name: 'std.range.Take', kind: "structdeclaration", path: './std/range/take.html', attributes: []},
{name: 'std.range.Take.back', kind: "functiondeclaration", path: './std/range/take.back.html', attributes: ["auto", "property", "ref"]},
{name: 'std.range.Take.empty', kind: "functiondeclaration", path: './std/range/take.empty.html', attributes: ["property"]},
{name: 'std.range.Take.front', kind: "functiondeclaration", path: './std/range/take.front.html', attributes: ["auto", "property", "ref"]},
{name: 'std.range.Take.length', kind: "functiondeclaration", path: './std/range/take.length.html', attributes: ["const", "property"]},
{name: 'std.range.Take.maxLength', kind: "functiondeclaration", path: './std/range/take.max_length.html', attributes: ["const", "property"]},
{name: 'std.range.Take.moveAt', kind: "functiondeclaration", path: './std/range/take.move_at.html', attributes: ["auto"]},
{name: 'std.range.Take.moveBack', kind: "functiondeclaration", path: './std/range/take.move_back.html', attributes: ["auto"]},
{name: 'std.range.Take.moveFront', kind: "functiondeclaration", path: './std/range/take.move_front.html', attributes: ["auto"]},
{name: 'std.range.Take.opDollar', kind: "aliasdeclaration", path: './std/range/take.op_dollar.html', attributes: []},
{name: 'std.range.Take.opIndex', kind: "functiondeclaration", path: './std/range/take.op_index.html', attributes: ["auto", "ref"]},
{name: 'std.range.Take.opIndexAssign', kind: "functiondeclaration", path: './std/range/take.op_index_assign.html', attributes: []},
{name: 'std.range.Take.opSlice', kind: "functiondeclaration", path: './std/range/take.op_slice.html', attributes: ["auto"]},
{name: 'std.range.Take.popBack', kind: "functiondeclaration", path: './std/range/take.pop_back.html', attributes: []},
{name: 'std.range.Take.popFront', kind: "functiondeclaration", path: './std/range/take.pop_front.html', attributes: []},
{name: 'std.range.Take.save', kind: "functiondeclaration", path: './std/range/take.save.html', attributes: ["property"]},
{name: 'std.range.Take.source', kind: "variabledeclaration", path: './std/range/take.source.html', attributes: []},
{name: 'std.range.takeExactly', kind: "functiondeclaration", path: './std/range/take_exactly.html', attributes: ["auto"]},
{name: 'std.range.takeNone', kind: "functiondeclaration", path: './std/range/take_none.html', attributes: ["auto"]},
{name: 'std.range.takeOne', kind: "functiondeclaration", path: './std/range/take_one.html', attributes: ["auto"]},
{name: 'std.range.tee', kind: "functiondeclaration", path: './std/range/tee.html', attributes: ["auto"]},
{name: 'std.range.transposed', kind: "functiondeclaration", path: './std/range/transposed.html', attributes: []},
{name: 'std.range.Transversal', kind: "structdeclaration", path: './std/range/transversal.html', attributes: []},
{name: 'std.range.Transversal.back', kind: "functiondeclaration", path: './std/range/transversal.back.html', attributes: ["auto", "property", "ref"]},
{name: 'std.range.Transversal.empty', kind: "enummemberdeclaration", path: './std/range/transversal.empty.html', attributes: []},
{name: 'std.range.Transversal.front', kind: "functiondeclaration", path: './std/range/transversal.front.html', attributes: ["auto", "property", "ref"]},
{name: 'std.range.Transversal.length', kind: "functiondeclaration", path: './std/range/transversal.length.html', attributes: ["property"]},
{name: 'std.range.Transversal.moveAt', kind: "functiondeclaration", path: './std/range/transversal.move_at.html', attributes: []},
{name: 'std.range.Transversal.moveBack', kind: "functiondeclaration", path: './std/range/transversal.move_back.html', attributes: []},
{name: 'std.range.Transversal.moveFront', kind: "functiondeclaration", path: './std/range/transversal.move_front.html', attributes: []},
{name: 'std.range.Transversal.opDollar', kind: "aliasdeclaration", path: './std/range/transversal.op_dollar.html', attributes: []},
{name: 'std.range.Transversal.opIndex', kind: "functiondeclaration", path: './std/range/transversal.op_index.html', attributes: ["auto", "ref"]},
{name: 'std.range.Transversal.opIndexAssign', kind: "functiondeclaration", path: './std/range/transversal.op_index_assign.html', attributes: []},
{name: 'std.range.Transversal.opSlice', kind: "functiondeclaration", path: './std/range/transversal.op_slice.html', attributes: []},
{name: 'std.range.Transversal.popBack', kind: "functiondeclaration", path: './std/range/transversal.pop_back.html', attributes: []},
{name: 'std.range.Transversal.popFront', kind: "functiondeclaration", path: './std/range/transversal.pop_front.html', attributes: []},
{name: 'std.range.Transversal.save', kind: "functiondeclaration", path: './std/range/transversal.save.html', attributes: ["property"]},
{name: 'std.range.Transversal.this', kind: "functiondeclaration", path: './std/range/transversal.this.html', attributes: []},
{name: 'std.range.transversal', kind: "functiondeclaration", path: './std/range/transversal.html', attributes: []},
{name: 'std.range.TransverseOptions', kind: "enumdeclaration", path: './std/range/transverse_options.html', attributes: []},
{name: 'std.range.TransverseOptions.assumeJagged', kind: "enummemberdeclaration", path: './std/range/transverse_options.html#assumeJagged', attributes: []},
{name: 'std.range.TransverseOptions.assumeNotJagged', kind: "enummemberdeclaration", path: './std/range/transverse_options.html#assumeNotJagged', attributes: []},
{name: 'std.range.TransverseOptions.enforceNotJagged', kind: "enummemberdeclaration", path: './std/range/transverse_options.html#enforceNotJagged', attributes: []},
{name: 'std.range.Zip', kind: "structdeclaration", path: './std/range/zip.html', attributes: []},
{name: 'std.range.Zip.back', kind: "functiondeclaration", path: './std/range/zip.back.html', attributes: ["property"]},
{name: 'std.range.Zip.empty', kind: "enummemberdeclaration", path: './std/range/zip.empty.html', attributes: []},
{name: 'std.range.Zip.front', kind: "functiondeclaration", path: './std/range/zip.front.html', attributes: ["property"]},
{name: 'std.range.Zip.length', kind: "functiondeclaration", path: './std/range/zip.length.html', attributes: ["auto", "property"]},
{name: 'std.range.Zip.moveAt', kind: "functiondeclaration", path: './std/range/zip.move_at.html', attributes: []},
{name: 'std.range.Zip.moveBack', kind: "functiondeclaration", path: './std/range/zip.move_back.html', attributes: []},
{name: 'std.range.Zip.moveFront', kind: "functiondeclaration", path: './std/range/zip.move_front.html', attributes: []},
{name: 'std.range.Zip.opDollar', kind: "aliasdeclaration", path: './std/range/zip.op_dollar.html', attributes: []},
{name: 'std.range.Zip.opIndex', kind: "functiondeclaration", path: './std/range/zip.op_index.html', attributes: []},
{name: 'std.range.Zip.opIndexAssign', kind: "functiondeclaration", path: './std/range/zip.op_index_assign.html', attributes: []},
{name: 'std.range.Zip.opSlice', kind: "functiondeclaration", path: './std/range/zip.op_slice.html', attributes: ["auto"]},
{name: 'std.range.Zip.popBack', kind: "functiondeclaration", path: './std/range/zip.pop_back.html', attributes: []},
{name: 'std.range.Zip.popFront', kind: "functiondeclaration", path: './std/range/zip.pop_front.html', attributes: []},
{name: 'std.range.Zip.save', kind: "functiondeclaration", path: './std/range/zip.save.html', attributes: ["property"]},
{name: 'std.range.Zip.this', kind: "functiondeclaration", path: './std/range/zip.this.html', attributes: []},
{name: 'std.range.zip', kind: "functiondeclaration", path: './std/range/zip.html', attributes: ["auto"]},
{name: 'std.regex', kind: "module", path: './std/regex.html', attributes: []},
{name: 'std.regex.bmatch', kind: "functiondeclaration", path: './std/regex/bmatch.html', attributes: ["auto"]},
{name: 'std.regex.Captures', kind: "structdeclaration", path: './std/regex/captures.html', attributes: []},
{name: 'std.regex.Captures.back', kind: "functiondeclaration", path: './std/regex/captures.back.html', attributes: ["property"]},
{name: 'std.regex.Captures.captures', kind: "functiondeclaration", path: './std/regex/captures.captures.html', attributes: ["property", "ref"]},
{name: 'std.regex.Captures.empty', kind: "functiondeclaration", path: './std/regex/captures.empty.html', attributes: ["const", "property"]},
{name: 'std.regex.Captures.front', kind: "functiondeclaration", path: './std/regex/captures.front.html', attributes: ["property"]},
{name: 'std.regex.Captures.hit', kind: "functiondeclaration", path: './std/regex/captures.hit.html', attributes: ["property"]},
{name: 'std.regex.Captures.length', kind: "functiondeclaration", path: './std/regex/captures.length.html', attributes: ["const", "property"]},
{name: 'std.regex.Captures.opCast', kind: "functiondeclaration", path: './std/regex/captures.op_cast.html', attributes: ["const", "nothrow", "safe"]},
{name: 'std.regex.Captures.opIndex', kind: "functiondeclaration", path: './std/regex/captures.op_index.html', attributes: ["inout"]},
{name: 'std.regex.Captures.popBack', kind: "functiondeclaration", path: './std/regex/captures.pop_back.html', attributes: []},
{name: 'std.regex.Captures.popFront', kind: "functiondeclaration", path: './std/regex/captures.pop_front.html', attributes: []},
{name: 'std.regex.Captures.post', kind: "functiondeclaration", path: './std/regex/captures.post.html', attributes: ["property"]},
{name: 'std.regex.Captures.pre', kind: "functiondeclaration", path: './std/regex/captures.pre.html', attributes: ["property"]},
{name: 'std.regex.Captures.whichPattern', kind: "functiondeclaration", path: './std/regex/captures.which_pattern.html', attributes: ["const", "nothrow", "property", "safe"]},
{name: 'std.regex.ctRegex', kind: "enummemberdeclaration", path: './std/regex/ct_regex.html', attributes: []},
{name: 'std.regex.escaper', kind: "functiondeclaration", path: './std/regex/escaper.html', attributes: ["auto"]},
{name: 'std.regex.match', kind: "functiondeclaration", path: './std/regex/match.html', attributes: ["auto"]},
{name: 'std.regex.matchAll', kind: "functiondeclaration", path: './std/regex/match_all.html', attributes: ["auto"]},
{name: 'std.regex.matchFirst', kind: "functiondeclaration", path: './std/regex/match_first.html', attributes: ["auto"]},
{name: 'std.regex.Regex', kind: "aliasdeclaration", path: './std/regex/regex.html', attributes: []},
{name: 'std.regex.regex', kind: "functiondeclaration", path: './std/regex/regex.html', attributes: ["auto", "trusted"]},
{name: 'std.regex.RegexException', kind: "aliasdeclaration", path: './std/regex/regex_exception.html', attributes: []},
{name: 'std.regex.RegexMatch', kind: "structdeclaration", path: './std/regex/regex_match.html', attributes: []},
{name: 'std.regex.RegexMatch.captures', kind: "functiondeclaration", path: './std/regex/regex_match.captures.html', attributes: ["inout", "property"]},
{name: 'std.regex.RegexMatch.empty', kind: "functiondeclaration", path: './std/regex/regex_match.empty.html', attributes: ["const", "property"]},
{name: 'std.regex.RegexMatch.front', kind: "functiondeclaration", path: './std/regex/regex_match.front.html', attributes: ["inout", "property"]},
{name: 'std.regex.RegexMatch.hit', kind: "functiondeclaration", path: './std/regex/regex_match.hit.html', attributes: ["property"]},
{name: 'std.regex.RegexMatch.opCast', kind: "functiondeclaration", path: './std/regex/regex_match.op_cast.html', attributes: []},
{name: 'std.regex.RegexMatch.popFront', kind: "functiondeclaration", path: './std/regex/regex_match.pop_front.html', attributes: []},
{name: 'std.regex.RegexMatch.post', kind: "functiondeclaration", path: './std/regex/regex_match.post.html', attributes: ["property"]},
{name: 'std.regex.RegexMatch.pre', kind: "functiondeclaration", path: './std/regex/regex_match.pre.html', attributes: ["property"]},
{name: 'std.regex.RegexMatch.save', kind: "functiondeclaration", path: './std/regex/regex_match.save.html', attributes: ["auto"]},
{name: 'std.regex.replace', kind: "functiondeclaration", path: './std/regex/replace.html', attributes: []},
{name: 'std.regex.replaceAll', kind: "functiondeclaration", path: './std/regex/replace_all.html', attributes: ["trusted"]},
{name: 'std.regex.replaceAllInto', kind: "functiondeclaration", path: './std/regex/replace_all_into.html', attributes: ["trusted"]},
{name: 'std.regex.replaceFirst', kind: "functiondeclaration", path: './std/regex/replace_first.html', attributes: []},
{name: 'std.regex.replaceFirstInto', kind: "functiondeclaration", path: './std/regex/replace_first_into.html', attributes: ["trusted"]},
{name: 'std.regex.split', kind: "functiondeclaration", path: './std/regex/split.html', attributes: ["trusted"]},
{name: 'std.regex.Splitter', kind: "structdeclaration", path: './std/regex/splitter.html', attributes: []},
{name: 'std.regex.Splitter.empty', kind: "functiondeclaration", path: './std/regex/splitter.empty.html', attributes: ["property"]},
{name: 'std.regex.Splitter.front', kind: "functiondeclaration", path: './std/regex/splitter.front.html', attributes: ["property"]},
{name: 'std.regex.Splitter.popFront', kind: "functiondeclaration", path: './std/regex/splitter.pop_front.html', attributes: []},
{name: 'std.regex.Splitter.save', kind: "functiondeclaration", path: './std/regex/splitter.save.html', attributes: ["auto", "property"]},
{name: 'std.regex.splitter', kind: "functiondeclaration", path: './std/regex/splitter.html', attributes: []},
{name: 'std.regex.StaticRegex', kind: "aliasdeclaration", path: './std/regex/static_regex.html', attributes: []},
{name: 'std.signals', kind: "module", path: './std/signals.html', attributes: []},
{name: 'std.signals.Signal', kind: "templatedeclaration", path: './std/signals/signal.html', attributes: []},
{name: 'std.signals.Signal.connect', kind: "functiondeclaration", path: './std/signals/signal.connect.html', attributes: ["final"]},
{name: 'std.signals.Signal.disconnect', kind: "functiondeclaration", path: './std/signals/signal.disconnect.html', attributes: ["final"]},
{name: 'std.signals.Signal.disconnectAll', kind: "functiondeclaration", path: './std/signals/signal.disconnect_all.html', attributes: ["final"]},
{name: 'std.signals.Signal.emit', kind: "functiondeclaration", path: './std/signals/signal.emit.html', attributes: ["final"]},
{name: 'std.signals.Signal.slot_t', kind: "aliasdeclaration", path: './std/signals/signal.slot_t.html', attributes: []},
{name: 'std.socket', kind: "module", path: './std/socket.html', attributes: []},
{name: 'std.socket.Address', kind: "classdeclaration", path: './std/socket/address.html', attributes: []},
{name: 'std.socket.Address.addressFamily', kind: "functiondeclaration", path: './std/socket/address.address_family.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.socket.Address.name', kind: "functiondeclaration", path: './std/socket/address.name.html', attributes: ["abstract", "pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.socket.Address.nameLen', kind: "functiondeclaration", path: './std/socket/address.name_len.html', attributes: ["abstract", "pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.socket.Address.toAddrString', kind: "functiondeclaration", path: './std/socket/address.to_addr_string.html', attributes: ["safe", "const"]},
{name: 'std.socket.Address.toHostNameString', kind: "functiondeclaration", path: './std/socket/address.to_host_name_string.html', attributes: ["safe", "const"]},
{name: 'std.socket.Address.toPortString', kind: "functiondeclaration", path: './std/socket/address.to_port_string.html', attributes: ["safe", "const"]},
{name: 'std.socket.Address.toServiceNameString', kind: "functiondeclaration", path: './std/socket/address.to_service_name_string.html', attributes: ["safe", "const"]},
{name: 'std.socket.Address.toString', kind: "functiondeclaration", path: './std/socket/address.to_string.html', attributes: ["override", "safe", "const"]},
{name: 'std.socket.AddressException', kind: "classdeclaration", path: './std/socket/address_exception.html', attributes: []},
{name: 'std.socket.SocketOSException.errorCode', kind: "variabledeclaration", path: './std/socket/socket_os_exception.error_code.html', attributes: []},
{name: 'std.socket.AddressFamily', kind: "enumdeclaration", path: './std/socket/address_family.html', attributes: []},
{name: 'std.socket.AddressFamily.APPLETALK', kind: "enummemberdeclaration", path: './std/socket/address_family.html#APPLETALK', attributes: []},
{name: 'std.socket.AddressFamily.INET', kind: "enummemberdeclaration", path: './std/socket/address_family.html#INET', attributes: []},
{name: 'std.socket.AddressFamily.INET6', kind: "enummemberdeclaration", path: './std/socket/address_family.html#INET6', attributes: []},
{name: 'std.socket.AddressFamily.IPX', kind: "enummemberdeclaration", path: './std/socket/address_family.html#IPX', attributes: []},
{name: 'std.socket.AddressFamily.UNIX', kind: "enummemberdeclaration", path: './std/socket/address_family.html#UNIX', attributes: []},
{name: 'std.socket.AddressFamily.UNSPEC', kind: "enummemberdeclaration", path: './std/socket/address_family.html#UNSPEC', attributes: []},
{name: 'std.socket.AddressInfo', kind: "structdeclaration", path: './std/socket/address_info.html', attributes: []},
{name: 'std.socket.AddressInfo.address', kind: "variabledeclaration", path: './std/socket/address_info.address.html', attributes: []},
{name: 'std.socket.AddressInfo.canonicalName', kind: "variabledeclaration", path: './std/socket/address_info.canonical_name.html', attributes: []},
{name: 'std.socket.AddressInfo.family', kind: "variabledeclaration", path: './std/socket/address_info.family.html', attributes: []},
{name: 'std.socket.AddressInfo.protocol', kind: "variabledeclaration", path: './std/socket/address_info.protocol.html', attributes: []},
{name: 'std.socket.AddressInfo.type', kind: "variabledeclaration", path: './std/socket/address_info.type.html', attributes: []},
{name: 'std.socket.AddressInfoFlags', kind: "enumdeclaration", path: './std/socket/address_info_flags.html', attributes: []},
{name: 'std.socket.AddressInfoFlags.CANONNAME', kind: "enummemberdeclaration", path: './std/socket/address_info_flags.html#CANONNAME', attributes: []},
{name: 'std.socket.AddressInfoFlags.NUMERICHOST', kind: "enummemberdeclaration", path: './std/socket/address_info_flags.html#NUMERICHOST', attributes: []},
{name: 'std.socket.AddressInfoFlags.PASSIVE', kind: "enummemberdeclaration", path: './std/socket/address_info_flags.html#PASSIVE', attributes: []},
{name: 'std.socket.getAddress', kind: "functiondeclaration", path: './std/socket/get_address.html', attributes: ["safe"]},
{name: 'std.socket.getAddressInfo', kind: "functiondeclaration", path: './std/socket/get_address_info.html', attributes: []},
{name: 'std.socket.HostException', kind: "classdeclaration", path: './std/socket/host_exception.html', attributes: []},
{name: 'std.socket.Internet6Address', kind: "classdeclaration", path: './std/socket/internet6_address.html', attributes: []},
{name: 'std.socket.Internet6Address.addr', kind: "functiondeclaration", path: './std/socket/internet6_address.addr.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.socket.Internet6Address.ADDR_ANY', kind: "functiondeclaration", path: './std/socket/internet6_address.add_r_any.html', attributes: ["static", "pure", "nothrow", "ref", "property", "nogc", "safe"]},
{name: 'std.socket.Internet6Address.parse', kind: "functiondeclaration", path: './std/socket/internet6_address.parse.html', attributes: ["static", "trusted"]},
{name: 'std.socket.Internet6Address.port', kind: "functiondeclaration", path: './std/socket/internet6_address.port.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.socket.Internet6Address.PORT_ANY', kind: "enummemberdeclaration", path: './std/socket/internet6_address.por_t_any.html', attributes: []},
{name: 'std.socket.Internet6Address.this', kind: "functiondeclaration", path: './std/socket/internet6_address.this.html', attributes: ["trusted"]},
{name: 'std.socket.InternetAddress', kind: "classdeclaration", path: './std/socket/internet_address.html', attributes: []},
{name: 'std.socket.InternetAddress.addr', kind: "functiondeclaration", path: './std/socket/internet_address.addr.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.socket.InternetAddress.ADDR_ANY', kind: "enummemberdeclaration", path: './std/socket/internet_address.add_r_any.html', attributes: []},
{name: 'std.socket.InternetAddress.ADDR_NONE', kind: "enummemberdeclaration", path: './std/socket/internet_address.add_r_none.html', attributes: []},
{name: 'std.socket.InternetAddress.addrToString', kind: "functiondeclaration", path: './std/socket/internet_address.addr_to_string.html', attributes: ["static", "nothrow", "trusted"]},
{name: 'std.socket.InternetAddress.opEquals', kind: "functiondeclaration", path: './std/socket/internet_address.op_equals.html', attributes: ["override", "safe", "const"]},
{name: 'std.socket.InternetAddress.parse', kind: "functiondeclaration", path: './std/socket/internet_address.parse.html', attributes: ["static", "nothrow", "trusted"]},
{name: 'std.socket.InternetAddress.port', kind: "functiondeclaration", path: './std/socket/internet_address.port.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.socket.InternetAddress.PORT_ANY', kind: "enummemberdeclaration", path: './std/socket/internet_address.por_t_any.html', attributes: []},
{name: 'std.socket.InternetAddress.this', kind: "functiondeclaration", path: './std/socket/internet_address.this.html', attributes: ["safe"]},
{name: 'std.socket.InternetAddress.toAddrString', kind: "functiondeclaration", path: './std/socket/internet_address.to_addr_string.html', attributes: ["override", "trusted", "const"]},
{name: 'std.socket.InternetAddress.toHostNameString', kind: "functiondeclaration", path: './std/socket/internet_address.to_host_name_string.html', attributes: ["override", "safe", "const"]},
{name: 'std.socket.InternetAddress.toPortString', kind: "functiondeclaration", path: './std/socket/internet_address.to_port_string.html', attributes: ["override", "safe", "const"]},
{name: 'std.socket.InternetHost', kind: "classdeclaration", path: './std/socket/internet_host.html', attributes: []},
{name: 'std.socket.InternetHost.addrList', kind: "variabledeclaration", path: './std/socket/internet_host.addr_list.html', attributes: []},
{name: 'std.socket.InternetHost.aliases', kind: "variabledeclaration", path: './std/socket/internet_host.aliases.html', attributes: []},
{name: 'std.socket.InternetHost.getHostByAddr', kind: "functiondeclaration", path: './std/socket/internet_host.get_host_by_addr.html', attributes: ["trusted"]},
{name: 'std.socket.InternetHost.getHostByName', kind: "functiondeclaration", path: './std/socket/internet_host.get_host_by_name.html', attributes: ["trusted"]},
{name: 'std.socket.InternetHost.name', kind: "variabledeclaration", path: './std/socket/internet_host.name.html', attributes: []},
{name: 'std.socket.lastSocketError', kind: "functiondeclaration", path: './std/socket/last_socket_error.html', attributes: ["property", "safe"]},
{name: 'std.socket.Linger', kind: "structdeclaration", path: './std/socket/linger.html', attributes: []},
{name: 'std.socket.Linger.on', kind: "variabledeclaration", path: './std/socket/linger.on.html', attributes: []},
{name: 'std.socket.Linger.time', kind: "variabledeclaration", path: './std/socket/linger.time.html', attributes: []},
{name: 'std.socket.parseAddress', kind: "functiondeclaration", path: './std/socket/parse_address.html', attributes: ["safe"]},
{name: 'std.socket.Protocol', kind: "classdeclaration", path: './std/socket/protocol.html', attributes: []},
{name: 'std.socket.Protocol.aliases', kind: "variabledeclaration", path: './std/socket/protocol.aliases.html', attributes: []},
{name: 'std.socket.Protocol.getProtocolByName', kind: "functiondeclaration", path: './std/socket/protocol.get_protocol_by_name.html', attributes: ["nothrow", "trusted"]},
{name: 'std.socket.Protocol.getProtocolByType', kind: "functiondeclaration", path: './std/socket/protocol.get_protocol_by_type.html', attributes: ["nothrow", "trusted"]},
{name: 'std.socket.Protocol.name', kind: "variabledeclaration", path: './std/socket/protocol.name.html', attributes: []},
{name: 'std.socket.Protocol.type', kind: "variabledeclaration", path: './std/socket/protocol.type.html', attributes: []},
{name: 'std.socket.ProtocolType', kind: "enumdeclaration", path: './std/socket/protocol_type.html', attributes: []},
{name: 'std.socket.ProtocolType.GGP', kind: "enummemberdeclaration", path: './std/socket/protocol_type.html#GGP', attributes: []},
{name: 'std.socket.ProtocolType.ICMP', kind: "enummemberdeclaration", path: './std/socket/protocol_type.html#ICMP', attributes: []},
{name: 'std.socket.ProtocolType.IDP', kind: "enummemberdeclaration", path: './std/socket/protocol_type.html#IDP', attributes: []},
{name: 'std.socket.ProtocolType.IGMP', kind: "enummemberdeclaration", path: './std/socket/protocol_type.html#IGMP', attributes: []},
{name: 'std.socket.ProtocolType.IP', kind: "enummemberdeclaration", path: './std/socket/protocol_type.html#IP', attributes: []},
{name: 'std.socket.ProtocolType.IPV6', kind: "enummemberdeclaration", path: './std/socket/protocol_type.html#IPV6', attributes: []},
{name: 'std.socket.ProtocolType.PUP', kind: "enummemberdeclaration", path: './std/socket/protocol_type.html#PUP', attributes: []},
{name: 'std.socket.ProtocolType.RAW', kind: "enummemberdeclaration", path: './std/socket/protocol_type.html#RAW', attributes: []},
{name: 'std.socket.ProtocolType.TCP', kind: "enummemberdeclaration", path: './std/socket/protocol_type.html#TCP', attributes: []},
{name: 'std.socket.ProtocolType.UDP', kind: "enummemberdeclaration", path: './std/socket/protocol_type.html#UDP', attributes: []},
{name: 'std.socket.Service', kind: "classdeclaration", path: './std/socket/service.html', attributes: []},
{name: 'std.socket.Service.aliases', kind: "variabledeclaration", path: './std/socket/service.aliases.html', attributes: []},
{name: 'std.socket.Service.getServiceByName', kind: "functiondeclaration", path: './std/socket/service.get_service_by_name.html', attributes: ["nothrow", "trusted"]},
{name: 'std.socket.Service.getServiceByPort', kind: "functiondeclaration", path: './std/socket/service.get_service_by_port.html', attributes: ["nothrow", "trusted"]},
{name: 'std.socket.Service.name', kind: "variabledeclaration", path: './std/socket/service.name.html', attributes: []},
{name: 'std.socket.Service.port', kind: "variabledeclaration", path: './std/socket/service.port.html', attributes: []},
{name: 'std.socket.Service.protocolName', kind: "variabledeclaration", path: './std/socket/service.protocol_name.html', attributes: []},
{name: 'std.socket.Socket', kind: "classdeclaration", path: './std/socket/socket.html', attributes: []},
{name: 'std.socket.Socket.accept', kind: "functiondeclaration", path: './std/socket/socket.accept.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.addressFamily', kind: "functiondeclaration", path: './std/socket/socket.address_family.html', attributes: ["property", "safe"]},
{name: 'std.socket.Socket.bind', kind: "functiondeclaration", path: './std/socket/socket.bind.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.blocking', kind: "functiondeclaration", path: './std/socket/socket.blocking.html', attributes: ["nothrow", "property", "nogc", "trusted", "const"]},
{name: 'std.socket.Socket.close', kind: "functiondeclaration", path: './std/socket/socket.close.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.socket.Socket.connect', kind: "functiondeclaration", path: './std/socket/socket.connect.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.ERROR', kind: "enummemberdeclaration", path: './std/socket/socket.error.html', attributes: []},
{name: 'std.socket.Socket.getErrorText', kind: "functiondeclaration", path: './std/socket/socket.get_error_text.html', attributes: ["safe"]},
{name: 'std.socket.Socket.getOption', kind: "functiondeclaration", path: './std/socket/socket.get_option.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.handle', kind: "functiondeclaration", path: './std/socket/socket.handle.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.socket.Socket.hostName', kind: "functiondeclaration", path: './std/socket/socket.host_name.html', attributes: ["static", "property", "trusted"]},
{name: 'std.socket.Socket.isAlive', kind: "functiondeclaration", path: './std/socket/socket.is_alive.html', attributes: ["property", "trusted", "const"]},
{name: 'std.socket.Socket.listen', kind: "functiondeclaration", path: './std/socket/socket.listen.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.localAddress', kind: "functiondeclaration", path: './std/socket/socket.local_address.html', attributes: ["property", "trusted"]},
{name: 'std.socket.Socket.receive', kind: "functiondeclaration", path: './std/socket/socket.receive.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.receiveFrom', kind: "functiondeclaration", path: './std/socket/socket.receive_from.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.remoteAddress', kind: "functiondeclaration", path: './std/socket/socket.remote_address.html', attributes: ["property", "trusted"]},
{name: 'std.socket.Socket.select', kind: "functiondeclaration", path: './std/socket/socket.select.html', attributes: ["static", "trusted"]},
{name: 'std.socket.Socket.send', kind: "functiondeclaration", path: './std/socket/socket.send.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.sendTo', kind: "functiondeclaration", path: './std/socket/socket.send_to.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.setKeepAlive', kind: "functiondeclaration", path: './std/socket/socket.set_keep_alive.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.setOption', kind: "functiondeclaration", path: './std/socket/socket.set_option.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.shutdown', kind: "functiondeclaration", path: './std/socket/socket.shutdown.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.socket.Socket.this', kind: "functiondeclaration", path: './std/socket/socket.this.html', attributes: ["trusted"]},
{name: 'std.socket.Socket.accepting', kind: "functiondeclaration", path: './std/socket/socket.accepting.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.socket.Socket.createAddress', kind: "functiondeclaration", path: './std/socket/socket.create_address.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.socket.SocketAcceptException', kind: "classdeclaration", path: './std/socket/socket_accept_exception.html', attributes: []},
{name: 'std.socket.SocketException', kind: "classdeclaration", path: './std/socket/socket_exception.html', attributes: []},
{name: 'std.socket.SocketFeatureException', kind: "classdeclaration", path: './std/socket/socket_feature_exception.html', attributes: []},
{name: 'std.socket.SocketFlags', kind: "enumdeclaration", path: './std/socket/socket_flags.html', attributes: []},
{name: 'std.socket.SocketFlags.DONTROUTE', kind: "enummemberdeclaration", path: './std/socket/socket_flags.html#DONTROUTE', attributes: []},
{name: 'std.socket.SocketFlags.NONE', kind: "enummemberdeclaration", path: './std/socket/socket_flags.html#NONE', attributes: []},
{name: 'std.socket.SocketFlags.OOB', kind: "enummemberdeclaration", path: './std/socket/socket_flags.html#OOB', attributes: []},
{name: 'std.socket.SocketFlags.PEEK', kind: "enummemberdeclaration", path: './std/socket/socket_flags.html#PEEK', attributes: []},
{name: 'std.socket.SocketOption', kind: "enumdeclaration", path: './std/socket/socket_option.html', attributes: []},
{name: 'std.socket.SocketOption.ACCEPTCONN', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#ACCEPTCONN', attributes: []},
{name: 'std.socket.SocketOption.BROADCAST', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#BROADCAST', attributes: []},
{name: 'std.socket.SocketOption.DEBUG', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#DEBUG', attributes: []},
{name: 'std.socket.SocketOption.DONTROUTE', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#DONTROUTE', attributes: []},
{name: 'std.socket.SocketOption.ERROR', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#ERROR', attributes: []},
{name: 'std.socket.SocketOption.IPV6_JOIN_GROUP', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#IPV6_JOIN_GROUP', attributes: []},
{name: 'std.socket.SocketOption.IPV6_LEAVE_GROUP', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#IPV6_LEAVE_GROUP', attributes: []},
{name: 'std.socket.SocketOption.IPV6_MULTICAST_HOPS', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#IPV6_MULTICAST_HOPS', attributes: []},
{name: 'std.socket.SocketOption.IPV6_MULTICAST_IF', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#IPV6_MULTICAST_IF', attributes: []},
{name: 'std.socket.SocketOption.IPV6_MULTICAST_LOOP', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#IPV6_MULTICAST_LOOP', attributes: []},
{name: 'std.socket.SocketOption.IPV6_UNICAST_HOPS', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#IPV6_UNICAST_HOPS', attributes: []},
{name: 'std.socket.SocketOption.IPV6_V6ONLY', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#IPV6_V6ONLY', attributes: []},
{name: 'std.socket.SocketOption.KEEPALIVE', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#KEEPALIVE', attributes: []},
{name: 'std.socket.SocketOption.LINGER', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#LINGER', attributes: []},
{name: 'std.socket.SocketOption.OOBINLINE', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#OOBINLINE', attributes: []},
{name: 'std.socket.SocketOption.RCVBUF', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#RCVBUF', attributes: []},
{name: 'std.socket.SocketOption.RCVLOWAT', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#RCVLOWAT', attributes: []},
{name: 'std.socket.SocketOption.RCVTIMEO', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#RCVTIMEO', attributes: []},
{name: 'std.socket.SocketOption.REUSEADDR', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#REUSEADDR', attributes: []},
{name: 'std.socket.SocketOption.SNDBUF', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#SNDBUF', attributes: []},
{name: 'std.socket.SocketOption.SNDLOWAT', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#SNDLOWAT', attributes: []},
{name: 'std.socket.SocketOption.SNDTIMEO', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#SNDTIMEO', attributes: []},
{name: 'std.socket.SocketOption.TCP_NODELAY', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#TCP_NODELAY', attributes: []},
{name: 'std.socket.SocketOption.TYPE', kind: "enummemberdeclaration", path: './std/socket/socket_option.html#TYPE', attributes: []},
{name: 'std.socket.SocketOptionLevel', kind: "enumdeclaration", path: './std/socket/socket_option_level.html', attributes: []},
{name: 'std.socket.SocketOptionLevel.GGP', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.html#GGP', attributes: []},
{name: 'std.socket.SocketOptionLevel.ICMP', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.html#ICMP', attributes: []},
{name: 'std.socket.SocketOptionLevel.IDP', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.html#IDP', attributes: []},
{name: 'std.socket.SocketOptionLevel.IGMP', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.html#IGMP', attributes: []},
{name: 'std.socket.SocketOptionLevel.IP', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.html#IP', attributes: []},
{name: 'std.socket.SocketOptionLevel.IPV6', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.html#IPV6', attributes: []},
{name: 'std.socket.SocketOptionLevel.PUP', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.html#PUP', attributes: []},
{name: 'std.socket.SocketOptionLevel.RAW', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.html#RAW', attributes: []},
{name: 'std.socket.SocketOptionLevel.SOCKET', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.html#SOCKET', attributes: []},
{name: 'std.socket.SocketOptionLevel.TCP', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.html#TCP', attributes: []},
{name: 'std.socket.SocketOptionLevel.UDP', kind: "enummemberdeclaration", path: './std/socket/socket_option_level.html#UDP', attributes: []},
{name: 'std.socket.SocketOSException', kind: "classdeclaration", path: './std/socket/socket_os_exception.html', attributes: []},
{name: 'std.socket.SocketOSException.this', kind: "functiondeclaration", path: './std/socket/socket_os_exception.this.html', attributes: ["safe"]},
{name: 'std.socket.socketPair', kind: "functiondeclaration", path: './std/socket/socket_pair.html', attributes: ["trusted"]},
{name: 'std.socket.SocketParameterException', kind: "classdeclaration", path: './std/socket/socket_parameter_exception.html', attributes: []},
{name: 'std.socket.SocketSet', kind: "classdeclaration", path: './std/socket/socket_set.html', attributes: []},
{name: 'std.socket.SocketSet.add', kind: "functiondeclaration", path: './std/socket/socket_set.add.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.socket.SocketSet.isSet', kind: "functiondeclaration", path: './std/socket/socket_set.is_set.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.socket.SocketSet.max', kind: "functiondeclaration", path: './std/socket/socket_set.max.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.socket.SocketSet.remove', kind: "functiondeclaration", path: './std/socket/socket_set.remove.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.socket.SocketSet.reset', kind: "functiondeclaration", path: './std/socket/socket_set.reset.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.socket.SocketSet.this', kind: "functiondeclaration", path: './std/socket/socket_set.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.socket.SocketShutdown', kind: "enumdeclaration", path: './std/socket/socket_shutdown.html', attributes: []},
{name: 'std.socket.SocketShutdown.BOTH', kind: "enummemberdeclaration", path: './std/socket/socket_shutdown.html#BOTH', attributes: []},
{name: 'std.socket.SocketShutdown.RECEIVE', kind: "enummemberdeclaration", path: './std/socket/socket_shutdown.html#RECEIVE', attributes: []},
{name: 'std.socket.SocketShutdown.SEND', kind: "enummemberdeclaration", path: './std/socket/socket_shutdown.html#SEND', attributes: []},
{name: 'std.socket.SocketType', kind: "enumdeclaration", path: './std/socket/socket_type.html', attributes: []},
{name: 'std.socket.SocketType.DGRAM', kind: "enummemberdeclaration", path: './std/socket/socket_type.html#DGRAM', attributes: []},
{name: 'std.socket.SocketType.RAW', kind: "enummemberdeclaration", path: './std/socket/socket_type.html#RAW', attributes: []},
{name: 'std.socket.SocketType.RDM', kind: "enummemberdeclaration", path: './std/socket/socket_type.html#RDM', attributes: []},
{name: 'std.socket.SocketType.SEQPACKET', kind: "enummemberdeclaration", path: './std/socket/socket_type.html#SEQPACKET', attributes: []},
{name: 'std.socket.SocketType.STREAM', kind: "enummemberdeclaration", path: './std/socket/socket_type.html#STREAM', attributes: []},
{name: 'std.socket.TcpSocket', kind: "classdeclaration", path: './std/socket/tcp_socket.html', attributes: []},
{name: 'std.socket.TcpSocket.this', kind: "functiondeclaration", path: './std/socket/tcp_socket.this.html', attributes: ["safe"]},
{name: 'std.socket.TimeVal', kind: "structdeclaration", path: './std/socket/time_val.html', attributes: []},
{name: 'std.socket.TimeVal.microseconds', kind: "variabledeclaration", path: './std/socket/time_val.microseconds.html', attributes: []},
{name: 'std.socket.TimeVal.seconds', kind: "variabledeclaration", path: './std/socket/time_val.seconds.html', attributes: []},
{name: 'std.socket.UdpSocket', kind: "classdeclaration", path: './std/socket/udp_socket.html', attributes: []},
{name: 'std.socket.UdpSocket.this', kind: "functiondeclaration", path: './std/socket/udp_socket.this.html', attributes: ["safe"]},
{name: 'std.socket.UnixAddress', kind: "classdeclaration", path: './std/socket/unix_address.html', attributes: []},
{name: 'std.socket.UnixAddress.path', kind: "functiondeclaration", path: './std/socket/unix_address.path.html', attributes: ["property", "safe", "const"]},
{name: 'std.socket.UnixAddress.this', kind: "functiondeclaration", path: './std/socket/unix_address.this.html', attributes: ["safe"]},
{name: 'std.socket.UnixAddress.toString', kind: "functiondeclaration", path: './std/socket/unix_address.to_string.html', attributes: ["override", "safe", "const"]},
{name: 'std.socket.UnknownAddress', kind: "classdeclaration", path: './std/socket/unknown_address.html', attributes: []},
{name: 'std.socket.UnknownAddressReference', kind: "classdeclaration", path: './std/socket/unknown_address_reference.html', attributes: []},
{name: 'std.socket.UnknownAddressReference.this', kind: "functiondeclaration", path: './std/socket/unknown_address_reference.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.socket.wouldHaveBlocked', kind: "functiondeclaration", path: './std/socket/would_have_blocked.html', attributes: ["nothrow", "nogc", "safe"]},
{name: 'std.stdint', kind: "module", path: './std/stdint.html', attributes: []},
{name: 'std.stdio', kind: "module", path: './std/stdio.html', attributes: []},
{name: 'std.stdio._popen', kind: "functiondeclaration", path: './std/stdio/_popen.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'std.stdio.chunks', kind: "functiondeclaration", path: './std/stdio/chunks.html', attributes: ["auto"]},
{name: 'std.stdio.File', kind: "structdeclaration", path: './std/stdio/file.html', attributes: []},
{name: 'std.stdio.File.byChunk', kind: "functiondeclaration", path: './std/stdio/file.by_chunk.html', attributes: ["auto"]},
{name: 'std.stdio.File.byLine', kind: "functiondeclaration", path: './std/stdio/file.by_line.html', attributes: ["auto"]},
{name: 'std.stdio.File.byLineCopy', kind: "functiondeclaration", path: './std/stdio/file.by_line_copy.html', attributes: ["auto"]},
{name: 'std.stdio.File.byRecord', kind: "functiondeclaration", path: './std/stdio/file.by_record.html', attributes: ["auto"]},
{name: 'std.stdio.File.clearerr', kind: "functiondeclaration", path: './std/stdio/file.clearerr.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.stdio.File.close', kind: "functiondeclaration", path: './std/stdio/file.close.html', attributes: ["trusted"]},
{name: 'std.stdio.File.detach', kind: "functiondeclaration", path: './std/stdio/file.detach.html', attributes: ["trusted"]},
{name: 'std.stdio.File.eof', kind: "functiondeclaration", path: './std/stdio/file.eof.html', attributes: ["pure", "property", "trusted", "const"]},
{name: 'std.stdio.File.error', kind: "functiondeclaration", path: './std/stdio/file.error.html', attributes: ["pure", "nothrow", "property", "trusted", "const"]},
{name: 'std.stdio.File.fdopen', kind: "functiondeclaration", path: './std/stdio/file.fdopen.html', attributes: ["safe"]},
{name: 'std.stdio.File.fileno', kind: "functiondeclaration", path: './std/stdio/file.fileno.html', attributes: ["property", "trusted", "const"]},
{name: 'std.stdio.File.flush', kind: "functiondeclaration", path: './std/stdio/file.flush.html', attributes: ["trusted"]},
{name: 'std.stdio.File.getFP', kind: "functiondeclaration", path: './std/stdio/file.get_fp.html', attributes: ["pure", "safe"]},
{name: 'std.stdio.File.isOpen', kind: "functiondeclaration", path: './std/stdio/file.is_open.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.stdio.File.lock', kind: "functiondeclaration", path: './std/stdio/file.lock.html', attributes: []},
{name: 'std.stdio.File.lockingBinaryWriter', kind: "functiondeclaration", path: './std/stdio/file.locking_binary_writer.html', attributes: ["auto"]},
{name: 'std.stdio.File.lockingTextWriter', kind: "functiondeclaration", path: './std/stdio/file.locking_text_writer.html', attributes: ["auto", "safe"]},
{name: 'std.stdio.File.name', kind: "functiondeclaration", path: './std/stdio/file.name.html', attributes: ["pure", "nothrow", "property", "safe", "const"]},
{name: 'std.stdio.File.opAssign', kind: "functiondeclaration", path: './std/stdio/file.op_assign.html', attributes: ["ref", "return", "safe"]},
{name: 'std.stdio.File.open', kind: "functiondeclaration", path: './std/stdio/file.open.html', attributes: ["trusted"]},
{name: 'std.stdio.File.popen', kind: "functiondeclaration", path: './std/stdio/file.popen.html', attributes: ["safe"]},
{name: 'std.stdio.File.rawRead', kind: "functiondeclaration", path: './std/stdio/file.raw_read.html', attributes: []},
{name: 'std.stdio.File.rawWrite', kind: "functiondeclaration", path: './std/stdio/file.raw_write.html', attributes: []},
{name: 'std.stdio.File.readf', kind: "functiondeclaration", path: './std/stdio/file.readf.html', attributes: []},
{name: 'std.stdio.File.readln', kind: "functiondeclaration", path: './std/stdio/file.readln.html', attributes: []},
{name: 'std.stdio.File.reopen', kind: "functiondeclaration", path: './std/stdio/file.reopen.html', attributes: ["trusted"]},
{name: 'std.stdio.File.rewind', kind: "functiondeclaration", path: './std/stdio/file.rewind.html', attributes: ["safe"]},
{name: 'std.stdio.File.seek', kind: "functiondeclaration", path: './std/stdio/file.seek.html', attributes: ["trusted"]},
{name: 'std.stdio.File.setvbuf', kind: "functiondeclaration", path: './std/stdio/file.setvbuf.html', attributes: ["trusted"]},
{name: 'std.stdio.File.size', kind: "functiondeclaration", path: './std/stdio/file.size.html', attributes: ["property", "safe"]},
{name: 'std.stdio.File.sync', kind: "functiondeclaration", path: './std/stdio/file.sync.html', attributes: ["trusted"]},
{name: 'std.stdio.File.tell', kind: "functiondeclaration", path: './std/stdio/file.tell.html', attributes: ["property", "trusted", "const"]},
{name: 'std.stdio.File.this', kind: "functiondeclaration", path: './std/stdio/file.this.html', attributes: ["ref", "safe"]},
{name: 'std.stdio.File.tmpfile', kind: "functiondeclaration", path: './std/stdio/file.tmpfile.html', attributes: ["static", "safe"]},
{name: 'std.stdio.File.tryLock', kind: "functiondeclaration", path: './std/stdio/file.try_lock.html', attributes: []},
{name: 'std.stdio.File.unlock', kind: "functiondeclaration", path: './std/stdio/file.unlock.html', attributes: []},
{name: 'std.stdio.File.windowsHandle', kind: "functiondeclaration", path: './std/stdio/file.windows_handle.html', attributes: ["property"]},
{name: 'std.stdio.File.windowsHandleOpen', kind: "functiondeclaration", path: './std/stdio/file.windows_handle_open.html', attributes: []},
{name: 'std.stdio.File.wrapFile', kind: "functiondeclaration", path: './std/stdio/file.wrap_file.html', attributes: ["static", "safe"]},
{name: 'std.stdio.File.write', kind: "functiondeclaration", path: './std/stdio/file.write.html', attributes: []},
{name: 'std.stdio.File.writef', kind: "functiondeclaration", path: './std/stdio/file.writef.html', attributes: []},
{name: 'std.stdio.File.writefln', kind: "functiondeclaration", path: './std/stdio/file.writefln.html', attributes: []},
{name: 'std.stdio.File.writeln', kind: "functiondeclaration", path: './std/stdio/file.writeln.html', attributes: []},
{name: 'std.stdio.isFileHandle', kind: "enummemberdeclaration", path: './std/stdio/is_file_handle.html', attributes: []},
{name: 'std.stdio.KeepTerminator', kind: "aliasdeclaration", path: './std/stdio/keep_terminator.html', attributes: []},
{name: 'std.stdio.lines', kind: "structdeclaration", path: './std/stdio/lines.html', attributes: []},
{name: 'std.stdio.lines.this', kind: "functiondeclaration", path: './std/stdio/lines.this.html', attributes: []},
{name: 'std.stdio.LockType', kind: "enumdeclaration", path: './std/stdio/lock_type.html', attributes: []},
{name: 'std.stdio.LockType.read', kind: "enummemberdeclaration", path: './std/stdio/lock_type.html#read', attributes: []},
{name: 'std.stdio.LockType.readWrite', kind: "enummemberdeclaration", path: './std/stdio/lock_type.html#readWrite', attributes: []},
{name: 'std.stdio.openNetwork', kind: "functiondeclaration", path: './std/stdio/open_network.html', attributes: []},
{name: 'std.stdio.readf', kind: "functiondeclaration", path: './std/stdio/readf.html', attributes: []},
{name: 'std.stdio.readln', kind: "functiondeclaration", path: './std/stdio/readln.html', attributes: []},
{name: 'std.stdio.stderr', kind: "aliasdeclaration", path: './std/stdio/stderr.html', attributes: []},
{name: 'std.stdio.stdin', kind: "aliasdeclaration", path: './std/stdio/stdin.html', attributes: []},
{name: 'std.stdio.StdioException', kind: "classdeclaration", path: './std/stdio/stdio_exception.html', attributes: []},
{name: 'std.stdio.StdioException.errno', kind: "variabledeclaration", path: './std/stdio/stdio_exception.errno.html', attributes: []},
{name: 'std.stdio.StdioException.opCall', kind: "functiondeclaration", path: './std/stdio/stdio_exception.op_call.html', attributes: ["static"]},
{name: 'std.stdio.StdioException.this', kind: "functiondeclaration", path: './std/stdio/stdio_exception.this.html', attributes: ["trusted"]},
{name: 'std.stdio.stdout', kind: "aliasdeclaration", path: './std/stdio/stdout.html', attributes: []},
{name: 'std.stdio.toFile', kind: "functiondeclaration", path: './std/stdio/to_file.html', attributes: []},
{name: 'std.stdio.write', kind: "functiondeclaration", path: './std/stdio/write.html', attributes: []},
{name: 'std.stdio.writef', kind: "functiondeclaration", path: './std/stdio/writef.html', attributes: []},
{name: 'std.stdio.writefln', kind: "functiondeclaration", path: './std/stdio/writefln.html', attributes: []},
{name: 'std.stdio.writeln', kind: "functiondeclaration", path: './std/stdio/writeln.html', attributes: []},
{name: 'std.string', kind: "module", path: './std/string.html', attributes: []},
{name: 'std.string.abbrev', kind: "functiondeclaration", path: './std/string/abbrev.html', attributes: ["pure", "safe"]},
{name: 'std.string.assumeUTF', kind: "functiondeclaration", path: './std/string/assume_utf.html', attributes: ["auto"]},
{name: 'std.string.capitalize', kind: "functiondeclaration", path: './std/string/capitalize.html', attributes: ["pure", "trusted"]},
{name: 'std.string.CaseSensitive', kind: "aliasdeclaration", path: './std/string/case_sensitive.html', attributes: []},
{name: 'std.string.center', kind: "functiondeclaration", path: './std/string/center.html', attributes: []},
{name: 'std.string.centerJustifier', kind: "functiondeclaration", path: './std/string/center_justifier.html', attributes: ["auto"]},
{name: 'std.string.chomp', kind: "functiondeclaration", path: './std/string/chomp.html', attributes: []},
{name: 'std.string.chompPrefix', kind: "functiondeclaration", path: './std/string/chomp_prefix.html', attributes: []},
{name: 'std.string.chop', kind: "functiondeclaration", path: './std/string/chop.html', attributes: []},
{name: 'std.string.column', kind: "functiondeclaration", path: './std/string/column.html', attributes: []},
{name: 'std.string.detab', kind: "functiondeclaration", path: './std/string/detab.html', attributes: ["auto", "pure"]},
{name: 'std.string.detabber', kind: "functiondeclaration", path: './std/string/detabber.html', attributes: ["auto"]},
{name: 'std.string.entab', kind: "functiondeclaration", path: './std/string/entab.html', attributes: ["auto"]},
{name: 'std.string.entabber', kind: "functiondeclaration", path: './std/string/entabber.html', attributes: ["auto"]},
{name: 'std.string.fromStringz', kind: "functiondeclaration", path: './std/string/from_stringz.html', attributes: ["pure", "nothrow", "nogc", "system"]},
{name: 'std.string.indexOf', kind: "functiondeclaration", path: './std/string/index_of.html', attributes: []},
{name: 'std.string.indexOfAny', kind: "functiondeclaration", path: './std/string/index_of_any.html', attributes: ["pure", "safe"]},
{name: 'std.string.indexOfNeither', kind: "functiondeclaration", path: './std/string/index_of_neither.html', attributes: ["pure", "safe"]},
{name: 'std.string.isNumeric', kind: "functiondeclaration", path: './std/string/is_numeric.html', attributes: []},
{name: 'std.string.KeepTerminator', kind: "aliasdeclaration", path: './std/string/keep_terminator.html', attributes: []},
{name: 'std.string.lastIndexOf', kind: "functiondeclaration", path: './std/string/last_index_of.html', attributes: ["pure", "safe"]},
{name: 'std.string.lastIndexOfAny', kind: "functiondeclaration", path: './std/string/last_index_of_any.html', attributes: ["pure", "safe"]},
{name: 'std.string.lastIndexOfNeither', kind: "functiondeclaration", path: './std/string/last_index_of_neither.html', attributes: ["pure", "safe"]},
{name: 'std.string.leftJustifier', kind: "functiondeclaration", path: './std/string/left_justifier.html', attributes: ["auto"]},
{name: 'std.string.leftJustify', kind: "functiondeclaration", path: './std/string/left_justify.html', attributes: []},
{name: 'std.string.lineSplitter', kind: "functiondeclaration", path: './std/string/line_splitter.html', attributes: ["auto"]},
{name: 'std.string.makeTrans', kind: "functiondeclaration", path: './std/string/make_trans.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.string.makeTransTable', kind: "functiondeclaration", path: './std/string/make_trans_table.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.string.outdent', kind: "functiondeclaration", path: './std/string/outdent.html', attributes: ["pure", "safe"]},
{name: 'std.string.representation', kind: "functiondeclaration", path: './std/string/representation.html', attributes: ["auto", "pure", "nothrow", "nogc", "safe"]},
{name: 'std.string.rightJustifier', kind: "functiondeclaration", path: './std/string/right_justifier.html', attributes: ["auto"]},
{name: 'std.string.rightJustify', kind: "functiondeclaration", path: './std/string/right_justify.html', attributes: []},
{name: 'std.string.soundex', kind: "functiondeclaration", path: './std/string/soundex.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.string.soundexer', kind: "functiondeclaration", path: './std/string/soundexer.html', attributes: []},
{name: 'std.string.splitLines', kind: "functiondeclaration", path: './std/string/split_lines.html', attributes: ["pure", "safe"]},
{name: 'std.string.StringException', kind: "classdeclaration", path: './std/string/string_exception.html', attributes: []},
{name: 'std.string.strip', kind: "functiondeclaration", path: './std/string/strip.html', attributes: ["auto"]},
{name: 'std.string.stripLeft', kind: "functiondeclaration", path: './std/string/strip_left.html', attributes: ["auto"]},
{name: 'std.string.stripRight', kind: "functiondeclaration", path: './std/string/strip_right.html', attributes: ["auto"]},
{name: 'std.string.succ', kind: "functiondeclaration", path: './std/string/succ.html', attributes: ["pure", "safe"]},
{name: 'std.string.toStringz', kind: "functiondeclaration", path: './std/string/to_stringz.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'std.string.tr', kind: "functiondeclaration", path: './std/string/tr.html', attributes: []},
{name: 'std.string.translate', kind: "functiondeclaration", path: './std/string/translate.html', attributes: ["pure", "safe"]},
{name: 'std.string.wrap', kind: "functiondeclaration", path: './std/string/wrap.html', attributes: []},
{name: 'std.system', kind: "module", path: './std/system.html', attributes: []},
{name: 'std.system.Endian', kind: "enumdeclaration", path: './std/system/endian.html', attributes: []},
{name: 'std.system.Endian.bigEndian', kind: "enummemberdeclaration", path: './std/system/endian.html#bigEndian', attributes: []},
{name: 'std.system.Endian.littleEndian', kind: "enummemberdeclaration", path: './std/system/endian.html#littleEndian', attributes: []},
{name: 'std.system.endian', kind: "variabledeclaration", path: './std/system/endian.html', attributes: []},
{name: 'std.system.OS', kind: "enumdeclaration", path: './std/system/os.html', attributes: []},
{name: 'std.system.OS.android', kind: "enummemberdeclaration", path: './std/system/os.html#android', attributes: []},
{name: 'std.system.OS.dragonFlyBSD', kind: "enummemberdeclaration", path: './std/system/os.html#dragonFlyBSD', attributes: []},
{name: 'std.system.OS.freeBSD', kind: "enummemberdeclaration", path: './std/system/os.html#freeBSD', attributes: []},
{name: 'std.system.OS.iOS', kind: "enummemberdeclaration", path: './std/system/os.html#iOS', attributes: []},
{name: 'std.system.OS.linux', kind: "enummemberdeclaration", path: './std/system/os.html#linux', attributes: []},
{name: 'std.system.OS.netBSD', kind: "enummemberdeclaration", path: './std/system/os.html#netBSD', attributes: []},
{name: 'std.system.OS.osx', kind: "enummemberdeclaration", path: './std/system/os.html#osx', attributes: []},
{name: 'std.system.OS.otherPosix', kind: "enummemberdeclaration", path: './std/system/os.html#otherPosix', attributes: []},
{name: 'std.system.OS.solaris', kind: "enummemberdeclaration", path: './std/system/os.html#solaris', attributes: []},
{name: 'std.system.OS.tvOS', kind: "enummemberdeclaration", path: './std/system/os.html#tvOS', attributes: []},
{name: 'std.system.OS.watchOS', kind: "enummemberdeclaration", path: './std/system/os.html#watchOS', attributes: []},
{name: 'std.system.OS.win32', kind: "enummemberdeclaration", path: './std/system/os.html#win32', attributes: []},
{name: 'std.system.OS.win64', kind: "enummemberdeclaration", path: './std/system/os.html#win64', attributes: []},
{name: 'std.system.os', kind: "variabledeclaration", path: './std/system/os.html', attributes: []},
{name: 'std.traits', kind: "module", path: './std/traits.html', attributes: []},
{name: 'std.traits.allSameType', kind: "enummemberdeclaration", path: './std/traits/all_same_type.html', attributes: []},
{name: 'std.traits.arity', kind: "enummemberdeclaration", path: './std/traits/arity.html', attributes: []},
{name: 'std.traits.BaseClassesTuple', kind: "aliasdeclaration", path: './std/traits/base_classes_tuple.html', attributes: []},
{name: 'std.traits.BaseTypeTuple', kind: "aliasdeclaration", path: './std/traits/base_type_tuple.html', attributes: []},
{name: 'std.traits.classInstanceAlignment', kind: "aliasdeclaration", path: './std/traits/class_instance_alignment.html', attributes: []},
{name: 'std.traits.CommonType', kind: "aliasdeclaration", path: './std/traits/common_type.html', attributes: []},
{name: 'std.traits.ConstOf', kind: "aliasdeclaration", path: './std/traits/const_of.html', attributes: []},
{name: 'std.traits.CopyConstness', kind: "aliasdeclaration", path: './std/traits/copy_constness.html', attributes: []},
{name: 'std.traits.CopyTypeQualifiers', kind: "aliasdeclaration", path: './std/traits/copy_type_qualifiers.html', attributes: []},
{name: 'std.traits.EnumMembers', kind: "aliasdeclaration", path: './std/traits/enum_members.html', attributes: []},
{name: 'std.traits.extractParameterStorageClassFlags', kind: "enummemberdeclaration", path: './std/traits/extract_parameter_storage_class_flags.html', attributes: []},
{name: 'std.traits.FieldNameTuple', kind: "aliasdeclaration", path: './std/traits/field_name_tuple.html', attributes: []},
{name: 'std.traits.Fields', kind: "aliasdeclaration", path: './std/traits/fields.html', attributes: []},
{name: 'std.traits.FieldTypeTuple', kind: "aliasdeclaration", path: './std/traits/field_type_tuple.html', attributes: []},
{name: 'std.traits.ForeachType', kind: "aliasdeclaration", path: './std/traits/foreach_type.html', attributes: []},
{name: 'std.traits.fullyQualifiedName', kind: "enummemberdeclaration", path: './std/traits/fully_qualified_name.html', attributes: []},
{name: 'std.traits.FunctionAttribute', kind: "enumdeclaration", path: './std/traits/function_attribute.html', attributes: []},
{name: 'std.traits.FunctionAttribute.const_', kind: "enummemberdeclaration", path: './std/traits/function_attribute.html#const_', attributes: []},
{name: 'std.traits.FunctionAttribute.immutable_', kind: "enummemberdeclaration", path: './std/traits/function_attribute.html#immutable_', attributes: []},
{name: 'std.traits.FunctionAttribute.inout_', kind: "enummemberdeclaration", path: './std/traits/function_attribute.html#inout_', attributes: []},
{name: 'std.traits.FunctionAttribute.live', kind: "enummemberdeclaration", path: './std/traits/function_attribute.html#live', attributes: []},
{name: 'std.traits.FunctionAttribute.nogc', kind: "enummemberdeclaration", path: './std/traits/function_attribute.html#nogc', attributes: []},
{name: 'std.traits.FunctionAttribute.none', kind: "enummemberdeclaration", path: './std/traits/function_attribute.html#none', attributes: []},
{name: 'std.traits.FunctionAttribute.nothrow_', kind: "enummemberdeclaration", path: './std/traits/function_attribute.html#nothrow_', attributes: []},
{name: 'std.traits.FunctionAttribute.property', kind: "enummemberdeclaration", path: './std/traits/function_attribute.html#property', attributes: []},
{name: 'std.traits.FunctionAttribute.pure_', kind: "enummemberdeclaration", path: './std/traits/function_attribute.html#pure_', attributes: []},
{name: 'std.traits.FunctionAttribute.ref_', kind: "enummemberdeclaration", path: './std/traits/function_attribute.html#ref_', attributes: []},
{name: 'std.traits.FunctionAttribute.return_', kind: "enummemberdeclaration", path: './std/traits/function_attribute.html#return_', attributes: []},
{name: 'std.traits.FunctionAttribute.safe', kind: "enummemberdeclaration", path: './std/traits/function_attribute.html#safe', attributes: []},
{name: 'std.traits.FunctionAttribute.scope_', kind: "enummemberdeclaration", path: './std/traits/function_attribute.html#scope_', attributes: []},
{name: 'std.traits.FunctionAttribute.shared_', kind: "enummemberdeclaration", path: './std/traits/function_attribute.html#shared_', attributes: []},
{name: 'std.traits.FunctionAttribute.system', kind: "enummemberdeclaration", path: './std/traits/function_attribute.html#system', attributes: []},
{name: 'std.traits.FunctionAttribute.trusted', kind: "enummemberdeclaration", path: './std/traits/function_attribute.html#trusted', attributes: []},
{name: 'std.traits.functionAttributes', kind: "enummemberdeclaration", path: './std/traits/function_attributes.html', attributes: []},
{name: 'std.traits.functionLinkage', kind: "enummemberdeclaration", path: './std/traits/function_linkage.html', attributes: []},
{name: 'std.traits.FunctionTypeOf', kind: "aliasdeclaration", path: './std/traits/function_type_of.html', attributes: []},
{name: 'std.traits.getSymbolsByUDA', kind: "aliasdeclaration", path: './std/traits/get_symbols_byuda.html', attributes: []},
{name: 'std.traits.getUDAs', kind: "aliasdeclaration", path: './std/traits/get_ud_as.html', attributes: []},
{name: 'std.traits.hasAliasing', kind: "enummemberdeclaration", path: './std/traits/has_aliasing.html', attributes: []},
{name: 'std.traits.hasElaborateAssign', kind: "enummemberdeclaration", path: './std/traits/has_elaborate_assign.html', attributes: []},
{name: 'std.traits.hasElaborateCopyConstructor', kind: "aliasdeclaration", path: './std/traits/has_elaborate_copy_constructor.html', attributes: []},
{name: 'std.traits.hasElaborateDestructor', kind: "aliasdeclaration", path: './std/traits/has_elaborate_destructor.html', attributes: []},
{name: 'std.traits.hasElaborateMove', kind: "aliasdeclaration", path: './std/traits/has_elaborate_move.html', attributes: []},
{name: 'std.traits.hasFunctionAttributes', kind: "enummemberdeclaration", path: './std/traits/has_function_attributes.html', attributes: []},
{name: 'std.traits.hasIndirections', kind: "enummemberdeclaration", path: './std/traits/has_indirections.html', attributes: []},
{name: 'std.traits.hasMember', kind: "enummemberdeclaration", path: './std/traits/has_member.html', attributes: []},
{name: 'std.traits.hasNested', kind: "enummemberdeclaration", path: './std/traits/has_nested.html', attributes: []},
{name: 'std.traits.hasStaticMember', kind: "enummemberdeclaration", path: './std/traits/has_static_member.html', attributes: []},
{name: 'std.traits.hasUDA', kind: "enummemberdeclaration", path: './std/traits/has_uda.html', attributes: []},
{name: 'std.traits.hasUnsharedAliasing', kind: "enummemberdeclaration", path: './std/traits/has_unshared_aliasing.html', attributes: []},
{name: 'std.traits.ifTestable', kind: "enummemberdeclaration", path: './std/traits/if_testable.html', attributes: []},
{name: 'std.traits.ImmutableOf', kind: "aliasdeclaration", path: './std/traits/immutable_of.html', attributes: []},
{name: 'std.traits.ImplicitConversionTargets', kind: "aliasdeclaration", path: './std/traits/implicit_conversion_targets.html', attributes: []},
{name: 'std.traits.InoutOf', kind: "aliasdeclaration", path: './std/traits/inout_of.html', attributes: []},
{name: 'std.traits.InterfacesTuple', kind: "aliasdeclaration", path: './std/traits/interfaces_tuple.html', attributes: []},
{name: 'std.traits.isAbstractClass', kind: "enummemberdeclaration", path: './std/traits/is_abstract_class.html', attributes: []},
{name: 'std.traits.isAbstractFunction', kind: "enummemberdeclaration", path: './std/traits/is_abstract_function.html', attributes: []},
{name: 'std.traits.isAggregateType', kind: "enummemberdeclaration", path: './std/traits/is_aggregate_type.html', attributes: []},
{name: 'std.traits.isArray', kind: "enummemberdeclaration", path: './std/traits/is_array.html', attributes: []},
{name: 'std.traits.isAssignable', kind: "enummemberdeclaration", path: './std/traits/is_assignable.html', attributes: []},
{name: 'std.traits.isAssociativeArray', kind: "enummemberdeclaration", path: './std/traits/is_associative_array.html', attributes: []},
{name: 'std.traits.isAutodecodableString', kind: "enummemberdeclaration", path: './std/traits/is_autodecodable_string.html', attributes: []},
{name: 'std.traits.isBasicType', kind: "enummemberdeclaration", path: './std/traits/is_basic_type.html', attributes: []},
{name: 'std.traits.isBoolean', kind: "enummemberdeclaration", path: './std/traits/is_boolean.html', attributes: []},
{name: 'std.traits.isBuiltinType', kind: "enummemberdeclaration", path: './std/traits/is_builtin_type.html', attributes: []},
{name: 'std.traits.isCallable', kind: "enummemberdeclaration", path: './std/traits/is_callable.html', attributes: []},
{name: 'std.traits.isConvertibleToString', kind: "enummemberdeclaration", path: './std/traits/is_convertible_to_string.html', attributes: []},
{name: 'std.traits.isCopyable', kind: "enummemberdeclaration", path: './std/traits/is_copyable.html', attributes: []},
{name: 'std.traits.isCovariantWith', kind: "enummemberdeclaration", path: './std/traits/is_covariant_with.html', attributes: []},
{name: 'std.traits.isDelegate', kind: "enummemberdeclaration", path: './std/traits/is_delegate.html', attributes: []},
{name: 'std.traits.isDynamicArray', kind: "enummemberdeclaration", path: './std/traits/is_dynamic_array.html', attributes: []},
{name: 'std.traits.isEqualityComparable', kind: "enummemberdeclaration", path: './std/traits/is_equality_comparable.html', attributes: []},
{name: 'std.traits.isExpressions', kind: "enummemberdeclaration", path: './std/traits/is_expressions.html', attributes: []},
{name: 'std.traits.isExpressionTuple', kind: "aliasdeclaration", path: './std/traits/is_expression_tuple.html', attributes: []},
{name: 'std.traits.isFinal', kind: "enummemberdeclaration", path: './std/traits/is_final.html', attributes: []},
{name: 'std.traits.isFinalClass', kind: "enummemberdeclaration", path: './std/traits/is_final_class.html', attributes: []},
{name: 'std.traits.isFinalFunction', kind: "enummemberdeclaration", path: './std/traits/is_final_function.html', attributes: []},
{name: 'std.traits.isFloatingPoint', kind: "enummemberdeclaration", path: './std/traits/is_floating_point.html', attributes: []},
{name: 'std.traits.isFunction', kind: "enummemberdeclaration", path: './std/traits/is_function.html', attributes: []},
{name: 'std.traits.isFunctionPointer', kind: "enummemberdeclaration", path: './std/traits/is_function_pointer.html', attributes: []},
{name: 'std.traits.isImplicitlyConvertible', kind: "enummemberdeclaration", path: './std/traits/is_implicitly_convertible.html', attributes: []},
{name: 'std.traits.isInnerClass', kind: "enummemberdeclaration", path: './std/traits/is_inner_class.html', attributes: []},
{name: 'std.traits.isInstanceOf', kind: "enummemberdeclaration", path: './std/traits/is_instance_of.html', attributes: []},
{name: 'std.traits.isIntegral', kind: "enummemberdeclaration", path: './std/traits/is_integral.html', attributes: []},
{name: 'std.traits.isIterable', kind: "enummemberdeclaration", path: './std/traits/is_iterable.html', attributes: []},
{name: 'std.traits.isMutable', kind: "enummemberdeclaration", path: './std/traits/is_mutable.html', attributes: []},
{name: 'std.traits.isNarrowString', kind: "enummemberdeclaration", path: './std/traits/is_narrow_string.html', attributes: []},
{name: 'std.traits.isNested', kind: "enummemberdeclaration", path: './std/traits/is_nested.html', attributes: []},
{name: 'std.traits.isNestedFunction', kind: "enummemberdeclaration", path: './std/traits/is_nested_function.html', attributes: []},
{name: 'std.traits.isNumeric', kind: "enummemberdeclaration", path: './std/traits/is_numeric.html', attributes: []},
{name: 'std.traits.isOrderingComparable', kind: "enummemberdeclaration", path: './std/traits/is_ordering_comparable.html', attributes: []},
{name: 'std.traits.isPointer', kind: "enummemberdeclaration", path: './std/traits/is_pointer.html', attributes: []},
{name: 'std.traits.isSafe', kind: "enummemberdeclaration", path: './std/traits/is_safe.html', attributes: []},
{name: 'std.traits.isScalarType', kind: "enummemberdeclaration", path: './std/traits/is_scalar_type.html', attributes: []},
{name: 'std.traits.isSigned', kind: "enummemberdeclaration", path: './std/traits/is_signed.html', attributes: []},
{name: 'std.traits.isSIMDVector', kind: "enummemberdeclaration", path: './std/traits/is_simd_vector.html', attributes: []},
{name: 'std.traits.isSomeChar', kind: "enummemberdeclaration", path: './std/traits/is_some_char.html', attributes: []},
{name: 'std.traits.isSomeFunction', kind: "enummemberdeclaration", path: './std/traits/is_some_function.html', attributes: []},
{name: 'std.traits.isSomeString', kind: "enummemberdeclaration", path: './std/traits/is_some_string.html', attributes: []},
{name: 'std.traits.isStaticArray', kind: "enummemberdeclaration", path: './std/traits/is_static_array.html', attributes: []},
{name: 'std.traits.isType', kind: "enummemberdeclaration", path: './std/traits/is_type.html', attributes: []},
{name: 'std.traits.isTypeTuple', kind: "enummemberdeclaration", path: './std/traits/is_type_tuple.html', attributes: []},
{name: 'std.traits.isUnsafe', kind: "enummemberdeclaration", path: './std/traits/is_unsafe.html', attributes: []},
{name: 'std.traits.isUnsigned', kind: "enummemberdeclaration", path: './std/traits/is_unsigned.html', attributes: []},
{name: 'std.traits.KeyType', kind: "aliasdeclaration", path: './std/traits/key_type.html', attributes: []},
{name: 'std.traits.Largest', kind: "aliasdeclaration", path: './std/traits/largest.html', attributes: []},
{name: 'std.traits.lvalueOf', kind: "functiondeclaration", path: './std/traits/lvalue_of.html', attributes: []},
{name: 'std.traits.mangledName', kind: "enummemberdeclaration", path: './std/traits/mangled_name.html', attributes: []},
{name: 'std.traits.MemberFunctionsTuple', kind: "aliasdeclaration", path: './std/traits/member_functions_tuple.html', attributes: []},
{name: 'std.traits.moduleName', kind: "enummemberdeclaration", path: './std/traits/module_name.html', attributes: []},
{name: 'std.traits.mostNegative', kind: "enummemberdeclaration", path: './std/traits/most_negative.html', attributes: []},
{name: 'std.traits.OriginalType', kind: "aliasdeclaration", path: './std/traits/original_type.html', attributes: []},
{name: 'std.traits.packageName', kind: "enummemberdeclaration", path: './std/traits/package_name.html', attributes: []},
{name: 'std.traits.ParameterDefaults', kind: "aliasdeclaration", path: './std/traits/parameter_defaults.html', attributes: []},
{name: 'std.traits.ParameterDefaultValueTuple', kind: "aliasdeclaration", path: './std/traits/parameter_default_value_tuple.html', attributes: []},
{name: 'std.traits.ParameterIdentifierTuple', kind: "aliasdeclaration", path: './std/traits/parameter_identifier_tuple.html', attributes: []},
{name: 'std.traits.Parameters', kind: "aliasdeclaration", path: './std/traits/parameters.html', attributes: []},
{name: 'std.traits.ParameterStorageClass', kind: "enumdeclaration", path: './std/traits/parameter_storage_class.html', attributes: []},
{name: 'std.traits.ParameterStorageClass.lazy_', kind: "enummemberdeclaration", path: './std/traits/parameter_storage_class.html#lazy_', attributes: []},
{name: 'std.traits.ParameterStorageClass.none', kind: "enummemberdeclaration", path: './std/traits/parameter_storage_class.html#none', attributes: []},
{name: 'std.traits.ParameterStorageClass.out_', kind: "enummemberdeclaration", path: './std/traits/parameter_storage_class.html#out_', attributes: []},
{name: 'std.traits.ParameterStorageClass.ref_', kind: "enummemberdeclaration", path: './std/traits/parameter_storage_class.html#ref_', attributes: []},
{name: 'std.traits.ParameterStorageClass.return_', kind: "enummemberdeclaration", path: './std/traits/parameter_storage_class.html#return_', attributes: []},
{name: 'std.traits.ParameterStorageClass.scope_', kind: "enummemberdeclaration", path: './std/traits/parameter_storage_class.html#scope_', attributes: []},
{name: 'std.traits.ParameterStorageClassTuple', kind: "aliasdeclaration", path: './std/traits/parameter_storage_class_tuple.html', attributes: []},
{name: 'std.traits.ParameterTypeTuple', kind: "aliasdeclaration", path: './std/traits/parameter_type_tuple.html', attributes: []},
{name: 'std.traits.PointerTarget', kind: "aliasdeclaration", path: './std/traits/pointer_target.html', attributes: []},
{name: 'std.traits.Promoted', kind: "aliasdeclaration", path: './std/traits/promoted.html', attributes: []},
{name: 'std.traits.QualifierOf', kind: "aliasdeclaration", path: './std/traits/qualifier_of.html', attributes: []},
{name: 'std.traits.RepresentationTypeTuple', kind: "aliasdeclaration", path: './std/traits/representation_type_tuple.html', attributes: []},
{name: 'std.traits.ReturnType', kind: "aliasdeclaration", path: './std/traits/return_type.html', attributes: []},
{name: 'std.traits.rvalueOf', kind: "functiondeclaration", path: './std/traits/rvalue_of.html', attributes: []},
{name: 'std.traits.Select', kind: "aliasdeclaration", path: './std/traits/select.html', attributes: []},
{name: 'std.traits.select', kind: "functiondeclaration", path: './std/traits/select.html', attributes: []},
{name: 'std.traits.SetFunctionAttributes', kind: "aliasdeclaration", path: './std/traits/set_function_attributes.html', attributes: []},
{name: 'std.traits.SharedConstOf', kind: "aliasdeclaration", path: './std/traits/shared_const_of.html', attributes: []},
{name: 'std.traits.SharedInoutOf', kind: "aliasdeclaration", path: './std/traits/shared_inout_of.html', attributes: []},
{name: 'std.traits.SharedOf', kind: "aliasdeclaration", path: './std/traits/shared_of.html', attributes: []},
{name: 'std.traits.Signed', kind: "aliasdeclaration", path: './std/traits/signed.html', attributes: []},
{name: 'std.traits.TemplateArgsOf', kind: "aliasdeclaration", path: './std/traits/template_args_of.html', attributes: []},
{name: 'std.traits.TemplateOf', kind: "aliasdeclaration", path: './std/traits/template_of.html', attributes: []},
{name: 'std.traits.TransitiveBaseTypeTuple', kind: "aliasdeclaration", path: './std/traits/transitive_base_type_tuple.html', attributes: []},
{name: 'std.traits.Unconst', kind: "aliasdeclaration", path: './std/traits/unconst.html', attributes: []},
{name: 'std.traits.Unqual', kind: "aliasdeclaration", path: './std/traits/unqual.html', attributes: []},
{name: 'std.traits.Unsigned', kind: "aliasdeclaration", path: './std/traits/unsigned.html', attributes: []},
{name: 'std.traits.ValueType', kind: "aliasdeclaration", path: './std/traits/value_type.html', attributes: []},
{name: 'std.traits.Variadic', kind: "enumdeclaration", path: './std/traits/variadic.html', attributes: []},
{name: 'std.traits.Variadic.c', kind: "enummemberdeclaration", path: './std/traits/variadic.html#c', attributes: []},
{name: 'std.traits.Variadic.d', kind: "enummemberdeclaration", path: './std/traits/variadic.html#d', attributes: []},
{name: 'std.traits.Variadic.no', kind: "enummemberdeclaration", path: './std/traits/variadic.html#no', attributes: []},
{name: 'std.traits.Variadic.typesafe', kind: "enummemberdeclaration", path: './std/traits/variadic.html#typesafe', attributes: []},
{name: 'std.traits.variadicFunctionStyle', kind: "enummemberdeclaration", path: './std/traits/variadic_function_style.html', attributes: []},
{name: 'std.typecons', kind: "module", path: './std/typecons.html', attributes: []},
{name: 'std.typecons.alignForSize', kind: "functiondeclaration", path: './std/typecons/align_for_size.html', attributes: []},
{name: 'std.typecons.apply', kind: "templatedeclaration", path: './std/typecons/apply.html', attributes: []},
{name: 'std.typecons.apply.apply', kind: "functiondeclaration", path: './std/typecons/apply.apply.html', attributes: ["auto"]},
{name: 'std.typecons.AutoImplement', kind: "classdeclaration", path: './std/typecons/auto_implement.html', attributes: []},
{name: 'std.typecons.BitFlags', kind: "structdeclaration", path: './std/typecons/bit_flags.html', attributes: []},
{name: 'std.typecons.BlackHole', kind: "aliasdeclaration", path: './std/typecons/black_hole.html', attributes: []},
{name: 'std.typecons.Flag', kind: "enumdeclaration", path: './std/typecons/flag.html', attributes: []},
{name: 'std.typecons.Flag.no', kind: "enummemberdeclaration", path: './std/typecons/flag.html#no', attributes: []},
{name: 'std.typecons.Flag.yes', kind: "enummemberdeclaration", path: './std/typecons/flag.html#yes', attributes: []},
{name: 'std.typecons.generateAssertTrap', kind: "enummemberdeclaration", path: './std/typecons/generate_assert_trap.html', attributes: []},
{name: 'std.typecons.generateEmptyFunction', kind: "enummemberdeclaration", path: './std/typecons/generate_empty_function.html', attributes: []},
{name: 'std.typecons.isBitFlagEnum', kind: "enummemberdeclaration", path: './std/typecons/is_bit_flag_enum.html', attributes: []},
{name: 'std.typecons.isTuple', kind: "enummemberdeclaration", path: './std/typecons/is_tuple.html', attributes: []},
{name: 'std.typecons.No', kind: "structdeclaration", path: './std/typecons/no.html', attributes: []},
{name: 'std.typecons.Nullable', kind: "structdeclaration", path: './std/typecons/nullable.html', attributes: []},
{name: 'std.typecons.Nullable.get', kind: "functiondeclaration", path: './std/typecons/nullable.get.html', attributes: ["inout", "pure", "nothrow", "property", "ref", "safe"]},
{name: 'std.typecons.Nullable.isNull', kind: "functiondeclaration", path: './std/typecons/nullable.is_null.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'std.typecons.Nullable.nullify', kind: "functiondeclaration", path: './std/typecons/nullable.nullify.html', attributes: []},
{name: 'std.typecons.Nullable.opAssign', kind: "functiondeclaration", path: './std/typecons/nullable.op_assign.html', attributes: []},
{name: 'std.typecons.Nullable.opEquals', kind: "functiondeclaration", path: './std/typecons/nullable.op_equals.html', attributes: ["const"]},
{name: 'std.typecons.Nullable.this', kind: "functiondeclaration", path: './std/typecons/nullable.this.html', attributes: ["inout"]},
{name: 'std.typecons.Nullable.toString', kind: "functiondeclaration", path: './std/typecons/nullable.to_string.html', attributes: []},
{name: 'std.typecons.nullable', kind: "functiondeclaration", path: './std/typecons/nullable.html', attributes: ["auto"]},
{name: 'std.typecons.Nullable.get', kind: "functiondeclaration", path: './std/typecons/nullable.get.html', attributes: ["inout", "property", "ref"]},
{name: 'std.typecons.Nullable.isNull', kind: "functiondeclaration", path: './std/typecons/nullable.is_null.html', attributes: ["const", "property"]},
{name: 'std.typecons.Nullable.nullify', kind: "functiondeclaration", path: './std/typecons/nullable.nullify.html', attributes: []},
{name: 'std.typecons.Nullable.opAssign', kind: "functiondeclaration", path: './std/typecons/nullable.op_assign.html', attributes: []},
{name: 'std.typecons.Nullable.this', kind: "functiondeclaration", path: './std/typecons/nullable.this.html', attributes: []},
{name: 'std.typecons.NullableRef', kind: "structdeclaration", path: './std/typecons/nullable_ref.html', attributes: []},
{name: 'std.typecons.NullableRef.bind', kind: "functiondeclaration", path: './std/typecons/nullable_ref.bind.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.typecons.NullableRef.get', kind: "functiondeclaration", path: './std/typecons/nullable_ref.get.html', attributes: ["inout", "pure", "nothrow", "property", "ref", "safe"]},
{name: 'std.typecons.NullableRef.isNull', kind: "functiondeclaration", path: './std/typecons/nullable_ref.is_null.html', attributes: ["const", "pure", "nothrow", "property", "safe"]},
{name: 'std.typecons.NullableRef.nullify', kind: "functiondeclaration", path: './std/typecons/nullable_ref.nullify.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.typecons.NullableRef.opAssign', kind: "functiondeclaration", path: './std/typecons/nullable_ref.op_assign.html', attributes: []},
{name: 'std.typecons.NullableRef.this', kind: "functiondeclaration", path: './std/typecons/nullable_ref.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.typecons.nullableRef', kind: "functiondeclaration", path: './std/typecons/nullable_ref.html', attributes: ["auto"]},
{name: 'std.typecons.Proxy', kind: "templatedeclaration", path: './std/typecons/proxy.html', attributes: []},
{name: 'std.typecons.Rebindable', kind: "aliasdeclaration", path: './std/typecons/rebindable.html', attributes: []},
{name: 'std.typecons.rebindable', kind: "functiondeclaration", path: './std/typecons/rebindable.html', attributes: []},
{name: 'std.typecons.RefCounted', kind: "structdeclaration", path: './std/typecons/ref_counted.html', attributes: []},
{name: 'std.typecons.RefCounted.opAssign', kind: "functiondeclaration", path: './std/typecons/ref_counted.op_assign.html', attributes: []},
{name: 'std.typecons.RefCounted.refCountedPayload', kind: "functiondeclaration", path: './std/typecons/ref_counted.ref_counted_payload.html', attributes: ["property", "ref", "trusted"]},
{name: 'std.typecons.RefCounted.RefCountedStore', kind: "structdeclaration", path: './std/typecons/ref_counted.ref_counted_store.html', attributes: []},
{name: 'std.typecons.RefCounted.RefCountedStore.ensureInitialized', kind: "functiondeclaration", path: './std/typecons/ref_counted.ref_counted_store.ensure_initialized.html', attributes: []},
{name: 'std.typecons.RefCounted.RefCountedStore.isInitialized', kind: "functiondeclaration", path: './std/typecons/ref_counted.ref_counted_store.is_initialized.html', attributes: ["const", "pure", "nothrow", "nogc", "property", "safe"]},
{name: 'std.typecons.RefCounted.RefCountedStore.refCount', kind: "functiondeclaration", path: './std/typecons/ref_counted.ref_counted_store.ref_count.html', attributes: ["const", "pure", "nothrow", "nogc", "property", "safe"]},
{name: 'std.typecons.RefCounted.refCountedStore', kind: "functiondeclaration", path: './std/typecons/ref_counted.ref_counted_store.html', attributes: ["inout", "nothrow", "property", "ref", "safe"]},
{name: 'std.typecons.RefCounted.this', kind: "functiondeclaration", path: './std/typecons/ref_counted.this.html', attributes: []},
{name: 'std.typecons.refCounted', kind: "functiondeclaration", path: './std/typecons/ref_counted.html', attributes: []},
{name: 'std.typecons.RefCountedAutoInitialize', kind: "enumdeclaration", path: './std/typecons/ref_counted_auto_initialize.html', attributes: []},
{name: 'std.typecons.RefCountedAutoInitialize.no', kind: "enummemberdeclaration", path: './std/typecons/ref_counted_auto_initialize.html#no', attributes: []},
{name: 'std.typecons.RefCountedAutoInitialize.yes', kind: "enummemberdeclaration", path: './std/typecons/ref_counted_auto_initialize.html#yes', attributes: []},
{name: 'std.typecons.ReplaceType', kind: "aliasdeclaration", path: './std/typecons/replace_type.html', attributes: []},
{name: 'std.typecons.ReplaceTypeUnless', kind: "aliasdeclaration", path: './std/typecons/replace_type_unless.html', attributes: []},
{name: 'std.typecons.reverse', kind: "functiondeclaration", path: './std/typecons/reverse.html', attributes: ["auto"]},
{name: 'std.typecons.scoped', kind: "templatedeclaration", path: './std/typecons/scoped.html', attributes: []},
{name: 'std.typecons.scoped.scoped', kind: "functiondeclaration", path: './std/typecons/scoped.scoped.html', attributes: ["auto", "system"]},
{name: 'std.typecons.Ternary', kind: "structdeclaration", path: './std/typecons/ternary.html', attributes: []},
{name: 'std.typecons.Ternary.no', kind: "enummemberdeclaration", path: './std/typecons/ternary.no.html', attributes: []},
{name: 'std.typecons.Ternary.opAssign', kind: "functiondeclaration", path: './std/typecons/ternary.op_assign.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.typecons.Ternary.opBinary', kind: "functiondeclaration", path: './std/typecons/ternary.op_binary.html', attributes: []},
{name: 'std.typecons.Ternary.opUnary', kind: "functiondeclaration", path: './std/typecons/ternary.op_unary.html', attributes: []},
{name: 'std.typecons.Ternary.this', kind: "functiondeclaration", path: './std/typecons/ternary.this.html', attributes: ["pure", "nothrow", "ref", "nogc", "safe"]},
{name: 'std.typecons.Ternary.unknown', kind: "enummemberdeclaration", path: './std/typecons/ternary.unknown.html', attributes: []},
{name: 'std.typecons.Ternary.yes', kind: "enummemberdeclaration", path: './std/typecons/ternary.yes.html', attributes: []},
{name: 'std.typecons.Tuple', kind: "structdeclaration", path: './std/typecons/tuple.html', attributes: []},
{name: 'std.typecons.Tuple.expand', kind: "variabledeclaration", path: './std/typecons/tuple.expand.html', attributes: []},
{name: 'std.typecons.Tuple.fieldNames', kind: "aliasdeclaration", path: './std/typecons/tuple.field_names.html', attributes: []},
{name: 'std.typecons.Tuple.opAssign', kind: "functiondeclaration", path: './std/typecons/tuple.op_assign.html', attributes: ["ref"]},
{name: 'std.typecons.Tuple.opBinary', kind: "functiondeclaration", path: './std/typecons/tuple.op_binary.html', attributes: ["auto"]},
{name: 'std.typecons.Tuple.opBinaryRight', kind: "functiondeclaration", path: './std/typecons/tuple.op_binary_right.html', attributes: ["auto"]},
{name: 'std.typecons.Tuple.opCmp', kind: "functiondeclaration", path: './std/typecons/tuple.op_cmp.html', attributes: []},
{name: 'std.typecons.Tuple.opEquals', kind: "functiondeclaration", path: './std/typecons/tuple.op_equals.html', attributes: []},
{name: 'std.typecons.Tuple.rename', kind: "functiondeclaration", path: './std/typecons/tuple.rename.html', attributes: ["inout", "ref"]},
{name: 'std.typecons.Tuple.slice', kind: "functiondeclaration", path: './std/typecons/tuple.slice.html', attributes: ["inout", "property", "ref", "trusted"]},
{name: 'std.typecons.Tuple.this', kind: "functiondeclaration", path: './std/typecons/tuple.this.html', attributes: []},
{name: 'std.typecons.Tuple.toHash', kind: "functiondeclaration", path: './std/typecons/tuple.to_hash.html', attributes: ["const", "nothrow", "safe"]},
{name: 'std.typecons.Tuple.toString', kind: "functiondeclaration", path: './std/typecons/tuple.to_string.html', attributes: ["const"]},
{name: 'std.typecons.Tuple.Types', kind: "aliasdeclaration", path: './std/typecons/tuple.types.html', attributes: []},
{name: 'std.typecons.tuple', kind: "templatedeclaration", path: './std/typecons/tuple.html', attributes: []},
{name: 'std.typecons.tuple.tuple', kind: "functiondeclaration", path: './std/typecons/tuple.tuple.html', attributes: ["auto"]},
{name: 'std.typecons.Typedef', kind: "structdeclaration", path: './std/typecons/typedef.html', attributes: []},
{name: 'std.typecons.Typedef.toString', kind: "functiondeclaration", path: './std/typecons/typedef.to_string.html', attributes: []},
{name: 'std.typecons.TypedefType', kind: "aliasdeclaration", path: './std/typecons/typedef_type.html', attributes: []},
{name: 'std.typecons.Unique', kind: "structdeclaration", path: './std/typecons/unique.html', attributes: []},
{name: 'std.typecons.Unique.create', kind: "functiondeclaration", path: './std/typecons/unique.create.html', attributes: []},
{name: 'std.typecons.Unique.isEmpty', kind: "functiondeclaration", path: './std/typecons/unique.is_empty.html', attributes: ["const", "property"]},
{name: 'std.typecons.Unique.opAssign', kind: "functiondeclaration", path: './std/typecons/unique.op_assign.html', attributes: []},
{name: 'std.typecons.Unique.RefT', kind: "aliasdeclaration", path: './std/typecons/unique.ref_t.html', attributes: []},
{name: 'std.typecons.Unique.release', kind: "functiondeclaration", path: './std/typecons/unique.release.html', attributes: []},
{name: 'std.typecons.Unique.this', kind: "functiondeclaration", path: './std/typecons/unique.this.html', attributes: []},
{name: 'std.typecons.UnqualRef', kind: "structdeclaration", path: './std/typecons/unqual_ref.html', attributes: []},
{name: 'std.typecons.unwrap', kind: "templatedeclaration", path: './std/typecons/unwrap.html', attributes: []},
{name: 'std.typecons.unwrap.unwrap', kind: "functiondeclaration", path: './std/typecons/unwrap.unwrap.html', attributes: ["auto", "pure", "nothrow", "trusted"]},
{name: 'std.typecons.WhiteHole', kind: "aliasdeclaration", path: './std/typecons/white_hole.html', attributes: []},
{name: 'std.typecons.wrap', kind: "templatedeclaration", path: './std/typecons/wrap.html', attributes: []},
{name: 'std.typecons.wrap.wrap', kind: "functiondeclaration", path: './std/typecons/wrap.wrap.html', attributes: ["auto", "pure", "nothrow", "trusted"]},
{name: 'std.typecons.Yes', kind: "structdeclaration", path: './std/typecons/yes.html', attributes: []},
{name: 'std.uni', kind: "module", path: './std/uni.html', attributes: []},
{name: 'std.uni.allowedIn', kind: "functiondeclaration", path: './std/uni/allowed_in.html', attributes: []},
{name: 'std.uni.asCapitalized', kind: "functiondeclaration", path: './std/uni/as_capitalized.html', attributes: ["auto"]},
{name: 'std.uni.asLowerCase', kind: "functiondeclaration", path: './std/uni/as_lower_case.html', attributes: ["auto"]},
{name: 'std.uni.asUpperCase', kind: "functiondeclaration", path: './std/uni/as_upper_case.html', attributes: ["auto"]},
{name: 'std.uni.byCodePoint', kind: "functiondeclaration", path: './std/uni/by_code_point.html', attributes: ["auto"]},
{name: 'std.uni.byGrapheme', kind: "functiondeclaration", path: './std/uni/by_grapheme.html', attributes: ["auto"]},
{name: 'std.uni.CodepointInterval', kind: "structdeclaration", path: './std/uni/codepoint_interval.html', attributes: []},
{name: 'std.uni.CodepointSet', kind: "aliasdeclaration", path: './std/uni/codepoint_set.html', attributes: []},
{name: 'std.uni.codepointSetTrie', kind: "templatedeclaration", path: './std/uni/codepoint_set_trie.html', attributes: []},
{name: 'std.uni.codepointSetTrie.codepointSetTrie', kind: "functiondeclaration", path: './std/uni/codepoint_set_trie.codepoint_set_trie.html', attributes: ["auto"]},
{name: 'std.uni.CodepointSetTrie', kind: "aliasdeclaration", path: './std/uni/codepoint_set_trie.html', attributes: []},
{name: 'std.uni.codepointTrie', kind: "templatedeclaration", path: './std/uni/codepoint_trie.html', attributes: []},
{name: 'std.uni.codepointTrie.codepointTrie', kind: "functiondeclaration", path: './std/uni/codepoint_trie.codepoint_trie.html', attributes: ["auto"]},
{name: 'std.uni.CodepointTrie', kind: "aliasdeclaration", path: './std/uni/codepoint_trie.html', attributes: []},
{name: 'std.uni.combiningClass', kind: "functiondeclaration", path: './std/uni/combining_class.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.compose', kind: "functiondeclaration", path: './std/uni/compose.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'std.uni.composeJamo', kind: "functiondeclaration", path: './std/uni/compose_jamo.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.decodeGrapheme', kind: "functiondeclaration", path: './std/uni/decode_grapheme.html', attributes: []},
{name: 'std.uni.decompose', kind: "functiondeclaration", path: './std/uni/decompose.html', attributes: ["safe"]},
{name: 'std.uni.decomposeHangul', kind: "functiondeclaration", path: './std/uni/decompose_hangul.html', attributes: ["safe"]},
{name: 'std.uni.Grapheme', kind: "structdeclaration", path: './std/uni/grapheme.html', attributes: []},
{name: 'std.uni.Grapheme.length', kind: "functiondeclaration", path: './std/uni/grapheme.length.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.uni.Grapheme.opIndex', kind: "functiondeclaration", path: './std/uni/grapheme.op_index.html', attributes: ["pure", "nothrow", "nogc", "trusted", "const"]},
{name: 'std.uni.Grapheme.opIndexAssign', kind: "functiondeclaration", path: './std/uni/grapheme.op_index_assign.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.uni.Grapheme.opOpAssign', kind: "functiondeclaration", path: './std/uni/grapheme.op_op_assign.html', attributes: ["ref", "trusted"]},
{name: 'std.uni.Grapheme.opSlice', kind: "functiondeclaration", path: './std/uni/grapheme.op_slice.html', attributes: ["pure", "nothrow", "nogc", "return", "safe"]},
{name: 'std.uni.Grapheme.this', kind: "functiondeclaration", path: './std/uni/grapheme.this.html', attributes: []},
{name: 'std.uni.Grapheme.valid', kind: "functiondeclaration", path: './std/uni/grapheme.valid.html', attributes: ["property"]},
{name: 'std.uni.graphemeStride', kind: "functiondeclaration", path: './std/uni/grapheme_stride.html', attributes: ["pure", "safe"]},
{name: 'std.uni.icmp', kind: "functiondeclaration", path: './std/uni/icmp.html', attributes: []},
{name: 'std.uni.InversionList', kind: "structdeclaration", path: './std/uni/inversion_list.html', attributes: []},
{name: 'std.uni.InversionList.add', kind: "functiondeclaration", path: './std/uni/inversion_list.add.html', attributes: ["ref"]},
{name: 'std.uni.InversionList.byCodepoint', kind: "functiondeclaration", path: './std/uni/inversion_list.by_codepoint.html', attributes: ["auto", "property"]},
{name: 'std.uni.InversionList.byInterval', kind: "functiondeclaration", path: './std/uni/inversion_list.by_interval.html', attributes: ["auto", "property", "scope"]},
{name: 'std.uni.InversionList.empty', kind: "functiondeclaration", path: './std/uni/inversion_list.empty.html', attributes: ["const", "property"]},
{name: 'std.uni.InversionList.inverted', kind: "functiondeclaration", path: './std/uni/inversion_list.inverted.html', attributes: ["auto", "property"]},
{name: 'std.uni.InversionList.length', kind: "functiondeclaration", path: './std/uni/inversion_list.length.html', attributes: ["property"]},
{name: 'std.uni.InversionList.opBinary', kind: "functiondeclaration", path: './std/uni/inversion_list.op_binary.html', attributes: []},
{name: 'std.uni.InversionList.opBinaryRight', kind: "functiondeclaration", path: './std/uni/inversion_list.op_binary_right.html', attributes: ["const"]},
{name: 'std.uni.InversionList.opIndex', kind: "functiondeclaration", path: './std/uni/inversion_list.op_index.html', attributes: ["const"]},
{name: 'std.uni.InversionList.opOpAssign', kind: "functiondeclaration", path: './std/uni/inversion_list.op_op_assign.html', attributes: ["ref"]},
{name: 'std.uni.InversionList.opUnary', kind: "functiondeclaration", path: './std/uni/inversion_list.op_unary.html', attributes: ["auto"]},
{name: 'std.uni.InversionList.this', kind: "functiondeclaration", path: './std/uni/inversion_list.this.html', attributes: ["pure"]},
{name: 'std.uni.InversionList.toSourceCode', kind: "functiondeclaration", path: './std/uni/inversion_list.to_source_code.html', attributes: []},
{name: 'std.uni.InversionList.toString', kind: "functiondeclaration", path: './std/uni/inversion_list.to_string.html', attributes: []},
{name: 'std.uni.isAlpha', kind: "functiondeclaration", path: './std/uni/is_alpha.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isAlphaNum', kind: "functiondeclaration", path: './std/uni/is_alpha_num.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isCodepointSet', kind: "enummemberdeclaration", path: './std/uni/is_codepoint_set.html', attributes: []},
{name: 'std.uni.isControl', kind: "functiondeclaration", path: './std/uni/is_control.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isFormat', kind: "functiondeclaration", path: './std/uni/is_format.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isGraphical', kind: "functiondeclaration", path: './std/uni/is_graphical.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isIntegralPair', kind: "enummemberdeclaration", path: './std/uni/is_integral_pair.html', attributes: []},
{name: 'std.uni.isLower', kind: "functiondeclaration", path: './std/uni/is_lower.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isMark', kind: "functiondeclaration", path: './std/uni/is_mark.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isNonCharacter', kind: "functiondeclaration", path: './std/uni/is_non_character.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isNumber', kind: "functiondeclaration", path: './std/uni/is_number.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isPrivateUse', kind: "functiondeclaration", path: './std/uni/is_private_use.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isPunctuation', kind: "functiondeclaration", path: './std/uni/is_punctuation.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isSpace', kind: "functiondeclaration", path: './std/uni/is_space.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isSurrogate', kind: "functiondeclaration", path: './std/uni/is_surrogate.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isSurrogateHi', kind: "functiondeclaration", path: './std/uni/is_surrogate_hi.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isSurrogateLo', kind: "functiondeclaration", path: './std/uni/is_surrogate_lo.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isSymbol', kind: "functiondeclaration", path: './std/uni/is_symbol.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isUpper', kind: "functiondeclaration", path: './std/uni/is_upper.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.isUtfMatcher', kind: "enummemberdeclaration", path: './std/uni/is_utf_matcher.html', attributes: []},
{name: 'std.uni.isWhite', kind: "functiondeclaration", path: './std/uni/is_white.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.lineSep', kind: "enummemberdeclaration", path: './std/uni/line_sep.html', attributes: []},
{name: 'std.uni.MatcherConcept', kind: "structdeclaration", path: './std/uni/matcher_concept.html', attributes: []},
{name: 'std.uni.MatcherConcept.match', kind: "functiondeclaration", path: './std/uni/matcher_concept.match.html', attributes: []},
{name: 'std.uni.MatcherConcept.skip', kind: "functiondeclaration", path: './std/uni/matcher_concept.skip.html', attributes: []},
{name: 'std.uni.MatcherConcept.subMatcher', kind: "functiondeclaration", path: './std/uni/matcher_concept.sub_matcher.html', attributes: ["auto", "property"]},
{name: 'std.uni.MatcherConcept.test', kind: "functiondeclaration", path: './std/uni/matcher_concept.test.html', attributes: []},
{name: 'std.uni.nelSep', kind: "enummemberdeclaration", path: './std/uni/nel_sep.html', attributes: []},
{name: 'std.uni.NFC', kind: "enummemberdeclaration", path: './std/uni/nfc.html', attributes: []},
{name: 'std.uni.NFD', kind: "enummemberdeclaration", path: './std/uni/nfd.html', attributes: []},
{name: 'std.uni.NFKC', kind: "enummemberdeclaration", path: './std/uni/nfkc.html', attributes: []},
{name: 'std.uni.NFKD', kind: "enummemberdeclaration", path: './std/uni/nfkd.html', attributes: []},
{name: 'std.uni.NormalizationForm', kind: "enumdeclaration", path: './std/uni/normalization_form.html', attributes: []},
{name: 'std.uni.normalize', kind: "functiondeclaration", path: './std/uni/normalize.html', attributes: []},
{name: 'std.uni.paraSep', kind: "enummemberdeclaration", path: './std/uni/para_sep.html', attributes: []},
{name: 'std.uni.sicmp', kind: "functiondeclaration", path: './std/uni/sicmp.html', attributes: []},
{name: 'std.uni.toDelegate', kind: "functiondeclaration", path: './std/uni/to_delegate.html', attributes: ["auto"]},
{name: 'std.uni.toLower', kind: "functiondeclaration", path: './std/uni/to_lower.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.toLowerInPlace', kind: "functiondeclaration", path: './std/uni/to_lower_in_place.html', attributes: ["pure", "trusted"]},
{name: 'std.uni.toTrie', kind: "functiondeclaration", path: './std/uni/to_trie.html', attributes: ["auto"]},
{name: 'std.uni.toUpper', kind: "functiondeclaration", path: './std/uni/to_upper.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uni.toUpperInPlace', kind: "functiondeclaration", path: './std/uni/to_upper_in_place.html', attributes: ["pure", "trusted"]},
{name: 'std.uni.unicode', kind: "structdeclaration", path: './std/uni/unicode.html', attributes: []},
{name: 'std.uni.unicode.block', kind: "structdeclaration", path: './std/uni/unicode.block.html', attributes: []},
{name: 'std.uni.unicode.hangulSyllableType', kind: "structdeclaration", path: './std/uni/unicode.hangul_syllable_type.html', attributes: []},
{name: 'std.uni.unicode.opCall', kind: "functiondeclaration", path: './std/uni/unicode.op_call.html', attributes: ["auto"]},
{name: 'std.uni.unicode.opDispatch', kind: "functiondeclaration", path: './std/uni/unicode.op_dispatch.html', attributes: ["auto", "pure", "property"]},
{name: 'std.uni.unicode.parseSet', kind: "functiondeclaration", path: './std/uni/unicode.parse_set.html', attributes: []},
{name: 'std.uni.unicode.script', kind: "structdeclaration", path: './std/uni/unicode.script.html', attributes: []},
{name: 'std.uni.UnicodeDecomposition', kind: "enumdeclaration", path: './std/uni/unicode_decomposition.html', attributes: []},
{name: 'std.uni.UnicodeDecomposition.Canonical', kind: "enummemberdeclaration", path: './std/uni/unicode_decomposition.html#Canonical', attributes: []},
{name: 'std.uni.UnicodeDecomposition.Compatibility', kind: "enummemberdeclaration", path: './std/uni/unicode_decomposition.html#Compatibility', attributes: []},
{name: 'std.uni.utfMatcher', kind: "functiondeclaration", path: './std/uni/utf_matcher.html', attributes: ["auto"]},
{name: 'std.uri', kind: "module", path: './std/uri.html', attributes: []},
{name: 'std.uri.decode', kind: "functiondeclaration", path: './std/uri/decode.html', attributes: []},
{name: 'std.uri.decodeComponent', kind: "functiondeclaration", path: './std/uri/decode_component.html', attributes: []},
{name: 'std.uri.emailLength', kind: "functiondeclaration", path: './std/uri/email_length.html', attributes: []},
{name: 'std.uri.encode', kind: "functiondeclaration", path: './std/uri/encode.html', attributes: []},
{name: 'std.uri.encodeComponent', kind: "functiondeclaration", path: './std/uri/encode_component.html', attributes: []},
{name: 'std.uri.URIException', kind: "classdeclaration", path: './std/uri/uri_exception.html', attributes: []},
{name: 'std.uri.uriLength', kind: "functiondeclaration", path: './std/uri/uri_length.html', attributes: []},
{name: 'std.utf', kind: "module", path: './std/utf.html', attributes: []},
{name: 'std.utf.byChar', kind: "aliasdeclaration", path: './std/utf/by_char.html', attributes: []},
{name: 'std.utf.byCodeUnit', kind: "functiondeclaration", path: './std/utf/by_code_unit.html', attributes: ["auto"]},
{name: 'std.utf.byDchar', kind: "aliasdeclaration", path: './std/utf/by_dchar.html', attributes: []},
{name: 'std.utf.byUTF', kind: "aliasdeclaration", path: './std/utf/by_utf.html', attributes: []},
{name: 'std.utf.byWchar', kind: "aliasdeclaration", path: './std/utf/by_wchar.html', attributes: []},
{name: 'std.utf.codeLength', kind: "functiondeclaration", path: './std/utf/code_length.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.utf.count', kind: "functiondeclaration", path: './std/utf/count.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'std.utf.decode', kind: "functiondeclaration", path: './std/utf/decode.html', attributes: []},
{name: 'std.utf.decodeBack', kind: "functiondeclaration", path: './std/utf/decode_back.html', attributes: []},
{name: 'std.utf.decodeFront', kind: "functiondeclaration", path: './std/utf/decode_front.html', attributes: []},
{name: 'std.utf.encode', kind: "functiondeclaration", path: './std/utf/encode.html', attributes: ["pure", "safe"]},
{name: 'std.utf.isValidDchar', kind: "functiondeclaration", path: './std/utf/is_valid_dchar.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.utf.replacementDchar', kind: "enummemberdeclaration", path: './std/utf/replacement_dchar.html', attributes: []},
{name: 'std.utf.stride', kind: "functiondeclaration", path: './std/utf/stride.html', attributes: []},
{name: 'std.utf.strideBack', kind: "functiondeclaration", path: './std/utf/stride_back.html', attributes: []},
{name: 'std.utf.toUCSindex', kind: "functiondeclaration", path: './std/utf/to_uc_sindex.html', attributes: ["pure", "safe"]},
{name: 'std.utf.toUTF16', kind: "functiondeclaration", path: './std/utf/to_ut_f16.html', attributes: []},
{name: 'std.utf.toUTF16z', kind: "functiondeclaration", path: './std/utf/to_ut_f16z.html', attributes: ["pure", "safe"]},
{name: 'std.utf.toUTF32', kind: "functiondeclaration", path: './std/utf/to_ut_f32.html', attributes: []},
{name: 'std.utf.toUTF8', kind: "functiondeclaration", path: './std/utf/to_ut_f8.html', attributes: []},
{name: 'std.utf.toUTFindex', kind: "functiondeclaration", path: './std/utf/to_ut_findex.html', attributes: ["pure", "safe"]},
{name: 'std.utf.toUTFz', kind: "templatedeclaration", path: './std/utf/to_ut_fz.html', attributes: []},
{name: 'std.utf.toUTFz.toUTFz', kind: "functiondeclaration", path: './std/utf/to_ut_fz.to_ut_fz.html', attributes: ["pure", "safe"]},
{name: 'std.utf.UseReplacementDchar', kind: "aliasdeclaration", path: './std/utf/use_replacement_dchar.html', attributes: []},
{name: 'std.utf.UTFException', kind: "classdeclaration", path: './std/utf/utf_exception.html', attributes: []},
{name: 'std.utf.UTFException.this', kind: "functiondeclaration", path: './std/utf/utf_exception.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.utf.UTFException.toString', kind: "functiondeclaration", path: './std/utf/utf_exception.to_string.html', attributes: ["override", "const"]},
{name: 'std.utf.validate', kind: "functiondeclaration", path: './std/utf/validate.html', attributes: ["pure", "safe"]},
{name: 'std.uuid', kind: "module", path: './std/uuid.html', attributes: []},
{name: 'std.uuid.dnsNamespace', kind: "enummemberdeclaration", path: './std/uuid/dns_namespace.html', attributes: []},
{name: 'std.uuid.md5UUID', kind: "functiondeclaration", path: './std/uuid/md5_uuid.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uuid.oidNamespace', kind: "enummemberdeclaration", path: './std/uuid/oid_namespace.html', attributes: []},
{name: 'std.uuid.parseUUID', kind: "functiondeclaration", path: './std/uuid/parse_uuid.html', attributes: []},
{name: 'std.uuid.randomUUID', kind: "functiondeclaration", path: './std/uuid/random_uuid.html', attributes: ["safe"]},
{name: 'std.uuid.sha1UUID', kind: "functiondeclaration", path: './std/uuid/sha1_uuid.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uuid.urlNamespace', kind: "enummemberdeclaration", path: './std/uuid/url_namespace.html', attributes: []},
{name: 'std.uuid.UUID', kind: "structdeclaration", path: './std/uuid/uuid.html', attributes: []},
{name: 'std.uuid.UUID.data', kind: "variabledeclaration", path: './std/uuid/uuid.data.html', attributes: []},
{name: 'std.uuid.UUID.empty', kind: "functiondeclaration", path: './std/uuid/uuid.empty.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted", "const"]},
{name: 'std.uuid.UUID.opAssign', kind: "functiondeclaration", path: './std/uuid/uuid.op_assign.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uuid.UUID.opCmp', kind: "functiondeclaration", path: './std/uuid/uuid.op_cmp.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.uuid.UUID.opEquals', kind: "functiondeclaration", path: './std/uuid/uuid.op_equals.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.uuid.UUID.swap', kind: "functiondeclaration", path: './std/uuid/uuid.swap.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.uuid.UUID.this', kind: "functiondeclaration", path: './std/uuid/uuid.this.html', attributes: ["pure", "nothrow", "ref", "nogc", "safe"]},
{name: 'std.uuid.UUID.toHash', kind: "functiondeclaration", path: './std/uuid/uuid.to_hash.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.uuid.UUID.toString', kind: "functiondeclaration", path: './std/uuid/uuid.to_string.html', attributes: ["const"]},
{name: 'std.uuid.UUID.uuidVersion', kind: "functiondeclaration", path: './std/uuid/uuid.uuid_version.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.uuid.UUID.Variant', kind: "enumdeclaration", path: './std/uuid/uuid.variant.html', attributes: []},
{name: 'std.uuid.UUID.Variant.future', kind: "enummemberdeclaration", path: './std/uuid/uuid.variant.html#future', attributes: []},
{name: 'std.uuid.UUID.Variant.microsoft', kind: "enummemberdeclaration", path: './std/uuid/uuid.variant.html#microsoft', attributes: []},
{name: 'std.uuid.UUID.Variant.ncs', kind: "enummemberdeclaration", path: './std/uuid/uuid.variant.html#ncs', attributes: []},
{name: 'std.uuid.UUID.Variant.rfc4122', kind: "enummemberdeclaration", path: './std/uuid/uuid.variant.html#rfc4122', attributes: []},
{name: 'std.uuid.UUID.variant', kind: "functiondeclaration", path: './std/uuid/uuid.variant.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.uuid.UUID.Version', kind: "enumdeclaration", path: './std/uuid/uuid.version.html', attributes: []},
{name: 'std.uuid.UUID.Version.dceSecurity', kind: "enummemberdeclaration", path: './std/uuid/uuid.version.html#dceSecurity', attributes: []},
{name: 'std.uuid.UUID.Version.nameBasedMD5', kind: "enummemberdeclaration", path: './std/uuid/uuid.version.html#nameBasedMD5', attributes: []},
{name: 'std.uuid.UUID.Version.nameBasedSHA1', kind: "enummemberdeclaration", path: './std/uuid/uuid.version.html#nameBasedSHA1', attributes: []},
{name: 'std.uuid.UUID.Version.randomNumberBased', kind: "enummemberdeclaration", path: './std/uuid/uuid.version.html#randomNumberBased', attributes: []},
{name: 'std.uuid.UUID.Version.timeBased', kind: "enummemberdeclaration", path: './std/uuid/uuid.version.html#timeBased', attributes: []},
{name: 'std.uuid.UUID.Version.unknown', kind: "enummemberdeclaration", path: './std/uuid/uuid.version.html#unknown', attributes: []},
{name: 'std.uuid.UUIDParsingException', kind: "classdeclaration", path: './std/uuid/uuid_parsing_exception.html', attributes: []},
{name: 'std.uuid.UUIDParsingException.input', kind: "variabledeclaration", path: './std/uuid/uuid_parsing_exception.input.html', attributes: []},
{name: 'std.uuid.UUIDParsingException.position', kind: "variabledeclaration", path: './std/uuid/uuid_parsing_exception.position.html', attributes: []},
{name: 'std.uuid.UUIDParsingException.Reason', kind: "enumdeclaration", path: './std/uuid/uuid_parsing_exception.reason.html', attributes: []},
{name: 'std.uuid.UUIDParsingException.Reason.invalidChar', kind: "enummemberdeclaration", path: './std/uuid/uuid_parsing_exception.reason.html#invalidChar', attributes: []},
{name: 'std.uuid.UUIDParsingException.Reason.tooLittle', kind: "enummemberdeclaration", path: './std/uuid/uuid_parsing_exception.reason.html#tooLittle', attributes: []},
{name: 'std.uuid.UUIDParsingException.Reason.tooMuch', kind: "enummemberdeclaration", path: './std/uuid/uuid_parsing_exception.reason.html#tooMuch', attributes: []},
{name: 'std.uuid.UUIDParsingException.Reason.unknown', kind: "enummemberdeclaration", path: './std/uuid/uuid_parsing_exception.reason.html#unknown', attributes: []},
{name: 'std.uuid.UUIDParsingException.reason', kind: "variabledeclaration", path: './std/uuid/uuid_parsing_exception.reason.html', attributes: []},
{name: 'std.uuid.uuidRegex', kind: "enummemberdeclaration", path: './std/uuid/uuid_regex.html', attributes: []},
{name: 'std.uuid.x500Namespace', kind: "enummemberdeclaration", path: './std/uuid/x500_namespace.html', attributes: []},
{name: 'std.variant', kind: "module", path: './std/variant.html', attributes: []},
{name: 'std.variant.Algebraic', kind: "aliasdeclaration", path: './std/variant/algebraic.html', attributes: []},
{name: 'std.variant.maxSize', kind: "enummemberdeclaration", path: './std/variant/max_size.html', attributes: []},
{name: 'std.variant.tryVisit', kind: "templatedeclaration", path: './std/variant/try_visit.html', attributes: []},
{name: 'std.variant.tryVisit.tryVisit', kind: "functiondeclaration", path: './std/variant/try_visit.try_visit.html', attributes: ["auto"]},
{name: 'std.variant.Variant', kind: "aliasdeclaration", path: './std/variant/variant.html', attributes: []},
{name: 'std.variant.variantArray', kind: "functiondeclaration", path: './std/variant/variant_array.html', attributes: []},
{name: 'std.variant.VariantException', kind: "classdeclaration", path: './std/variant/variant_exception.html', attributes: []},
{name: 'std.variant.VariantException.source', kind: "variabledeclaration", path: './std/variant/variant_exception.source.html', attributes: []},
{name: 'std.variant.VariantException.target', kind: "variabledeclaration", path: './std/variant/variant_exception.target.html', attributes: []},
{name: 'std.variant.VariantN', kind: "structdeclaration", path: './std/variant/variant_n.html', attributes: []},
{name: 'std.variant.VariantN.allowed', kind: "enummemberdeclaration", path: './std/variant/variant_n.allowed.html', attributes: []},
{name: 'std.variant.VariantN.AllowedTypes', kind: "aliasdeclaration", path: './std/variant/variant_n.allowed_types.html', attributes: []},
{name: 'std.variant.VariantN.coerce', kind: "functiondeclaration", path: './std/variant/variant_n.coerce.html', attributes: ["property"]},
{name: 'std.variant.VariantN.convertsTo', kind: "functiondeclaration", path: './std/variant/variant_n.converts_to.html', attributes: ["const", "property"]},
{name: 'std.variant.VariantN.get', kind: "functiondeclaration", path: './std/variant/variant_n.get.html', attributes: ["inout", "property"]},
{name: 'std.variant.VariantN.hasValue', kind: "functiondeclaration", path: './std/variant/variant_n.has_value.html', attributes: ["const", "pure", "nothrow", "property"]},
{name: 'std.variant.VariantN.length', kind: "functiondeclaration", path: './std/variant/variant_n.length.html', attributes: ["property"]},
{name: 'std.variant.VariantN.opApply', kind: "functiondeclaration", path: './std/variant/variant_n.op_apply.html', attributes: []},
{name: 'std.variant.VariantN.opAssign', kind: "functiondeclaration", path: './std/variant/variant_n.op_assign.html', attributes: []},
{name: 'std.variant.VariantN.opBinary', kind: "functiondeclaration", path: './std/variant/variant_n.op_binary.html', attributes: []},
{name: 'std.variant.VariantN.opBinaryRight', kind: "functiondeclaration", path: './std/variant/variant_n.op_binary_right.html', attributes: []},
{name: 'std.variant.VariantN.opCmp', kind: "functiondeclaration", path: './std/variant/variant_n.op_cmp.html', attributes: []},
{name: 'std.variant.VariantN.opEquals', kind: "functiondeclaration", path: './std/variant/variant_n.op_equals.html', attributes: ["const"]},
{name: 'std.variant.VariantN.opIndex', kind: "functiondeclaration", path: './std/variant/variant_n.op_index.html', attributes: ["inout"]},
{name: 'std.variant.VariantN.opIndexAssign', kind: "functiondeclaration", path: './std/variant/variant_n.op_index_assign.html', attributes: []},
{name: 'std.variant.VariantN.opIndexOpAssign', kind: "functiondeclaration", path: './std/variant/variant_n.op_index_op_assign.html', attributes: []},
{name: 'std.variant.VariantN.opOpAssign', kind: "functiondeclaration", path: './std/variant/variant_n.op_op_assign.html', attributes: []},
{name: 'std.variant.VariantN.peek', kind: "functiondeclaration", path: './std/variant/variant_n.peek.html', attributes: ["inout", "property"]},
{name: 'std.variant.VariantN.this', kind: "functiondeclaration", path: './std/variant/variant_n.this.html', attributes: []},
{name: 'std.variant.VariantN.toHash', kind: "functiondeclaration", path: './std/variant/variant_n.to_hash.html', attributes: ["const", "nothrow", "safe"]},
{name: 'std.variant.VariantN.toString', kind: "functiondeclaration", path: './std/variant/variant_n.to_string.html', attributes: []},
{name: 'std.variant.VariantN.type', kind: "functiondeclaration", path: './std/variant/variant_n.type.html', attributes: ["const", "nothrow", "property", "trusted"]},
{name: 'std.variant.visit', kind: "templatedeclaration", path: './std/variant/visit.html', attributes: []},
{name: 'std.variant.visit.visit', kind: "functiondeclaration", path: './std/variant/visit.visit.html', attributes: ["auto"]},
{name: 'std.xml', kind: "module", path: './std/xml.html', attributes: []},
{name: 'std.xml.CData', kind: "classdeclaration", path: './std/xml/c_data.html', attributes: []},
{name: 'std.xml.CData.isEmptyXML', kind: "functiondeclaration", path: './std/xml/c_data.is_empty_xml.html', attributes: ["scope", "override", "pure", "nothrow", "property", "nogc", "scope", "safe", "const"]},
{name: 'std.xml.CData.opCmp', kind: "functiondeclaration", path: './std/xml/c_data.op_cmp.html', attributes: ["override", "scope", "safe", "const"]},
{name: 'std.xml.CData.opEquals', kind: "functiondeclaration", path: './std/xml/c_data.op_equals.html', attributes: ["override", "safe", "const"]},
{name: 'std.xml.CData.this', kind: "functiondeclaration", path: './std/xml/c_data.this.html', attributes: ["pure", "safe"]},
{name: 'std.xml.CData.toHash', kind: "functiondeclaration", path: './std/xml/c_data.to_hash.html', attributes: ["override", "nothrow", "scope", "safe", "const"]},
{name: 'std.xml.CData.toString', kind: "functiondeclaration", path: './std/xml/c_data.to_string.html', attributes: ["override", "pure", "nothrow", "scope", "safe", "const"]},
{name: 'std.xml.Item.opCmp', kind: "functiondeclaration", path: './std/xml/item.op_cmp.html', attributes: ["abstract", "override", "safe", "const"]},
{name: 'std.xml.Item.pretty', kind: "functiondeclaration", path: './std/xml/item.pretty.html', attributes: ["scope", "safe", "const"]},
{name: 'std.xml.Item.toString', kind: "functiondeclaration", path: './std/xml/item.to_string.html', attributes: ["abstract", "override", "scope", "safe", "const"]},
{name: 'std.xml.CDataException', kind: "classdeclaration", path: './std/xml/c_data_exception.html', attributes: []},
{name: 'std.xml.check', kind: "functiondeclaration", path: './std/xml/check.html', attributes: ["pure", "safe"]},
{name: 'std.xml.CheckException', kind: "classdeclaration", path: './std/xml/check_exception.html', attributes: []},
{name: 'std.xml.CheckException.column', kind: "variabledeclaration", path: './std/xml/check_exception.column.html', attributes: []},
{name: 'std.xml.CheckException.err', kind: "variabledeclaration", path: './std/xml/check_exception.err.html', attributes: []},
{name: 'std.xml.CheckException.line', kind: "variabledeclaration", path: './std/xml/check_exception.line.html', attributes: []},
{name: 'std.xml.CheckException.msg', kind: "variabledeclaration", path: './std/xml/check_exception.msg.html', attributes: []},
{name: 'std.xml.Comment', kind: "classdeclaration", path: './std/xml/comment.html', attributes: []},
{name: 'std.xml.Comment.isEmptyXML', kind: "functiondeclaration", path: './std/xml/comment.is_empty_xml.html', attributes: ["scope", "override", "pure", "nothrow", "property", "nogc", "scope", "safe", "const"]},
{name: 'std.xml.Comment.opCmp', kind: "functiondeclaration", path: './std/xml/comment.op_cmp.html', attributes: ["override", "scope", "safe", "const"]},
{name: 'std.xml.Comment.opEquals', kind: "functiondeclaration", path: './std/xml/comment.op_equals.html', attributes: ["override", "safe", "const"]},
{name: 'std.xml.Comment.this', kind: "functiondeclaration", path: './std/xml/comment.this.html', attributes: ["pure", "safe"]},
{name: 'std.xml.Comment.toHash', kind: "functiondeclaration", path: './std/xml/comment.to_hash.html', attributes: ["override", "nothrow", "scope", "safe", "const"]},
{name: 'std.xml.Comment.toString', kind: "functiondeclaration", path: './std/xml/comment.to_string.html', attributes: ["override", "pure", "nothrow", "scope", "safe", "const"]},
{name: 'std.xml.CommentException', kind: "classdeclaration", path: './std/xml/comment_exception.html', attributes: []},
{name: 'std.xml.decode', kind: "functiondeclaration", path: './std/xml/decode.html', attributes: ["pure", "safe"]},
{name: 'std.xml.DecodeException', kind: "classdeclaration", path: './std/xml/decode_exception.html', attributes: []},
{name: 'std.xml.DecodeMode', kind: "enumdeclaration", path: './std/xml/decode_mode.html', attributes: []},
{name: 'std.xml.Document', kind: "classdeclaration", path: './std/xml/document.html', attributes: []},
{name: 'std.xml.Document.epilog', kind: "variabledeclaration", path: './std/xml/document.epilog.html', attributes: []},
{name: 'std.xml.Document.opCmp', kind: "functiondeclaration", path: './std/xml/document.op_cmp.html', attributes: ["override", "scope", "safe", "const"]},
{name: 'std.xml.Document.opEquals', kind: "functiondeclaration", path: './std/xml/document.op_equals.html', attributes: ["override", "safe", "const"]},
{name: 'std.xml.Document.prolog', kind: "variabledeclaration", path: './std/xml/document.prolog.html', attributes: []},
{name: 'std.xml.Document.this', kind: "functiondeclaration", path: './std/xml/document.this.html', attributes: []},
{name: 'std.xml.Document.toHash', kind: "functiondeclaration", path: './std/xml/document.to_hash.html', attributes: ["override", "nothrow", "scope", "trusted", "const"]},
{name: 'std.xml.Document.toString', kind: "functiondeclaration", path: './std/xml/document.to_string.html', attributes: ["override", "scope", "safe", "const"]},
{name: 'std.xml.Element.cdatas', kind: "variabledeclaration", path: './std/xml/element.cdatas.html', attributes: []},
{name: 'std.xml.Element.comments', kind: "variabledeclaration", path: './std/xml/element.comments.html', attributes: []},
{name: 'std.xml.Element.elements', kind: "variabledeclaration", path: './std/xml/element.elements.html', attributes: []},
{name: 'std.xml.Item.isEmptyXML', kind: "functiondeclaration", path: './std/xml/item.is_empty_xml.html', attributes: ["abstract", "pure", "nothrow", "property", "nogc", "scope", "safe", "const"]},
{name: 'std.xml.Element.items', kind: "variabledeclaration", path: './std/xml/element.items.html', attributes: []},
{name: 'std.xml.Element.opCmp', kind: "functiondeclaration", path: './std/xml/element.op_cmp.html', attributes: ["override", "safe", "const"]},
{name: 'std.xml.Element.opOpAssign', kind: "functiondeclaration", path: './std/xml/element.op_op_assign.html', attributes: ["pure", "safe"]},
{name: 'std.xml.Element.pis', kind: "variabledeclaration", path: './std/xml/element.pis.html', attributes: []},
{name: 'std.xml.Element.pretty', kind: "functiondeclaration", path: './std/xml/element.pretty.html', attributes: ["override", "scope", "safe", "const"]},
{name: 'std.xml.Element.tag', kind: "variabledeclaration", path: './std/xml/element.tag.html', attributes: []},
{name: 'std.xml.Element.text', kind: "functiondeclaration", path: './std/xml/element.text.html', attributes: ["const"]},
{name: 'std.xml.Element.texts', kind: "variabledeclaration", path: './std/xml/element.texts.html', attributes: []},
{name: 'std.xml.Element.toHash', kind: "functiondeclaration", path: './std/xml/element.to_hash.html', attributes: ["override", "nothrow", "scope", "safe", "const"]},
{name: 'std.xml.DocumentParser', kind: "classdeclaration", path: './std/xml/document_parser.html', attributes: []},
{name: 'std.xml.DocumentParser.this', kind: "functiondeclaration", path: './std/xml/document_parser.this.html', attributes: []},
{name: 'std.xml.ElementParser.onCData', kind: "functiondeclaration", path: './std/xml/element_parser.on_c_data.html', attributes: ["pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.xml.ElementParser.onComment', kind: "functiondeclaration", path: './std/xml/element_parser.on_comment.html', attributes: ["pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.xml.ElementParser.onEndTag', kind: "variabledeclaration", path: './std/xml/element_parser.on_end_tag.html', attributes: []},
{name: 'std.xml.ElementParser.onPI', kind: "functiondeclaration", path: './std/xml/element_parser.on_pi.html', attributes: ["pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.xml.ElementParser.onStartTag', kind: "variabledeclaration", path: './std/xml/element_parser.on_start_tag.html', attributes: []},
{name: 'std.xml.ElementParser.onText', kind: "functiondeclaration", path: './std/xml/element_parser.on_text.html', attributes: ["pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.xml.ElementParser.onTextRaw', kind: "functiondeclaration", path: './std/xml/element_parser.on_text_raw.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.xml.ElementParser.onXI', kind: "functiondeclaration", path: './std/xml/element_parser.on_xi.html', attributes: ["pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.xml.ElementParser.parse', kind: "functiondeclaration", path: './std/xml/element_parser.parse.html', attributes: []},
{name: 'std.xml.ElementParser.tag', kind: "functiondeclaration", path: './std/xml/element_parser.tag.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.xml.ElementParser.toString', kind: "functiondeclaration", path: './std/xml/element_parser.to_string.html', attributes: ["override", "pure", "nothrow", "nogc", "safe", "const"]},
{name: 'std.xml.Element', kind: "classdeclaration", path: './std/xml/element.html', attributes: []},
{name: 'std.xml.Element.opEquals', kind: "functiondeclaration", path: './std/xml/element.op_equals.html', attributes: ["override", "safe", "const"]},
{name: 'std.xml.Element.this', kind: "functiondeclaration", path: './std/xml/element.this.html', attributes: ["pure", "safe"]},
{name: 'std.xml.Element.toString', kind: "functiondeclaration", path: './std/xml/element.to_string.html', attributes: ["override", "scope", "safe", "const"]},
{name: 'std.xml.ElementParser', kind: "classdeclaration", path: './std/xml/element_parser.html', attributes: []},
{name: 'std.xml.encode', kind: "functiondeclaration", path: './std/xml/encode.html', attributes: []},
{name: 'std.xml.InvalidTypeException', kind: "classdeclaration", path: './std/xml/invalid_type_exception.html', attributes: []},
{name: 'std.xml.isBaseChar', kind: "functiondeclaration", path: './std/xml/is_base_char.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.xml.isChar', kind: "functiondeclaration", path: './std/xml/is_char.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.xml.isCombiningChar', kind: "functiondeclaration", path: './std/xml/is_combining_char.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.xml.isDigit', kind: "functiondeclaration", path: './std/xml/is_digit.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.xml.isExtender', kind: "functiondeclaration", path: './std/xml/is_extender.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.xml.isIdeographic', kind: "functiondeclaration", path: './std/xml/is_ideographic.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.xml.isLetter', kind: "functiondeclaration", path: './std/xml/is_letter.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.xml.isSpace', kind: "functiondeclaration", path: './std/xml/is_space.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.xml.Item', kind: "classdeclaration", path: './std/xml/item.html', attributes: []},
{name: 'std.xml.Item.opEquals', kind: "functiondeclaration", path: './std/xml/item.op_equals.html', attributes: ["abstract", "override", "safe", "const"]},
{name: 'std.xml.Item.toHash', kind: "functiondeclaration", path: './std/xml/item.to_hash.html', attributes: ["abstract", "override", "nothrow", "scope", "safe", "const"]},
{name: 'std.xml.PIException', kind: "classdeclaration", path: './std/xml/pi_exception.html', attributes: []},
{name: 'std.xml.ProcessingInstruction', kind: "classdeclaration", path: './std/xml/processing_instruction.html', attributes: []},
{name: 'std.xml.ProcessingInstruction.isEmptyXML', kind: "functiondeclaration", path: './std/xml/processing_instruction.is_empty_xml.html', attributes: ["override", "pure", "nothrow", "property", "nogc", "scope", "safe", "const"]},
{name: 'std.xml.ProcessingInstruction.opCmp', kind: "functiondeclaration", path: './std/xml/processing_instruction.op_cmp.html', attributes: ["override", "scope", "safe", "const"]},
{name: 'std.xml.ProcessingInstruction.opEquals', kind: "functiondeclaration", path: './std/xml/processing_instruction.op_equals.html', attributes: ["override", "safe", "const"]},
{name: 'std.xml.ProcessingInstruction.this', kind: "functiondeclaration", path: './std/xml/processing_instruction.this.html', attributes: ["pure", "safe"]},
{name: 'std.xml.ProcessingInstruction.toHash', kind: "functiondeclaration", path: './std/xml/processing_instruction.to_hash.html', attributes: ["override", "nothrow", "scope", "safe", "const"]},
{name: 'std.xml.ProcessingInstruction.toString', kind: "functiondeclaration", path: './std/xml/processing_instruction.to_string.html', attributes: ["override", "pure", "nothrow", "scope", "safe", "const"]},
{name: 'std.xml.Tag', kind: "classdeclaration", path: './std/xml/tag.html', attributes: []},
{name: 'std.xml.Tag.attr', kind: "variabledeclaration", path: './std/xml/tag.attr.html', attributes: []},
{name: 'std.xml.Tag.isEmpty', kind: "functiondeclaration", path: './std/xml/tag.is_empty.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.xml.Tag.isEnd', kind: "functiondeclaration", path: './std/xml/tag.is_end.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.xml.Tag.isStart', kind: "functiondeclaration", path: './std/xml/tag.is_start.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.xml.Tag.name', kind: "variabledeclaration", path: './std/xml/tag.name.html', attributes: []},
{name: 'std.xml.Tag.opCmp', kind: "functiondeclaration", path: './std/xml/tag.op_cmp.html', attributes: ["override", "const"]},
{name: 'std.xml.Tag.opEquals', kind: "functiondeclaration", path: './std/xml/tag.op_equals.html', attributes: ["override", "const"]},
{name: 'std.xml.Tag.this', kind: "functiondeclaration", path: './std/xml/tag.this.html', attributes: ["pure", "safe"]},
{name: 'std.xml.Tag.toHash', kind: "functiondeclaration", path: './std/xml/tag.to_hash.html', attributes: ["override", "nothrow", "safe", "const"]},
{name: 'std.xml.Tag.toString', kind: "functiondeclaration", path: './std/xml/tag.to_string.html', attributes: ["override", "safe", "const"]},
{name: 'std.xml.Tag.type', kind: "variabledeclaration", path: './std/xml/tag.type.html', attributes: []},
{name: 'std.xml.TagException', kind: "classdeclaration", path: './std/xml/tag_exception.html', attributes: []},
{name: 'std.xml.TagType', kind: "enumdeclaration", path: './std/xml/tag_type.html', attributes: []},
{name: 'std.xml.Text', kind: "classdeclaration", path: './std/xml/text.html', attributes: []},
{name: 'std.xml.Text.isEmptyXML', kind: "functiondeclaration", path: './std/xml/text.is_empty_xml.html', attributes: ["scope", "override", "pure", "nothrow", "property", "nogc", "scope", "safe", "const"]},
{name: 'std.xml.Text.opCmp', kind: "functiondeclaration", path: './std/xml/text.op_cmp.html', attributes: ["override", "scope", "safe", "const"]},
{name: 'std.xml.Text.opEquals', kind: "functiondeclaration", path: './std/xml/text.op_equals.html', attributes: ["override", "safe", "const"]},
{name: 'std.xml.Text.this', kind: "functiondeclaration", path: './std/xml/text.this.html', attributes: ["pure", "safe"]},
{name: 'std.xml.Text.toHash', kind: "functiondeclaration", path: './std/xml/text.to_hash.html', attributes: ["override", "nothrow", "scope", "safe", "const"]},
{name: 'std.xml.Text.toString', kind: "functiondeclaration", path: './std/xml/text.to_string.html', attributes: ["override", "pure", "nothrow", "nogc", "scope", "safe", "const"]},
{name: 'std.xml.TextException', kind: "classdeclaration", path: './std/xml/text_exception.html', attributes: []},
{name: 'std.xml.XIException', kind: "classdeclaration", path: './std/xml/xi_exception.html', attributes: []},
{name: 'std.xml.XMLException', kind: "classdeclaration", path: './std/xml/xml_exception.html', attributes: []},
{name: 'std.xml.XMLInstruction', kind: "classdeclaration", path: './std/xml/xml_instruction.html', attributes: []},
{name: 'std.xml.XMLInstruction.isEmptyXML', kind: "functiondeclaration", path: './std/xml/xml_instruction.is_empty_xml.html', attributes: ["scope", "override", "pure", "nothrow", "property", "nogc", "scope", "safe", "const"]},
{name: 'std.xml.XMLInstruction.opCmp', kind: "functiondeclaration", path: './std/xml/xml_instruction.op_cmp.html', attributes: ["override", "scope", "safe", "const"]},
{name: 'std.xml.XMLInstruction.opEquals', kind: "functiondeclaration", path: './std/xml/xml_instruction.op_equals.html', attributes: ["override", "safe", "const"]},
{name: 'std.xml.XMLInstruction.this', kind: "functiondeclaration", path: './std/xml/xml_instruction.this.html', attributes: ["pure", "safe"]},
{name: 'std.xml.XMLInstruction.toHash', kind: "functiondeclaration", path: './std/xml/xml_instruction.to_hash.html', attributes: ["override", "nothrow", "scope", "safe", "const"]},
{name: 'std.xml.XMLInstruction.toString', kind: "functiondeclaration", path: './std/xml/xml_instruction.to_string.html', attributes: ["override", "pure", "nothrow", "scope", "safe", "const"]},
{name: 'std.zip', kind: "module", path: './std/zip.html', attributes: []},
{name: 'std.zip.ArchiveMember', kind: "classdeclaration", path: './std/zip/archive_member.html', attributes: []},
{name: 'std.zip.ArchiveMember.comment', kind: "variabledeclaration", path: './std/zip/archive_member.comment.html', attributes: []},
{name: 'std.zip.ArchiveMember.compressedData', kind: "functiondeclaration", path: './std/zip/archive_member.compressed_data.html', attributes: ["pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.zip.ArchiveMember.compressedSize', kind: "functiondeclaration", path: './std/zip/archive_member.compressed_size.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.zip.ArchiveMember.compressionMethod', kind: "functiondeclaration", path: './std/zip/archive_member.compression_method.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.zip.ArchiveMember.crc32', kind: "functiondeclaration", path: './std/zip/archive_member.crc32.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.zip.ArchiveMember.diskNumber', kind: "functiondeclaration", path: './std/zip/archive_member.disk_number.html', attributes: ["deprecated", "pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.zip.ArchiveMember.expandedData', kind: "functiondeclaration", path: './std/zip/archive_member.expanded_data.html', attributes: ["pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.zip.ArchiveMember.expandedSize', kind: "functiondeclaration", path: './std/zip/archive_member.expanded_size.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.zip.ArchiveMember.extra', kind: "variabledeclaration", path: './std/zip/archive_member.extra.html', attributes: []},
{name: 'std.zip.ArchiveMember.extractVersion', kind: "functiondeclaration", path: './std/zip/archive_member.extract_version.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.zip.ArchiveMember.fileAttributes', kind: "functiondeclaration", path: './std/zip/archive_member.file_attributes.html', attributes: ["property", "safe"]},
{name: 'std.zip.ArchiveMember.flags', kind: "variabledeclaration", path: './std/zip/archive_member.flags.html', attributes: []},
{name: 'std.zip.ArchiveMember.index', kind: "functiondeclaration", path: './std/zip/archive_member.index.html', attributes: ["pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.zip.ArchiveMember.internalAttributes', kind: "variabledeclaration", path: './std/zip/archive_member.internal_attributes.html', attributes: []},
{name: 'std.zip.ArchiveMember.name', kind: "variabledeclaration", path: './std/zip/archive_member.name.html', attributes: []},
{name: 'std.zip.ArchiveMember.time', kind: "functiondeclaration", path: './std/zip/archive_member.time.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.zip.CompressionMethod', kind: "enumdeclaration", path: './std/zip/compression_method.html', attributes: []},
{name: 'std.zip.CompressionMethod.deflate', kind: "enummemberdeclaration", path: './std/zip/compression_method.html#deflate', attributes: []},
{name: 'std.zip.CompressionMethod.none', kind: "enummemberdeclaration", path: './std/zip/compression_method.html#none', attributes: []},
{name: 'std.zip.ZipArchive', kind: "classdeclaration", path: './std/zip/zip_archive.html', attributes: []},
{name: 'std.zip.ZipArchive.addMember', kind: "functiondeclaration", path: './std/zip/zip_archive.add_member.html', attributes: ["safe"]},
{name: 'std.zip.ZipArchive.build', kind: "functiondeclaration", path: './std/zip/zip_archive.build.html', attributes: ["pure", "safe"]},
{name: 'std.zip.ZipArchive.comment', kind: "variabledeclaration", path: './std/zip/zip_archive.comment.html', attributes: []},
{name: 'std.zip.ZipArchive.data', kind: "functiondeclaration", path: './std/zip/zip_archive.data.html', attributes: ["pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.zip.ZipArchive.deleteMember', kind: "functiondeclaration", path: './std/zip/zip_archive.delete_member.html', attributes: ["safe"]},
{name: 'std.zip.ZipArchive.directory', kind: "functiondeclaration", path: './std/zip/zip_archive.directory.html', attributes: ["pure", "nothrow", "property", "nogc", "safe"]},
{name: 'std.zip.ZipArchive.diskNumber', kind: "functiondeclaration", path: './std/zip/zip_archive.disk_number.html', attributes: ["deprecated", "pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.zip.ZipArchive.diskStartDir', kind: "functiondeclaration", path: './std/zip/zip_archive.disk_start_dir.html', attributes: ["deprecated", "pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.zip.ZipArchive.expand', kind: "functiondeclaration", path: './std/zip/zip_archive.expand.html', attributes: []},
{name: 'std.zip.ZipArchive.isZip64', kind: "functiondeclaration", path: './std/zip/zip_archive.is_zip64.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.zip.ZipArchive.numEntries', kind: "functiondeclaration", path: './std/zip/zip_archive.num_entries.html', attributes: ["deprecated", "pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.zip.ZipArchive.this', kind: "functiondeclaration", path: './std/zip/zip_archive.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'std.zip.ZipArchive.totalEntries', kind: "functiondeclaration", path: './std/zip/zip_archive.total_entries.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'std.zip.ZipException', kind: "classdeclaration", path: './std/zip/zip_exception.html', attributes: []},
{name: 'std.zlib', kind: "module", path: './std/zlib.html', attributes: []},
{name: 'std.zlib.adler32', kind: "functiondeclaration", path: './std/zlib/adler32.html', attributes: []},
{name: 'std.zlib.compress', kind: "functiondeclaration", path: './std/zlib/compress.html', attributes: []},
{name: 'std.zlib.Compress', kind: "classdeclaration", path: './std/zlib/compress.html', attributes: []},
{name: 'std.zlib.Compress.compress', kind: "functiondeclaration", path: './std/zlib/compress.compress.html', attributes: []},
{name: 'std.zlib.Compress.flush', kind: "functiondeclaration", path: './std/zlib/compress.flush.html', attributes: []},
{name: 'std.zlib.Compress.this', kind: "functiondeclaration", path: './std/zlib/compress.this.html', attributes: []},
{name: 'std.zlib.crc32', kind: "functiondeclaration", path: './std/zlib/crc32.html', attributes: []},
{name: 'std.zlib.HeaderFormat', kind: "enumdeclaration", path: './std/zlib/header_format.html', attributes: []},
{name: 'std.zlib.HeaderFormat.deflate', kind: "enummemberdeclaration", path: './std/zlib/header_format.html#deflate', attributes: []},
{name: 'std.zlib.HeaderFormat.determineFromData', kind: "enummemberdeclaration", path: './std/zlib/header_format.html#determineFromData', attributes: []},
{name: 'std.zlib.HeaderFormat.gzip', kind: "enummemberdeclaration", path: './std/zlib/header_format.html#gzip', attributes: []},
{name: 'std.zlib.uncompress', kind: "functiondeclaration", path: './std/zlib/uncompress.html', attributes: []},
{name: 'std.zlib.UnCompress', kind: "classdeclaration", path: './std/zlib/un_compress.html', attributes: []},
{name: 'std.zlib.UnCompress.empty', kind: "functiondeclaration", path: './std/zlib/un_compress.empty.html', attributes: ["property", "const"]},
{name: 'std.zlib.UnCompress.flush', kind: "functiondeclaration", path: './std/zlib/un_compress.flush.html', attributes: []},
{name: 'std.zlib.UnCompress.this', kind: "functiondeclaration", path: './std/zlib/un_compress.this.html', attributes: []},
{name: 'std.zlib.UnCompress.uncompress', kind: "functiondeclaration", path: './std/zlib/un_compress.uncompress.html', attributes: []},
{name: 'std.zlib.ZlibException', kind: "classdeclaration", path: './std/zlib/zlib_exception.html', attributes: []},
{name: 'core.gc.config', kind: "module", path: './core/gc/config.html', attributes: []},
{name: 'core.gc.gcinterface', kind: "module", path: './core/gc/gcinterface.html', attributes: []},
{name: 'core.gc.registry', kind: "module", path: './core/gc/registry.html', attributes: []},
{name: 'core.gc.registry.createGCInstance', kind: "functiondeclaration", path: './core/gc/registry/create_gc_instance.html', attributes: []},
{name: 'core.gc.registry.GCFactory', kind: "aliasdeclaration", path: './core/gc/registry/gc_factory.html', attributes: []},
{name: 'core.gc.registry.registerGCFactory', kind: "functiondeclaration", path: './core/gc/registry/register_gc_factory.html', attributes: ["nothrow", "nogc"]},
{name: 'core.stdc.assert_', kind: "module", path: './core/stdc/assert_.html', attributes: []},
{name: 'core.stdc.complex', kind: "module", path: './core/stdc/complex.html', attributes: []},
{name: 'core.stdc.complex.cabs', kind: "functiondeclaration", path: './core/stdc/complex/cabs.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cabsf', kind: "functiondeclaration", path: './core/stdc/complex/cabsf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cabsl', kind: "functiondeclaration", path: './core/stdc/complex/cabsl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cacos', kind: "functiondeclaration", path: './core/stdc/complex/cacos.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cacosf', kind: "functiondeclaration", path: './core/stdc/complex/cacosf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cacosh', kind: "functiondeclaration", path: './core/stdc/complex/cacosh.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cacoshf', kind: "functiondeclaration", path: './core/stdc/complex/cacoshf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cacoshl', kind: "functiondeclaration", path: './core/stdc/complex/cacoshl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cacosl', kind: "functiondeclaration", path: './core/stdc/complex/cacosl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.carg', kind: "functiondeclaration", path: './core/stdc/complex/carg.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cargf', kind: "functiondeclaration", path: './core/stdc/complex/cargf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cargl', kind: "functiondeclaration", path: './core/stdc/complex/cargl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.casin', kind: "functiondeclaration", path: './core/stdc/complex/casin.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.casinf', kind: "functiondeclaration", path: './core/stdc/complex/casinf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.casinh', kind: "functiondeclaration", path: './core/stdc/complex/casinh.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.casinhf', kind: "functiondeclaration", path: './core/stdc/complex/casinhf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.casinhl', kind: "functiondeclaration", path: './core/stdc/complex/casinhl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.casinl', kind: "functiondeclaration", path: './core/stdc/complex/casinl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.catan', kind: "functiondeclaration", path: './core/stdc/complex/catan.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.catanf', kind: "functiondeclaration", path: './core/stdc/complex/catanf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.catanh', kind: "functiondeclaration", path: './core/stdc/complex/catanh.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.catanhf', kind: "functiondeclaration", path: './core/stdc/complex/catanhf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.catanhl', kind: "functiondeclaration", path: './core/stdc/complex/catanhl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.catanl', kind: "functiondeclaration", path: './core/stdc/complex/catanl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.ccos', kind: "functiondeclaration", path: './core/stdc/complex/ccos.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.ccosf', kind: "functiondeclaration", path: './core/stdc/complex/ccosf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.ccosh', kind: "functiondeclaration", path: './core/stdc/complex/ccosh.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.ccoshf', kind: "functiondeclaration", path: './core/stdc/complex/ccoshf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.ccoshl', kind: "functiondeclaration", path: './core/stdc/complex/ccoshl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.ccosl', kind: "functiondeclaration", path: './core/stdc/complex/ccosl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cexp', kind: "functiondeclaration", path: './core/stdc/complex/cexp.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cexpf', kind: "functiondeclaration", path: './core/stdc/complex/cexpf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cexpl', kind: "functiondeclaration", path: './core/stdc/complex/cexpl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cimag', kind: "functiondeclaration", path: './core/stdc/complex/cimag.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cimagf', kind: "functiondeclaration", path: './core/stdc/complex/cimagf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cimagl', kind: "functiondeclaration", path: './core/stdc/complex/cimagl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.clog', kind: "functiondeclaration", path: './core/stdc/complex/clog.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.clogf', kind: "functiondeclaration", path: './core/stdc/complex/clogf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.clogl', kind: "functiondeclaration", path: './core/stdc/complex/clogl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.complex', kind: "aliasdeclaration", path: './core/stdc/complex/complex.html', attributes: []},
{name: 'core.stdc.complex.conj', kind: "functiondeclaration", path: './core/stdc/complex/conj.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.conjf', kind: "functiondeclaration", path: './core/stdc/complex/conjf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.conjl', kind: "functiondeclaration", path: './core/stdc/complex/conjl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cpow', kind: "functiondeclaration", path: './core/stdc/complex/cpow.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cpowf', kind: "functiondeclaration", path: './core/stdc/complex/cpowf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cpowl', kind: "functiondeclaration", path: './core/stdc/complex/cpowl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cproj', kind: "functiondeclaration", path: './core/stdc/complex/cproj.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cprojf', kind: "functiondeclaration", path: './core/stdc/complex/cprojf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.cprojl', kind: "functiondeclaration", path: './core/stdc/complex/cprojl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.crealf', kind: "functiondeclaration", path: './core/stdc/complex/crealf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.creall', kind: "functiondeclaration", path: './core/stdc/complex/creall.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.csin', kind: "functiondeclaration", path: './core/stdc/complex/csin.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.csinf', kind: "functiondeclaration", path: './core/stdc/complex/csinf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.csinh', kind: "functiondeclaration", path: './core/stdc/complex/csinh.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.csinhf', kind: "functiondeclaration", path: './core/stdc/complex/csinhf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.csinhl', kind: "functiondeclaration", path: './core/stdc/complex/csinhl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.csinl', kind: "functiondeclaration", path: './core/stdc/complex/csinl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.csqrt', kind: "functiondeclaration", path: './core/stdc/complex/csqrt.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.csqrtf', kind: "functiondeclaration", path: './core/stdc/complex/csqrtf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.csqrtl', kind: "functiondeclaration", path: './core/stdc/complex/csqrtl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.ctan', kind: "functiondeclaration", path: './core/stdc/complex/ctan.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.ctanf', kind: "functiondeclaration", path: './core/stdc/complex/ctanf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.ctanh', kind: "functiondeclaration", path: './core/stdc/complex/ctanh.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.ctanhf', kind: "functiondeclaration", path: './core/stdc/complex/ctanhf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.ctanhl', kind: "functiondeclaration", path: './core/stdc/complex/ctanhl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.ctanl', kind: "functiondeclaration", path: './core/stdc/complex/ctanl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.complex.imaginary', kind: "aliasdeclaration", path: './core/stdc/complex/imaginary.html', attributes: []},
{name: 'core.stdc.ctype', kind: "module", path: './core/stdc/ctype.html', attributes: []},
{name: 'core.stdc.ctype.isalnum', kind: "functiondeclaration", path: './core/stdc/ctype/isalnum.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.ctype.isalpha', kind: "functiondeclaration", path: './core/stdc/ctype/isalpha.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.ctype.isblank', kind: "functiondeclaration", path: './core/stdc/ctype/isblank.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.ctype.iscntrl', kind: "functiondeclaration", path: './core/stdc/ctype/iscntrl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.ctype.isdigit', kind: "functiondeclaration", path: './core/stdc/ctype/isdigit.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.ctype.isgraph', kind: "functiondeclaration", path: './core/stdc/ctype/isgraph.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.ctype.islower', kind: "functiondeclaration", path: './core/stdc/ctype/islower.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.ctype.isprint', kind: "functiondeclaration", path: './core/stdc/ctype/isprint.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.ctype.ispunct', kind: "functiondeclaration", path: './core/stdc/ctype/ispunct.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.ctype.isspace', kind: "functiondeclaration", path: './core/stdc/ctype/isspace.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.ctype.isupper', kind: "functiondeclaration", path: './core/stdc/ctype/isupper.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.ctype.isxdigit', kind: "functiondeclaration", path: './core/stdc/ctype/isxdigit.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.ctype.tolower', kind: "functiondeclaration", path: './core/stdc/ctype/tolower.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.ctype.toupper', kind: "functiondeclaration", path: './core/stdc/ctype/toupper.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.errno', kind: "module", path: './core/stdc/errno.html', attributes: []},
{name: 'core.stdc.errno.E2BIG', kind: "enummemberdeclaration", path: './core/stdc/errno/e2big.html', attributes: []},
{name: 'core.stdc.errno.EACCES', kind: "enummemberdeclaration", path: './core/stdc/errno/eacces.html', attributes: []},
{name: 'core.stdc.errno.EADDRINUSE', kind: "enummemberdeclaration", path: './core/stdc/errno/eaddrinuse.html', attributes: []},
{name: 'core.stdc.errno.EADDRNOTAVAIL', kind: "enummemberdeclaration", path: './core/stdc/errno/eaddrnotavail.html', attributes: []},
{name: 'core.stdc.errno.EADV', kind: "enummemberdeclaration", path: './core/stdc/errno/eadv.html', attributes: []},
{name: 'core.stdc.errno.EAFNOSUPPORT', kind: "enummemberdeclaration", path: './core/stdc/errno/eafnosupport.html', attributes: []},
{name: 'core.stdc.errno.EAGAIN', kind: "enummemberdeclaration", path: './core/stdc/errno/eagain.html', attributes: []},
{name: 'core.stdc.errno.EALREADY', kind: "enummemberdeclaration", path: './core/stdc/errno/ealready.html', attributes: []},
{name: 'core.stdc.errno.EBADE', kind: "enummemberdeclaration", path: './core/stdc/errno/ebade.html', attributes: []},
{name: 'core.stdc.errno.EBADF', kind: "enummemberdeclaration", path: './core/stdc/errno/ebadf.html', attributes: []},
{name: 'core.stdc.errno.EBADFD', kind: "enummemberdeclaration", path: './core/stdc/errno/ebadfd.html', attributes: []},
{name: 'core.stdc.errno.EBADMSG', kind: "enummemberdeclaration", path: './core/stdc/errno/ebadmsg.html', attributes: []},
{name: 'core.stdc.errno.EBADR', kind: "enummemberdeclaration", path: './core/stdc/errno/ebadr.html', attributes: []},
{name: 'core.stdc.errno.EBADRQC', kind: "enummemberdeclaration", path: './core/stdc/errno/ebadrqc.html', attributes: []},
{name: 'core.stdc.errno.EBADSLT', kind: "enummemberdeclaration", path: './core/stdc/errno/ebadslt.html', attributes: []},
{name: 'core.stdc.errno.EBFONT', kind: "enummemberdeclaration", path: './core/stdc/errno/ebfont.html', attributes: []},
{name: 'core.stdc.errno.EBUSY', kind: "enummemberdeclaration", path: './core/stdc/errno/ebusy.html', attributes: []},
{name: 'core.stdc.errno.ECANCELED', kind: "enummemberdeclaration", path: './core/stdc/errno/ecanceled.html', attributes: []},
{name: 'core.stdc.errno.ECHILD', kind: "enummemberdeclaration", path: './core/stdc/errno/echild.html', attributes: []},
{name: 'core.stdc.errno.ECHRNG', kind: "enummemberdeclaration", path: './core/stdc/errno/echrng.html', attributes: []},
{name: 'core.stdc.errno.ECOMM', kind: "enummemberdeclaration", path: './core/stdc/errno/ecomm.html', attributes: []},
{name: 'core.stdc.errno.ECONNABORTED', kind: "enummemberdeclaration", path: './core/stdc/errno/econnaborted.html', attributes: []},
{name: 'core.stdc.errno.ECONNREFUSED', kind: "enummemberdeclaration", path: './core/stdc/errno/econnrefused.html', attributes: []},
{name: 'core.stdc.errno.ECONNRESET', kind: "enummemberdeclaration", path: './core/stdc/errno/econnreset.html', attributes: []},
{name: 'core.stdc.errno.EDEADLK', kind: "enummemberdeclaration", path: './core/stdc/errno/edeadlk.html', attributes: []},
{name: 'core.stdc.errno.EDEADLOCK', kind: "enummemberdeclaration", path: './core/stdc/errno/edeadlock.html', attributes: []},
{name: 'core.stdc.errno.EDESTADDRREQ', kind: "enummemberdeclaration", path: './core/stdc/errno/edestaddrreq.html', attributes: []},
{name: 'core.stdc.errno.EDOM', kind: "enummemberdeclaration", path: './core/stdc/errno/edom.html', attributes: []},
{name: 'core.stdc.errno.EDOTDOT', kind: "enummemberdeclaration", path: './core/stdc/errno/edotdot.html', attributes: []},
{name: 'core.stdc.errno.EDQUOT', kind: "enummemberdeclaration", path: './core/stdc/errno/edquot.html', attributes: []},
{name: 'core.stdc.errno.EEXIST', kind: "enummemberdeclaration", path: './core/stdc/errno/eexist.html', attributes: []},
{name: 'core.stdc.errno.EFAULT', kind: "enummemberdeclaration", path: './core/stdc/errno/efault.html', attributes: []},
{name: 'core.stdc.errno.EFBIG', kind: "enummemberdeclaration", path: './core/stdc/errno/efbig.html', attributes: []},
{name: 'core.stdc.errno.EHOSTDOWN', kind: "enummemberdeclaration", path: './core/stdc/errno/ehostdown.html', attributes: []},
{name: 'core.stdc.errno.EHOSTUNREACH', kind: "enummemberdeclaration", path: './core/stdc/errno/ehostunreach.html', attributes: []},
{name: 'core.stdc.errno.EHWPOISON', kind: "enummemberdeclaration", path: './core/stdc/errno/ehwpoison.html', attributes: []},
{name: 'core.stdc.errno.EIDRM', kind: "enummemberdeclaration", path: './core/stdc/errno/eidrm.html', attributes: []},
{name: 'core.stdc.errno.EILSEQ', kind: "enummemberdeclaration", path: './core/stdc/errno/eilseq.html', attributes: []},
{name: 'core.stdc.errno.EINPROGRESS', kind: "enummemberdeclaration", path: './core/stdc/errno/einprogress.html', attributes: []},
{name: 'core.stdc.errno.EINTR', kind: "enummemberdeclaration", path: './core/stdc/errno/eintr.html', attributes: []},
{name: 'core.stdc.errno.EINVAL', kind: "enummemberdeclaration", path: './core/stdc/errno/einval.html', attributes: []},
{name: 'core.stdc.errno.EIO', kind: "enummemberdeclaration", path: './core/stdc/errno/eio.html', attributes: []},
{name: 'core.stdc.errno.EISCONN', kind: "enummemberdeclaration", path: './core/stdc/errno/eisconn.html', attributes: []},
{name: 'core.stdc.errno.EISDIR', kind: "enummemberdeclaration", path: './core/stdc/errno/eisdir.html', attributes: []},
{name: 'core.stdc.errno.EISNAM', kind: "enummemberdeclaration", path: './core/stdc/errno/eisnam.html', attributes: []},
{name: 'core.stdc.errno.EKEYEXPIRED', kind: "enummemberdeclaration", path: './core/stdc/errno/ekeyexpired.html', attributes: []},
{name: 'core.stdc.errno.EKEYREJECTED', kind: "enummemberdeclaration", path: './core/stdc/errno/ekeyrejected.html', attributes: []},
{name: 'core.stdc.errno.EKEYREVOKED', kind: "enummemberdeclaration", path: './core/stdc/errno/ekeyrevoked.html', attributes: []},
{name: 'core.stdc.errno.EL2HLT', kind: "enummemberdeclaration", path: './core/stdc/errno/e_l2hlt.html', attributes: []},
{name: 'core.stdc.errno.EL2NSYNC', kind: "enummemberdeclaration", path: './core/stdc/errno/e_l2nsync.html', attributes: []},
{name: 'core.stdc.errno.EL3HLT', kind: "enummemberdeclaration", path: './core/stdc/errno/e_l3hlt.html', attributes: []},
{name: 'core.stdc.errno.EL3RST', kind: "enummemberdeclaration", path: './core/stdc/errno/e_l3rst.html', attributes: []},
{name: 'core.stdc.errno.ELIBACC', kind: "enummemberdeclaration", path: './core/stdc/errno/elibacc.html', attributes: []},
{name: 'core.stdc.errno.ELIBBAD', kind: "enummemberdeclaration", path: './core/stdc/errno/elibbad.html', attributes: []},
{name: 'core.stdc.errno.ELIBEXEC', kind: "enummemberdeclaration", path: './core/stdc/errno/elibexec.html', attributes: []},
{name: 'core.stdc.errno.ELIBMAX', kind: "enummemberdeclaration", path: './core/stdc/errno/elibmax.html', attributes: []},
{name: 'core.stdc.errno.ELIBSCN', kind: "enummemberdeclaration", path: './core/stdc/errno/elibscn.html', attributes: []},
{name: 'core.stdc.errno.ELNRNG', kind: "enummemberdeclaration", path: './core/stdc/errno/elnrng.html', attributes: []},
{name: 'core.stdc.errno.ELOOP', kind: "enummemberdeclaration", path: './core/stdc/errno/eloop.html', attributes: []},
{name: 'core.stdc.errno.EMEDIUMTYPE', kind: "enummemberdeclaration", path: './core/stdc/errno/emediumtype.html', attributes: []},
{name: 'core.stdc.errno.EMFILE', kind: "enummemberdeclaration", path: './core/stdc/errno/emfile.html', attributes: []},
{name: 'core.stdc.errno.EMLINK', kind: "enummemberdeclaration", path: './core/stdc/errno/emlink.html', attributes: []},
{name: 'core.stdc.errno.EMSGSIZE', kind: "enummemberdeclaration", path: './core/stdc/errno/emsgsize.html', attributes: []},
{name: 'core.stdc.errno.EMULTIHOP', kind: "enummemberdeclaration", path: './core/stdc/errno/emultihop.html', attributes: []},
{name: 'core.stdc.errno.ENAMETOOLONG', kind: "enummemberdeclaration", path: './core/stdc/errno/enametoolong.html', attributes: []},
{name: 'core.stdc.errno.ENAVAIL', kind: "enummemberdeclaration", path: './core/stdc/errno/enavail.html', attributes: []},
{name: 'core.stdc.errno.ENETDOWN', kind: "enummemberdeclaration", path: './core/stdc/errno/enetdown.html', attributes: []},
{name: 'core.stdc.errno.ENETRESET', kind: "enummemberdeclaration", path: './core/stdc/errno/enetreset.html', attributes: []},
{name: 'core.stdc.errno.ENETUNREACH', kind: "enummemberdeclaration", path: './core/stdc/errno/enetunreach.html', attributes: []},
{name: 'core.stdc.errno.ENFILE', kind: "enummemberdeclaration", path: './core/stdc/errno/enfile.html', attributes: []},
{name: 'core.stdc.errno.ENOANO', kind: "enummemberdeclaration", path: './core/stdc/errno/enoano.html', attributes: []},
{name: 'core.stdc.errno.ENOBUFS', kind: "enummemberdeclaration", path: './core/stdc/errno/enobufs.html', attributes: []},
{name: 'core.stdc.errno.ENOCSI', kind: "enummemberdeclaration", path: './core/stdc/errno/enocsi.html', attributes: []},
{name: 'core.stdc.errno.ENODATA', kind: "enummemberdeclaration", path: './core/stdc/errno/enodata.html', attributes: []},
{name: 'core.stdc.errno.ENODEV', kind: "enummemberdeclaration", path: './core/stdc/errno/enodev.html', attributes: []},
{name: 'core.stdc.errno.ENOENT', kind: "enummemberdeclaration", path: './core/stdc/errno/enoent.html', attributes: []},
{name: 'core.stdc.errno.ENOEXEC', kind: "enummemberdeclaration", path: './core/stdc/errno/enoexec.html', attributes: []},
{name: 'core.stdc.errno.ENOKEY', kind: "enummemberdeclaration", path: './core/stdc/errno/enokey.html', attributes: []},
{name: 'core.stdc.errno.ENOLCK', kind: "enummemberdeclaration", path: './core/stdc/errno/enolck.html', attributes: []},
{name: 'core.stdc.errno.ENOLINK', kind: "enummemberdeclaration", path: './core/stdc/errno/enolink.html', attributes: []},
{name: 'core.stdc.errno.ENOMEDIUM', kind: "enummemberdeclaration", path: './core/stdc/errno/enomedium.html', attributes: []},
{name: 'core.stdc.errno.ENOMEM', kind: "enummemberdeclaration", path: './core/stdc/errno/enomem.html', attributes: []},
{name: 'core.stdc.errno.ENOMSG', kind: "enummemberdeclaration", path: './core/stdc/errno/enomsg.html', attributes: []},
{name: 'core.stdc.errno.ENONET', kind: "enummemberdeclaration", path: './core/stdc/errno/enonet.html', attributes: []},
{name: 'core.stdc.errno.ENOPKG', kind: "enummemberdeclaration", path: './core/stdc/errno/enopkg.html', attributes: []},
{name: 'core.stdc.errno.ENOPROTOOPT', kind: "enummemberdeclaration", path: './core/stdc/errno/enoprotoopt.html', attributes: []},
{name: 'core.stdc.errno.ENOSPC', kind: "enummemberdeclaration", path: './core/stdc/errno/enospc.html', attributes: []},
{name: 'core.stdc.errno.ENOSR', kind: "enummemberdeclaration", path: './core/stdc/errno/enosr.html', attributes: []},
{name: 'core.stdc.errno.ENOSTR', kind: "enummemberdeclaration", path: './core/stdc/errno/enostr.html', attributes: []},
{name: 'core.stdc.errno.ENOSYS', kind: "enummemberdeclaration", path: './core/stdc/errno/enosys.html', attributes: []},
{name: 'core.stdc.errno.ENOTBLK', kind: "enummemberdeclaration", path: './core/stdc/errno/enotblk.html', attributes: []},
{name: 'core.stdc.errno.ENOTCONN', kind: "enummemberdeclaration", path: './core/stdc/errno/enotconn.html', attributes: []},
{name: 'core.stdc.errno.ENOTDIR', kind: "enummemberdeclaration", path: './core/stdc/errno/enotdir.html', attributes: []},
{name: 'core.stdc.errno.ENOTEMPTY', kind: "enummemberdeclaration", path: './core/stdc/errno/enotempty.html', attributes: []},
{name: 'core.stdc.errno.ENOTNAM', kind: "enummemberdeclaration", path: './core/stdc/errno/enotnam.html', attributes: []},
{name: 'core.stdc.errno.ENOTRECOVERABLE', kind: "enummemberdeclaration", path: './core/stdc/errno/enotrecoverable.html', attributes: []},
{name: 'core.stdc.errno.ENOTSOCK', kind: "enummemberdeclaration", path: './core/stdc/errno/enotsock.html', attributes: []},
{name: 'core.stdc.errno.ENOTSUP', kind: "enummemberdeclaration", path: './core/stdc/errno/enotsup.html', attributes: []},
{name: 'core.stdc.errno.ENOTTY', kind: "enummemberdeclaration", path: './core/stdc/errno/enotty.html', attributes: []},
{name: 'core.stdc.errno.ENOTUNIQ', kind: "enummemberdeclaration", path: './core/stdc/errno/enotuniq.html', attributes: []},
{name: 'core.stdc.errno.ENXIO', kind: "enummemberdeclaration", path: './core/stdc/errno/enxio.html', attributes: []},
{name: 'core.stdc.errno.EOPNOTSUPP', kind: "enummemberdeclaration", path: './core/stdc/errno/eopnotsupp.html', attributes: []},
{name: 'core.stdc.errno.EOVERFLOW', kind: "enummemberdeclaration", path: './core/stdc/errno/eoverflow.html', attributes: []},
{name: 'core.stdc.errno.EOWNERDEAD', kind: "enummemberdeclaration", path: './core/stdc/errno/eownerdead.html', attributes: []},
{name: 'core.stdc.errno.EPERM', kind: "enummemberdeclaration", path: './core/stdc/errno/eperm.html', attributes: []},
{name: 'core.stdc.errno.EPFNOSUPPORT', kind: "enummemberdeclaration", path: './core/stdc/errno/epfnosupport.html', attributes: []},
{name: 'core.stdc.errno.EPIPE', kind: "enummemberdeclaration", path: './core/stdc/errno/epipe.html', attributes: []},
{name: 'core.stdc.errno.EPROTO', kind: "enummemberdeclaration", path: './core/stdc/errno/eproto.html', attributes: []},
{name: 'core.stdc.errno.EPROTONOSUPPORT', kind: "enummemberdeclaration", path: './core/stdc/errno/eprotonosupport.html', attributes: []},
{name: 'core.stdc.errno.EPROTOTYPE', kind: "enummemberdeclaration", path: './core/stdc/errno/eprototype.html', attributes: []},
{name: 'core.stdc.errno.ERANGE', kind: "enummemberdeclaration", path: './core/stdc/errno/erange.html', attributes: []},
{name: 'core.stdc.errno.EREMCHG', kind: "enummemberdeclaration", path: './core/stdc/errno/eremchg.html', attributes: []},
{name: 'core.stdc.errno.EREMOTE', kind: "enummemberdeclaration", path: './core/stdc/errno/eremote.html', attributes: []},
{name: 'core.stdc.errno.EREMOTEIO', kind: "enummemberdeclaration", path: './core/stdc/errno/eremoteio.html', attributes: []},
{name: 'core.stdc.errno.ERESTART', kind: "enummemberdeclaration", path: './core/stdc/errno/erestart.html', attributes: []},
{name: 'core.stdc.errno.ERFKILL', kind: "enummemberdeclaration", path: './core/stdc/errno/erfkill.html', attributes: []},
{name: 'core.stdc.errno.EROFS', kind: "enummemberdeclaration", path: './core/stdc/errno/erofs.html', attributes: []},
{name: 'core.stdc.errno.ESHUTDOWN', kind: "enummemberdeclaration", path: './core/stdc/errno/eshutdown.html', attributes: []},
{name: 'core.stdc.errno.ESOCKTNOSUPPORT', kind: "enummemberdeclaration", path: './core/stdc/errno/esocktnosupport.html', attributes: []},
{name: 'core.stdc.errno.ESPIPE', kind: "enummemberdeclaration", path: './core/stdc/errno/espipe.html', attributes: []},
{name: 'core.stdc.errno.ESRCH', kind: "enummemberdeclaration", path: './core/stdc/errno/esrch.html', attributes: []},
{name: 'core.stdc.errno.ESRMNT', kind: "enummemberdeclaration", path: './core/stdc/errno/esrmnt.html', attributes: []},
{name: 'core.stdc.errno.ESTALE', kind: "enummemberdeclaration", path: './core/stdc/errno/estale.html', attributes: []},
{name: 'core.stdc.errno.ESTRPIPE', kind: "enummemberdeclaration", path: './core/stdc/errno/estrpipe.html', attributes: []},
{name: 'core.stdc.errno.ETIME', kind: "enummemberdeclaration", path: './core/stdc/errno/etime.html', attributes: []},
{name: 'core.stdc.errno.ETIMEDOUT', kind: "enummemberdeclaration", path: './core/stdc/errno/etimedout.html', attributes: []},
{name: 'core.stdc.errno.ETOOMANYREFS', kind: "enummemberdeclaration", path: './core/stdc/errno/etoomanyrefs.html', attributes: []},
{name: 'core.stdc.errno.ETXTBSY', kind: "enummemberdeclaration", path: './core/stdc/errno/etxtbsy.html', attributes: []},
{name: 'core.stdc.errno.EUCLEAN', kind: "enummemberdeclaration", path: './core/stdc/errno/euclean.html', attributes: []},
{name: 'core.stdc.errno.EUNATCH', kind: "enummemberdeclaration", path: './core/stdc/errno/eunatch.html', attributes: []},
{name: 'core.stdc.errno.EUSERS', kind: "enummemberdeclaration", path: './core/stdc/errno/eusers.html', attributes: []},
{name: 'core.stdc.errno.EWOULDBLOCK', kind: "enummemberdeclaration", path: './core/stdc/errno/ewouldblock.html', attributes: []},
{name: 'core.stdc.errno.EXDEV', kind: "enummemberdeclaration", path: './core/stdc/errno/exdev.html', attributes: []},
{name: 'core.stdc.errno.EXFULL', kind: "enummemberdeclaration", path: './core/stdc/errno/exfull.html', attributes: []},
{name: 'core.stdc.fenv', kind: "module", path: './core/stdc/fenv.html', attributes: []},
{name: 'core.stdc.fenv.FE_ALL_EXCEPT', kind: "enummemberdeclaration", path: './core/stdc/fenv/f_e_al_l_except.html', attributes: []},
{name: 'core.stdc.fenv.FE_DENORMAL', kind: "enummemberdeclaration", path: './core/stdc/fenv/f_e_denormal.html', attributes: []},
{name: 'core.stdc.fenv.FE_DFL_ENV', kind: "enummemberdeclaration", path: './core/stdc/fenv/f_e_df_l_env.html', attributes: []},
{name: 'core.stdc.fenv.FE_DIVBYZERO', kind: "enummemberdeclaration", path: './core/stdc/fenv/f_e_divbyzero.html', attributes: []},
{name: 'core.stdc.fenv.FE_DOWNWARD', kind: "enummemberdeclaration", path: './core/stdc/fenv/f_e_downward.html', attributes: []},
{name: 'core.stdc.fenv.FE_INEXACT', kind: "enummemberdeclaration", path: './core/stdc/fenv/f_e_inexact.html', attributes: []},
{name: 'core.stdc.fenv.FE_INVALID', kind: "enummemberdeclaration", path: './core/stdc/fenv/f_e_invalid.html', attributes: []},
{name: 'core.stdc.fenv.FE_OVERFLOW', kind: "enummemberdeclaration", path: './core/stdc/fenv/f_e_overflow.html', attributes: []},
{name: 'core.stdc.fenv.FE_TONEAREST', kind: "enummemberdeclaration", path: './core/stdc/fenv/f_e_tonearest.html', attributes: []},
{name: 'core.stdc.fenv.FE_TOWARDZERO', kind: "enummemberdeclaration", path: './core/stdc/fenv/f_e_towardzero.html', attributes: []},
{name: 'core.stdc.fenv.FE_UNDERFLOW', kind: "enummemberdeclaration", path: './core/stdc/fenv/f_e_underflow.html', attributes: []},
{name: 'core.stdc.fenv.FE_UPWARD', kind: "enummemberdeclaration", path: './core/stdc/fenv/f_e_upward.html', attributes: []},
{name: 'core.stdc.fenv.feclearexcept', kind: "functiondeclaration", path: './core/stdc/fenv/feclearexcept.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.fenv.fegetenv', kind: "functiondeclaration", path: './core/stdc/fenv/fegetenv.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.fenv.fegetexceptflag', kind: "functiondeclaration", path: './core/stdc/fenv/fegetexceptflag.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.fenv.fegetround', kind: "functiondeclaration", path: './core/stdc/fenv/fegetround.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.fenv.feholdexcept', kind: "functiondeclaration", path: './core/stdc/fenv/feholdexcept.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.fenv.feraiseexcept', kind: "functiondeclaration", path: './core/stdc/fenv/feraiseexcept.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.fenv.fesetenv', kind: "functiondeclaration", path: './core/stdc/fenv/fesetenv.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.fenv.fesetexceptflag', kind: "functiondeclaration", path: './core/stdc/fenv/fesetexceptflag.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.fenv.fesetround', kind: "functiondeclaration", path: './core/stdc/fenv/fesetround.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.fenv.fetestexcept', kind: "functiondeclaration", path: './core/stdc/fenv/fetestexcept.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.fenv.feupdateenv', kind: "functiondeclaration", path: './core/stdc/fenv/feupdateenv.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.float_', kind: "module", path: './core/stdc/float_.html', attributes: []},
{name: 'core.stdc.float_.DBL_DIG', kind: "enummemberdeclaration", path: './core/stdc/float_/db_l_dig.html', attributes: []},
{name: 'core.stdc.float_.DBL_EPSILON', kind: "enummemberdeclaration", path: './core/stdc/float_/db_l_epsilon.html', attributes: []},
{name: 'core.stdc.float_.DBL_MANT_DIG', kind: "enummemberdeclaration", path: './core/stdc/float_/db_l_man_t_dig.html', attributes: []},
{name: 'core.stdc.float_.DBL_MAX', kind: "enummemberdeclaration", path: './core/stdc/float_/db_l_max.html', attributes: []},
{name: 'core.stdc.float_.DBL_MAX_10_EXP', kind: "enummemberdeclaration", path: './core/stdc/float_/db_l_ma_x_10__exp.html', attributes: []},
{name: 'core.stdc.float_.DBL_MAX_EXP', kind: "enummemberdeclaration", path: './core/stdc/float_/db_l_ma_x_exp.html', attributes: []},
{name: 'core.stdc.float_.DBL_MIN', kind: "enummemberdeclaration", path: './core/stdc/float_/db_l_min.html', attributes: []},
{name: 'core.stdc.float_.DBL_MIN_10_EXP', kind: "enummemberdeclaration", path: './core/stdc/float_/db_l_mi_n_10__exp.html', attributes: []},
{name: 'core.stdc.float_.DBL_MIN_EXP', kind: "enummemberdeclaration", path: './core/stdc/float_/db_l_mi_n_exp.html', attributes: []},
{name: 'core.stdc.float_.DECIMAL_DIG', kind: "enummemberdeclaration", path: './core/stdc/float_/decima_l_dig.html', attributes: []},
{name: 'core.stdc.float_.FLT_DIG', kind: "enummemberdeclaration", path: './core/stdc/float_/fl_t_dig.html', attributes: []},
{name: 'core.stdc.float_.FLT_EPSILON', kind: "enummemberdeclaration", path: './core/stdc/float_/fl_t_epsilon.html', attributes: []},
{name: 'core.stdc.float_.FLT_EVAL_METHOD', kind: "enummemberdeclaration", path: './core/stdc/float_/fl_t_eva_l_method.html', attributes: []},
{name: 'core.stdc.float_.FLT_MANT_DIG', kind: "enummemberdeclaration", path: './core/stdc/float_/fl_t_man_t_dig.html', attributes: []},
{name: 'core.stdc.float_.FLT_MAX', kind: "enummemberdeclaration", path: './core/stdc/float_/fl_t_max.html', attributes: []},
{name: 'core.stdc.float_.FLT_MAX_10_EXP', kind: "enummemberdeclaration", path: './core/stdc/float_/fl_t_ma_x_10__exp.html', attributes: []},
{name: 'core.stdc.float_.FLT_MAX_EXP', kind: "enummemberdeclaration", path: './core/stdc/float_/fl_t_ma_x_exp.html', attributes: []},
{name: 'core.stdc.float_.FLT_MIN', kind: "enummemberdeclaration", path: './core/stdc/float_/fl_t_min.html', attributes: []},
{name: 'core.stdc.float_.FLT_MIN_10_EXP', kind: "enummemberdeclaration", path: './core/stdc/float_/fl_t_mi_n_10__exp.html', attributes: []},
{name: 'core.stdc.float_.FLT_MIN_EXP', kind: "enummemberdeclaration", path: './core/stdc/float_/fl_t_mi_n_exp.html', attributes: []},
{name: 'core.stdc.float_.FLT_RADIX', kind: "enummemberdeclaration", path: './core/stdc/float_/fl_t_radix.html', attributes: []},
{name: 'core.stdc.float_.FLT_ROUNDS', kind: "enummemberdeclaration", path: './core/stdc/float_/fl_t_rounds.html', attributes: []},
{name: 'core.stdc.float_.LDBL_DIG', kind: "enummemberdeclaration", path: './core/stdc/float_/ldb_l_dig.html', attributes: []},
{name: 'core.stdc.float_.LDBL_EPSILON', kind: "enummemberdeclaration", path: './core/stdc/float_/ldb_l_epsilon.html', attributes: []},
{name: 'core.stdc.float_.LDBL_MANT_DIG', kind: "enummemberdeclaration", path: './core/stdc/float_/ldb_l_man_t_dig.html', attributes: []},
{name: 'core.stdc.float_.LDBL_MAX', kind: "enummemberdeclaration", path: './core/stdc/float_/ldb_l_max.html', attributes: []},
{name: 'core.stdc.float_.LDBL_MAX_10_EXP', kind: "enummemberdeclaration", path: './core/stdc/float_/ldb_l_ma_x_10__exp.html', attributes: []},
{name: 'core.stdc.float_.LDBL_MAX_EXP', kind: "enummemberdeclaration", path: './core/stdc/float_/ldb_l_ma_x_exp.html', attributes: []},
{name: 'core.stdc.float_.LDBL_MIN', kind: "enummemberdeclaration", path: './core/stdc/float_/ldb_l_min.html', attributes: []},
{name: 'core.stdc.float_.LDBL_MIN_10_EXP', kind: "enummemberdeclaration", path: './core/stdc/float_/ldb_l_mi_n_10__exp.html', attributes: []},
{name: 'core.stdc.float_.LDBL_MIN_EXP', kind: "enummemberdeclaration", path: './core/stdc/float_/ldb_l_mi_n_exp.html', attributes: []},
{name: 'core.stdc.inttypes', kind: "module", path: './core/stdc/inttypes.html', attributes: []},
{name: 'core.stdc.inttypes.imaxabs', kind: "functiondeclaration", path: './core/stdc/inttypes/imaxabs.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.inttypes.imaxdiv', kind: "functiondeclaration", path: './core/stdc/inttypes/imaxdiv.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.inttypes.imaxdiv_t', kind: "structdeclaration", path: './core/stdc/inttypes/imaxdiv_t.html', attributes: []},
{name: 'core.stdc.inttypes.PRId16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_id16.html', attributes: []},
{name: 'core.stdc.inttypes.PRId32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_id32.html', attributes: []},
{name: 'core.stdc.inttypes.PRId64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_id64.html', attributes: []},
{name: 'core.stdc.inttypes.PRId8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_id8.html', attributes: []},
{name: 'core.stdc.inttypes.PRIdFAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_idfas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.PRIdFAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_idfas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.PRIdFAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_idfas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.PRIdFAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_idfas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.PRIdLEAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_idleas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.PRIdLEAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_idleas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.PRIdLEAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_idleas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.PRIdLEAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_idleas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.PRIdMAX', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_idmax.html', attributes: []},
{name: 'core.stdc.inttypes.PRIdPTR', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_idptr.html', attributes: []},
{name: 'core.stdc.inttypes.PRIi16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ii16.html', attributes: []},
{name: 'core.stdc.inttypes.PRIi32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ii32.html', attributes: []},
{name: 'core.stdc.inttypes.PRIi64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ii64.html', attributes: []},
{name: 'core.stdc.inttypes.PRIi8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ii8.html', attributes: []},
{name: 'core.stdc.inttypes.PRIiFAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iifas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.PRIiFAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iifas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.PRIiFAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iifas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.PRIiFAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iifas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.PRIiLEAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iileas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.PRIiLEAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iileas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.PRIiLEAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iileas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.PRIiLEAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iileas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.PRIiMAX', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iimax.html', attributes: []},
{name: 'core.stdc.inttypes.PRIiPTR', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iiptr.html', attributes: []},
{name: 'core.stdc.inttypes.PRIo16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_io16.html', attributes: []},
{name: 'core.stdc.inttypes.PRIo32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_io32.html', attributes: []},
{name: 'core.stdc.inttypes.PRIo64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_io64.html', attributes: []},
{name: 'core.stdc.inttypes.PRIo8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_io8.html', attributes: []},
{name: 'core.stdc.inttypes.PRIoFAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iofas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.PRIoFAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iofas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.PRIoFAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iofas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.PRIoFAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iofas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.PRIoLEAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ioleas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.PRIoLEAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ioleas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.PRIoLEAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ioleas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.PRIoLEAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ioleas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.PRIoMAX', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iomax.html', attributes: []},
{name: 'core.stdc.inttypes.PRIoPTR', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ioptr.html', attributes: []},
{name: 'core.stdc.inttypes.PRIu16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iu16.html', attributes: []},
{name: 'core.stdc.inttypes.PRIu32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iu32.html', attributes: []},
{name: 'core.stdc.inttypes.PRIu64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iu64.html', attributes: []},
{name: 'core.stdc.inttypes.PRIu8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iu8.html', attributes: []},
{name: 'core.stdc.inttypes.PRIuFAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iufas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.PRIuFAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iufas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.PRIuFAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iufas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.PRIuFAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iufas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.PRIuLEAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iuleas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.PRIuLEAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iuleas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.PRIuLEAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iuleas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.PRIuLEAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iuleas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.PRIuMAX', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iumax.html', attributes: []},
{name: 'core.stdc.inttypes.PRIuPTR', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_iuptr.html', attributes: []},
{name: 'core.stdc.inttypes.PRIx16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ix16.html', attributes: []},
{name: 'core.stdc.inttypes.PRIX16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pri_x16.html', attributes: []},
{name: 'core.stdc.inttypes.PRIx32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ix32.html', attributes: []},
{name: 'core.stdc.inttypes.PRIX32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pri_x32.html', attributes: []},
{name: 'core.stdc.inttypes.PRIx64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ix64.html', attributes: []},
{name: 'core.stdc.inttypes.PRIX64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pri_x64.html', attributes: []},
{name: 'core.stdc.inttypes.PRIx8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ix8.html', attributes: []},
{name: 'core.stdc.inttypes.PRIX8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pri_x8.html', attributes: []},
{name: 'core.stdc.inttypes.PRIxFAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ixfas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.PRIXFAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/prixfas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.PRIxFAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ixfas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.PRIXFAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/prixfas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.PRIxFAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ixfas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.PRIXFAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/prixfas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.PRIxFAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ixfas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.PRIXFAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/prixfas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.PRIxLEAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ixleas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.PRIXLEAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/prixleas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.PRIxLEAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ixleas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.PRIXLEAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/prixleas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.PRIxLEAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ixleas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.PRIXLEAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/prixleas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.PRIxLEAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ixleas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.PRIXLEAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/prixleas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.PRIXMAX', kind: "enummemberdeclaration", path: './core/stdc/inttypes/prixmax.html', attributes: []},
{name: 'core.stdc.inttypes.PRIxMAX', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ixmax.html', attributes: []},
{name: 'core.stdc.inttypes.PRIXPTR', kind: "enummemberdeclaration", path: './core/stdc/inttypes/prixptr.html', attributes: []},
{name: 'core.stdc.inttypes.PRIxPTR', kind: "enummemberdeclaration", path: './core/stdc/inttypes/pr_ixptr.html', attributes: []},
{name: 'core.stdc.inttypes.SCNd16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nd16.html', attributes: []},
{name: 'core.stdc.inttypes.SCNd32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nd32.html', attributes: []},
{name: 'core.stdc.inttypes.SCNd64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nd64.html', attributes: []},
{name: 'core.stdc.inttypes.SCNd8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nd8.html', attributes: []},
{name: 'core.stdc.inttypes.SCNdFAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_ndfas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.SCNdFAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_ndfas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.SCNdFAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_ndfas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.SCNdFAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_ndfas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.SCNdLEAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_ndleas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.SCNdLEAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_ndleas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.SCNdLEAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_ndleas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.SCNdLEAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_ndleas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.SCNdMAX', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_ndmax.html', attributes: []},
{name: 'core.stdc.inttypes.SCNdPTR', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_ndptr.html', attributes: []},
{name: 'core.stdc.inttypes.SCNi16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_ni16.html', attributes: []},
{name: 'core.stdc.inttypes.SCNi32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_ni32.html', attributes: []},
{name: 'core.stdc.inttypes.SCNi64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_ni64.html', attributes: []},
{name: 'core.stdc.inttypes.SCNi8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_ni8.html', attributes: []},
{name: 'core.stdc.inttypes.SCNiFAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nifas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.SCNiFAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nifas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.SCNiFAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nifas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.SCNiFAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nifas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.SCNiLEAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nileas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.SCNiLEAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nileas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.SCNiLEAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nileas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.SCNiLEAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nileas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.SCNiMAX', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nimax.html', attributes: []},
{name: 'core.stdc.inttypes.SCNiPTR', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_niptr.html', attributes: []},
{name: 'core.stdc.inttypes.SCNo16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_no16.html', attributes: []},
{name: 'core.stdc.inttypes.SCNo32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_no32.html', attributes: []},
{name: 'core.stdc.inttypes.SCNo64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_no64.html', attributes: []},
{name: 'core.stdc.inttypes.SCNo8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_no8.html', attributes: []},
{name: 'core.stdc.inttypes.SCNoFAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nofas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.SCNoFAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nofas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.SCNoFAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nofas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.SCNoFAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nofas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.SCNoLEAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_noleas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.SCNoLEAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_noleas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.SCNoLEAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_noleas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.SCNoLEAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_noleas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.SCNoMAX', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nomax.html', attributes: []},
{name: 'core.stdc.inttypes.SCNoPTR', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_noptr.html', attributes: []},
{name: 'core.stdc.inttypes.SCNu16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nu16.html', attributes: []},
{name: 'core.stdc.inttypes.SCNu32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nu32.html', attributes: []},
{name: 'core.stdc.inttypes.SCNu64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nu64.html', attributes: []},
{name: 'core.stdc.inttypes.SCNu8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nu8.html', attributes: []},
{name: 'core.stdc.inttypes.SCNuFAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nufas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.SCNuFAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nufas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.SCNuFAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nufas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.SCNuFAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nufas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.SCNuLEAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nuleas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.SCNuLEAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nuleas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.SCNuLEAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nuleas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.SCNuLEAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nuleas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.SCNuMAX', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_numax.html', attributes: []},
{name: 'core.stdc.inttypes.SCNuPTR', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nuptr.html', attributes: []},
{name: 'core.stdc.inttypes.SCNx16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nx16.html', attributes: []},
{name: 'core.stdc.inttypes.SCNx32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nx32.html', attributes: []},
{name: 'core.stdc.inttypes.SCNx64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nx64.html', attributes: []},
{name: 'core.stdc.inttypes.SCNx8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nx8.html', attributes: []},
{name: 'core.stdc.inttypes.SCNxFAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nxfas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.SCNxFAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nxfas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.SCNxFAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nxfas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.SCNxFAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nxfas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.SCNxLEAST16', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nxleas_t16.html', attributes: []},
{name: 'core.stdc.inttypes.SCNxLEAST32', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nxleas_t32.html', attributes: []},
{name: 'core.stdc.inttypes.SCNxLEAST64', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nxleas_t64.html', attributes: []},
{name: 'core.stdc.inttypes.SCNxLEAST8', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nxleas_t8.html', attributes: []},
{name: 'core.stdc.inttypes.SCNxMAX', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nxmax.html', attributes: []},
{name: 'core.stdc.inttypes.SCNxPTR', kind: "enummemberdeclaration", path: './core/stdc/inttypes/sc_nxptr.html', attributes: []},
{name: 'core.stdc.inttypes.strtoimax', kind: "functiondeclaration", path: './core/stdc/inttypes/strtoimax.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.inttypes.strtoumax', kind: "functiondeclaration", path: './core/stdc/inttypes/strtoumax.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.inttypes.wcstoimax', kind: "functiondeclaration", path: './core/stdc/inttypes/wcstoimax.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.inttypes.wcstoumax', kind: "functiondeclaration", path: './core/stdc/inttypes/wcstoumax.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.limits', kind: "module", path: './core/stdc/limits.html', attributes: []},
{name: 'core.stdc.limits.CHAR_BIT', kind: "enummemberdeclaration", path: './core/stdc/limits/cha_r_bit.html', attributes: []},
{name: 'core.stdc.limits.CHAR_MAX', kind: "enummemberdeclaration", path: './core/stdc/limits/cha_r_max.html', attributes: []},
{name: 'core.stdc.limits.CHAR_MIN', kind: "enummemberdeclaration", path: './core/stdc/limits/cha_r_min.html', attributes: []},
{name: 'core.stdc.limits.INT_MAX', kind: "enummemberdeclaration", path: './core/stdc/limits/in_t_max.html', attributes: []},
{name: 'core.stdc.limits.INT_MIN', kind: "enummemberdeclaration", path: './core/stdc/limits/in_t_min.html', attributes: []},
{name: 'core.stdc.limits.LLONG_MAX', kind: "enummemberdeclaration", path: './core/stdc/limits/llon_g_max.html', attributes: []},
{name: 'core.stdc.limits.LLONG_MIN', kind: "enummemberdeclaration", path: './core/stdc/limits/llon_g_min.html', attributes: []},
{name: 'core.stdc.limits.LONG_MAX', kind: "enummemberdeclaration", path: './core/stdc/limits/lon_g_max.html', attributes: []},
{name: 'core.stdc.limits.LONG_MIN', kind: "enummemberdeclaration", path: './core/stdc/limits/lon_g_min.html', attributes: []},
{name: 'core.stdc.limits.MAX_CANON', kind: "enummemberdeclaration", path: './core/stdc/limits/ma_x_canon.html', attributes: []},
{name: 'core.stdc.limits.MAX_INPUT', kind: "enummemberdeclaration", path: './core/stdc/limits/ma_x_input.html', attributes: []},
{name: 'core.stdc.limits.MB_LEN_MAX', kind: "enummemberdeclaration", path: './core/stdc/limits/m_b_le_n_max.html', attributes: []},
{name: 'core.stdc.limits.NAME_MAX', kind: "enummemberdeclaration", path: './core/stdc/limits/nam_e_max.html', attributes: []},
{name: 'core.stdc.limits.PATH_MAX', kind: "enummemberdeclaration", path: './core/stdc/limits/pat_h_max.html', attributes: []},
{name: 'core.stdc.limits.PIPE_BUF', kind: "enummemberdeclaration", path: './core/stdc/limits/pip_e_buf.html', attributes: []},
{name: 'core.stdc.limits.SCHAR_MAX', kind: "enummemberdeclaration", path: './core/stdc/limits/scha_r_max.html', attributes: []},
{name: 'core.stdc.limits.SCHAR_MIN', kind: "enummemberdeclaration", path: './core/stdc/limits/scha_r_min.html', attributes: []},
{name: 'core.stdc.limits.SHRT_MAX', kind: "enummemberdeclaration", path: './core/stdc/limits/shr_t_max.html', attributes: []},
{name: 'core.stdc.limits.SHRT_MIN', kind: "enummemberdeclaration", path: './core/stdc/limits/shr_t_min.html', attributes: []},
{name: 'core.stdc.limits.UCHAR_MAX', kind: "enummemberdeclaration", path: './core/stdc/limits/ucha_r_max.html', attributes: []},
{name: 'core.stdc.limits.UINT_MAX', kind: "enummemberdeclaration", path: './core/stdc/limits/uin_t_max.html', attributes: []},
{name: 'core.stdc.limits.ULLONG_MAX', kind: "enummemberdeclaration", path: './core/stdc/limits/ullon_g_max.html', attributes: []},
{name: 'core.stdc.limits.ULONG_MAX', kind: "enummemberdeclaration", path: './core/stdc/limits/ulon_g_max.html', attributes: []},
{name: 'core.stdc.limits.USHRT_MAX', kind: "enummemberdeclaration", path: './core/stdc/limits/ushr_t_max.html', attributes: []},
{name: 'core.stdc.locale', kind: "module", path: './core/stdc/locale.html', attributes: []},
{name: 'core.stdc.locale.LC_ADDRESS', kind: "enummemberdeclaration", path: './core/stdc/locale/l_c_address.html', attributes: []},
{name: 'core.stdc.locale.LC_ALL', kind: "enummemberdeclaration", path: './core/stdc/locale/l_c_all.html', attributes: []},
{name: 'core.stdc.locale.LC_COLLATE', kind: "enummemberdeclaration", path: './core/stdc/locale/l_c_collate.html', attributes: []},
{name: 'core.stdc.locale.LC_CTYPE', kind: "enummemberdeclaration", path: './core/stdc/locale/l_c_ctype.html', attributes: []},
{name: 'core.stdc.locale.LC_IDENTIFICATION', kind: "enummemberdeclaration", path: './core/stdc/locale/l_c_identification.html', attributes: []},
{name: 'core.stdc.locale.LC_MEASUREMENT', kind: "enummemberdeclaration", path: './core/stdc/locale/l_c_measurement.html', attributes: []},
{name: 'core.stdc.locale.LC_MESSAGES', kind: "enummemberdeclaration", path: './core/stdc/locale/l_c_messages.html', attributes: []},
{name: 'core.stdc.locale.LC_MONETARY', kind: "enummemberdeclaration", path: './core/stdc/locale/l_c_monetary.html', attributes: []},
{name: 'core.stdc.locale.LC_NAME', kind: "enummemberdeclaration", path: './core/stdc/locale/l_c_name.html', attributes: []},
{name: 'core.stdc.locale.LC_NUMERIC', kind: "enummemberdeclaration", path: './core/stdc/locale/l_c_numeric.html', attributes: []},
{name: 'core.stdc.locale.LC_PAPER', kind: "enummemberdeclaration", path: './core/stdc/locale/l_c_paper.html', attributes: []},
{name: 'core.stdc.locale.LC_TELEPHONE', kind: "enummemberdeclaration", path: './core/stdc/locale/l_c_telephone.html', attributes: []},
{name: 'core.stdc.locale.LC_TIME', kind: "enummemberdeclaration", path: './core/stdc/locale/l_c_time.html', attributes: []},
{name: 'core.stdc.locale.lconv', kind: "structdeclaration", path: './core/stdc/locale/lconv.html', attributes: []},
{name: 'core.stdc.locale.localeconv', kind: "functiondeclaration", path: './core/stdc/locale/localeconv.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.locale.setlocale', kind: "functiondeclaration", path: './core/stdc/locale/setlocale.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.math', kind: "module", path: './core/stdc/math.html', attributes: []},
{name: 'core.stdc.math.acos', kind: "functiondeclaration", path: './core/stdc/math/acos.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.acosf', kind: "functiondeclaration", path: './core/stdc/math/acosf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.acosh', kind: "functiondeclaration", path: './core/stdc/math/acosh.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.acoshf', kind: "functiondeclaration", path: './core/stdc/math/acoshf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.acoshl', kind: "functiondeclaration", path: './core/stdc/math/acoshl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.acosl', kind: "functiondeclaration", path: './core/stdc/math/acosl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.asin', kind: "functiondeclaration", path: './core/stdc/math/asin.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.asinf', kind: "functiondeclaration", path: './core/stdc/math/asinf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.asinh', kind: "functiondeclaration", path: './core/stdc/math/asinh.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.asinhf', kind: "functiondeclaration", path: './core/stdc/math/asinhf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.asinhl', kind: "functiondeclaration", path: './core/stdc/math/asinhl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.asinl', kind: "functiondeclaration", path: './core/stdc/math/asinl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.atan', kind: "functiondeclaration", path: './core/stdc/math/atan.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.atan2', kind: "functiondeclaration", path: './core/stdc/math/atan2.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.atan2f', kind: "functiondeclaration", path: './core/stdc/math/atan2f.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.atan2l', kind: "functiondeclaration", path: './core/stdc/math/atan2l.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.atanf', kind: "functiondeclaration", path: './core/stdc/math/atanf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.atanh', kind: "functiondeclaration", path: './core/stdc/math/atanh.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.atanhf', kind: "functiondeclaration", path: './core/stdc/math/atanhf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.atanhl', kind: "functiondeclaration", path: './core/stdc/math/atanhl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.atanl', kind: "functiondeclaration", path: './core/stdc/math/atanl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.cbrt', kind: "functiondeclaration", path: './core/stdc/math/cbrt.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.cbrtf', kind: "functiondeclaration", path: './core/stdc/math/cbrtf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.cbrtl', kind: "functiondeclaration", path: './core/stdc/math/cbrtl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.ceil', kind: "functiondeclaration", path: './core/stdc/math/ceil.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.ceilf', kind: "functiondeclaration", path: './core/stdc/math/ceilf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.ceill', kind: "functiondeclaration", path: './core/stdc/math/ceill.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.copysign', kind: "functiondeclaration", path: './core/stdc/math/copysign.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.copysignf', kind: "functiondeclaration", path: './core/stdc/math/copysignf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.copysignl', kind: "functiondeclaration", path: './core/stdc/math/copysignl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.cos', kind: "functiondeclaration", path: './core/stdc/math/cos.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.cosf', kind: "functiondeclaration", path: './core/stdc/math/cosf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.cosh', kind: "functiondeclaration", path: './core/stdc/math/cosh.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.coshf', kind: "functiondeclaration", path: './core/stdc/math/coshf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.coshl', kind: "functiondeclaration", path: './core/stdc/math/coshl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.cosl', kind: "functiondeclaration", path: './core/stdc/math/cosl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.double_t', kind: "aliasdeclaration", path: './core/stdc/math/double_t.html', attributes: []},
{name: 'core.stdc.math.erf', kind: "functiondeclaration", path: './core/stdc/math/erf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.erfc', kind: "functiondeclaration", path: './core/stdc/math/erfc.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.erfcf', kind: "functiondeclaration", path: './core/stdc/math/erfcf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.erfcl', kind: "functiondeclaration", path: './core/stdc/math/erfcl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.erff', kind: "functiondeclaration", path: './core/stdc/math/erff.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.erfl', kind: "functiondeclaration", path: './core/stdc/math/erfl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.exp', kind: "functiondeclaration", path: './core/stdc/math/exp.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.exp2', kind: "functiondeclaration", path: './core/stdc/math/exp2.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.exp2f', kind: "functiondeclaration", path: './core/stdc/math/exp2f.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.exp2l', kind: "functiondeclaration", path: './core/stdc/math/exp2l.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.expf', kind: "functiondeclaration", path: './core/stdc/math/expf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.expl', kind: "functiondeclaration", path: './core/stdc/math/expl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.expm1', kind: "functiondeclaration", path: './core/stdc/math/expm1.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.expm1f', kind: "functiondeclaration", path: './core/stdc/math/expm1f.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.expm1l', kind: "functiondeclaration", path: './core/stdc/math/expm1l.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.fabs', kind: "functiondeclaration", path: './core/stdc/math/fabs.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.fabsf', kind: "functiondeclaration", path: './core/stdc/math/fabsf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.fabsl', kind: "functiondeclaration", path: './core/stdc/math/fabsl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.fdim', kind: "functiondeclaration", path: './core/stdc/math/fdim.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.fdimf', kind: "functiondeclaration", path: './core/stdc/math/fdimf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.fdiml', kind: "functiondeclaration", path: './core/stdc/math/fdiml.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.float_t', kind: "aliasdeclaration", path: './core/stdc/math/float_t.html', attributes: []},
{name: 'core.stdc.math.floor', kind: "functiondeclaration", path: './core/stdc/math/floor.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.floorf', kind: "functiondeclaration", path: './core/stdc/math/floorf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.floorl', kind: "functiondeclaration", path: './core/stdc/math/floorl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.fma', kind: "functiondeclaration", path: './core/stdc/math/fma.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.fmaf', kind: "functiondeclaration", path: './core/stdc/math/fmaf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.fmal', kind: "functiondeclaration", path: './core/stdc/math/fmal.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.fmax', kind: "functiondeclaration", path: './core/stdc/math/fmax.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.fmaxf', kind: "functiondeclaration", path: './core/stdc/math/fmaxf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.fmaxl', kind: "functiondeclaration", path: './core/stdc/math/fmaxl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.fmin', kind: "functiondeclaration", path: './core/stdc/math/fmin.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.fminf', kind: "functiondeclaration", path: './core/stdc/math/fminf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.fminl', kind: "functiondeclaration", path: './core/stdc/math/fminl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.fmod', kind: "functiondeclaration", path: './core/stdc/math/fmod.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.fmodf', kind: "functiondeclaration", path: './core/stdc/math/fmodf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.fmodl', kind: "functiondeclaration", path: './core/stdc/math/fmodl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.FP_FAST_FMA', kind: "enummemberdeclaration", path: './core/stdc/math/f_p_fas_t_fma.html', attributes: []},
{name: 'core.stdc.math.FP_FAST_FMAF', kind: "enummemberdeclaration", path: './core/stdc/math/f_p_fas_t_fmaf.html', attributes: []},
{name: 'core.stdc.math.FP_FAST_FMAL', kind: "enummemberdeclaration", path: './core/stdc/math/f_p_fas_t_fmal.html', attributes: []},
{name: 'core.stdc.math.FP_ILOGB0', kind: "enummemberdeclaration", path: './core/stdc/math/f_p_ilog_b0.html', attributes: []},
{name: 'core.stdc.math.FP_ILOGBNAN', kind: "enummemberdeclaration", path: './core/stdc/math/f_p_ilogbnan.html', attributes: []},
{name: 'core.stdc.math.FP_INFINITE', kind: "enummemberdeclaration", path: './core/stdc/math/f_p_infinite.html', attributes: []},
{name: 'core.stdc.math.FP_NAN', kind: "enummemberdeclaration", path: './core/stdc/math/f_p_nan.html', attributes: []},
{name: 'core.stdc.math.FP_NORMAL', kind: "enummemberdeclaration", path: './core/stdc/math/f_p_normal.html', attributes: []},
{name: 'core.stdc.math.FP_SUBNORMAL', kind: "enummemberdeclaration", path: './core/stdc/math/f_p_subnormal.html', attributes: []},
{name: 'core.stdc.math.FP_ZERO', kind: "enummemberdeclaration", path: './core/stdc/math/f_p_zero.html', attributes: []},
{name: 'core.stdc.math.fpclassify', kind: "functiondeclaration", path: './core/stdc/math/fpclassify.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.stdc.math.frexp', kind: "functiondeclaration", path: './core/stdc/math/frexp.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.frexpf', kind: "functiondeclaration", path: './core/stdc/math/frexpf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.frexpl', kind: "functiondeclaration", path: './core/stdc/math/frexpl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.HUGE_VAL', kind: "enummemberdeclaration", path: './core/stdc/math/hug_e_val.html', attributes: []},
{name: 'core.stdc.math.HUGE_VALF', kind: "enummemberdeclaration", path: './core/stdc/math/hug_e_valf.html', attributes: []},
{name: 'core.stdc.math.HUGE_VALL', kind: "enummemberdeclaration", path: './core/stdc/math/hug_e_vall.html', attributes: []},
{name: 'core.stdc.math.hypot', kind: "functiondeclaration", path: './core/stdc/math/hypot.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.hypotf', kind: "functiondeclaration", path: './core/stdc/math/hypotf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.hypotl', kind: "functiondeclaration", path: './core/stdc/math/hypotl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.ilogb', kind: "functiondeclaration", path: './core/stdc/math/ilogb.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.ilogbf', kind: "functiondeclaration", path: './core/stdc/math/ilogbf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.ilogbl', kind: "functiondeclaration", path: './core/stdc/math/ilogbl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.INFINITY', kind: "enummemberdeclaration", path: './core/stdc/math/infinity.html', attributes: []},
{name: 'core.stdc.math.isfinite', kind: "functiondeclaration", path: './core/stdc/math/isfinite.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.stdc.math.isgreater', kind: "functiondeclaration", path: './core/stdc/math/isgreater.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.stdc.math.isgreaterequal', kind: "functiondeclaration", path: './core/stdc/math/isgreaterequal.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.stdc.math.isinf', kind: "functiondeclaration", path: './core/stdc/math/isinf.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.stdc.math.isless', kind: "functiondeclaration", path: './core/stdc/math/isless.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.stdc.math.islessequal', kind: "functiondeclaration", path: './core/stdc/math/islessequal.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.stdc.math.islessgreater', kind: "functiondeclaration", path: './core/stdc/math/islessgreater.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.stdc.math.isnan', kind: "functiondeclaration", path: './core/stdc/math/isnan.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.stdc.math.isnormal', kind: "functiondeclaration", path: './core/stdc/math/isnormal.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.stdc.math.isunordered', kind: "functiondeclaration", path: './core/stdc/math/isunordered.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.stdc.math.ldexp', kind: "functiondeclaration", path: './core/stdc/math/ldexp.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.ldexpf', kind: "functiondeclaration", path: './core/stdc/math/ldexpf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.ldexpl', kind: "functiondeclaration", path: './core/stdc/math/ldexpl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.lgamma', kind: "functiondeclaration", path: './core/stdc/math/lgamma.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.lgammaf', kind: "functiondeclaration", path: './core/stdc/math/lgammaf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.lgammal', kind: "functiondeclaration", path: './core/stdc/math/lgammal.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.llrint', kind: "functiondeclaration", path: './core/stdc/math/llrint.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.llrintf', kind: "functiondeclaration", path: './core/stdc/math/llrintf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.llrintl', kind: "functiondeclaration", path: './core/stdc/math/llrintl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.llround', kind: "functiondeclaration", path: './core/stdc/math/llround.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.llroundf', kind: "functiondeclaration", path: './core/stdc/math/llroundf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.llroundl', kind: "functiondeclaration", path: './core/stdc/math/llroundl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.log', kind: "functiondeclaration", path: './core/stdc/math/log.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.log10', kind: "functiondeclaration", path: './core/stdc/math/log10.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.log10f', kind: "functiondeclaration", path: './core/stdc/math/log10f.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.log10l', kind: "functiondeclaration", path: './core/stdc/math/log10l.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.log1p', kind: "functiondeclaration", path: './core/stdc/math/log1p.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.log1pf', kind: "functiondeclaration", path: './core/stdc/math/log1pf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.log1pl', kind: "functiondeclaration", path: './core/stdc/math/log1pl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.log2', kind: "functiondeclaration", path: './core/stdc/math/log2.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.log2f', kind: "functiondeclaration", path: './core/stdc/math/log2f.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.log2l', kind: "functiondeclaration", path: './core/stdc/math/log2l.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.logb', kind: "functiondeclaration", path: './core/stdc/math/logb.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.logbf', kind: "functiondeclaration", path: './core/stdc/math/logbf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.logbl', kind: "functiondeclaration", path: './core/stdc/math/logbl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.logf', kind: "functiondeclaration", path: './core/stdc/math/logf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.logl', kind: "functiondeclaration", path: './core/stdc/math/logl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.lrint', kind: "functiondeclaration", path: './core/stdc/math/lrint.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.lrintf', kind: "functiondeclaration", path: './core/stdc/math/lrintf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.lrintl', kind: "functiondeclaration", path: './core/stdc/math/lrintl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.lround', kind: "functiondeclaration", path: './core/stdc/math/lround.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.lroundf', kind: "functiondeclaration", path: './core/stdc/math/lroundf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.lroundl', kind: "functiondeclaration", path: './core/stdc/math/lroundl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.MATH_ERREXCEPT', kind: "enummemberdeclaration", path: './core/stdc/math/mat_h_errexcept.html', attributes: []},
{name: 'core.stdc.math.math_errhandling', kind: "enummemberdeclaration", path: './core/stdc/math/math_errhandling.html', attributes: []},
{name: 'core.stdc.math.MATH_ERRNO', kind: "enummemberdeclaration", path: './core/stdc/math/mat_h_errno.html', attributes: []},
{name: 'core.stdc.math.modf', kind: "functiondeclaration", path: './core/stdc/math/modf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.modff', kind: "functiondeclaration", path: './core/stdc/math/modff.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.modfl', kind: "functiondeclaration", path: './core/stdc/math/modfl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.nan', kind: "functiondeclaration", path: './core/stdc/math/nan.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.NAN', kind: "enummemberdeclaration", path: './core/stdc/math/nan.html', attributes: []},
{name: 'core.stdc.math.nanf', kind: "functiondeclaration", path: './core/stdc/math/nanf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.nanl', kind: "functiondeclaration", path: './core/stdc/math/nanl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.nearbyint', kind: "functiondeclaration", path: './core/stdc/math/nearbyint.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.nearbyintf', kind: "functiondeclaration", path: './core/stdc/math/nearbyintf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.nearbyintl', kind: "functiondeclaration", path: './core/stdc/math/nearbyintl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.nextafter', kind: "functiondeclaration", path: './core/stdc/math/nextafter.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.nextafterf', kind: "functiondeclaration", path: './core/stdc/math/nextafterf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.nextafterl', kind: "functiondeclaration", path: './core/stdc/math/nextafterl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.nexttoward', kind: "functiondeclaration", path: './core/stdc/math/nexttoward.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.nexttowardf', kind: "functiondeclaration", path: './core/stdc/math/nexttowardf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.nexttowardl', kind: "functiondeclaration", path: './core/stdc/math/nexttowardl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.pow', kind: "functiondeclaration", path: './core/stdc/math/pow.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.powf', kind: "functiondeclaration", path: './core/stdc/math/powf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.powl', kind: "functiondeclaration", path: './core/stdc/math/powl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.remainder', kind: "functiondeclaration", path: './core/stdc/math/remainder.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.remainderf', kind: "functiondeclaration", path: './core/stdc/math/remainderf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.remainderl', kind: "functiondeclaration", path: './core/stdc/math/remainderl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.remquo', kind: "functiondeclaration", path: './core/stdc/math/remquo.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.remquof', kind: "functiondeclaration", path: './core/stdc/math/remquof.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.remquol', kind: "functiondeclaration", path: './core/stdc/math/remquol.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.rint', kind: "functiondeclaration", path: './core/stdc/math/rint.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.rintf', kind: "functiondeclaration", path: './core/stdc/math/rintf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.rintl', kind: "functiondeclaration", path: './core/stdc/math/rintl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.round', kind: "functiondeclaration", path: './core/stdc/math/round.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.roundf', kind: "functiondeclaration", path: './core/stdc/math/roundf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.roundl', kind: "functiondeclaration", path: './core/stdc/math/roundl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.scalbln', kind: "functiondeclaration", path: './core/stdc/math/scalbln.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.scalblnf', kind: "functiondeclaration", path: './core/stdc/math/scalblnf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.scalblnl', kind: "functiondeclaration", path: './core/stdc/math/scalblnl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.scalbn', kind: "functiondeclaration", path: './core/stdc/math/scalbn.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.scalbnf', kind: "functiondeclaration", path: './core/stdc/math/scalbnf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.scalbnl', kind: "functiondeclaration", path: './core/stdc/math/scalbnl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.signbit', kind: "functiondeclaration", path: './core/stdc/math/signbit.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.stdc.math.sin', kind: "functiondeclaration", path: './core/stdc/math/sin.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.sinf', kind: "functiondeclaration", path: './core/stdc/math/sinf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.sinh', kind: "functiondeclaration", path: './core/stdc/math/sinh.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.sinhf', kind: "functiondeclaration", path: './core/stdc/math/sinhf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.sinhl', kind: "functiondeclaration", path: './core/stdc/math/sinhl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.sinl', kind: "functiondeclaration", path: './core/stdc/math/sinl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.sqrt', kind: "functiondeclaration", path: './core/stdc/math/sqrt.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.sqrtf', kind: "functiondeclaration", path: './core/stdc/math/sqrtf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.sqrtl', kind: "functiondeclaration", path: './core/stdc/math/sqrtl.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.tan', kind: "functiondeclaration", path: './core/stdc/math/tan.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.tanf', kind: "functiondeclaration", path: './core/stdc/math/tanf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.tanh', kind: "functiondeclaration", path: './core/stdc/math/tanh.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.tanhf', kind: "functiondeclaration", path: './core/stdc/math/tanhf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.tanhl', kind: "functiondeclaration", path: './core/stdc/math/tanhl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.tanl', kind: "functiondeclaration", path: './core/stdc/math/tanl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.tgamma', kind: "functiondeclaration", path: './core/stdc/math/tgamma.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.tgammaf', kind: "functiondeclaration", path: './core/stdc/math/tgammaf.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.tgammal', kind: "functiondeclaration", path: './core/stdc/math/tgammal.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.trunc', kind: "functiondeclaration", path: './core/stdc/math/trunc.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.truncf', kind: "functiondeclaration", path: './core/stdc/math/truncf.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.math.truncl', kind: "functiondeclaration", path: './core/stdc/math/truncl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.signal', kind: "module", path: './core/stdc/signal.html', attributes: []},
{name: 'core.stdc.signal.raise', kind: "functiondeclaration", path: './core/stdc/signal/raise.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.signal.sig_atomic_t', kind: "aliasdeclaration", path: './core/stdc/signal/sig_atomic_t.html', attributes: []},
{name: 'core.stdc.signal.SIG_DFL', kind: "enummemberdeclaration", path: './core/stdc/signal/si_g_dfl.html', attributes: []},
{name: 'core.stdc.signal.SIG_ERR', kind: "enummemberdeclaration", path: './core/stdc/signal/si_g_err.html', attributes: []},
{name: 'core.stdc.signal.SIG_IGN', kind: "enummemberdeclaration", path: './core/stdc/signal/si_g_ign.html', attributes: []},
{name: 'core.stdc.signal.SIGABRT', kind: "enummemberdeclaration", path: './core/stdc/signal/sigabrt.html', attributes: []},
{name: 'core.stdc.signal.SIGFPE', kind: "enummemberdeclaration", path: './core/stdc/signal/sigfpe.html', attributes: []},
{name: 'core.stdc.signal.SIGILL', kind: "enummemberdeclaration", path: './core/stdc/signal/sigill.html', attributes: []},
{name: 'core.stdc.signal.SIGINT', kind: "enummemberdeclaration", path: './core/stdc/signal/sigint.html', attributes: []},
{name: 'core.stdc.signal.signal', kind: "functiondeclaration", path: './core/stdc/signal/signal.html', attributes: ["extern(C)"]},
{name: 'core.stdc.signal.SIGSEGV', kind: "enummemberdeclaration", path: './core/stdc/signal/sigsegv.html', attributes: []},
{name: 'core.stdc.signal.SIGTERM', kind: "enummemberdeclaration", path: './core/stdc/signal/sigterm.html', attributes: []},
{name: 'core.stdc.stdarg', kind: "module", path: './core/stdc/stdarg.html', attributes: []},
{name: 'core.stdc.stdarg.va_arg', kind: "functiondeclaration", path: './core/stdc/stdarg/va_arg.html', attributes: []},
{name: 'core.stdc.stdarg.va_copy', kind: "functiondeclaration", path: './core/stdc/stdarg/va_copy.html', attributes: []},
{name: 'core.stdc.stdarg.va_end', kind: "functiondeclaration", path: './core/stdc/stdarg/va_end.html', attributes: []},
{name: 'core.stdc.stdarg.va_list', kind: "aliasdeclaration", path: './core/stdc/stdarg/va_list.html', attributes: []},
{name: 'core.stdc.stdarg.va_start', kind: "functiondeclaration", path: './core/stdc/stdarg/va_start.html', attributes: []},
{name: 'core.stdc.stddef', kind: "module", path: './core/stdc/stddef.html', attributes: []},
{name: 'core.stdc.stddef.nullptr_t', kind: "aliasdeclaration", path: './core/stdc/stddef/nullptr_t.html', attributes: []},
{name: 'core.stdc.stddef.wchar_t', kind: "aliasdeclaration", path: './core/stdc/stddef/wchar_t.html', attributes: []},
{name: 'core.stdc.stdint', kind: "module", path: './core/stdc/stdint.html', attributes: []},
{name: 'core.stdc.stdint.INT16_C', kind: "aliasdeclaration", path: './core/stdc/stdint/in_t16__c.html', attributes: []},
{name: 'core.stdc.stdint.INT16_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t16__max.html', attributes: []},
{name: 'core.stdc.stdint.INT16_MIN', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t16__min.html', attributes: []},
{name: 'core.stdc.stdint.int16_t', kind: "aliasdeclaration", path: './core/stdc/stdint/int16_t.html', attributes: []},
{name: 'core.stdc.stdint.INT32_C', kind: "aliasdeclaration", path: './core/stdc/stdint/in_t32__c.html', attributes: []},
{name: 'core.stdc.stdint.INT32_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t32__max.html', attributes: []},
{name: 'core.stdc.stdint.INT32_MIN', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t32__min.html', attributes: []},
{name: 'core.stdc.stdint.int32_t', kind: "aliasdeclaration", path: './core/stdc/stdint/int32_t.html', attributes: []},
{name: 'core.stdc.stdint.INT64_C', kind: "aliasdeclaration", path: './core/stdc/stdint/in_t64__c.html', attributes: []},
{name: 'core.stdc.stdint.INT64_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t64__max.html', attributes: []},
{name: 'core.stdc.stdint.INT64_MIN', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t64__min.html', attributes: []},
{name: 'core.stdc.stdint.int64_t', kind: "aliasdeclaration", path: './core/stdc/stdint/int64_t.html', attributes: []},
{name: 'core.stdc.stdint.INT8_C', kind: "aliasdeclaration", path: './core/stdc/stdint/in_t8__c.html', attributes: []},
{name: 'core.stdc.stdint.INT8_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t8__max.html', attributes: []},
{name: 'core.stdc.stdint.INT8_MIN', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t8__min.html', attributes: []},
{name: 'core.stdc.stdint.int8_t', kind: "aliasdeclaration", path: './core/stdc/stdint/int8_t.html', attributes: []},
{name: 'core.stdc.stdint.INT_FAST16_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t_fas_t16__max.html', attributes: []},
{name: 'core.stdc.stdint.INT_FAST16_MIN', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t_fas_t16__min.html', attributes: []},
{name: 'core.stdc.stdint.int_fast16_t', kind: "aliasdeclaration", path: './core/stdc/stdint/int_fast16_t.html', attributes: []},
{name: 'core.stdc.stdint.INT_FAST32_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t_fas_t32__max.html', attributes: []},
{name: 'core.stdc.stdint.INT_FAST32_MIN', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t_fas_t32__min.html', attributes: []},
{name: 'core.stdc.stdint.int_fast32_t', kind: "aliasdeclaration", path: './core/stdc/stdint/int_fast32_t.html', attributes: []},
{name: 'core.stdc.stdint.INT_FAST64_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t_fas_t64__max.html', attributes: []},
{name: 'core.stdc.stdint.INT_FAST64_MIN', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t_fas_t64__min.html', attributes: []},
{name: 'core.stdc.stdint.int_fast64_t', kind: "aliasdeclaration", path: './core/stdc/stdint/int_fast64_t.html', attributes: []},
{name: 'core.stdc.stdint.INT_FAST8_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t_fas_t8__max.html', attributes: []},
{name: 'core.stdc.stdint.INT_FAST8_MIN', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t_fas_t8__min.html', attributes: []},
{name: 'core.stdc.stdint.int_fast8_t', kind: "aliasdeclaration", path: './core/stdc/stdint/int_fast8_t.html', attributes: []},
{name: 'core.stdc.stdint.INT_LEAST16_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t_leas_t16__max.html', attributes: []},
{name: 'core.stdc.stdint.INT_LEAST16_MIN', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t_leas_t16__min.html', attributes: []},
{name: 'core.stdc.stdint.int_least16_t', kind: "aliasdeclaration", path: './core/stdc/stdint/int_least16_t.html', attributes: []},
{name: 'core.stdc.stdint.INT_LEAST32_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t_leas_t32__max.html', attributes: []},
{name: 'core.stdc.stdint.INT_LEAST32_MIN', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t_leas_t32__min.html', attributes: []},
{name: 'core.stdc.stdint.int_least32_t', kind: "aliasdeclaration", path: './core/stdc/stdint/int_least32_t.html', attributes: []},
{name: 'core.stdc.stdint.INT_LEAST64_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t_leas_t64__max.html', attributes: []},
{name: 'core.stdc.stdint.INT_LEAST64_MIN', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t_leas_t64__min.html', attributes: []},
{name: 'core.stdc.stdint.int_least64_t', kind: "aliasdeclaration", path: './core/stdc/stdint/int_least64_t.html', attributes: []},
{name: 'core.stdc.stdint.INT_LEAST8_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t_leas_t8__max.html', attributes: []},
{name: 'core.stdc.stdint.INT_LEAST8_MIN', kind: "enummemberdeclaration", path: './core/stdc/stdint/in_t_leas_t8__min.html', attributes: []},
{name: 'core.stdc.stdint.int_least8_t', kind: "aliasdeclaration", path: './core/stdc/stdint/int_least8_t.html', attributes: []},
{name: 'core.stdc.stdint.INTMAX_C', kind: "aliasdeclaration", path: './core/stdc/stdint/intma_x_c.html', attributes: []},
{name: 'core.stdc.stdint.INTMAX_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/intma_x_max.html', attributes: []},
{name: 'core.stdc.stdint.INTMAX_MIN', kind: "enummemberdeclaration", path: './core/stdc/stdint/intma_x_min.html', attributes: []},
{name: 'core.stdc.stdint.intmax_t', kind: "aliasdeclaration", path: './core/stdc/stdint/intmax_t.html', attributes: []},
{name: 'core.stdc.stdint.INTPTR_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/intpt_r_max.html', attributes: []},
{name: 'core.stdc.stdint.INTPTR_MIN', kind: "enummemberdeclaration", path: './core/stdc/stdint/intpt_r_min.html', attributes: []},
{name: 'core.stdc.stdint.intptr_t', kind: "aliasdeclaration", path: './core/stdc/stdint/intptr_t.html', attributes: []},
{name: 'core.stdc.stdint.PTRDIFF_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/ptrdif_f_max.html', attributes: []},
{name: 'core.stdc.stdint.PTRDIFF_MIN', kind: "enummemberdeclaration", path: './core/stdc/stdint/ptrdif_f_min.html', attributes: []},
{name: 'core.stdc.stdint.SIG_ATOMIC_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/si_g_atomi_c_max.html', attributes: []},
{name: 'core.stdc.stdint.SIG_ATOMIC_MIN', kind: "enummemberdeclaration", path: './core/stdc/stdint/si_g_atomi_c_min.html', attributes: []},
{name: 'core.stdc.stdint.SIZE_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/siz_e_max.html', attributes: []},
{name: 'core.stdc.stdint.UINT16_C', kind: "aliasdeclaration", path: './core/stdc/stdint/uin_t16__c.html', attributes: []},
{name: 'core.stdc.stdint.UINT16_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/uin_t16__max.html', attributes: []},
{name: 'core.stdc.stdint.uint16_t', kind: "aliasdeclaration", path: './core/stdc/stdint/uint16_t.html', attributes: []},
{name: 'core.stdc.stdint.UINT32_C', kind: "aliasdeclaration", path: './core/stdc/stdint/uin_t32__c.html', attributes: []},
{name: 'core.stdc.stdint.UINT32_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/uin_t32__max.html', attributes: []},
{name: 'core.stdc.stdint.uint32_t', kind: "aliasdeclaration", path: './core/stdc/stdint/uint32_t.html', attributes: []},
{name: 'core.stdc.stdint.UINT64_C', kind: "aliasdeclaration", path: './core/stdc/stdint/uin_t64__c.html', attributes: []},
{name: 'core.stdc.stdint.UINT64_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/uin_t64__max.html', attributes: []},
{name: 'core.stdc.stdint.uint64_t', kind: "aliasdeclaration", path: './core/stdc/stdint/uint64_t.html', attributes: []},
{name: 'core.stdc.stdint.UINT8_C', kind: "aliasdeclaration", path: './core/stdc/stdint/uin_t8__c.html', attributes: []},
{name: 'core.stdc.stdint.UINT8_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/uin_t8__max.html', attributes: []},
{name: 'core.stdc.stdint.uint8_t', kind: "aliasdeclaration", path: './core/stdc/stdint/uint8_t.html', attributes: []},
{name: 'core.stdc.stdint.UINT_FAST16_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/uin_t_fas_t16__max.html', attributes: []},
{name: 'core.stdc.stdint.uint_fast16_t', kind: "aliasdeclaration", path: './core/stdc/stdint/uint_fast16_t.html', attributes: []},
{name: 'core.stdc.stdint.UINT_FAST32_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/uin_t_fas_t32__max.html', attributes: []},
{name: 'core.stdc.stdint.uint_fast32_t', kind: "aliasdeclaration", path: './core/stdc/stdint/uint_fast32_t.html', attributes: []},
{name: 'core.stdc.stdint.UINT_FAST64_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/uin_t_fas_t64__max.html', attributes: []},
{name: 'core.stdc.stdint.uint_fast64_t', kind: "aliasdeclaration", path: './core/stdc/stdint/uint_fast64_t.html', attributes: []},
{name: 'core.stdc.stdint.UINT_FAST8_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/uin_t_fas_t8__max.html', attributes: []},
{name: 'core.stdc.stdint.uint_fast8_t', kind: "aliasdeclaration", path: './core/stdc/stdint/uint_fast8_t.html', attributes: []},
{name: 'core.stdc.stdint.UINT_LEAST16_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/uin_t_leas_t16__max.html', attributes: []},
{name: 'core.stdc.stdint.uint_least16_t', kind: "aliasdeclaration", path: './core/stdc/stdint/uint_least16_t.html', attributes: []},
{name: 'core.stdc.stdint.UINT_LEAST32_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/uin_t_leas_t32__max.html', attributes: []},
{name: 'core.stdc.stdint.uint_least32_t', kind: "aliasdeclaration", path: './core/stdc/stdint/uint_least32_t.html', attributes: []},
{name: 'core.stdc.stdint.UINT_LEAST64_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/uin_t_leas_t64__max.html', attributes: []},
{name: 'core.stdc.stdint.uint_least64_t', kind: "aliasdeclaration", path: './core/stdc/stdint/uint_least64_t.html', attributes: []},
{name: 'core.stdc.stdint.UINT_LEAST8_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/uin_t_leas_t8__max.html', attributes: []},
{name: 'core.stdc.stdint.uint_least8_t', kind: "aliasdeclaration", path: './core/stdc/stdint/uint_least8_t.html', attributes: []},
{name: 'core.stdc.stdint.UINTMAX_C', kind: "aliasdeclaration", path: './core/stdc/stdint/uintma_x_c.html', attributes: []},
{name: 'core.stdc.stdint.UINTMAX_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/uintma_x_max.html', attributes: []},
{name: 'core.stdc.stdint.uintmax_t', kind: "aliasdeclaration", path: './core/stdc/stdint/uintmax_t.html', attributes: []},
{name: 'core.stdc.stdint.UINTPTR_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/uintpt_r_max.html', attributes: []},
{name: 'core.stdc.stdint.UINTPTR_MIN', kind: "enummemberdeclaration", path: './core/stdc/stdint/uintpt_r_min.html', attributes: []},
{name: 'core.stdc.stdint.uintptr_t', kind: "aliasdeclaration", path: './core/stdc/stdint/uintptr_t.html', attributes: []},
{name: 'core.stdc.stdint.WCHAR_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/wcha_r_max.html', attributes: []},
{name: 'core.stdc.stdint.WCHAR_MIN', kind: "enummemberdeclaration", path: './core/stdc/stdint/wcha_r_min.html', attributes: []},
{name: 'core.stdc.stdint.WINT_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdint/win_t_max.html', attributes: []},
{name: 'core.stdc.stdint.WINT_MIN', kind: "enummemberdeclaration", path: './core/stdc/stdint/win_t_min.html', attributes: []},
{name: 'core.stdc.stdio', kind: "module", path: './core/stdc/stdio.html', attributes: []},
{name: 'core.stdc.stdio._F_BIN', kind: "enummemberdeclaration", path: './core/stdc/stdio/__f_bin.html', attributes: []},
{name: 'core.stdc.stdio._F_BUF', kind: "enummemberdeclaration", path: './core/stdc/stdio/__f_buf.html', attributes: []},
{name: 'core.stdc.stdio._F_EOF', kind: "enummemberdeclaration", path: './core/stdc/stdio/__f_eof.html', attributes: []},
{name: 'core.stdc.stdio._F_ERR', kind: "enummemberdeclaration", path: './core/stdc/stdio/__f_err.html', attributes: []},
{name: 'core.stdc.stdio._F_IN', kind: "enummemberdeclaration", path: './core/stdc/stdio/__f_in.html', attributes: []},
{name: 'core.stdc.stdio._F_LBUF', kind: "enummemberdeclaration", path: './core/stdc/stdio/__f_lbuf.html', attributes: []},
{name: 'core.stdc.stdio._F_OUT', kind: "enummemberdeclaration", path: './core/stdc/stdio/__f_out.html', attributes: []},
{name: 'core.stdc.stdio._F_RDWR', kind: "enummemberdeclaration", path: './core/stdc/stdio/__f_rdwr.html', attributes: []},
{name: 'core.stdc.stdio._F_READ', kind: "enummemberdeclaration", path: './core/stdc/stdio/__f_read.html', attributes: []},
{name: 'core.stdc.stdio._F_TERM', kind: "enummemberdeclaration", path: './core/stdc/stdio/__f_term.html', attributes: []},
{name: 'core.stdc.stdio._F_WRIT', kind: "enummemberdeclaration", path: './core/stdc/stdio/__f_writ.html', attributes: []},
{name: 'core.stdc.stdio._IO_FILE', kind: "structdeclaration", path: './core/stdc/stdio/_i_o_file.html', attributes: []},
{name: 'core.stdc.stdio._iobuf', kind: "aliasdeclaration", path: './core/stdc/stdio/_iobuf.html', attributes: []},
{name: 'core.stdc.stdio._IOFBF', kind: "enummemberdeclaration", path: './core/stdc/stdio/_iofbf.html', attributes: []},
{name: 'core.stdc.stdio._IOLBF', kind: "enummemberdeclaration", path: './core/stdc/stdio/_iolbf.html', attributes: []},
{name: 'core.stdc.stdio._IONBF', kind: "enummemberdeclaration", path: './core/stdc/stdio/_ionbf.html', attributes: []},
{name: 'core.stdc.stdio.BUFSIZ', kind: "enummemberdeclaration", path: './core/stdc/stdio/bufsiz.html', attributes: []},
{name: 'core.stdc.stdio.clearerr', kind: "functiondeclaration", path: './core/stdc/stdio/clearerr.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdio.EOF', kind: "enummemberdeclaration", path: './core/stdc/stdio/eof.html', attributes: []},
{name: 'core.stdc.stdio.fclose', kind: "functiondeclaration", path: './core/stdc/stdio/fclose.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.feof', kind: "functiondeclaration", path: './core/stdc/stdio/feof.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdio.ferror', kind: "functiondeclaration", path: './core/stdc/stdio/ferror.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdio.fflush', kind: "functiondeclaration", path: './core/stdc/stdio/fflush.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdio.fgetc', kind: "functiondeclaration", path: './core/stdc/stdio/fgetc.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdio.fgetpos', kind: "functiondeclaration", path: './core/stdc/stdio/fgetpos.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdio.fgets', kind: "functiondeclaration", path: './core/stdc/stdio/fgets.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.FILE', kind: "aliasdeclaration", path: './core/stdc/stdio/file.html', attributes: []},
{name: 'core.stdc.stdio.FILENAME_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdio/filenam_e_max.html', attributes: []},
{name: 'core.stdc.stdio.fileno', kind: "functiondeclaration", path: './core/stdc/stdio/fileno.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdio.fopen', kind: "functiondeclaration", path: './core/stdc/stdio/fopen.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.FOPEN_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdio/fope_n_max.html', attributes: []},
{name: 'core.stdc.stdio.fpos_t', kind: "structdeclaration", path: './core/stdc/stdio/fpos_t.html', attributes: []},
{name: 'core.stdc.stdio.fprintf', kind: "functiondeclaration", path: './core/stdc/stdio/fprintf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.fputc', kind: "functiondeclaration", path: './core/stdc/stdio/fputc.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdio.fputs', kind: "functiondeclaration", path: './core/stdc/stdio/fputs.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.fread', kind: "functiondeclaration", path: './core/stdc/stdio/fread.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.freopen', kind: "functiondeclaration", path: './core/stdc/stdio/freopen.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.fscanf', kind: "functiondeclaration", path: './core/stdc/stdio/fscanf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.fseek', kind: "functiondeclaration", path: './core/stdc/stdio/fseek.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdio.fsetpos', kind: "functiondeclaration", path: './core/stdc/stdio/fsetpos.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdio.ftell', kind: "functiondeclaration", path: './core/stdc/stdio/ftell.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdio.fwrite', kind: "functiondeclaration", path: './core/stdc/stdio/fwrite.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.getc', kind: "functiondeclaration", path: './core/stdc/stdio/getc.html', attributes: []},
{name: 'core.stdc.stdio.getchar', kind: "functiondeclaration", path: './core/stdc/stdio/getchar.html', attributes: []},
{name: 'core.stdc.stdio.gets', kind: "functiondeclaration", path: './core/stdc/stdio/gets.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.L_tmpnam', kind: "enummemberdeclaration", path: './core/stdc/stdio/l_tmpnam.html', attributes: []},
{name: 'core.stdc.stdio.perror', kind: "functiondeclaration", path: './core/stdc/stdio/perror.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.printf', kind: "functiondeclaration", path: './core/stdc/stdio/printf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.putc', kind: "functiondeclaration", path: './core/stdc/stdio/putc.html', attributes: []},
{name: 'core.stdc.stdio.putchar', kind: "functiondeclaration", path: './core/stdc/stdio/putchar.html', attributes: []},
{name: 'core.stdc.stdio.puts', kind: "functiondeclaration", path: './core/stdc/stdio/puts.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.remove', kind: "functiondeclaration", path: './core/stdc/stdio/remove.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.rename', kind: "functiondeclaration", path: './core/stdc/stdio/rename.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.rewind', kind: "functiondeclaration", path: './core/stdc/stdio/rewind.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdio.scanf', kind: "functiondeclaration", path: './core/stdc/stdio/scanf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.SEEK_CUR', kind: "enummemberdeclaration", path: './core/stdc/stdio/see_k_cur.html', attributes: []},
{name: 'core.stdc.stdio.SEEK_END', kind: "enummemberdeclaration", path: './core/stdc/stdio/see_k_end.html', attributes: []},
{name: 'core.stdc.stdio.SEEK_SET', kind: "enummemberdeclaration", path: './core/stdc/stdio/see_k_set.html', attributes: []},
{name: 'core.stdc.stdio.setbuf', kind: "functiondeclaration", path: './core/stdc/stdio/setbuf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.setvbuf', kind: "functiondeclaration", path: './core/stdc/stdio/setvbuf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.snprintf', kind: "functiondeclaration", path: './core/stdc/stdio/snprintf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.sprintf', kind: "functiondeclaration", path: './core/stdc/stdio/sprintf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.sscanf', kind: "functiondeclaration", path: './core/stdc/stdio/sscanf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.stderr', kind: "variabledeclaration", path: './core/stdc/stdio/stderr.html', attributes: []},
{name: 'core.stdc.stdio.stdin', kind: "variabledeclaration", path: './core/stdc/stdio/stdin.html', attributes: []},
{name: 'core.stdc.stdio.stdout', kind: "variabledeclaration", path: './core/stdc/stdio/stdout.html', attributes: []},
{name: 'core.stdc.stdio.TMP_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdio/tm_p_max.html', attributes: []},
{name: 'core.stdc.stdio.tmpfile', kind: "functiondeclaration", path: './core/stdc/stdio/tmpfile.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdio.tmpnam', kind: "functiondeclaration", path: './core/stdc/stdio/tmpnam.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.ungetc', kind: "functiondeclaration", path: './core/stdc/stdio/ungetc.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdio.vfprintf', kind: "functiondeclaration", path: './core/stdc/stdio/vfprintf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.vfscanf', kind: "functiondeclaration", path: './core/stdc/stdio/vfscanf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.vprintf', kind: "functiondeclaration", path: './core/stdc/stdio/vprintf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.vscanf', kind: "functiondeclaration", path: './core/stdc/stdio/vscanf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.vsnprintf', kind: "functiondeclaration", path: './core/stdc/stdio/vsnprintf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.vsprintf', kind: "functiondeclaration", path: './core/stdc/stdio/vsprintf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdio.vsscanf', kind: "functiondeclaration", path: './core/stdc/stdio/vsscanf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib', kind: "module", path: './core/stdc/stdlib.html', attributes: []},
{name: 'core.stdc.stdlib._compare_fp_t', kind: "aliasdeclaration", path: './core/stdc/stdlib/_compare_fp_t.html', attributes: []},
{name: 'core.stdc.stdlib._Exit', kind: "functiondeclaration", path: './core/stdc/stdlib/__exit.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.abort', kind: "functiondeclaration", path: './core/stdc/stdlib/abort.html', attributes: ["nothrow", "nogc", "safe", "extern(C)"]},
{name: 'core.stdc.stdlib.abs', kind: "functiondeclaration", path: './core/stdc/stdlib/abs.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdlib.alloca', kind: "functiondeclaration", path: './core/stdc/stdlib/alloca.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.atexit', kind: "functiondeclaration", path: './core/stdc/stdlib/atexit.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.atof', kind: "functiondeclaration", path: './core/stdc/stdlib/atof.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.atoi', kind: "functiondeclaration", path: './core/stdc/stdlib/atoi.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.atol', kind: "functiondeclaration", path: './core/stdc/stdlib/atol.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.atoll', kind: "functiondeclaration", path: './core/stdc/stdlib/atoll.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.bsearch', kind: "functiondeclaration", path: './core/stdc/stdlib/bsearch.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.calloc', kind: "functiondeclaration", path: './core/stdc/stdlib/calloc.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.div', kind: "functiondeclaration", path: './core/stdc/stdlib/div.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdlib.div_t', kind: "structdeclaration", path: './core/stdc/stdlib/div_t.html', attributes: []},
{name: 'core.stdc.stdlib.exit', kind: "functiondeclaration", path: './core/stdc/stdlib/exit.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.EXIT_FAILURE', kind: "enummemberdeclaration", path: './core/stdc/stdlib/exi_t_failure.html', attributes: []},
{name: 'core.stdc.stdlib.EXIT_SUCCESS', kind: "enummemberdeclaration", path: './core/stdc/stdlib/exi_t_success.html', attributes: []},
{name: 'core.stdc.stdlib.free', kind: "functiondeclaration", path: './core/stdc/stdlib/free.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.getenv', kind: "functiondeclaration", path: './core/stdc/stdlib/getenv.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.labs', kind: "functiondeclaration", path: './core/stdc/stdlib/labs.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdlib.ldiv', kind: "functiondeclaration", path: './core/stdc/stdlib/ldiv.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdlib.ldiv_t', kind: "structdeclaration", path: './core/stdc/stdlib/ldiv_t.html', attributes: []},
{name: 'core.stdc.stdlib.llabs', kind: "functiondeclaration", path: './core/stdc/stdlib/llabs.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdlib.lldiv', kind: "functiondeclaration", path: './core/stdc/stdlib/lldiv.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdlib.lldiv_t', kind: "structdeclaration", path: './core/stdc/stdlib/lldiv_t.html', attributes: []},
{name: 'core.stdc.stdlib.malloc', kind: "functiondeclaration", path: './core/stdc/stdlib/malloc.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.MB_CUR_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdlib/m_b_cu_r_max.html', attributes: []},
{name: 'core.stdc.stdlib.mblen', kind: "functiondeclaration", path: './core/stdc/stdlib/mblen.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.mbstowcs', kind: "functiondeclaration", path: './core/stdc/stdlib/mbstowcs.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.mbtowc', kind: "functiondeclaration", path: './core/stdc/stdlib/mbtowc.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.qsort', kind: "functiondeclaration", path: './core/stdc/stdlib/qsort.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.rand', kind: "functiondeclaration", path: './core/stdc/stdlib/rand.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdlib.RAND_MAX', kind: "enummemberdeclaration", path: './core/stdc/stdlib/ran_d_max.html', attributes: []},
{name: 'core.stdc.stdlib.realloc', kind: "functiondeclaration", path: './core/stdc/stdlib/realloc.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.srand', kind: "functiondeclaration", path: './core/stdc/stdlib/srand.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.stdlib.strtod', kind: "functiondeclaration", path: './core/stdc/stdlib/strtod.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.strtof', kind: "functiondeclaration", path: './core/stdc/stdlib/strtof.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.strtol', kind: "functiondeclaration", path: './core/stdc/stdlib/strtol.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.strtold', kind: "functiondeclaration", path: './core/stdc/stdlib/strtold.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.strtoll', kind: "functiondeclaration", path: './core/stdc/stdlib/strtoll.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.strtoul', kind: "functiondeclaration", path: './core/stdc/stdlib/strtoul.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.strtoull', kind: "functiondeclaration", path: './core/stdc/stdlib/strtoull.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.system', kind: "functiondeclaration", path: './core/stdc/stdlib/system.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.wcstombs', kind: "functiondeclaration", path: './core/stdc/stdlib/wcstombs.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.stdlib.wctomb', kind: "functiondeclaration", path: './core/stdc/stdlib/wctomb.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string', kind: "module", path: './core/stdc/string.html', attributes: []},
{name: 'core.stdc.string.memchr', kind: "functiondeclaration", path: './core/stdc/string/memchr.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.memcmp', kind: "functiondeclaration", path: './core/stdc/string/memcmp.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.memcpy', kind: "functiondeclaration", path: './core/stdc/string/memcpy.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.memmove', kind: "functiondeclaration", path: './core/stdc/string/memmove.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.memset', kind: "functiondeclaration", path: './core/stdc/string/memset.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.strcat', kind: "functiondeclaration", path: './core/stdc/string/strcat.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.strchr', kind: "functiondeclaration", path: './core/stdc/string/strchr.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.strcmp', kind: "functiondeclaration", path: './core/stdc/string/strcmp.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.strcoll', kind: "functiondeclaration", path: './core/stdc/string/strcoll.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.strcpy', kind: "functiondeclaration", path: './core/stdc/string/strcpy.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.strcspn', kind: "functiondeclaration", path: './core/stdc/string/strcspn.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.strdup', kind: "functiondeclaration", path: './core/stdc/string/strdup.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.strerror', kind: "functiondeclaration", path: './core/stdc/string/strerror.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.strerror_r', kind: "functiondeclaration", path: './core/stdc/string/strerror_r.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.strlen', kind: "functiondeclaration", path: './core/stdc/string/strlen.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.strncat', kind: "functiondeclaration", path: './core/stdc/string/strncat.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.strncmp', kind: "functiondeclaration", path: './core/stdc/string/strncmp.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.strncpy', kind: "functiondeclaration", path: './core/stdc/string/strncpy.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.strpbrk', kind: "functiondeclaration", path: './core/stdc/string/strpbrk.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.strrchr', kind: "functiondeclaration", path: './core/stdc/string/strrchr.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.strspn', kind: "functiondeclaration", path: './core/stdc/string/strspn.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.strstr', kind: "functiondeclaration", path: './core/stdc/string/strstr.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.strtok', kind: "functiondeclaration", path: './core/stdc/string/strtok.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.string.strxfrm', kind: "functiondeclaration", path: './core/stdc/string/strxfrm.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.tgmath', kind: "module", path: './core/stdc/tgmath.html', attributes: []},
{name: 'core.stdc.tgmath.acos', kind: "aliasdeclaration", path: './core/stdc/tgmath/acos.html', attributes: []},
{name: 'core.stdc.tgmath.acosh', kind: "aliasdeclaration", path: './core/stdc/tgmath/acosh.html', attributes: []},
{name: 'core.stdc.tgmath.asin', kind: "aliasdeclaration", path: './core/stdc/tgmath/asin.html', attributes: []},
{name: 'core.stdc.tgmath.asinh', kind: "aliasdeclaration", path: './core/stdc/tgmath/asinh.html', attributes: []},
{name: 'core.stdc.tgmath.atan', kind: "aliasdeclaration", path: './core/stdc/tgmath/atan.html', attributes: []},
{name: 'core.stdc.tgmath.atan2', kind: "aliasdeclaration", path: './core/stdc/tgmath/atan2.html', attributes: []},
{name: 'core.stdc.tgmath.atanh', kind: "aliasdeclaration", path: './core/stdc/tgmath/atanh.html', attributes: []},
{name: 'core.stdc.tgmath.carg', kind: "aliasdeclaration", path: './core/stdc/tgmath/carg.html', attributes: []},
{name: 'core.stdc.tgmath.cbrt', kind: "aliasdeclaration", path: './core/stdc/tgmath/cbrt.html', attributes: []},
{name: 'core.stdc.tgmath.ceil', kind: "aliasdeclaration", path: './core/stdc/tgmath/ceil.html', attributes: []},
{name: 'core.stdc.tgmath.cimag', kind: "aliasdeclaration", path: './core/stdc/tgmath/cimag.html', attributes: []},
{name: 'core.stdc.tgmath.conj', kind: "aliasdeclaration", path: './core/stdc/tgmath/conj.html', attributes: []},
{name: 'core.stdc.tgmath.copysign', kind: "aliasdeclaration", path: './core/stdc/tgmath/copysign.html', attributes: []},
{name: 'core.stdc.tgmath.cos', kind: "aliasdeclaration", path: './core/stdc/tgmath/cos.html', attributes: []},
{name: 'core.stdc.tgmath.cosh', kind: "aliasdeclaration", path: './core/stdc/tgmath/cosh.html', attributes: []},
{name: 'core.stdc.tgmath.cproj', kind: "aliasdeclaration", path: './core/stdc/tgmath/cproj.html', attributes: []},
{name: 'core.stdc.tgmath.csin', kind: "aliasdeclaration", path: './core/stdc/tgmath/csin.html', attributes: []},
{name: 'core.stdc.tgmath.erf', kind: "aliasdeclaration", path: './core/stdc/tgmath/erf.html', attributes: []},
{name: 'core.stdc.tgmath.erfc', kind: "aliasdeclaration", path: './core/stdc/tgmath/erfc.html', attributes: []},
{name: 'core.stdc.tgmath.exp', kind: "aliasdeclaration", path: './core/stdc/tgmath/exp.html', attributes: []},
{name: 'core.stdc.tgmath.exp2', kind: "aliasdeclaration", path: './core/stdc/tgmath/exp2.html', attributes: []},
{name: 'core.stdc.tgmath.expm1', kind: "aliasdeclaration", path: './core/stdc/tgmath/expm1.html', attributes: []},
{name: 'core.stdc.tgmath.fabs', kind: "aliasdeclaration", path: './core/stdc/tgmath/fabs.html', attributes: []},
{name: 'core.stdc.tgmath.fdim', kind: "aliasdeclaration", path: './core/stdc/tgmath/fdim.html', attributes: []},
{name: 'core.stdc.tgmath.floor', kind: "aliasdeclaration", path: './core/stdc/tgmath/floor.html', attributes: []},
{name: 'core.stdc.tgmath.fma', kind: "aliasdeclaration", path: './core/stdc/tgmath/fma.html', attributes: []},
{name: 'core.stdc.tgmath.fmax', kind: "aliasdeclaration", path: './core/stdc/tgmath/fmax.html', attributes: []},
{name: 'core.stdc.tgmath.fmin', kind: "aliasdeclaration", path: './core/stdc/tgmath/fmin.html', attributes: []},
{name: 'core.stdc.tgmath.fmod', kind: "aliasdeclaration", path: './core/stdc/tgmath/fmod.html', attributes: []},
{name: 'core.stdc.tgmath.frexp', kind: "aliasdeclaration", path: './core/stdc/tgmath/frexp.html', attributes: []},
{name: 'core.stdc.tgmath.hypot', kind: "aliasdeclaration", path: './core/stdc/tgmath/hypot.html', attributes: []},
{name: 'core.stdc.tgmath.ilogb', kind: "aliasdeclaration", path: './core/stdc/tgmath/ilogb.html', attributes: []},
{name: 'core.stdc.tgmath.ldexp', kind: "aliasdeclaration", path: './core/stdc/tgmath/ldexp.html', attributes: []},
{name: 'core.stdc.tgmath.lgamma', kind: "aliasdeclaration", path: './core/stdc/tgmath/lgamma.html', attributes: []},
{name: 'core.stdc.tgmath.llrint', kind: "aliasdeclaration", path: './core/stdc/tgmath/llrint.html', attributes: []},
{name: 'core.stdc.tgmath.llround', kind: "aliasdeclaration", path: './core/stdc/tgmath/llround.html', attributes: []},
{name: 'core.stdc.tgmath.log', kind: "aliasdeclaration", path: './core/stdc/tgmath/log.html', attributes: []},
{name: 'core.stdc.tgmath.log10', kind: "aliasdeclaration", path: './core/stdc/tgmath/log10.html', attributes: []},
{name: 'core.stdc.tgmath.log1p', kind: "aliasdeclaration", path: './core/stdc/tgmath/log1p.html', attributes: []},
{name: 'core.stdc.tgmath.log2', kind: "aliasdeclaration", path: './core/stdc/tgmath/log2.html', attributes: []},
{name: 'core.stdc.tgmath.logb', kind: "aliasdeclaration", path: './core/stdc/tgmath/logb.html', attributes: []},
{name: 'core.stdc.tgmath.lrint', kind: "aliasdeclaration", path: './core/stdc/tgmath/lrint.html', attributes: []},
{name: 'core.stdc.tgmath.lround', kind: "aliasdeclaration", path: './core/stdc/tgmath/lround.html', attributes: []},
{name: 'core.stdc.tgmath.modf', kind: "aliasdeclaration", path: './core/stdc/tgmath/modf.html', attributes: []},
{name: 'core.stdc.tgmath.nan', kind: "aliasdeclaration", path: './core/stdc/tgmath/nan.html', attributes: []},
{name: 'core.stdc.tgmath.nearbyint', kind: "aliasdeclaration", path: './core/stdc/tgmath/nearbyint.html', attributes: []},
{name: 'core.stdc.tgmath.nextafter', kind: "aliasdeclaration", path: './core/stdc/tgmath/nextafter.html', attributes: []},
{name: 'core.stdc.tgmath.nexttoward', kind: "aliasdeclaration", path: './core/stdc/tgmath/nexttoward.html', attributes: []},
{name: 'core.stdc.tgmath.pow', kind: "aliasdeclaration", path: './core/stdc/tgmath/pow.html', attributes: []},
{name: 'core.stdc.tgmath.remainder', kind: "aliasdeclaration", path: './core/stdc/tgmath/remainder.html', attributes: []},
{name: 'core.stdc.tgmath.remquo', kind: "aliasdeclaration", path: './core/stdc/tgmath/remquo.html', attributes: []},
{name: 'core.stdc.tgmath.rint', kind: "aliasdeclaration", path: './core/stdc/tgmath/rint.html', attributes: []},
{name: 'core.stdc.tgmath.round', kind: "aliasdeclaration", path: './core/stdc/tgmath/round.html', attributes: []},
{name: 'core.stdc.tgmath.scalbln', kind: "aliasdeclaration", path: './core/stdc/tgmath/scalbln.html', attributes: []},
{name: 'core.stdc.tgmath.scalbn', kind: "aliasdeclaration", path: './core/stdc/tgmath/scalbn.html', attributes: []},
{name: 'core.stdc.tgmath.sin', kind: "aliasdeclaration", path: './core/stdc/tgmath/sin.html', attributes: []},
{name: 'core.stdc.tgmath.sinh', kind: "aliasdeclaration", path: './core/stdc/tgmath/sinh.html', attributes: []},
{name: 'core.stdc.tgmath.sqrt', kind: "aliasdeclaration", path: './core/stdc/tgmath/sqrt.html', attributes: []},
{name: 'core.stdc.tgmath.tan', kind: "aliasdeclaration", path: './core/stdc/tgmath/tan.html', attributes: []},
{name: 'core.stdc.tgmath.tanh', kind: "aliasdeclaration", path: './core/stdc/tgmath/tanh.html', attributes: []},
{name: 'core.stdc.tgmath.tgamma', kind: "aliasdeclaration", path: './core/stdc/tgmath/tgamma.html', attributes: []},
{name: 'core.stdc.tgmath.trunc', kind: "aliasdeclaration", path: './core/stdc/tgmath/trunc.html', attributes: []},
{name: 'core.stdc.time', kind: "module", path: './core/stdc/time.html', attributes: []},
{name: 'core.stdc.time.asctime', kind: "functiondeclaration", path: './core/stdc/time/asctime.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.time.ctime', kind: "functiondeclaration", path: './core/stdc/time/ctime.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.time.difftime', kind: "functiondeclaration", path: './core/stdc/time/difftime.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.time.gmtime', kind: "functiondeclaration", path: './core/stdc/time/gmtime.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.time.localtime', kind: "functiondeclaration", path: './core/stdc/time/localtime.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.time.mktime', kind: "functiondeclaration", path: './core/stdc/time/mktime.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.time.strftime', kind: "functiondeclaration", path: './core/stdc/time/strftime.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.time.time', kind: "functiondeclaration", path: './core/stdc/time/time.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wchar_', kind: "module", path: './core/stdc/wchar_.html', attributes: []},
{name: 'core.stdc.wchar_.btowc', kind: "functiondeclaration", path: './core/stdc/wchar_/btowc.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wchar_.fgetwc', kind: "functiondeclaration", path: './core/stdc/wchar_/fgetwc.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wchar_.fgetws', kind: "functiondeclaration", path: './core/stdc/wchar_/fgetws.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.fputwc', kind: "functiondeclaration", path: './core/stdc/wchar_/fputwc.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wchar_.fputws', kind: "functiondeclaration", path: './core/stdc/wchar_/fputws.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.fwide', kind: "functiondeclaration", path: './core/stdc/wchar_/fwide.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wchar_.fwprintf', kind: "functiondeclaration", path: './core/stdc/wchar_/fwprintf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.fwscanf', kind: "functiondeclaration", path: './core/stdc/wchar_/fwscanf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.getwc', kind: "functiondeclaration", path: './core/stdc/wchar_/getwc.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'core.stdc.wchar_.getwchar', kind: "functiondeclaration", path: './core/stdc/wchar_/getwchar.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'core.stdc.wchar_.mbrlen', kind: "functiondeclaration", path: './core/stdc/wchar_/mbrlen.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.mbrtowc', kind: "functiondeclaration", path: './core/stdc/wchar_/mbrtowc.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.mbsinit', kind: "functiondeclaration", path: './core/stdc/wchar_/mbsinit.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.mbsrtowcs', kind: "functiondeclaration", path: './core/stdc/wchar_/mbsrtowcs.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.mbstate_t', kind: "structdeclaration", path: './core/stdc/wchar_/mbstate_t.html', attributes: []},
{name: 'core.stdc.wchar_.putwc', kind: "functiondeclaration", path: './core/stdc/wchar_/putwc.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'core.stdc.wchar_.putwchar', kind: "functiondeclaration", path: './core/stdc/wchar_/putwchar.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'core.stdc.wchar_.swprintf', kind: "functiondeclaration", path: './core/stdc/wchar_/swprintf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.swscanf', kind: "functiondeclaration", path: './core/stdc/wchar_/swscanf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.ungetwc', kind: "functiondeclaration", path: './core/stdc/wchar_/ungetwc.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wchar_.vfwprintf', kind: "functiondeclaration", path: './core/stdc/wchar_/vfwprintf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.vfwscanf', kind: "functiondeclaration", path: './core/stdc/wchar_/vfwscanf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.vswprintf', kind: "functiondeclaration", path: './core/stdc/wchar_/vswprintf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.vswscanf', kind: "functiondeclaration", path: './core/stdc/wchar_/vswscanf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.vwprintf', kind: "functiondeclaration", path: './core/stdc/wchar_/vwprintf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.vwscanf', kind: "functiondeclaration", path: './core/stdc/wchar_/vwscanf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcrtomb', kind: "functiondeclaration", path: './core/stdc/wchar_/wcrtomb.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcscat', kind: "functiondeclaration", path: './core/stdc/wchar_/wcscat.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcschr', kind: "functiondeclaration", path: './core/stdc/wchar_/wcschr.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcscmp', kind: "functiondeclaration", path: './core/stdc/wchar_/wcscmp.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcscoll', kind: "functiondeclaration", path: './core/stdc/wchar_/wcscoll.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcscpy', kind: "functiondeclaration", path: './core/stdc/wchar_/wcscpy.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcscspn', kind: "functiondeclaration", path: './core/stdc/wchar_/wcscspn.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcsftime', kind: "functiondeclaration", path: './core/stdc/wchar_/wcsftime.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcslen', kind: "functiondeclaration", path: './core/stdc/wchar_/wcslen.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcsncat', kind: "functiondeclaration", path: './core/stdc/wchar_/wcsncat.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcsncmp', kind: "functiondeclaration", path: './core/stdc/wchar_/wcsncmp.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcsncpy', kind: "functiondeclaration", path: './core/stdc/wchar_/wcsncpy.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcspbrk', kind: "functiondeclaration", path: './core/stdc/wchar_/wcspbrk.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcsrchr', kind: "functiondeclaration", path: './core/stdc/wchar_/wcsrchr.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcsrtombs', kind: "functiondeclaration", path: './core/stdc/wchar_/wcsrtombs.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcsspn', kind: "functiondeclaration", path: './core/stdc/wchar_/wcsspn.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcsstr', kind: "functiondeclaration", path: './core/stdc/wchar_/wcsstr.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcstod', kind: "functiondeclaration", path: './core/stdc/wchar_/wcstod.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcstof', kind: "functiondeclaration", path: './core/stdc/wchar_/wcstof.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcstok', kind: "functiondeclaration", path: './core/stdc/wchar_/wcstok.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcstol', kind: "functiondeclaration", path: './core/stdc/wchar_/wcstol.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcstold', kind: "functiondeclaration", path: './core/stdc/wchar_/wcstold.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcstoll', kind: "functiondeclaration", path: './core/stdc/wchar_/wcstoll.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcstoul', kind: "functiondeclaration", path: './core/stdc/wchar_/wcstoul.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcstoull', kind: "functiondeclaration", path: './core/stdc/wchar_/wcstoull.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wcsxfrm', kind: "functiondeclaration", path: './core/stdc/wchar_/wcsxfrm.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wctob', kind: "functiondeclaration", path: './core/stdc/wchar_/wctob.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wchar_.WEOF', kind: "enummemberdeclaration", path: './core/stdc/wchar_/weof.html', attributes: []},
{name: 'core.stdc.wchar_.wint_t', kind: "aliasdeclaration", path: './core/stdc/wchar_/wint_t.html', attributes: []},
{name: 'core.stdc.wchar_.wmemchr', kind: "functiondeclaration", path: './core/stdc/wchar_/wmemchr.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wmemcmp', kind: "functiondeclaration", path: './core/stdc/wchar_/wmemcmp.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wmemcpy', kind: "functiondeclaration", path: './core/stdc/wchar_/wmemcpy.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wmemmove', kind: "functiondeclaration", path: './core/stdc/wchar_/wmemmove.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wmemset', kind: "functiondeclaration", path: './core/stdc/wchar_/wmemset.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wprintf', kind: "functiondeclaration", path: './core/stdc/wchar_/wprintf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wchar_.wscanf', kind: "functiondeclaration", path: './core/stdc/wchar_/wscanf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wctype', kind: "module", path: './core/stdc/wctype.html', attributes: []},
{name: 'core.stdc.wctype.iswalnum', kind: "functiondeclaration", path: './core/stdc/wctype/iswalnum.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wctype.iswalpha', kind: "functiondeclaration", path: './core/stdc/wctype/iswalpha.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wctype.iswblank', kind: "functiondeclaration", path: './core/stdc/wctype/iswblank.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wctype.iswcntrl', kind: "functiondeclaration", path: './core/stdc/wctype/iswcntrl.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wctype.iswctype', kind: "functiondeclaration", path: './core/stdc/wctype/iswctype.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wctype.iswdigit', kind: "functiondeclaration", path: './core/stdc/wctype/iswdigit.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wctype.iswgraph', kind: "functiondeclaration", path: './core/stdc/wctype/iswgraph.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wctype.iswlower', kind: "functiondeclaration", path: './core/stdc/wctype/iswlower.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wctype.iswprint', kind: "functiondeclaration", path: './core/stdc/wctype/iswprint.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wctype.iswpunct', kind: "functiondeclaration", path: './core/stdc/wctype/iswpunct.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wctype.iswspace', kind: "functiondeclaration", path: './core/stdc/wctype/iswspace.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wctype.iswupper', kind: "functiondeclaration", path: './core/stdc/wctype/iswupper.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wctype.iswxdigit', kind: "functiondeclaration", path: './core/stdc/wctype/iswxdigit.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wctype.towctrans', kind: "functiondeclaration", path: './core/stdc/wctype/towctrans.html', attributes: ["nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wctype.towlower', kind: "functiondeclaration", path: './core/stdc/wctype/towlower.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wctype.towupper', kind: "functiondeclaration", path: './core/stdc/wctype/towupper.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.stdc.wctype.wctrans', kind: "functiondeclaration", path: './core/stdc/wctype/wctrans.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wctype.wctrans_t', kind: "aliasdeclaration", path: './core/stdc/wctype/wctrans_t.html', attributes: []},
{name: 'core.stdc.wctype.wctype', kind: "functiondeclaration", path: './core/stdc/wctype/wctype.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.stdc.wctype.wctype_t', kind: "aliasdeclaration", path: './core/stdc/wctype/wctype_t.html', attributes: []},
{name: 'core.stdcpp.allocator', kind: "module", path: './core/stdcpp/allocator.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator', kind: "structdeclaration", path: './core/stdcpp/allocator/allocator.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator.allocate', kind: "functiondeclaration", path: './core/stdcpp/allocator/allocator.allocate.html', attributes: ["nogc"]},
{name: 'core.stdcpp.allocator.allocator.deallocate', kind: "functiondeclaration", path: './core/stdcpp/allocator/allocator.deallocate.html', attributes: ["nogc"]},
{name: 'core.stdcpp.allocator.allocator.difference_type', kind: "aliasdeclaration", path: './core/stdcpp/allocator/allocator.difference_type.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator.is_always_equal', kind: "enummemberdeclaration", path: './core/stdcpp/allocator/allocator.is_always_equal.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator.max_size', kind: "enummemberdeclaration", path: './core/stdcpp/allocator/allocator.max_size.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator.pointer', kind: "aliasdeclaration", path: './core/stdcpp/allocator/allocator.pointer.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator.propagate_on_container_move_assignment', kind: "enummemberdeclaration", path: './core/stdcpp/allocator/allocator.propagate_on_container_move_assignment.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator.rebind', kind: "aliasdeclaration", path: './core/stdcpp/allocator/allocator.rebind.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator.size_type', kind: "aliasdeclaration", path: './core/stdcpp/allocator/allocator.size_type.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator.this', kind: "functiondeclaration", path: './core/stdcpp/allocator/allocator.this.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator.value_type', kind: "aliasdeclaration", path: './core/stdcpp/allocator/allocator.value_type.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator_traits', kind: "structdeclaration", path: './core/stdcpp/allocator/allocator_traits.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator_traits.allocator_type', kind: "aliasdeclaration", path: './core/stdcpp/allocator/allocator_traits.allocator_type.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator_traits.difference_type', kind: "aliasdeclaration", path: './core/stdcpp/allocator/allocator_traits.difference_type.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator_traits.is_always_equal', kind: "enummemberdeclaration", path: './core/stdcpp/allocator/allocator_traits.is_always_equal.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator_traits.max_size', kind: "functiondeclaration", path: './core/stdcpp/allocator/allocator_traits.max_size.html', attributes: ["extern(C++)"]},
{name: 'core.stdcpp.allocator.allocator_traits.pointer', kind: "aliasdeclaration", path: './core/stdcpp/allocator/allocator_traits.pointer.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator_traits.propagate_on_container_copy_assignment', kind: "enummemberdeclaration", path: './core/stdcpp/allocator/allocator_traits.propagate_on_container_copy_assignment.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator_traits.propagate_on_container_move_assignment', kind: "enummemberdeclaration", path: './core/stdcpp/allocator/allocator_traits.propagate_on_container_move_assignment.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator_traits.propagate_on_container_swap', kind: "enummemberdeclaration", path: './core/stdcpp/allocator/allocator_traits.propagate_on_container_swap.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator_traits.rebind_alloc', kind: "aliasdeclaration", path: './core/stdcpp/allocator/allocator_traits.rebind_alloc.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator_traits.rebind_traits', kind: "aliasdeclaration", path: './core/stdcpp/allocator/allocator_traits.rebind_traits.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator_traits.select_on_container_copy_construction', kind: "functiondeclaration", path: './core/stdcpp/allocator/allocator_traits.select_on_container_copy_construction.html', attributes: ["extern(C++)"]},
{name: 'core.stdcpp.allocator.allocator_traits.size_type', kind: "aliasdeclaration", path: './core/stdcpp/allocator/allocator_traits.size_type.html', attributes: []},
{name: 'core.stdcpp.allocator.allocator_traits.value_type', kind: "aliasdeclaration", path: './core/stdcpp/allocator/allocator_traits.value_type.html', attributes: []},
{name: 'core.stdcpp.array', kind: "module", path: './core/stdcpp/array.html', attributes: []},
{name: 'core.stdcpp.array.array', kind: "structdeclaration", path: './core/stdcpp/array/array.html', attributes: []},
{name: 'core.stdcpp.array.array.as_array', kind: "functiondeclaration", path: './core/stdcpp/array/array.as_array.html', attributes: ["inout", "ref", "safe"]},
{name: 'core.stdcpp.array.array.at', kind: "functiondeclaration", path: './core/stdcpp/array/array.at.html', attributes: ["inout", "ref", "safe"]},
{name: 'core.stdcpp.array.array.back', kind: "functiondeclaration", path: './core/stdcpp/array/array.back.html', attributes: ["inout", "ref", "safe"]},
{name: 'core.stdcpp.array.array.const_pointer', kind: "aliasdeclaration", path: './core/stdcpp/array/array.const_pointer.html', attributes: []},
{name: 'core.stdcpp.array.array.data', kind: "functiondeclaration", path: './core/stdcpp/array/array.data.html', attributes: ["inout", "safe"]},
{name: 'core.stdcpp.array.array.difference_type', kind: "aliasdeclaration", path: './core/stdcpp/array/array.difference_type.html', attributes: []},
{name: 'core.stdcpp.array.array.empty', kind: "functiondeclaration", path: './core/stdcpp/array/array.empty.html', attributes: ["const", "safe"]},
{name: 'core.stdcpp.array.array.fill', kind: "functiondeclaration", path: './core/stdcpp/array/array.fill.html', attributes: []},
{name: 'core.stdcpp.array.array.front', kind: "functiondeclaration", path: './core/stdcpp/array/array.front.html', attributes: ["inout", "ref", "safe"]},
{name: 'core.stdcpp.array.array.length', kind: "aliasdeclaration", path: './core/stdcpp/array/array.length.html', attributes: []},
{name: 'core.stdcpp.array.array.max_size', kind: "functiondeclaration", path: './core/stdcpp/array/array.max_size.html', attributes: ["const", "safe"]},
{name: 'core.stdcpp.array.array.opDollar', kind: "aliasdeclaration", path: './core/stdcpp/array/array.op_dollar.html', attributes: []},
{name: 'core.stdcpp.array.array.pointer', kind: "aliasdeclaration", path: './core/stdcpp/array/array.pointer.html', attributes: []},
{name: 'core.stdcpp.array.array.size', kind: "functiondeclaration", path: './core/stdcpp/array/array.size.html', attributes: ["const", "safe"]},
{name: 'core.stdcpp.array.array.size_type', kind: "aliasdeclaration", path: './core/stdcpp/array/array.size_type.html', attributes: []},
{name: 'core.stdcpp.array.array.this', kind: "functiondeclaration", path: './core/stdcpp/array/array.this.html', attributes: []},
{name: 'core.stdcpp.array.array.value_type', kind: "aliasdeclaration", path: './core/stdcpp/array/array.value_type.html', attributes: []},
{name: 'core.stdcpp.exception', kind: "module", path: './core/stdcpp/exception.html', attributes: []},
{name: 'core.stdcpp.exception.bad_exception', kind: "classdeclaration", path: './core/stdcpp/exception/bad_exception.html', attributes: []},
{name: 'core.stdcpp.exception.bad_exception.this', kind: "functiondeclaration", path: './core/stdcpp/exception/bad_exception.this.html', attributes: ["nogc", "extern(C++)"]},
{name: 'core.stdcpp.exception.exception.what', kind: "functiondeclaration", path: './core/stdcpp/exception/exception.what.html', attributes: ["nothrow", "nogc", "extern(C++)", "const"]},
{name: 'core.stdcpp.exception.exception', kind: "classdeclaration", path: './core/stdcpp/exception/exception.html', attributes: []},
{name: 'core.stdcpp.exception.exception.this', kind: "functiondeclaration", path: './core/stdcpp/exception/exception.this.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'core.stdcpp.exception.get_terminate', kind: "functiondeclaration", path: './core/stdcpp/exception/get_terminate.html', attributes: []},
{name: 'core.stdcpp.exception.get_unexpected', kind: "functiondeclaration", path: './core/stdcpp/exception/get_unexpected.html', attributes: ["deprecated"]},
{name: 'core.stdcpp.exception.set_terminate', kind: "functiondeclaration", path: './core/stdcpp/exception/set_terminate.html', attributes: []},
{name: 'core.stdcpp.exception.set_unexpected', kind: "functiondeclaration", path: './core/stdcpp/exception/set_unexpected.html', attributes: ["deprecated"]},
{name: 'core.stdcpp.exception.terminate', kind: "functiondeclaration", path: './core/stdcpp/exception/terminate.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'core.stdcpp.exception.terminate_handler', kind: "aliasdeclaration", path: './core/stdcpp/exception/terminate_handler.html', attributes: []},
{name: 'core.stdcpp.exception.uncaught_exception', kind: "functiondeclaration", path: './core/stdcpp/exception/uncaught_exception.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'core.stdcpp.exception.unexpected', kind: "functiondeclaration", path: './core/stdcpp/exception/unexpected.html', attributes: ["deprecated", "nogc", "extern(C++)"]},
{name: 'core.stdcpp.exception.unexpected_handler', kind: "aliasdeclaration", path: './core/stdcpp/exception/unexpected_handler.html', attributes: []},
{name: 'core.stdcpp.memory', kind: "module", path: './core/stdcpp/memory.html', attributes: []},
{name: 'core.stdcpp.memory.default_delete', kind: "structdeclaration", path: './core/stdcpp/memory/default_delete.html', attributes: []},
{name: 'core.stdcpp.memory.default_delete.opCall', kind: "functiondeclaration", path: './core/stdcpp/memory/default_delete.op_call.html', attributes: []},
{name: 'core.stdcpp.memory.default_delete.pointer', kind: "aliasdeclaration", path: './core/stdcpp/memory/default_delete.pointer.html', attributes: []},
{name: 'core.stdcpp.memory.make_unique', kind: "functiondeclaration", path: './core/stdcpp/memory/make_unique.html', attributes: ["extern(C++)"]},
{name: 'core.stdcpp.memory.unique_ptr', kind: "structdeclaration", path: './core/stdcpp/memory/unique_ptr.html', attributes: []},
{name: 'core.stdcpp.memory.unique_ptr.deleter_type', kind: "aliasdeclaration", path: './core/stdcpp/memory/unique_ptr.deleter_type.html', attributes: []},
{name: 'core.stdcpp.memory.unique_ptr.element_type', kind: "aliasdeclaration", path: './core/stdcpp/memory/unique_ptr.element_type.html', attributes: []},
{name: 'core.stdcpp.memory.unique_ptr.get', kind: "functiondeclaration", path: './core/stdcpp/memory/unique_ptr.get.html', attributes: ["inout", "nothrow"]},
{name: 'core.stdcpp.memory.unique_ptr.get_deleter', kind: "functiondeclaration", path: './core/stdcpp/memory/unique_ptr.get_deleter.html', attributes: ["inout", "nothrow", "ref"]},
{name: 'core.stdcpp.memory.unique_ptr.opAssign', kind: "functiondeclaration", path: './core/stdcpp/memory/unique_ptr.op_assign.html', attributes: ["ref"]},
{name: 'core.stdcpp.memory.unique_ptr.opCast', kind: "functiondeclaration", path: './core/stdcpp/memory/unique_ptr.op_cast.html', attributes: ["const", "nothrow"]},
{name: 'core.stdcpp.memory.unique_ptr.pointer', kind: "aliasdeclaration", path: './core/stdcpp/memory/unique_ptr.pointer.html', attributes: []},
{name: 'core.stdcpp.memory.unique_ptr.release', kind: "functiondeclaration", path: './core/stdcpp/memory/unique_ptr.release.html', attributes: ["nothrow"]},
{name: 'core.stdcpp.memory.unique_ptr.reset', kind: "functiondeclaration", path: './core/stdcpp/memory/unique_ptr.reset.html', attributes: []},
{name: 'core.stdcpp.memory.unique_ptr.this', kind: "functiondeclaration", path: './core/stdcpp/memory/unique_ptr.this.html', attributes: []},
{name: 'core.stdcpp.new_', kind: "module", path: './core/stdcpp/new_.html', attributes: []},
{name: 'core.stdcpp.new_.align_val_t', kind: "enumdeclaration", path: './core/stdcpp/new_/align_val_t.html', attributes: []},
{name: 'core.stdcpp.new_.bad_alloc', kind: "classdeclaration", path: './core/stdcpp/new_/bad_alloc.html', attributes: []},
{name: 'core.stdcpp.new_.bad_alloc.this', kind: "functiondeclaration", path: './core/stdcpp/new_/bad_alloc.this.html', attributes: ["nogc", "extern(C++)"]},
{name: 'core.stdcpp.new_.cpp_delete', kind: "functiondeclaration", path: './core/stdcpp/new_/cpp_delete.html', attributes: []},
{name: 'core.stdcpp.new_.cpp_new', kind: "functiondeclaration", path: './core/stdcpp/new_/cpp_new.html', attributes: []},
{name: 'core.stdcpp.new_.nothrow_t', kind: "structdeclaration", path: './core/stdcpp/new_/nothrow_t.html', attributes: []},
{name: 'core.stdcpp.string', kind: "module", path: './core/stdcpp/string.html', attributes: []},
{name: 'core.stdcpp.string.basic_string', kind: "structdeclaration", path: './core/stdcpp/string/basic_string.html', attributes: []},
{name: 'core.stdcpp.string.basic_string.allocator_type', kind: "aliasdeclaration", path: './core/stdcpp/string/basic_string.allocator_type.html', attributes: []},
{name: 'core.stdcpp.string.basic_string.append', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.append.html', attributes: ["ref"]},
{name: 'core.stdcpp.string.basic_string.as_array', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.as_array.html', attributes: ["inout", "nothrow", "trusted"]},
{name: 'core.stdcpp.string.basic_string.assign', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.assign.html', attributes: ["ref"]},
{name: 'core.stdcpp.string.basic_string.at', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.at.html', attributes: ["inout", "nothrow", "ref", "trusted"]},
{name: 'core.stdcpp.string.basic_string.back', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.back.html', attributes: ["inout", "nothrow", "ref", "safe"]},
{name: 'core.stdcpp.string.basic_string.c_str', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.c_str.html', attributes: ["const", "nothrow", "safe"]},
{name: 'core.stdcpp.string.basic_string.capacity', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.capacity.html', attributes: ["const", "nothrow", "safe"]},
{name: 'core.stdcpp.string.basic_string.clear', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.clear.html', attributes: []},
{name: 'core.stdcpp.string.basic_string.const_pointer', kind: "aliasdeclaration", path: './core/stdcpp/string/basic_string.const_pointer.html', attributes: []},
{name: 'core.stdcpp.string.basic_string.data', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.data.html', attributes: ["inout", "safe"]},
{name: 'core.stdcpp.string.basic_string.difference_type', kind: "aliasdeclaration", path: './core/stdcpp/string/basic_string.difference_type.html', attributes: []},
{name: 'core.stdcpp.string.basic_string.empty', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.empty.html', attributes: ["const", "nothrow", "safe"]},
{name: 'core.stdcpp.string.basic_string.erase', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.erase.html', attributes: ["ref"]},
{name: 'core.stdcpp.string.basic_string.front', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.front.html', attributes: ["inout", "nothrow", "ref", "safe"]},
{name: 'core.stdcpp.string.basic_string.get_allocator', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.get_allocator.html', attributes: ["inout", "ref"]},
{name: 'core.stdcpp.string.basic_string.insert', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.insert.html', attributes: ["ref"]},
{name: 'core.stdcpp.string.basic_string.length', kind: "aliasdeclaration", path: './core/stdcpp/string/basic_string.length.html', attributes: []},
{name: 'core.stdcpp.string.basic_string.max_size', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.max_size.html', attributes: ["const", "nothrow", "safe"]},
{name: 'core.stdcpp.string.basic_string.npos', kind: "enummemberdeclaration", path: './core/stdcpp/string/basic_string.npos.html', attributes: []},
{name: 'core.stdcpp.string.basic_string.opAssign', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.op_assign.html', attributes: ["ref"]},
{name: 'core.stdcpp.string.basic_string.opDollar', kind: "aliasdeclaration", path: './core/stdcpp/string/basic_string.op_dollar.html', attributes: []},
{name: 'core.stdcpp.string.basic_string.opIndex', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.op_index.html', attributes: ["inout", "pure", "nothrow", "nogc", "ref", "safe"]},
{name: 'core.stdcpp.string.basic_string.opIndexAssign', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.op_index_assign.html', attributes: ["ref"]},
{name: 'core.stdcpp.string.basic_string.opIndexOpAssign', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.op_index_op_assign.html', attributes: ["ref"]},
{name: 'core.stdcpp.string.basic_string.opOpAssign', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.op_op_assign.html', attributes: ["ref"]},
{name: 'core.stdcpp.string.basic_string.opSlice', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.op_slice.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'core.stdcpp.string.basic_string.pointer', kind: "aliasdeclaration", path: './core/stdcpp/string/basic_string.pointer.html', attributes: []},
{name: 'core.stdcpp.string.basic_string.pop_back', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.pop_back.html', attributes: []},
{name: 'core.stdcpp.string.basic_string.push_back', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.push_back.html', attributes: ["trusted"]},
{name: 'core.stdcpp.string.basic_string.replace', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.replace.html', attributes: ["ref"]},
{name: 'core.stdcpp.string.basic_string.reserve', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.reserve.html', attributes: []},
{name: 'core.stdcpp.string.basic_string.resize', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.resize.html', attributes: ["trusted"]},
{name: 'core.stdcpp.string.basic_string.shrink_to_fit', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.shrink_to_fit.html', attributes: []},
{name: 'core.stdcpp.string.basic_string.size', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.size.html', attributes: ["const", "nothrow", "safe"]},
{name: 'core.stdcpp.string.basic_string.size_type', kind: "aliasdeclaration", path: './core/stdcpp/string/basic_string.size_type.html', attributes: []},
{name: 'core.stdcpp.string.basic_string.swap', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.swap.html', attributes: []},
{name: 'core.stdcpp.string.basic_string.this', kind: "functiondeclaration", path: './core/stdcpp/string/basic_string.this.html', attributes: ["disable"]},
{name: 'core.stdcpp.string.basic_string.toString', kind: "aliasdeclaration", path: './core/stdcpp/string/basic_string.to_string.html', attributes: []},
{name: 'core.stdcpp.string.basic_string.traits_type', kind: "aliasdeclaration", path: './core/stdcpp/string/basic_string.traits_type.html', attributes: []},
{name: 'core.stdcpp.string.basic_string.value_type', kind: "aliasdeclaration", path: './core/stdcpp/string/basic_string.value_type.html', attributes: []},
{name: 'core.stdcpp.string.char_traits', kind: "structdeclaration", path: './core/stdcpp/string/char_traits.html', attributes: []},
{name: 'core.stdcpp.string.Default', kind: "enummemberdeclaration", path: './core/stdcpp/string/default.html', attributes: []},
{name: 'core.stdcpp.string_view', kind: "module", path: './core/stdcpp/string_view.html', attributes: []},
{name: 'core.stdcpp.string_view.basic_string_view', kind: "structdeclaration", path: './core/stdcpp/string_view/basic_string_view.html', attributes: []},
{name: 'core.stdcpp.string_view.basic_string_view.as_array', kind: "functiondeclaration", path: './core/stdcpp/string_view/basic_string_view.as_array.html', attributes: ["const", "trusted"]},
{name: 'core.stdcpp.string_view.basic_string_view.at', kind: "functiondeclaration", path: './core/stdcpp/string_view/basic_string_view.at.html', attributes: ["const", "ref", "trusted"]},
{name: 'core.stdcpp.string_view.basic_string_view.back', kind: "functiondeclaration", path: './core/stdcpp/string_view/basic_string_view.back.html', attributes: ["const", "ref", "safe"]},
{name: 'core.stdcpp.string_view.basic_string_view.const_pointer', kind: "aliasdeclaration", path: './core/stdcpp/string_view/basic_string_view.const_pointer.html', attributes: []},
{name: 'core.stdcpp.string_view.basic_string_view.data', kind: "functiondeclaration", path: './core/stdcpp/string_view/basic_string_view.data.html', attributes: ["const", "safe"]},
{name: 'core.stdcpp.string_view.basic_string_view.difference_type', kind: "aliasdeclaration", path: './core/stdcpp/string_view/basic_string_view.difference_type.html', attributes: []},
{name: 'core.stdcpp.string_view.basic_string_view.empty', kind: "functiondeclaration", path: './core/stdcpp/string_view/basic_string_view.empty.html', attributes: ["const", "safe"]},
{name: 'core.stdcpp.string_view.basic_string_view.front', kind: "functiondeclaration", path: './core/stdcpp/string_view/basic_string_view.front.html', attributes: ["const", "ref", "safe"]},
{name: 'core.stdcpp.string_view.basic_string_view.length', kind: "aliasdeclaration", path: './core/stdcpp/string_view/basic_string_view.length.html', attributes: []},
{name: 'core.stdcpp.string_view.basic_string_view.npos', kind: "enummemberdeclaration", path: './core/stdcpp/string_view/basic_string_view.npos.html', attributes: []},
{name: 'core.stdcpp.string_view.basic_string_view.opDollar', kind: "aliasdeclaration", path: './core/stdcpp/string_view/basic_string_view.op_dollar.html', attributes: []},
{name: 'core.stdcpp.string_view.basic_string_view.pointer', kind: "aliasdeclaration", path: './core/stdcpp/string_view/basic_string_view.pointer.html', attributes: []},
{name: 'core.stdcpp.string_view.basic_string_view.size', kind: "functiondeclaration", path: './core/stdcpp/string_view/basic_string_view.size.html', attributes: ["const", "safe"]},
{name: 'core.stdcpp.string_view.basic_string_view.size_type', kind: "aliasdeclaration", path: './core/stdcpp/string_view/basic_string_view.size_type.html', attributes: []},
{name: 'core.stdcpp.string_view.basic_string_view.this', kind: "functiondeclaration", path: './core/stdcpp/string_view/basic_string_view.this.html', attributes: ["trusted"]},
{name: 'core.stdcpp.string_view.basic_string_view.toString', kind: "aliasdeclaration", path: './core/stdcpp/string_view/basic_string_view.to_string.html', attributes: []},
{name: 'core.stdcpp.string_view.basic_string_view.value_type', kind: "aliasdeclaration", path: './core/stdcpp/string_view/basic_string_view.value_type.html', attributes: []},
{name: 'core.stdcpp.string_view.char_traits', kind: "structdeclaration", path: './core/stdcpp/string_view/char_traits.html', attributes: []},
{name: 'core.stdcpp.string_view.string_view', kind: "aliasdeclaration", path: './core/stdcpp/string_view/string_view.html', attributes: []},
{name: 'core.stdcpp.string_view.u16string_view', kind: "aliasdeclaration", path: './core/stdcpp/string_view/u16string_view.html', attributes: []},
{name: 'core.stdcpp.string_view.u32string_view', kind: "aliasdeclaration", path: './core/stdcpp/string_view/u32string_view.html', attributes: []},
{name: 'core.stdcpp.string_view.wstring_view', kind: "aliasdeclaration", path: './core/stdcpp/string_view/wstring_view.html', attributes: []},
{name: 'core.stdcpp.type_traits', kind: "module", path: './core/stdcpp/type_traits.html', attributes: []},
{name: 'core.stdcpp.type_traits.bool_constant', kind: "aliasdeclaration", path: './core/stdcpp/type_traits/bool_constant.html', attributes: []},
{name: 'core.stdcpp.type_traits.false_type', kind: "aliasdeclaration", path: './core/stdcpp/type_traits/false_type.html', attributes: []},
{name: 'core.stdcpp.type_traits.integral_constant', kind: "structdeclaration", path: './core/stdcpp/type_traits/integral_constant.html', attributes: []},
{name: 'core.stdcpp.type_traits.integral_constant.type', kind: "aliasdeclaration", path: './core/stdcpp/type_traits/integral_constant.type.html', attributes: []},
{name: 'core.stdcpp.type_traits.integral_constant.value', kind: "enummemberdeclaration", path: './core/stdcpp/type_traits/integral_constant.value.html', attributes: []},
{name: 'core.stdcpp.type_traits.integral_constant.value_type', kind: "aliasdeclaration", path: './core/stdcpp/type_traits/integral_constant.value_type.html', attributes: []},
{name: 'core.stdcpp.type_traits.is_empty', kind: "structdeclaration", path: './core/stdcpp/type_traits/is_empty.html', attributes: []},
{name: 'core.stdcpp.type_traits.is_empty.type', kind: "aliasdeclaration", path: './core/stdcpp/type_traits/is_empty.type.html', attributes: []},
{name: 'core.stdcpp.type_traits.is_empty.value', kind: "enummemberdeclaration", path: './core/stdcpp/type_traits/is_empty.value.html', attributes: []},
{name: 'core.stdcpp.type_traits.is_empty.value_type', kind: "aliasdeclaration", path: './core/stdcpp/type_traits/is_empty.value_type.html', attributes: []},
{name: 'core.stdcpp.type_traits.true_type', kind: "aliasdeclaration", path: './core/stdcpp/type_traits/true_type.html', attributes: []},
{name: 'core.stdcpp.typeinfo', kind: "module", path: './core/stdcpp/typeinfo.html', attributes: []},
{name: 'core.stdcpp.utility', kind: "module", path: './core/stdcpp/utility.html', attributes: []},
{name: 'core.stdcpp.utility.pair', kind: "structdeclaration", path: './core/stdcpp/utility/pair.html', attributes: []},
{name: 'core.stdcpp.utility.pair.first', kind: "variabledeclaration", path: './core/stdcpp/utility/pair.first.html', attributes: []},
{name: 'core.stdcpp.utility.pair.first_type', kind: "aliasdeclaration", path: './core/stdcpp/utility/pair.first_type.html', attributes: []},
{name: 'core.stdcpp.utility.pair.second', kind: "variabledeclaration", path: './core/stdcpp/utility/pair.second.html', attributes: []},
{name: 'core.stdcpp.utility.pair.second_type', kind: "aliasdeclaration", path: './core/stdcpp/utility/pair.second_type.html', attributes: []},
{name: 'core.stdcpp.vector', kind: "module", path: './core/stdcpp/vector.html', attributes: []},
{name: 'core.stdcpp.vector.Default', kind: "enummemberdeclaration", path: './core/stdcpp/vector/default.html', attributes: []},
{name: 'core.stdcpp.xutility', kind: "module", path: './core/stdcpp/xutility.html', attributes: []},
{name: 'core.sync.barrier', kind: "module", path: './core/sync/barrier.html', attributes: []},
{name: 'core.sync.barrier.Barrier', kind: "classdeclaration", path: './core/sync/barrier/barrier.html', attributes: []},
{name: 'core.sync.barrier.Barrier.this', kind: "functiondeclaration", path: './core/sync/barrier/barrier.this.html', attributes: []},
{name: 'core.sync.barrier.Barrier.wait', kind: "functiondeclaration", path: './core/sync/barrier/barrier.wait.html', attributes: []},
{name: 'core.sync.condition', kind: "module", path: './core/sync/condition.html', attributes: []},
{name: 'core.sync.condition.Condition', kind: "classdeclaration", path: './core/sync/condition/condition.html', attributes: []},
{name: 'core.sync.condition.Condition.mutex', kind: "functiondeclaration", path: './core/sync/condition/condition.mutex.html', attributes: ["property"]},
{name: 'core.sync.condition.Condition.notify', kind: "functiondeclaration", path: './core/sync/condition/condition.notify.html', attributes: []},
{name: 'core.sync.condition.Condition.notifyAll', kind: "functiondeclaration", path: './core/sync/condition/condition.notify_all.html', attributes: []},
{name: 'core.sync.condition.Condition.this', kind: "functiondeclaration", path: './core/sync/condition/condition.this.html', attributes: ["nothrow", "safe"]},
{name: 'core.sync.condition.Condition.wait', kind: "functiondeclaration", path: './core/sync/condition/condition.wait.html', attributes: []},
{name: 'core.sync.config', kind: "module", path: './core/sync/config.html', attributes: []},
{name: 'core.sync.event', kind: "module", path: './core/sync/event.html', attributes: []},
{name: 'core.sync.event.Event', kind: "structdeclaration", path: './core/sync/event/event.html', attributes: []},
{name: 'core.sync.event.Event.initialize', kind: "functiondeclaration", path: './core/sync/event/event.initialize.html', attributes: ["nothrow", "nogc"]},
{name: 'core.sync.event.Event.reset', kind: "functiondeclaration", path: './core/sync/event/event.reset.html', attributes: ["nothrow", "nogc"]},
{name: 'core.sync.event.Event.set', kind: "functiondeclaration", path: './core/sync/event/event.set.html', attributes: ["nothrow", "nogc"]},
{name: 'core.sync.event.Event.terminate', kind: "functiondeclaration", path: './core/sync/event/event.terminate.html', attributes: ["nothrow", "nogc"]},
{name: 'core.sync.event.Event.this', kind: "functiondeclaration", path: './core/sync/event/event.this.html', attributes: ["nothrow", "ref", "nogc"]},
{name: 'core.sync.event.Event.wait', kind: "functiondeclaration", path: './core/sync/event/event.wait.html', attributes: ["nothrow", "nogc"]},
{name: 'core.sync.exception', kind: "module", path: './core/sync/exception.html', attributes: []},
{name: 'core.sync.exception.SyncError', kind: "classdeclaration", path: './core/sync/exception/sync_error.html', attributes: []},
{name: 'object.Error.bypassedException', kind: "variabledeclaration", path: './object/error.bypassed_exception.html', attributes: []},
{name: 'core.sync.mutex', kind: "module", path: './core/sync/mutex.html', attributes: []},
{name: 'core.sync.mutex.Mutex', kind: "classdeclaration", path: './core/sync/mutex/mutex.html', attributes: []},
{name: 'core.sync.mutex.Mutex.lock', kind: "functiondeclaration", path: './core/sync/mutex/mutex.lock.html', attributes: ["trusted"]},
{name: 'core.sync.mutex.Mutex.lock_nothrow', kind: "functiondeclaration", path: './core/sync/mutex/mutex.lock_nothrow.html', attributes: ["final", "nothrow", "nogc", "trusted"]},
{name: 'core.sync.mutex.Mutex.this', kind: "functiondeclaration", path: './core/sync/mutex/mutex.this.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'core.sync.mutex.Mutex.tryLock', kind: "functiondeclaration", path: './core/sync/mutex/mutex.try_lock.html', attributes: ["trusted"]},
{name: 'core.sync.mutex.Mutex.tryLock_nothrow', kind: "functiondeclaration", path: './core/sync/mutex/mutex.try_lock_nothrow.html', attributes: ["final", "nothrow", "nogc", "trusted"]},
{name: 'core.sync.mutex.Mutex.unlock', kind: "functiondeclaration", path: './core/sync/mutex/mutex.unlock.html', attributes: ["trusted"]},
{name: 'core.sync.mutex.Mutex.unlock_nothrow', kind: "functiondeclaration", path: './core/sync/mutex/mutex.unlock_nothrow.html', attributes: ["final", "nothrow", "nogc", "trusted"]},
{name: 'core.sync.rwmutex', kind: "module", path: './core/sync/rwmutex.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex', kind: "classdeclaration", path: './core/sync/rwmutex/read_write_mutex.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.Policy', kind: "enumdeclaration", path: './core/sync/rwmutex/read_write_mutex.policy.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.Policy.PREFER_READERS', kind: "enummemberdeclaration", path: './core/sync/rwmutex/read_write_mutex.policy.html#PREFER_READERS', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.Policy.PREFER_WRITERS', kind: "enummemberdeclaration", path: './core/sync/rwmutex/read_write_mutex.policy.html#PREFER_WRITERS', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.policy', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.policy.html', attributes: ["property"]},
{name: 'core.sync.rwmutex.ReadWriteMutex.reader', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.reader.html', attributes: ["property"]},
{name: 'core.sync.rwmutex.ReadWriteMutex.Reader', kind: "classdeclaration", path: './core/sync/rwmutex/read_write_mutex.reader.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.Reader.lock', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.reader.lock.html', attributes: ["trusted"]},
{name: 'core.sync.rwmutex.ReadWriteMutex.Reader.this', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.reader.this.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.Reader.tryLock', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.reader.try_lock.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.Reader.unlock', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.reader.unlock.html', attributes: ["trusted"]},
{name: 'core.sync.rwmutex.ReadWriteMutex.this', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.this.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.writer', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.writer.html', attributes: ["property"]},
{name: 'core.sync.rwmutex.ReadWriteMutex.Writer', kind: "classdeclaration", path: './core/sync/rwmutex/read_write_mutex.writer.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.Writer.lock', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.writer.lock.html', attributes: ["trusted"]},
{name: 'core.sync.rwmutex.ReadWriteMutex.Writer.this', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.writer.this.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.Writer.tryLock', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.writer.try_lock.html', attributes: []},
{name: 'core.sync.rwmutex.ReadWriteMutex.Writer.unlock', kind: "functiondeclaration", path: './core/sync/rwmutex/read_write_mutex.writer.unlock.html', attributes: ["trusted"]},
{name: 'core.sync.semaphore', kind: "module", path: './core/sync/semaphore.html', attributes: []},
{name: 'core.sync.semaphore.Semaphore', kind: "classdeclaration", path: './core/sync/semaphore/semaphore.html', attributes: []},
{name: 'core.sync.semaphore.Semaphore.notify', kind: "functiondeclaration", path: './core/sync/semaphore/semaphore.notify.html', attributes: []},
{name: 'core.sync.semaphore.Semaphore.this', kind: "functiondeclaration", path: './core/sync/semaphore/semaphore.this.html', attributes: []},
{name: 'core.sync.semaphore.Semaphore.tryWait', kind: "functiondeclaration", path: './core/sync/semaphore/semaphore.try_wait.html', attributes: []},
{name: 'core.sync.semaphore.Semaphore.wait', kind: "functiondeclaration", path: './core/sync/semaphore/semaphore.wait.html', attributes: []},
{name: 'core.sync.semaphore.Semaphore.Handle', kind: "aliasdeclaration", path: './core/sync/semaphore/semaphore.handle.html', attributes: []},
{name: 'core.sync.semaphore.Semaphore.m_hndl', kind: "variabledeclaration", path: './core/sync/semaphore/semaphore.m_hndl.html', attributes: []},
{name: 'core.thread.context', kind: "module", path: './core/thread/context.html', attributes: []},
{name: 'core.thread.fiber', kind: "module", path: './core/thread/fiber.html', attributes: []},
{name: 'core.thread.fiber.Fiber', kind: "classdeclaration", path: './core/thread/fiber/fiber.html', attributes: []},
{name: 'core.thread.fiber.Fiber.call', kind: "functiondeclaration", path: './core/thread/fiber/fiber.call.html', attributes: ["final"]},
{name: 'core.thread.fiber.Fiber.defaultStackPages', kind: "enummemberdeclaration", path: './core/thread/fiber/fiber.default_stack_pages.html', attributes: []},
{name: 'core.thread.fiber.Fiber.getThis', kind: "functiondeclaration", path: './core/thread/fiber/fiber.get_this.html', attributes: ["static", "nothrow", "nogc", "safe"]},
{name: 'core.thread.fiber.Fiber.reset', kind: "functiondeclaration", path: './core/thread/fiber/fiber.reset.html', attributes: ["final", "nothrow", "nogc"]},
{name: 'core.thread.fiber.Fiber.Rethrow', kind: "enumdeclaration", path: './core/thread/fiber/fiber.rethrow.html', attributes: []},
{name: 'core.thread.fiber.Fiber.State', kind: "enumdeclaration", path: './core/thread/fiber/fiber.state.html', attributes: []},
{name: 'core.thread.fiber.Fiber.State.EXEC', kind: "enummemberdeclaration", path: './core/thread/fiber/fiber.state.html#EXEC', attributes: []},
{name: 'core.thread.fiber.Fiber.State.HOLD', kind: "enummemberdeclaration", path: './core/thread/fiber/fiber.state.html#HOLD', attributes: []},
{name: 'core.thread.fiber.Fiber.State.TERM', kind: "enummemberdeclaration", path: './core/thread/fiber/fiber.state.html#TERM', attributes: []},
{name: 'core.thread.fiber.Fiber.state', kind: "functiondeclaration", path: './core/thread/fiber/fiber.state.html', attributes: ["final", "pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'core.thread.fiber.Fiber.this', kind: "functiondeclaration", path: './core/thread/fiber/fiber.this.html', attributes: []},
{name: 'core.thread.fiber.Fiber.yield', kind: "functiondeclaration", path: './core/thread/fiber/fiber.yield.html', attributes: ["static", "nothrow", "nogc"]},
{name: 'core.thread.fiber.Fiber.yieldAndThrow', kind: "functiondeclaration", path: './core/thread/fiber/fiber.yield_and_throw.html', attributes: ["static", "nothrow", "nogc"]},
{name: 'core.thread.osthread', kind: "module", path: './core/thread/osthread.html', attributes: []},
{name: 'core.thread.osthread.createLowLevelThread', kind: "functiondeclaration", path: './core/thread/osthread/create_low_level_thread.html', attributes: ["nothrow", "nogc"]},
{name: 'core.thread.osthread.findLowLevelThread', kind: "functiondeclaration", path: './core/thread/osthread/find_low_level_thread.html', attributes: ["nothrow", "nogc"]},
{name: 'core.thread.osthread.getpid', kind: "aliasdeclaration", path: './core/thread/osthread/getpid.html', attributes: []},
{name: 'core.thread.osthread.IsMarked', kind: "enumdeclaration", path: './core/thread/osthread/is_marked.html', attributes: []},
{name: 'core.thread.osthread.IsMarked.no', kind: "enummemberdeclaration", path: './core/thread/osthread/is_marked.html#no', attributes: []},
{name: 'core.thread.osthread.IsMarked.unknown', kind: "enummemberdeclaration", path: './core/thread/osthread/is_marked.html#unknown', attributes: []},
{name: 'core.thread.osthread.IsMarked.yes', kind: "enummemberdeclaration", path: './core/thread/osthread/is_marked.html#yes', attributes: []},
{name: 'core.thread.osthread.IsMarkedDg', kind: "aliasdeclaration", path: './core/thread/osthread/is_marked_dg.html', attributes: []},
{name: 'core.thread.osthread.joinLowLevelThread', kind: "functiondeclaration", path: './core/thread/osthread/join_low_level_thread.html', attributes: ["nothrow", "nogc"]},
{name: 'core.thread.osthread.ScanAllThreadsFn', kind: "aliasdeclaration", path: './core/thread/osthread/scan_all_threads_fn.html', attributes: []},
{name: 'core.thread.osthread.ScanAllThreadsTypeFn', kind: "aliasdeclaration", path: './core/thread/osthread/scan_all_threads_type_fn.html', attributes: []},
{name: 'core.thread.osthread.ScanType', kind: "enumdeclaration", path: './core/thread/osthread/scan_type.html', attributes: []},
{name: 'core.thread.osthread.ScanType.stack', kind: "enummemberdeclaration", path: './core/thread/osthread/scan_type.html#stack', attributes: []},
{name: 'core.thread.osthread.ScanType.tls', kind: "enummemberdeclaration", path: './core/thread/osthread/scan_type.html#tls', attributes: []},
{name: 'core.thread.osthread.Thread', kind: "classdeclaration", path: './core/thread/osthread/thread.html', attributes: []},
{name: 'core.thread.osthread.Thread.getAll', kind: "functiondeclaration", path: './core/thread/osthread/thread.get_all.html', attributes: ["static"]},
{name: 'core.thread.osthread.Thread.getThis', kind: "functiondeclaration", path: './core/thread/osthread/thread.get_this.html', attributes: ["static", "nothrow", "nogc", "safe"]},
{name: 'core.thread.osthread.Thread.id', kind: "functiondeclaration", path: './core/thread/osthread/thread.id.html', attributes: ["final", "property", "nogc", "safe"]},
{name: 'core.thread.osthread.Thread.isDaemon', kind: "functiondeclaration", path: './core/thread/osthread/thread.is_daemon.html', attributes: ["final", "property", "nogc", "safe"]},
{name: 'core.thread.osthread.Thread.isMainThread', kind: "functiondeclaration", path: './core/thread/osthread/thread.is_main_thread.html', attributes: ["final", "nothrow", "property", "nogc"]},
{name: 'core.thread.osthread.Thread.isRunning', kind: "functiondeclaration", path: './core/thread/osthread/thread.is_running.html', attributes: ["final", "nothrow", "property", "nogc"]},
{name: 'core.thread.osthread.Thread.join', kind: "functiondeclaration", path: './core/thread/osthread/thread.join.html', attributes: ["final"]},
{name: 'core.thread.osthread.Thread.name', kind: "functiondeclaration", path: './core/thread/osthread/thread.name.html', attributes: ["final", "property", "nogc", "safe"]},
{name: 'core.thread.osthread.Thread.opApply', kind: "functiondeclaration", path: './core/thread/osthread/thread.op_apply.html', attributes: ["static"]},
{name: 'core.thread.osthread.Thread.priority', kind: "functiondeclaration", path: './core/thread/osthread/thread.priority.html', attributes: ["final", "property"]},
{name: 'core.thread.osthread.Thread.PRIORITY_DEFAULT', kind: "functiondeclaration", path: './core/thread/osthread/thread.priorit_y_default.html', attributes: ["static", "pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.thread.osthread.Thread.PRIORITY_MAX', kind: "functiondeclaration", path: './core/thread/osthread/thread.priorit_y_max.html', attributes: ["static", "pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.thread.osthread.Thread.PRIORITY_MIN', kind: "functiondeclaration", path: './core/thread/osthread/thread.priorit_y_min.html', attributes: ["static", "pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.thread.osthread.Thread.sleep', kind: "functiondeclaration", path: './core/thread/osthread/thread.sleep.html', attributes: ["static", "nothrow", "nogc"]},
{name: 'core.thread.osthread.Thread.start', kind: "functiondeclaration", path: './core/thread/osthread/thread.start.html', attributes: ["final"]},
{name: 'core.thread.osthread.Thread.this', kind: "functiondeclaration", path: './core/thread/osthread/thread.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.thread.osthread.Thread.yield', kind: "functiondeclaration", path: './core/thread/osthread/thread.yield.html', attributes: ["static", "nothrow", "nogc"]},
{name: 'core.thread.osthread.thread_attachThis', kind: "functiondeclaration", path: './core/thread/osthread/thread_attach_this.html', attributes: ["extern(C)"]},
{name: 'core.thread.osthread.thread_detachByAddr', kind: "functiondeclaration", path: './core/thread/osthread/thread_detach_by_addr.html', attributes: ["extern(C)"]},
{name: 'core.thread.osthread.thread_detachInstance', kind: "functiondeclaration", path: './core/thread/osthread/thread_detach_instance.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.thread.osthread.thread_detachThis', kind: "functiondeclaration", path: './core/thread/osthread/thread_detach_this.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.thread.osthread.thread_enterCriticalRegion', kind: "functiondeclaration", path: './core/thread/osthread/thread_enter_critical_region.html', attributes: ["nogc", "extern(C)"]},
{name: 'core.thread.osthread.thread_exitCriticalRegion', kind: "functiondeclaration", path: './core/thread/osthread/thread_exit_critical_region.html', attributes: ["nogc", "extern(C)"]},
{name: 'core.thread.osthread.thread_findByAddr', kind: "functiondeclaration", path: './core/thread/osthread/thread_find_by_addr.html', attributes: ["static"]},
{name: 'core.thread.osthread.thread_inCriticalRegion', kind: "functiondeclaration", path: './core/thread/osthread/thread_in_critical_region.html', attributes: ["nogc", "extern(C)"]},
{name: 'core.thread.osthread.thread_init', kind: "functiondeclaration", path: './core/thread/osthread/thread_init.html', attributes: ["nogc", "extern(C)"]},
{name: 'core.thread.osthread.thread_isMainThread', kind: "functiondeclaration", path: './core/thread/osthread/thread_is_main_thread.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.thread.osthread.thread_joinAll', kind: "functiondeclaration", path: './core/thread/osthread/thread_join_all.html', attributes: ["extern(C)"]},
{name: 'core.thread.osthread.thread_processGCMarks', kind: "functiondeclaration", path: './core/thread/osthread/thread_process_gc_marks.html', attributes: ["extern(C)"]},
{name: 'core.thread.osthread.thread_resumeAll', kind: "functiondeclaration", path: './core/thread/osthread/thread_resume_all.html', attributes: ["extern(C)"]},
{name: 'core.thread.osthread.thread_scanAll', kind: "functiondeclaration", path: './core/thread/osthread/thread_scan_all.html', attributes: ["extern(C)"]},
{name: 'core.thread.osthread.thread_scanAllType', kind: "functiondeclaration", path: './core/thread/osthread/thread_scan_all_type.html', attributes: ["extern(C)"]},
{name: 'core.thread.osthread.thread_setGCSignals', kind: "functiondeclaration", path: './core/thread/osthread/thread_set_gc_signals.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.thread.osthread.thread_setThis', kind: "functiondeclaration", path: './core/thread/osthread/thread_set_this.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.thread.osthread.thread_stackBottom', kind: "functiondeclaration", path: './core/thread/osthread/thread_stack_bottom.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.thread.osthread.thread_stackTop', kind: "functiondeclaration", path: './core/thread/osthread/thread_stack_top.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'core.thread.osthread.thread_suspendAll', kind: "functiondeclaration", path: './core/thread/osthread/thread_suspend_all.html', attributes: ["extern(C)"]},
{name: 'core.thread.osthread.thread_term', kind: "functiondeclaration", path: './core/thread/osthread/thread_term.html', attributes: ["nogc", "extern(C)"]},
{name: 'core.thread.osthread.ThreadError', kind: "classdeclaration", path: './core/thread/osthread/thread_error.html', attributes: []},
{name: 'core.thread.osthread.ThreadException', kind: "classdeclaration", path: './core/thread/osthread/thread_exception.html', attributes: []},
{name: 'core.thread.osthread.ThreadGroup', kind: "classdeclaration", path: './core/thread/osthread/thread_group.html', attributes: []},
{name: 'core.thread.osthread.ThreadGroup.add', kind: "functiondeclaration", path: './core/thread/osthread/thread_group.add.html', attributes: ["final"]},
{name: 'core.thread.osthread.ThreadGroup.create', kind: "functiondeclaration", path: './core/thread/osthread/thread_group.create.html', attributes: ["final"]},
{name: 'core.thread.osthread.ThreadGroup.joinAll', kind: "functiondeclaration", path: './core/thread/osthread/thread_group.join_all.html', attributes: ["final"]},
{name: 'core.thread.osthread.ThreadGroup.opApply', kind: "functiondeclaration", path: './core/thread/osthread/thread_group.op_apply.html', attributes: ["final"]},
{name: 'core.thread.osthread.ThreadGroup.remove', kind: "functiondeclaration", path: './core/thread/osthread/thread_group.remove.html', attributes: ["final"]},
{name: 'core.thread.osthread.ThreadID', kind: "aliasdeclaration", path: './core/thread/osthread/thread_id.html', attributes: []},
{name: 'core.atomic', kind: "module", path: './core/atomic.html', attributes: []},
{name: 'core.atomic.atomicExchange', kind: "functiondeclaration", path: './core/atomic/atomic_exchange.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.atomic.atomicFence', kind: "functiondeclaration", path: './core/atomic/atomic_fence.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.atomic.atomicFetchAdd', kind: "functiondeclaration", path: './core/atomic/atomic_fetch_add.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.atomic.atomicFetchSub', kind: "functiondeclaration", path: './core/atomic/atomic_fetch_sub.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.atomic.atomicLoad', kind: "functiondeclaration", path: './core/atomic/atomic_load.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.atomic.atomicOp', kind: "functiondeclaration", path: './core/atomic/atomic_op.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.atomic.atomicStore', kind: "functiondeclaration", path: './core/atomic/atomic_store.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.atomic.cas', kind: "functiondeclaration", path: './core/atomic/cas.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.atomic.casWeak', kind: "functiondeclaration", path: './core/atomic/cas_weak.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.atomic.MemoryOrder', kind: "enumdeclaration", path: './core/atomic/memory_order.html', attributes: []},
{name: 'core.atomic.MemoryOrder.acq', kind: "enummemberdeclaration", path: './core/atomic/memory_order.html#acq', attributes: []},
{name: 'core.atomic.MemoryOrder.acq_rel', kind: "enummemberdeclaration", path: './core/atomic/memory_order.html#acq_rel', attributes: []},
{name: 'core.atomic.MemoryOrder.raw', kind: "enummemberdeclaration", path: './core/atomic/memory_order.html#raw', attributes: []},
{name: 'core.atomic.MemoryOrder.rel', kind: "enummemberdeclaration", path: './core/atomic/memory_order.html#rel', attributes: []},
{name: 'core.atomic.MemoryOrder.seq', kind: "enummemberdeclaration", path: './core/atomic/memory_order.html#seq', attributes: []},
{name: 'core.atomic.pause', kind: "functiondeclaration", path: './core/atomic/pause.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.attribute', kind: "module", path: './core/attribute.html', attributes: []},
{name: 'core.attribute.gnuAbiTag', kind: "structdeclaration", path: './core/attribute/gnu_abi_tag.html', attributes: []},
{name: 'core.attribute.selector', kind: "structdeclaration", path: './core/attribute/selector.html', attributes: []},
{name: 'core.bitop', kind: "module", path: './core/bitop.html', attributes: []},
{name: 'core.bitop._popcnt', kind: "functiondeclaration", path: './core/bitop/_popcnt.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.bitop.BitRange', kind: "structdeclaration", path: './core/bitop/bit_range.html', attributes: []},
{name: 'core.bitop.BitRange.bitsPerWord', kind: "enummemberdeclaration", path: './core/bitop/bit_range.bits_per_word.html', attributes: []},
{name: 'core.bitop.BitRange.empty', kind: "functiondeclaration", path: './core/bitop/bit_range.empty.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'core.bitop.BitRange.front', kind: "functiondeclaration", path: './core/bitop/bit_range.front.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.bitop.BitRange.popFront', kind: "functiondeclaration", path: './core/bitop/bit_range.pop_front.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'core.bitop.BitRange.this', kind: "functiondeclaration", path: './core/bitop/bit_range.this.html', attributes: ["pure", "nothrow", "ref", "nogc"]},
{name: 'core.bitop.bitswap', kind: "functiondeclaration", path: './core/bitop/bitswap.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.bitop.bsf', kind: "functiondeclaration", path: './core/bitop/bsf.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.bitop.bsr', kind: "functiondeclaration", path: './core/bitop/bsr.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.bitop.bswap', kind: "functiondeclaration", path: './core/bitop/bswap.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.bitop.bt', kind: "functiondeclaration", path: './core/bitop/bt.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'core.bitop.btc', kind: "functiondeclaration", path: './core/bitop/btc.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'core.bitop.btr', kind: "functiondeclaration", path: './core/bitop/btr.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'core.bitop.bts', kind: "functiondeclaration", path: './core/bitop/bts.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'core.bitop.inp', kind: "functiondeclaration", path: './core/bitop/inp.html', attributes: ["nothrow", "nogc"]},
{name: 'core.bitop.inpl', kind: "functiondeclaration", path: './core/bitop/inpl.html', attributes: ["nothrow", "nogc"]},
{name: 'core.bitop.inpw', kind: "functiondeclaration", path: './core/bitop/inpw.html', attributes: ["nothrow", "nogc"]},
{name: 'core.bitop.outp', kind: "functiondeclaration", path: './core/bitop/outp.html', attributes: ["nothrow", "nogc"]},
{name: 'core.bitop.outpl', kind: "functiondeclaration", path: './core/bitop/outpl.html', attributes: ["nothrow", "nogc"]},
{name: 'core.bitop.outpw', kind: "functiondeclaration", path: './core/bitop/outpw.html', attributes: ["nothrow", "nogc"]},
{name: 'core.bitop.popcnt', kind: "functiondeclaration", path: './core/bitop/popcnt.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.bitop.rol', kind: "functiondeclaration", path: './core/bitop/rol.html', attributes: ["pure"]},
{name: 'core.bitop.ror', kind: "functiondeclaration", path: './core/bitop/ror.html', attributes: ["pure"]},
{name: 'core.checkedint', kind: "module", path: './core/checkedint.html', attributes: []},
{name: 'core.checkedint.adds', kind: "functiondeclaration", path: './core/checkedint/adds.html', attributes: []},
{name: 'core.checkedint.addu', kind: "functiondeclaration", path: './core/checkedint/addu.html', attributes: []},
{name: 'core.checkedint.muls', kind: "functiondeclaration", path: './core/checkedint/muls.html', attributes: []},
{name: 'core.checkedint.mulu', kind: "functiondeclaration", path: './core/checkedint/mulu.html', attributes: []},
{name: 'core.checkedint.negs', kind: "functiondeclaration", path: './core/checkedint/negs.html', attributes: []},
{name: 'core.checkedint.subs', kind: "functiondeclaration", path: './core/checkedint/subs.html', attributes: []},
{name: 'core.checkedint.subu', kind: "functiondeclaration", path: './core/checkedint/subu.html', attributes: []},
{name: 'core.cpuid', kind: "module", path: './core/cpuid.html', attributes: []},
{name: 'core.cpuid.aes', kind: "functiondeclaration", path: './core/cpuid/aes.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.amd3dnow', kind: "functiondeclaration", path: './core/cpuid/amd3dnow.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.amd3dnowExt', kind: "functiondeclaration", path: './core/cpuid/amd3dnow_ext.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.amdMmx', kind: "functiondeclaration", path: './core/cpuid/amd_mmx.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.avx', kind: "functiondeclaration", path: './core/cpuid/avx.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.avx2', kind: "functiondeclaration", path: './core/cpuid/avx2.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.CacheInfo', kind: "structdeclaration", path: './core/cpuid/cache_info.html', attributes: []},
{name: 'core.cpuid.CacheInfo.associativity', kind: "variabledeclaration", path: './core/cpuid/cache_info.associativity.html', attributes: []},
{name: 'core.cpuid.CacheInfo.lineSize', kind: "variabledeclaration", path: './core/cpuid/cache_info.line_size.html', attributes: []},
{name: 'core.cpuid.CacheInfo.size', kind: "variabledeclaration", path: './core/cpuid/cache_info.size.html', attributes: []},
{name: 'core.cpuid.cacheLevels', kind: "functiondeclaration", path: './core/cpuid/cache_levels.html', attributes: ["__gshared", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.coresPerCPU', kind: "functiondeclaration", path: './core/cpuid/cores_per_cpu.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.datacache', kind: "variabledeclaration", path: './core/cpuid/datacache.html', attributes: []},
{name: 'core.cpuid.dataCaches', kind: "functiondeclaration", path: './core/cpuid/data_caches.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.family', kind: "variabledeclaration", path: './core/cpuid/family.html', attributes: []},
{name: 'core.cpuid.fma', kind: "functiondeclaration", path: './core/cpuid/fma.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.fp16c', kind: "functiondeclaration", path: './core/cpuid/fp16c.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.has3dnowPrefetch', kind: "functiondeclaration", path: './core/cpuid/has3dnow_prefetch.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasCmov', kind: "functiondeclaration", path: './core/cpuid/has_cmov.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasCmpxchg16b', kind: "functiondeclaration", path: './core/cpuid/has_cmpxchg16b.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasCmpxchg8b', kind: "functiondeclaration", path: './core/cpuid/has_cmpxchg8b.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasFxsr', kind: "functiondeclaration", path: './core/cpuid/has_fxsr.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasLahfSahf', kind: "functiondeclaration", path: './core/cpuid/has_lahf_sahf.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasLzcnt', kind: "functiondeclaration", path: './core/cpuid/has_lzcnt.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasPclmulqdq', kind: "functiondeclaration", path: './core/cpuid/has_pclmulqdq.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasPopcnt', kind: "functiondeclaration", path: './core/cpuid/has_popcnt.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasRdrand', kind: "functiondeclaration", path: './core/cpuid/has_rdrand.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasRdseed', kind: "functiondeclaration", path: './core/cpuid/has_rdseed.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasRdtsc', kind: "functiondeclaration", path: './core/cpuid/has_rdtsc.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasSha', kind: "functiondeclaration", path: './core/cpuid/has_sha.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasSysEnterSysExit', kind: "functiondeclaration", path: './core/cpuid/has_sys_enter_sys_exit.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hasVpclmulqdq', kind: "functiondeclaration", path: './core/cpuid/has_vpclmulqdq.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hle', kind: "functiondeclaration", path: './core/cpuid/hle.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.hyperThreading', kind: "functiondeclaration", path: './core/cpuid/hyper_threading.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.isItanium', kind: "functiondeclaration", path: './core/cpuid/is_itanium.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.isX86_64', kind: "functiondeclaration", path: './core/cpuid/is_x86_64.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.mmx', kind: "functiondeclaration", path: './core/cpuid/mmx.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.model', kind: "variabledeclaration", path: './core/cpuid/model.html', attributes: []},
{name: 'core.cpuid.numCacheLevels', kind: "variabledeclaration", path: './core/cpuid/num_cache_levels.html', attributes: []},
{name: 'core.cpuid.preferAthlon', kind: "functiondeclaration", path: './core/cpuid/prefer_athlon.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.preferPentium1', kind: "functiondeclaration", path: './core/cpuid/prefer_pentium1.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.preferPentium4', kind: "functiondeclaration", path: './core/cpuid/prefer_pentium4.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.processor', kind: "functiondeclaration", path: './core/cpuid/processor.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.rtm', kind: "functiondeclaration", path: './core/cpuid/rtm.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.sse', kind: "functiondeclaration", path: './core/cpuid/sse.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.sse2', kind: "functiondeclaration", path: './core/cpuid/sse2.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.sse3', kind: "functiondeclaration", path: './core/cpuid/sse3.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.sse41', kind: "functiondeclaration", path: './core/cpuid/sse41.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.sse42', kind: "functiondeclaration", path: './core/cpuid/sse42.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.sse4a', kind: "functiondeclaration", path: './core/cpuid/sse4a.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.ssse3', kind: "functiondeclaration", path: './core/cpuid/ssse3.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.stepping', kind: "variabledeclaration", path: './core/cpuid/stepping.html', attributes: []},
{name: 'core.cpuid.threadsPerCPU', kind: "functiondeclaration", path: './core/cpuid/threads_per_cpu.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.vaes', kind: "functiondeclaration", path: './core/cpuid/vaes.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.vendor', kind: "functiondeclaration", path: './core/cpuid/vendor.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.cpuid.x87onChip', kind: "functiondeclaration", path: './core/cpuid/x87on_chip.html', attributes: ["pure", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.demangle', kind: "module", path: './core/demangle.html', attributes: []},
{name: 'core.demangle.cPrefix', kind: "enummemberdeclaration", path: './core/demangle/c_prefix.html', attributes: []},
{name: 'core.demangle.demangle', kind: "functiondeclaration", path: './core/demangle/demangle.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'core.demangle.demangleType', kind: "functiondeclaration", path: './core/demangle/demangle_type.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'core.demangle.mangle', kind: "functiondeclaration", path: './core/demangle/mangle.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'core.demangle.mangleFunc', kind: "functiondeclaration", path: './core/demangle/mangle_func.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'core.demangle.reencodeMangled', kind: "functiondeclaration", path: './core/demangle/reencode_mangled.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'core.exception', kind: "module", path: './core/exception.html', attributes: []},
{name: 'core.exception._d_arraybounds', kind: "functiondeclaration", path: './core/exception/_d_arraybounds.html', attributes: ["extern(C)"]},
{name: 'core.exception._d_arrayboundsp', kind: "functiondeclaration", path: './core/exception/_d_arrayboundsp.html', attributes: ["extern(C)"]},
{name: 'core.exception._d_assert', kind: "functiondeclaration", path: './core/exception/_d_assert.html', attributes: ["extern(C)"]},
{name: 'core.exception._d_assert_msg', kind: "functiondeclaration", path: './core/exception/_d_assert_msg.html', attributes: ["extern(C)"]},
{name: 'core.exception._d_assertp', kind: "functiondeclaration", path: './core/exception/_d_assertp.html', attributes: ["extern(C)"]},
{name: 'core.exception._d_unittest', kind: "functiondeclaration", path: './core/exception/_d_unittest.html', attributes: ["extern(C)"]},
{name: 'core.exception._d_unittest_msg', kind: "functiondeclaration", path: './core/exception/_d_unittest_msg.html', attributes: ["extern(C)"]},
{name: 'core.exception._d_unittestp', kind: "functiondeclaration", path: './core/exception/_d_unittestp.html', attributes: ["extern(C)"]},
{name: 'core.exception.AssertError', kind: "classdeclaration", path: './core/exception/assert_error.html', attributes: []},
{name: 'core.exception.AssertHandler', kind: "aliasdeclaration", path: './core/exception/assert_handler.html', attributes: []},
{name: 'core.exception.assertHandler', kind: "functiondeclaration", path: './core/exception/assert_handler.html', attributes: ["nothrow"]},
{name: 'core.exception.FinalizeError', kind: "classdeclaration", path: './core/exception/finalize_error.html', attributes: []},
{name: 'core.exception.InvalidMemoryOperationError', kind: "classdeclaration", path: './core/exception/invalid_memory_operation_error.html', attributes: []},
{name: 'core.exception.onAssertError', kind: "functiondeclaration", path: './core/exception/on_assert_error.html', attributes: ["extern(C)"]},
{name: 'core.exception.onAssertErrorMsg', kind: "functiondeclaration", path: './core/exception/on_assert_error_msg.html', attributes: ["extern(C)"]},
{name: 'core.exception.onFinalizeError', kind: "functiondeclaration", path: './core/exception/on_finalize_error.html', attributes: ["nothrow", "trusted", "extern(C)"]},
{name: 'core.exception.onInvalidMemoryOperationError', kind: "functiondeclaration", path: './core/exception/on_invalid_memory_operation_error.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.exception.onOutOfMemoryError', kind: "functiondeclaration", path: './core/exception/on_out_of_memory_error.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.exception.onRangeError', kind: "functiondeclaration", path: './core/exception/on_range_error.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'core.exception.onUnicodeError', kind: "functiondeclaration", path: './core/exception/on_unicode_error.html', attributes: ["pure", "safe", "extern(C)"]},
{name: 'core.exception.onUnittestErrorMsg', kind: "functiondeclaration", path: './core/exception/on_unittest_error_msg.html', attributes: ["extern(C)"]},
{name: 'core.exception.OutOfMemoryError', kind: "classdeclaration", path: './core/exception/out_of_memory_error.html', attributes: []},
{name: 'core.exception.RangeError', kind: "classdeclaration", path: './core/exception/range_error.html', attributes: []},
{name: 'core.exception.SwitchError', kind: "classdeclaration", path: './core/exception/switch_error.html', attributes: []},
{name: 'core.exception.UnicodeException', kind: "classdeclaration", path: './core/exception/unicode_exception.html', attributes: []},
{name: 'core.math', kind: "module", path: './core/math.html', attributes: []},
{name: 'core.math.cos', kind: "functiondeclaration", path: './core/math/cos.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.math.fabs', kind: "functiondeclaration", path: './core/math/fabs.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.math.ldexp', kind: "functiondeclaration", path: './core/math/ldexp.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.math.rint', kind: "functiondeclaration", path: './core/math/rint.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.math.rndtol', kind: "functiondeclaration", path: './core/math/rndtol.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.math.rndtonl', kind: "functiondeclaration", path: './core/math/rndtonl.html', attributes: ["nothrow", "nogc", "safe", "extern(C)"]},
{name: 'core.math.sin', kind: "functiondeclaration", path: './core/math/sin.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.math.sqrt', kind: "functiondeclaration", path: './core/math/sqrt.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.math.toPrec', kind: "functiondeclaration", path: './core/math/to_prec.html', attributes: []},
{name: 'core.math.yl2x', kind: "functiondeclaration", path: './core/math/yl2x.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.math.yl2xp1', kind: "functiondeclaration", path: './core/math/yl2xp1.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.memory', kind: "module", path: './core/memory.html', attributes: []},
{name: 'core.memory.GC', kind: "structdeclaration", path: './core/memory/gc.html', attributes: []},
{name: 'core.memory.GC.addRange', kind: "functiondeclaration", path: './core/memory/gc.add_range.html', attributes: ["static", "nothrow", "nogc"]},
{name: 'core.memory.GC.addrOf', kind: "functiondeclaration", path: './core/memory/gc.addr_of.html', attributes: ["static", "nothrow", "nogc"]},
{name: 'core.memory.GC.addRoot', kind: "functiondeclaration", path: './core/memory/gc.add_root.html', attributes: ["static", "nothrow", "nogc"]},
{name: 'core.memory.GC.BlkAttr', kind: "enumdeclaration", path: './core/memory/gc.blk_attr.html', attributes: []},
{name: 'core.memory.GC.BlkAttr.APPENDABLE', kind: "enummemberdeclaration", path: './core/memory/gc.blk_attr.html#APPENDABLE', attributes: []},
{name: 'core.memory.GC.BlkAttr.FINALIZE', kind: "enummemberdeclaration", path: './core/memory/gc.blk_attr.html#FINALIZE', attributes: []},
{name: 'core.memory.GC.BlkAttr.NO_INTERIOR', kind: "enummemberdeclaration", path: './core/memory/gc.blk_attr.html#NO_INTERIOR', attributes: []},
{name: 'core.memory.GC.BlkAttr.NO_MOVE', kind: "enummemberdeclaration", path: './core/memory/gc.blk_attr.html#NO_MOVE', attributes: []},
{name: 'core.memory.GC.BlkAttr.NO_SCAN', kind: "enummemberdeclaration", path: './core/memory/gc.blk_attr.html#NO_SCAN', attributes: []},
{name: 'core.memory.GC.BlkAttr.NONE', kind: "enummemberdeclaration", path: './core/memory/gc.blk_attr.html#NONE', attributes: []},
{name: 'core.memory.GC.BlkInfo', kind: "aliasdeclaration", path: './core/memory/gc.blk_info.html', attributes: []},
{name: 'core.memory.GC.calloc', kind: "functiondeclaration", path: './core/memory/gc.calloc.html', attributes: ["static", "pure"]},
{name: 'core.memory.GC.clrAttr', kind: "functiondeclaration", path: './core/memory/gc.clr_attr.html', attributes: ["static"]},
{name: 'core.memory.GC.collect', kind: "functiondeclaration", path: './core/memory/gc.collect.html', attributes: ["static"]},
{name: 'core.memory.GC.disable', kind: "functiondeclaration", path: './core/memory/gc.disable.html', attributes: ["static"]},
{name: 'core.memory.GC.enable', kind: "functiondeclaration", path: './core/memory/gc.enable.html', attributes: ["static"]},
{name: 'core.memory.GC.extend', kind: "functiondeclaration", path: './core/memory/gc.extend.html', attributes: ["static", "pure"]},
{name: 'core.memory.GC.free', kind: "functiondeclaration", path: './core/memory/gc.free.html', attributes: ["static", "pure", "nothrow", "nogc"]},
{name: 'core.memory.GC.getAttr', kind: "functiondeclaration", path: './core/memory/gc.get_attr.html', attributes: ["static"]},
{name: 'core.memory.GC.inFinalizer', kind: "functiondeclaration", path: './core/memory/gc.in_finalizer.html', attributes: ["static", "nothrow", "nogc", "safe"]},
{name: 'core.memory.GC.malloc', kind: "functiondeclaration", path: './core/memory/gc.malloc.html', attributes: ["static", "pure"]},
{name: 'core.memory.GC.minimize', kind: "functiondeclaration", path: './core/memory/gc.minimize.html', attributes: ["static"]},
{name: 'core.memory.GC.ProfileStats', kind: "structdeclaration", path: './core/memory/gc.profile_stats.html', attributes: []},
{name: 'core.memory.GC.ProfileStats.maxCollectionTime', kind: "variabledeclaration", path: './core/memory/gc.profile_stats.max_collection_time.html', attributes: []},
{name: 'core.memory.GC.ProfileStats.maxPauseTime', kind: "variabledeclaration", path: './core/memory/gc.profile_stats.max_pause_time.html', attributes: []},
{name: 'core.memory.GC.ProfileStats.numCollections', kind: "variabledeclaration", path: './core/memory/gc.profile_stats.num_collections.html', attributes: []},
{name: 'core.memory.GC.ProfileStats.totalCollectionTime', kind: "variabledeclaration", path: './core/memory/gc.profile_stats.total_collection_time.html', attributes: []},
{name: 'core.memory.GC.ProfileStats.totalPauseTime', kind: "variabledeclaration", path: './core/memory/gc.profile_stats.total_pause_time.html', attributes: []},
{name: 'core.memory.GC.profileStats', kind: "functiondeclaration", path: './core/memory/gc.profile_stats.html', attributes: ["static", "nothrow", "nogc", "safe"]},
{name: 'core.memory.GC.qalloc', kind: "functiondeclaration", path: './core/memory/gc.qalloc.html', attributes: ["static", "pure"]},
{name: 'core.memory.GC.query', kind: "functiondeclaration", path: './core/memory/gc.query.html', attributes: ["static"]},
{name: 'core.memory.GC.realloc', kind: "functiondeclaration", path: './core/memory/gc.realloc.html', attributes: ["static", "pure"]},
{name: 'core.memory.GC.removeRange', kind: "functiondeclaration", path: './core/memory/gc.remove_range.html', attributes: ["static", "nothrow", "nogc"]},
{name: 'core.memory.GC.removeRoot', kind: "functiondeclaration", path: './core/memory/gc.remove_root.html', attributes: ["static", "nothrow", "nogc"]},
{name: 'core.memory.GC.reserve', kind: "functiondeclaration", path: './core/memory/gc.reserve.html', attributes: ["static"]},
{name: 'core.memory.GC.runFinalizers', kind: "functiondeclaration", path: './core/memory/gc.run_finalizers.html', attributes: ["static"]},
{name: 'core.memory.GC.setAttr', kind: "functiondeclaration", path: './core/memory/gc.set_attr.html', attributes: ["static"]},
{name: 'core.memory.GC.sizeOf', kind: "functiondeclaration", path: './core/memory/gc.size_of.html', attributes: ["static", "nothrow", "nogc"]},
{name: 'core.memory.GC.Stats', kind: "structdeclaration", path: './core/memory/gc.stats.html', attributes: []},
{name: 'core.memory.GC.Stats.allocatedInCurrentThread', kind: "variabledeclaration", path: './core/memory/gc.stats.allocated_in_current_thread.html', attributes: []},
{name: 'core.memory.GC.Stats.freeSize', kind: "variabledeclaration", path: './core/memory/gc.stats.free_size.html', attributes: []},
{name: 'core.memory.GC.Stats.usedSize', kind: "variabledeclaration", path: './core/memory/gc.stats.used_size.html', attributes: []},
{name: 'core.memory.GC.stats', kind: "functiondeclaration", path: './core/memory/gc.stats.html', attributes: ["static"]},
{name: 'core.memory.pageSize', kind: "variabledeclaration", path: './core/memory/page_size.html', attributes: []},
{name: 'core.memory.pureCalloc', kind: "functiondeclaration", path: './core/memory/pure_calloc.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.memory.pureFree', kind: "functiondeclaration", path: './core/memory/pure_free.html', attributes: ["pure", "nothrow", "nogc", "system"]},
{name: 'core.memory.pureMalloc', kind: "functiondeclaration", path: './core/memory/pure_malloc.html', attributes: ["pure", "nothrow", "nogc", "trusted"]},
{name: 'core.memory.pureRealloc', kind: "functiondeclaration", path: './core/memory/pure_realloc.html', attributes: ["pure", "nothrow", "nogc", "system"]},
{name: 'core.runtime', kind: "module", path: './core/runtime.html', attributes: []},
{name: 'core.runtime.CArgs', kind: "structdeclaration", path: './core/runtime/c_args.html', attributes: []},
{name: 'core.runtime.CArgs.argc', kind: "variabledeclaration", path: './core/runtime/c_args.argc.html', attributes: []},
{name: 'core.runtime.CArgs.argv', kind: "variabledeclaration", path: './core/runtime/c_args.argv.html', attributes: []},
{name: 'core.runtime.defaultTraceHandler', kind: "functiondeclaration", path: './core/runtime/default_trace_handler.html', attributes: []},
{name: 'core.runtime.dmd_coverDestPath', kind: "functiondeclaration", path: './core/runtime/dmd_cover_dest_path.html', attributes: ["extern(C)"]},
{name: 'core.runtime.dmd_coverSetMerge', kind: "functiondeclaration", path: './core/runtime/dmd_cover_set_merge.html', attributes: ["extern(C)"]},
{name: 'core.runtime.dmd_coverSourcePath', kind: "functiondeclaration", path: './core/runtime/dmd_cover_source_path.html', attributes: ["extern(C)"]},
{name: 'core.runtime.ExtendedModuleUnitTester', kind: "aliasdeclaration", path: './core/runtime/extended_module_unit_tester.html', attributes: []},
{name: 'core.runtime.ModuleUnitTester', kind: "aliasdeclaration", path: './core/runtime/module_unit_tester.html', attributes: []},
{name: 'core.runtime.profilegc_setlogfilename', kind: "functiondeclaration", path: './core/runtime/profilegc_setlogfilename.html', attributes: ["extern(C)"]},
{name: 'core.runtime.rt_init', kind: "functiondeclaration", path: './core/runtime/rt_init.html', attributes: ["extern(C)"]},
{name: 'core.runtime.rt_loadLibrary', kind: "functiondeclaration", path: './core/runtime/rt_load_library.html', attributes: ["extern(C)"]},
{name: 'core.runtime.rt_term', kind: "functiondeclaration", path: './core/runtime/rt_term.html', attributes: ["extern(C)"]},
{name: 'core.runtime.rt_unloadLibrary', kind: "functiondeclaration", path: './core/runtime/rt_unload_library.html', attributes: ["extern(C)"]},
{name: 'core.runtime.runModuleUnitTests', kind: "functiondeclaration", path: './core/runtime/run_module_unit_tests.html', attributes: ["extern(C)"]},
{name: 'core.runtime.Runtime', kind: "structdeclaration", path: './core/runtime/runtime.html', attributes: []},
{name: 'core.runtime.Runtime.args', kind: "functiondeclaration", path: './core/runtime/runtime.args.html', attributes: ["static", "property"]},
{name: 'core.runtime.Runtime.cArgs', kind: "functiondeclaration", path: './core/runtime/runtime.c_args.html', attributes: ["static", "property", "nogc"]},
{name: 'core.runtime.Runtime.collectHandler', kind: "functiondeclaration", path: './core/runtime/runtime.collect_handler.html', attributes: ["static", "property"]},
{name: 'core.runtime.Runtime.extendedModuleUnitTester', kind: "functiondeclaration", path: './core/runtime/runtime.extended_module_unit_tester.html', attributes: ["static", "property"]},
{name: 'core.runtime.Runtime.initialize', kind: "functiondeclaration", path: './core/runtime/runtime.initialize.html', attributes: ["static"]},
{name: 'core.runtime.Runtime.loadLibrary', kind: "functiondeclaration", path: './core/runtime/runtime.load_library.html', attributes: []},
{name: 'core.runtime.Runtime.moduleUnitTester', kind: "functiondeclaration", path: './core/runtime/runtime.module_unit_tester.html', attributes: ["static", "property"]},
{name: 'core.runtime.Runtime.terminate', kind: "functiondeclaration", path: './core/runtime/runtime.terminate.html', attributes: ["static"]},
{name: 'core.runtime.Runtime.traceHandler', kind: "functiondeclaration", path: './core/runtime/runtime.trace_handler.html', attributes: ["static", "property"]},
{name: 'core.runtime.Runtime.unloadLibrary', kind: "functiondeclaration", path: './core/runtime/runtime.unload_library.html', attributes: []},
{name: 'core.runtime.trace_setdeffilename', kind: "functiondeclaration", path: './core/runtime/trace_setdeffilename.html', attributes: ["extern(C)"]},
{name: 'core.runtime.trace_setlogfilename', kind: "functiondeclaration", path: './core/runtime/trace_setlogfilename.html', attributes: ["extern(C)"]},
{name: 'core.runtime.UnitTestResult', kind: "structdeclaration", path: './core/runtime/unit_test_result.html', attributes: []},
{name: 'core.runtime.UnitTestResult.executed', kind: "variabledeclaration", path: './core/runtime/unit_test_result.executed.html', attributes: []},
{name: 'core.runtime.UnitTestResult.fail', kind: "enummemberdeclaration", path: './core/runtime/unit_test_result.fail.html', attributes: []},
{name: 'core.runtime.UnitTestResult.opCast', kind: "functiondeclaration", path: './core/runtime/unit_test_result.op_cast.html', attributes: ["const"]},
{name: 'core.runtime.UnitTestResult.pass', kind: "enummemberdeclaration", path: './core/runtime/unit_test_result.pass.html', attributes: []},
{name: 'core.runtime.UnitTestResult.passed', kind: "variabledeclaration", path: './core/runtime/unit_test_result.passed.html', attributes: []},
{name: 'core.runtime.UnitTestResult.runMain', kind: "variabledeclaration", path: './core/runtime/unit_test_result.run_main.html', attributes: []},
{name: 'core.runtime.UnitTestResult.summarize', kind: "variabledeclaration", path: './core/runtime/unit_test_result.summarize.html', attributes: []},
{name: 'core.simd', kind: "module", path: './core/simd.html', attributes: []},
{name: 'core.simd.byte16', kind: "aliasdeclaration", path: './core/simd/byte16.html', attributes: []},
{name: 'core.simd.double2', kind: "aliasdeclaration", path: './core/simd/double2.html', attributes: []},
{name: 'core.simd.float4', kind: "aliasdeclaration", path: './core/simd/float4.html', attributes: []},
{name: 'core.simd.int4', kind: "aliasdeclaration", path: './core/simd/int4.html', attributes: []},
{name: 'core.simd.loadUnaligned', kind: "functiondeclaration", path: './core/simd/load_unaligned.html', attributes: []},
{name: 'core.simd.long2', kind: "aliasdeclaration", path: './core/simd/long2.html', attributes: []},
{name: 'core.simd.prefetch', kind: "functiondeclaration", path: './core/simd/prefetch.html', attributes: []},
{name: 'core.simd.short8', kind: "aliasdeclaration", path: './core/simd/short8.html', attributes: []},
{name: 'core.simd.simd', kind: "functiondeclaration", path: './core/simd/simd.html', attributes: ["pure", "safe"]},
{name: 'core.simd.simd_sto', kind: "functiondeclaration", path: './core/simd/simd_sto.html', attributes: ["safe"]},
{name: 'core.simd.simd_stod', kind: "functiondeclaration", path: './core/simd/simd_stod.html', attributes: ["safe"]},
{name: 'core.simd.simd_stof', kind: "functiondeclaration", path: './core/simd/simd_stof.html', attributes: ["safe"]},
{name: 'core.simd.storeUnaligned', kind: "functiondeclaration", path: './core/simd/store_unaligned.html', attributes: []},
{name: 'core.simd.ubyte16', kind: "aliasdeclaration", path: './core/simd/ubyte16.html', attributes: []},
{name: 'core.simd.uint4', kind: "aliasdeclaration", path: './core/simd/uint4.html', attributes: []},
{name: 'core.simd.ulong2', kind: "aliasdeclaration", path: './core/simd/ulong2.html', attributes: []},
{name: 'core.simd.ushort8', kind: "aliasdeclaration", path: './core/simd/ushort8.html', attributes: []},
{name: 'core.simd.Vector', kind: "aliasdeclaration", path: './core/simd/vector.html', attributes: []},
{name: 'core.simd.void16', kind: "aliasdeclaration", path: './core/simd/void16.html', attributes: []},
{name: 'core.simd.XMM', kind: "enumdeclaration", path: './core/simd/xmm.html', attributes: []},
{name: 'core.thread', kind: "module", path: './core/thread.html', attributes: []},
{name: 'core.time', kind: "module", path: './core/time.html', attributes: []},
{name: 'core.time.abs', kind: "functiondeclaration", path: './core/time/abs.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.ClockType', kind: "enumdeclaration", path: './core/time/clock_type.html', attributes: []},
{name: 'core.time.ClockType.bootTime', kind: "enummemberdeclaration", path: './core/time/clock_type.html#bootTime', attributes: []},
{name: 'core.time.ClockType.coarse', kind: "enummemberdeclaration", path: './core/time/clock_type.html#coarse', attributes: []},
{name: 'core.time.ClockType.normal', kind: "enummemberdeclaration", path: './core/time/clock_type.html#normal', attributes: []},
{name: 'core.time.ClockType.precise', kind: "enummemberdeclaration", path: './core/time/clock_type.html#precise', attributes: []},
{name: 'core.time.ClockType.processCPUTime', kind: "enummemberdeclaration", path: './core/time/clock_type.html#processCPUTime', attributes: []},
{name: 'core.time.ClockType.raw', kind: "enummemberdeclaration", path: './core/time/clock_type.html#raw', attributes: []},
{name: 'core.time.ClockType.second', kind: "enummemberdeclaration", path: './core/time/clock_type.html#second', attributes: []},
{name: 'core.time.ClockType.threadCPUTime', kind: "enummemberdeclaration", path: './core/time/clock_type.html#threadCPUTime', attributes: []},
{name: 'core.time.ClockType.uptime', kind: "enummemberdeclaration", path: './core/time/clock_type.html#uptime', attributes: []},
{name: 'core.time.ClockType.uptimeCoarse', kind: "enummemberdeclaration", path: './core/time/clock_type.html#uptimeCoarse', attributes: []},
{name: 'core.time.ClockType.uptimePrecise', kind: "enummemberdeclaration", path: './core/time/clock_type.html#uptimePrecise', attributes: []},
{name: 'core.time.convClockFreq', kind: "functiondeclaration", path: './core/time/conv_clock_freq.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.convert', kind: "functiondeclaration", path: './core/time/convert.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.days', kind: "aliasdeclaration", path: './core/time/days.html', attributes: []},
{name: 'core.time.dur', kind: "functiondeclaration", path: './core/time/dur.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.Duration', kind: "structdeclaration", path: './core/time/duration.html', attributes: []},
{name: 'core.time.Duration.isNegative', kind: "functiondeclaration", path: './core/time/duration.is_negative.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'core.time.Duration.max', kind: "functiondeclaration", path: './core/time/duration.max.html', attributes: ["static", "pure", "nothrow", "property", "nogc", "safe"]},
{name: 'core.time.Duration.min', kind: "functiondeclaration", path: './core/time/duration.min.html', attributes: ["static", "pure", "nothrow", "property", "nogc", "safe"]},
{name: 'core.time.Duration.opBinary', kind: "functiondeclaration", path: './core/time/duration.op_binary.html', attributes: ["const", "nothrow", "nogc"]},
{name: 'core.time.Duration.opBinaryRight', kind: "functiondeclaration", path: './core/time/duration.op_binary_right.html', attributes: ["const", "nothrow", "nogc"]},
{name: 'core.time.Duration.opCast', kind: "functiondeclaration", path: './core/time/duration.op_cast.html', attributes: ["const", "nothrow", "nogc"]},
{name: 'core.time.Duration.opCmp', kind: "functiondeclaration", path: './core/time/duration.op_cmp.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'core.time.Duration.opOpAssign', kind: "functiondeclaration", path: './core/time/duration.op_op_assign.html', attributes: ["nothrow", "nogc", "ref"]},
{name: 'core.time.Duration.opUnary', kind: "functiondeclaration", path: './core/time/duration.op_unary.html', attributes: ["const", "nothrow", "nogc"]},
{name: 'core.time.Duration.split', kind: "templatedeclaration", path: './core/time/duration.split.html', attributes: []},
{name: 'core.time.Duration.split.split', kind: "functiondeclaration", path: './core/time/duration.split.split.html', attributes: ["const", "nothrow", "nogc"]},
{name: 'core.time.Duration.toString', kind: "functiondeclaration", path: './core/time/duration.to_string.html', attributes: ["pure", "nothrow", "safe", "const"]},
{name: 'core.time.Duration.total', kind: "functiondeclaration", path: './core/time/duration.total.html', attributes: ["const", "nothrow", "nogc", "property"]},
{name: 'core.time.Duration.zero', kind: "functiondeclaration", path: './core/time/duration.zero.html', attributes: ["static", "pure", "nothrow", "property", "nogc", "safe"]},
{name: 'core.time.hnsecs', kind: "aliasdeclaration", path: './core/time/hnsecs.html', attributes: []},
{name: 'core.time.hours', kind: "aliasdeclaration", path: './core/time/hours.html', attributes: []},
{name: 'core.time.minutes', kind: "aliasdeclaration", path: './core/time/minutes.html', attributes: []},
{name: 'core.time.MonoTime', kind: "aliasdeclaration", path: './core/time/mono_time.html', attributes: []},
{name: 'core.time.MonoTimeImpl', kind: "structdeclaration", path: './core/time/mono_time_impl.html', attributes: []},
{name: 'core.time.MonoTimeImpl.currTime', kind: "functiondeclaration", path: './core/time/mono_time_impl.curr_time.html', attributes: ["static", "nothrow", "nogc", "property", "trusted"]},
{name: 'core.time.MonoTimeImpl.max', kind: "functiondeclaration", path: './core/time/mono_time_impl.max.html', attributes: []},
{name: 'core.time.MonoTimeImpl.min', kind: "functiondeclaration", path: './core/time/mono_time_impl.min.html', attributes: []},
{name: 'core.time.MonoTimeImpl.opBinary', kind: "functiondeclaration", path: './core/time/mono_time_impl.op_binary.html', attributes: ["const", "pure", "nothrow", "nogc"]},
{name: 'core.time.MonoTimeImpl.opCmp', kind: "functiondeclaration", path: './core/time/mono_time_impl.op_cmp.html', attributes: ["const", "pure", "nothrow", "nogc"]},
{name: 'core.time.MonoTimeImpl.opOpAssign', kind: "functiondeclaration", path: './core/time/mono_time_impl.op_op_assign.html', attributes: ["pure", "nothrow", "nogc", "ref"]},
{name: 'core.time.MonoTimeImpl.ticks', kind: "functiondeclaration", path: './core/time/mono_time_impl.ticks.html', attributes: ["const", "pure", "nothrow", "nogc", "property"]},
{name: 'core.time.MonoTimeImpl.ticksPerSecond', kind: "functiondeclaration", path: './core/time/mono_time_impl.ticks_per_second.html', attributes: ["static", "pure", "nothrow", "nogc", "property"]},
{name: 'core.time.MonoTimeImpl.toString', kind: "functiondeclaration", path: './core/time/mono_time_impl.to_string.html', attributes: ["const", "pure", "nothrow"]},
{name: 'core.time.MonoTimeImpl.zero', kind: "functiondeclaration", path: './core/time/mono_time_impl.zero.html', attributes: []},
{name: 'core.time.msecs', kind: "aliasdeclaration", path: './core/time/msecs.html', attributes: []},
{name: 'core.time.nsecs', kind: "aliasdeclaration", path: './core/time/nsecs.html', attributes: []},
{name: 'core.time.nsecsToTicks', kind: "functiondeclaration", path: './core/time/nsecs_to_ticks.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.seconds', kind: "aliasdeclaration", path: './core/time/seconds.html', attributes: []},
{name: 'core.time.TickDuration', kind: "structdeclaration", path: './core/time/tick_duration.html', attributes: []},
{name: 'core.time.TickDuration.appOrigin', kind: "variabledeclaration", path: './core/time/tick_duration.app_origin.html', attributes: []},
{name: 'core.time.TickDuration.currSystemTick', kind: "functiondeclaration", path: './core/time/tick_duration.curr_system_tick.html', attributes: ["static", "nothrow", "property", "nogc", "trusted"]},
{name: 'core.time.TickDuration.from', kind: "functiondeclaration", path: './core/time/tick_duration.from.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.TickDuration.hnsecs', kind: "functiondeclaration", path: './core/time/tick_duration.hnsecs.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'core.time.TickDuration.length', kind: "variabledeclaration", path: './core/time/tick_duration.length.html', attributes: []},
{name: 'core.time.TickDuration.max', kind: "functiondeclaration", path: './core/time/tick_duration.max.html', attributes: ["static", "pure", "nothrow", "property", "nogc", "safe"]},
{name: 'core.time.TickDuration.min', kind: "functiondeclaration", path: './core/time/tick_duration.min.html', attributes: ["static", "pure", "nothrow", "property", "nogc", "safe"]},
{name: 'core.time.TickDuration.msecs', kind: "functiondeclaration", path: './core/time/tick_duration.msecs.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'core.time.TickDuration.nsecs', kind: "functiondeclaration", path: './core/time/tick_duration.nsecs.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'core.time.TickDuration.opBinary', kind: "functiondeclaration", path: './core/time/tick_duration.op_binary.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.TickDuration.opCast', kind: "functiondeclaration", path: './core/time/tick_duration.op_cast.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.TickDuration.opCmp', kind: "functiondeclaration", path: './core/time/tick_duration.op_cmp.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'core.time.TickDuration.opOpAssign', kind: "functiondeclaration", path: './core/time/tick_duration.op_op_assign.html', attributes: ["pure", "nothrow", "nogc", "ref", "safe"]},
{name: 'core.time.TickDuration.opUnary', kind: "functiondeclaration", path: './core/time/tick_duration.op_unary.html', attributes: ["const", "pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.TickDuration.seconds', kind: "functiondeclaration", path: './core/time/tick_duration.seconds.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'core.time.TickDuration.this', kind: "functiondeclaration", path: './core/time/tick_duration.this.html', attributes: ["pure", "nothrow", "ref", "nogc", "safe"]},
{name: 'core.time.TickDuration.ticksPerSec', kind: "variabledeclaration", path: './core/time/tick_duration.ticks_per_sec.html', attributes: []},
{name: 'core.time.TickDuration.usecs', kind: "functiondeclaration", path: './core/time/tick_duration.usecs.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'core.time.TickDuration.zero', kind: "functiondeclaration", path: './core/time/tick_duration.zero.html', attributes: ["static", "pure", "nothrow", "property", "nogc", "safe"]},
{name: 'core.time.ticksToNSecs', kind: "functiondeclaration", path: './core/time/ticks_ton_secs.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.TimeException', kind: "classdeclaration", path: './core/time/time_exception.html', attributes: []},
{name: 'core.time.TimeException.this', kind: "functiondeclaration", path: './core/time/time_exception.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'core.time.to', kind: "functiondeclaration", path: './core/time/to.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'core.time.usecs', kind: "aliasdeclaration", path: './core/time/usecs.html', attributes: []},
{name: 'core.time.weeks', kind: "aliasdeclaration", path: './core/time/weeks.html', attributes: []},
{name: 'core.vararg', kind: "module", path: './core/vararg.html', attributes: []},
{name: 'core.vararg.va_arg', kind: "aliasdeclaration", path: './core/vararg/va_arg.html', attributes: []},
{name: 'core.volatile', kind: "module", path: './core/volatile.html', attributes: []},
{name: 'core.volatile.volatileLoad', kind: "functiondeclaration", path: './core/volatile/volatile_load.html', attributes: ["nothrow", "nogc", "safe"]},
{name: 'core.volatile.volatileStore', kind: "functiondeclaration", path: './core/volatile/volatile_store.html', attributes: ["nothrow", "nogc", "safe"]},
{name: 'dmd.backend.aarray', kind: "module", path: './dmd/backend/aarray.html', attributes: []},
{name: 'dmd.backend.aarray.AArray', kind: "structdeclaration", path: './dmd/backend/aarray/a_array.html', attributes: []},
{name: 'dmd.backend.aarray.AArray.apply', kind: "functiondeclaration", path: './dmd/backend/aarray/a_array.apply.html', attributes: []},
{name: 'dmd.backend.aarray.AArray.del', kind: "functiondeclaration", path: './dmd/backend/aarray/a_array.del.html', attributes: []},
{name: 'dmd.backend.aarray.AArray.destroy', kind: "functiondeclaration", path: './dmd/backend/aarray/a_array.destroy.html', attributes: []},
{name: 'dmd.backend.aarray.AArray.get', kind: "functiondeclaration", path: './dmd/backend/aarray/a_array.get.html', attributes: []},
{name: 'dmd.backend.aarray.AArray.isIn', kind: "functiondeclaration", path: './dmd/backend/aarray/a_array.is_in.html', attributes: []},
{name: 'dmd.backend.aarray.AArray.keys', kind: "functiondeclaration", path: './dmd/backend/aarray/a_array.keys.html', attributes: []},
{name: 'dmd.backend.aarray.AArray.length', kind: "functiondeclaration", path: './dmd/backend/aarray/a_array.length.html', attributes: []},
{name: 'dmd.backend.aarray.AArray.rehash', kind: "functiondeclaration", path: './dmd/backend/aarray/a_array.rehash.html', attributes: []},
{name: 'dmd.backend.aarray.AArray.values', kind: "functiondeclaration", path: './dmd/backend/aarray/a_array.values.html', attributes: []},
{name: 'dmd.backend.aarray.Tinfo', kind: "structdeclaration", path: './dmd/backend/aarray/tinfo.html', attributes: []},
{name: 'dmd.backend.aarray.TinfoChars', kind: "structdeclaration", path: './dmd/backend/aarray/tinfo_chars.html', attributes: []},
{name: 'dmd.backend.backconfig', kind: "module", path: './dmd/backend/backconfig.html', attributes: []},
{name: 'dmd.backend.backconfig.out_config_init', kind: "functiondeclaration", path: './dmd/backend/backconfig/out_config_init.html', attributes: ["extern(C)"]},
{name: 'dmd.backend.backconfig.util_set16', kind: "functiondeclaration", path: './dmd/backend/backconfig/util_set16.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.backconfig.util_set32', kind: "functiondeclaration", path: './dmd/backend/backconfig/util_set32.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.backconfig.util_set64', kind: "functiondeclaration", path: './dmd/backend/backconfig/util_set64.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.backend', kind: "module", path: './dmd/backend/backend.html', attributes: []},
{name: 'dmd.backend.barray', kind: "module", path: './dmd/backend/barray.html', attributes: []},
{name: 'dmd.backend.barray.Barray', kind: "structdeclaration", path: './dmd/backend/barray/barray.html', attributes: []},
{name: 'dmd.backend.barray.Barray.dtor', kind: "functiondeclaration", path: './dmd/backend/barray/barray.dtor.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.barray.Barray.push', kind: "functiondeclaration", path: './dmd/backend/barray/barray.push.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.barray.Barray.remove', kind: "functiondeclaration", path: './dmd/backend/barray/barray.remove.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.barray.Barray.reset', kind: "functiondeclaration", path: './dmd/backend/barray/barray.reset.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.barray.Barray.setLength', kind: "functiondeclaration", path: './dmd/backend/barray/barray.set_length.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.barray.Rarray', kind: "structdeclaration", path: './dmd/backend/barray/rarray.html', attributes: []},
{name: 'dmd.backend.barray.Rarray.dtor', kind: "functiondeclaration", path: './dmd/backend/barray/rarray.dtor.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.barray.Rarray.push', kind: "functiondeclaration", path: './dmd/backend/barray/rarray.push.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.barray.Rarray.reset', kind: "functiondeclaration", path: './dmd/backend/barray/rarray.reset.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.bcomplex', kind: "module", path: './dmd/backend/bcomplex.html', attributes: []},
{name: 'dmd.backend.blockopt', kind: "module", path: './dmd/backend/blockopt.html', attributes: []},
{name: 'dmd.backend.blockopt.bc_goal', kind: "variabledeclaration", path: './dmd/backend/blockopt/bc_goal.html', attributes: []},
{name: 'dmd.backend.blockopt.blkzero', kind: "variabledeclaration", path: './dmd/backend/blockopt/blkzero.html', attributes: []},
{name: 'dmd.backend.blockopt.block_appendexp', kind: "functiondeclaration", path: './dmd/backend/blockopt/block_appendexp.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.block_calloc', kind: "functiondeclaration", path: './dmd/backend/blockopt/block_calloc.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.block_calloc_i', kind: "functiondeclaration", path: './dmd/backend/blockopt/block_calloc_i.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.block_clearvisit', kind: "functiondeclaration", path: './dmd/backend/blockopt/block_clearvisit.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.block_compbcount', kind: "functiondeclaration", path: './dmd/backend/blockopt/block_compbcount.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.block_endfunc', kind: "functiondeclaration", path: './dmd/backend/blockopt/block_endfunc.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.block_free', kind: "functiondeclaration", path: './dmd/backend/blockopt/block_free.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.block_freelist', kind: "variabledeclaration", path: './dmd/backend/blockopt/block_freelist.html', attributes: []},
{name: 'dmd.backend.blockopt.block_goto', kind: "functiondeclaration", path: './dmd/backend/blockopt/block_goto.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.block_init', kind: "functiondeclaration", path: './dmd/backend/blockopt/block_init.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.block_last', kind: "variabledeclaration", path: './dmd/backend/blockopt/block_last.html', attributes: []},
{name: 'dmd.backend.blockopt.block_next', kind: "functiondeclaration", path: './dmd/backend/blockopt/block_next.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.block_optimizer_free', kind: "functiondeclaration", path: './dmd/backend/blockopt/block_optimizer_free.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.block_pred', kind: "functiondeclaration", path: './dmd/backend/blockopt/block_pred.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.block_ptr', kind: "functiondeclaration", path: './dmd/backend/blockopt/block_ptr.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.block_term', kind: "functiondeclaration", path: './dmd/backend/blockopt/block_term.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.block_visit', kind: "functiondeclaration", path: './dmd/backend/blockopt/block_visit.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.blocklist_free', kind: "functiondeclaration", path: './dmd/backend/blockopt/blocklist_free.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.blockopt', kind: "functiondeclaration", path: './dmd/backend/blockopt/blockopt.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.brcombine', kind: "functiondeclaration", path: './dmd/backend/blockopt/brcombine.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.compdfo', kind: "functiondeclaration", path: './dmd/backend/blockopt/compdfo.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.curblock', kind: "variabledeclaration", path: './dmd/backend/blockopt/curblock.html', attributes: []},
{name: 'dmd.backend.blockopt.dfo', kind: "variabledeclaration", path: './dmd/backend/blockopt/dfo.html', attributes: []},
{name: 'dmd.backend.blockopt.funcsideeffects', kind: "functiondeclaration", path: './dmd/backend/blockopt/funcsideeffects.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.blockopt.mem_fcalloc', kind: "functiondeclaration", path: './dmd/backend/blockopt/mem_fcalloc.html', attributes: ["extern(C)"]},
{name: 'dmd.backend.blockopt.mem_free', kind: "functiondeclaration", path: './dmd/backend/blockopt/mem_free.html', attributes: ["extern(C)"]},
{name: 'dmd.backend.blockopt.MEM_PH_FREE', kind: "aliasdeclaration", path: './dmd/backend/blockopt/me_m_p_h_free.html', attributes: []},
{name: 'dmd.backend.blockopt.numblks', kind: "variabledeclaration", path: './dmd/backend/blockopt/numblks.html', attributes: []},
{name: 'dmd.backend.blockopt.SCPP_OR_NTEXCEPTIONS', kind: "enummemberdeclaration", path: './dmd/backend/blockopt/scp_p_o_r_ntexceptions.html', attributes: []},
{name: 'dmd.backend.blockopt.startblock', kind: "variabledeclaration", path: './dmd/backend/blockopt/startblock.html', attributes: []},
{name: 'dmd.backend.cc', kind: "module", path: './dmd/backend/cc.html', attributes: []},
{name: 'dmd.backend.cc.baseclass_t', kind: "structdeclaration", path: './dmd/backend/cc/baseclass_t.html', attributes: []},
{name: 'dmd.backend.cc.BC', kind: "aliasdeclaration", path: './dmd/backend/cc/bc.html', attributes: []},
{name: 'dmd.backend.cc.BlockRange', kind: "structdeclaration", path: './dmd/backend/cc/block_range.html', attributes: []},
{name: 'dmd.backend.cc.ClassDeclaration_', kind: "aliasdeclaration", path: './dmd/backend/cc/class_declaration_.html', attributes: []},
{name: 'dmd.backend.cc.Cstate', kind: "structdeclaration", path: './dmd/backend/cc/cstate.html', attributes: []},
{name: 'dmd.backend.cc.dt_t', kind: "structdeclaration", path: './dmd/backend/cc/dt_t.html', attributes: []},
{name: 'dmd.backend.cc.EEcontext', kind: "structdeclaration", path: './dmd/backend/cc/e_econtext.html', attributes: []},
{name: 'dmd.backend.cc.ehmethod', kind: "functiondeclaration", path: './dmd/backend/cc/ehmethod.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.cc.enum_flags_t', kind: "aliasdeclaration", path: './dmd/backend/cc/enum_flags_t.html', attributes: []},
{name: 'dmd.backend.cc.FL', kind: "aliasdeclaration", path: './dmd/backend/cc/fl.html', attributes: []},
{name: 'dmd.backend.cc.IDMAX', kind: "enummemberdeclaration", path: './dmd/backend/cc/idmax.html', attributes: []},
{name: 'dmd.backend.cc.list_symbol', kind: "functiondeclaration", path: './dmd/backend/cc/list_symbol.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.cc.meminit_t', kind: "structdeclaration", path: './dmd/backend/cc/meminit_t.html', attributes: []},
{name: 'dmd.backend.cc.mptr_flags_t', kind: "aliasdeclaration", path: './dmd/backend/cc/mptr_flags_t.html', attributes: []},
{name: 'dmd.backend.cc.pflags_t', kind: "aliasdeclaration", path: './dmd/backend/cc/pflags_t.html', attributes: []},
{name: 'dmd.backend.cc.Pstate', kind: "structdeclaration", path: './dmd/backend/cc/pstate.html', attributes: []},
{name: 'dmd.backend.cc.Srcpos', kind: "structdeclaration", path: './dmd/backend/cc/srcpos.html', attributes: []},
{name: 'dmd.backend.cc.Srcpos.set', kind: "functiondeclaration", path: './dmd/backend/cc/srcpos.set.html', attributes: ["pure", "extern(C++)"]},
{name: 'dmd.backend.cc.struct_flags_t', kind: "aliasdeclaration", path: './dmd/backend/cc/struct_flags_t.html', attributes: []},
{name: 'dmd.backend.cc.symtab_t', kind: "structdeclaration", path: './dmd/backend/cc/symtab_t.html', attributes: []},
{name: 'dmd.backend.cc.template_t', kind: "structdeclaration", path: './dmd/backend/cc/template_t.html', attributes: []},
{name: 'dmd.backend.cc.TME', kind: "structdeclaration", path: './dmd/backend/cc/tme.html', attributes: []},
{name: 'dmd.backend.cc.TMF', kind: "structdeclaration", path: './dmd/backend/cc/tmf.html', attributes: []},
{name: 'dmd.backend.cc.TMNE', kind: "structdeclaration", path: './dmd/backend/cc/tmne.html', attributes: []},
{name: 'dmd.backend.cc.TMNF', kind: "structdeclaration", path: './dmd/backend/cc/tmnf.html', attributes: []},
{name: 'dmd.backend.cdef', kind: "module", path: './dmd/backend/cdef.html', attributes: []},
{name: 'dmd.backend.cdef.Cent', kind: "structdeclaration", path: './dmd/backend/cdef/cent.html', attributes: []},
{name: 'dmd.backend.cdef.EHmethod', kind: "enumdeclaration", path: './dmd/backend/cdef/e_hmethod.html', attributes: []},
{name: 'dmd.backend.cdef.EXIT_BREAK', kind: "enummemberdeclaration", path: './dmd/backend/cdef/exi_t_break.html', attributes: []},
{name: 'dmd.backend.cdef.linkage_t', kind: "enumdeclaration", path: './dmd/backend/cdef/linkage_t.html', attributes: []},
{name: 'dmd.backend.cdef.SC', kind: "aliasdeclaration", path: './dmd/backend/cdef/sc.html', attributes: []},
{name: 'dmd.backend.cg', kind: "module", path: './dmd/backend/cg.html', attributes: []},
{name: 'dmd.backend.cg.BPRM', kind: "variabledeclaration", path: './dmd/backend/cg/bprm.html', attributes: []},
{name: 'dmd.backend.cg.cseg', kind: "variabledeclaration", path: './dmd/backend/cg/cseg.html', attributes: []},
{name: 'dmd.backend.cg.datafl', kind: "variabledeclaration", path: './dmd/backend/cg/datafl.html', attributes: []},
{name: 'dmd.backend.cg.DOUBLEREGS', kind: "variabledeclaration", path: './dmd/backend/cg/doubleregs.html', attributes: []},
{name: 'dmd.backend.cg.flinsymtab', kind: "variabledeclaration", path: './dmd/backend/cg/flinsymtab.html', attributes: []},
{name: 'dmd.backend.cg.FLOATREGS', kind: "variabledeclaration", path: './dmd/backend/cg/floatregs.html', attributes: []},
{name: 'dmd.backend.cg.FLOATREGS2', kind: "variabledeclaration", path: './dmd/backend/cg/floatreg_s2.html', attributes: []},
{name: 'dmd.backend.cg.framehandleroffset', kind: "variabledeclaration", path: './dmd/backend/cg/framehandleroffset.html', attributes: []},
{name: 'dmd.backend.cg.fregsaved', kind: "variabledeclaration", path: './dmd/backend/cg/fregsaved.html', attributes: []},
{name: 'dmd.backend.cg.localgot', kind: "variabledeclaration", path: './dmd/backend/cg/localgot.html', attributes: []},
{name: 'dmd.backend.cg.localgotoffset', kind: "variabledeclaration", path: './dmd/backend/cg/localgotoffset.html', attributes: []},
{name: 'dmd.backend.cg.localsize', kind: "variabledeclaration", path: './dmd/backend/cg/localsize.html', attributes: []},
{name: 'dmd.backend.cg.segfl', kind: "variabledeclaration", path: './dmd/backend/cg/segfl.html', attributes: []},
{name: 'dmd.backend.cg.STACKALIGN', kind: "variabledeclaration", path: './dmd/backend/cg/stackalign.html', attributes: []},
{name: 'dmd.backend.cg.stackfl', kind: "variabledeclaration", path: './dmd/backend/cg/stackfl.html', attributes: []},
{name: 'dmd.backend.cg.TARGET_STACKALIGN', kind: "variabledeclaration", path: './dmd/backend/cg/targe_t_stackalign.html', attributes: []},
{name: 'dmd.backend.cg.tls_get_addr_sym', kind: "variabledeclaration", path: './dmd/backend/cg/tls_get_addr_sym.html', attributes: []},
{name: 'dmd.backend.cg87', kind: "module", path: './dmd/backend/cg87.html', attributes: []},
{name: 'dmd.backend.cgcod', kind: "module", path: './dmd/backend/cgcod.html', attributes: []},
{name: 'dmd.backend.cgcod.alignsection', kind: "functiondeclaration", path: './dmd/backend/cgcod/alignsection.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.allocreg', kind: "functiondeclaration", path: './dmd/backend/cgcod/allocreg.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.andregcon', kind: "functiondeclaration", path: './dmd/backend/cgcod/andregcon.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.autosort_cmp', kind: "functiondeclaration", path: './dmd/backend/cgcod/autosort_cmp.html', attributes: ["extern(C)"]},
{name: 'dmd.backend.cgcod.callcdxxx', kind: "functiondeclaration", path: './dmd/backend/cgcod/callcdxxx.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.codgen', kind: "functiondeclaration", path: './dmd/backend/cgcod/codgen.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.cse_flush', kind: "functiondeclaration", path: './dmd/backend/cgcod/cse_flush.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.cssave', kind: "functiondeclaration", path: './dmd/backend/cgcod/cssave.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.docommas', kind: "functiondeclaration", path: './dmd/backend/cgcod/docommas.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.evalinregister', kind: "functiondeclaration", path: './dmd/backend/cgcod/evalinregister.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.findreg', kind: "functiondeclaration", path: './dmd/backend/cgcod/findreg.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.freenode', kind: "functiondeclaration", path: './dmd/backend/cgcod/freenode.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.getregs', kind: "functiondeclaration", path: './dmd/backend/cgcod/getregs.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.getregs_imm', kind: "functiondeclaration", path: './dmd/backend/cgcod/getregs_imm.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.getregsNoSave', kind: "functiondeclaration", path: './dmd/backend/cgcod/getregs_no_save.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.getscratch', kind: "functiondeclaration", path: './dmd/backend/cgcod/getscratch.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.isregvar', kind: "functiondeclaration", path: './dmd/backend/cgcod/isregvar.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.lpadregs', kind: "functiondeclaration", path: './dmd/backend/cgcod/lpadregs.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.msavereg', kind: "variabledeclaration", path: './dmd/backend/cgcod/msavereg.html', attributes: []},
{name: 'dmd.backend.cgcod.numbitsset', kind: "functiondeclaration", path: './dmd/backend/cgcod/numbitsset.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.prolog', kind: "functiondeclaration", path: './dmd/backend/cgcod/prolog.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.regm_str', kind: "functiondeclaration", path: './dmd/backend/cgcod/regm_str.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.scodelem', kind: "functiondeclaration", path: './dmd/backend/cgcod/scodelem.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.stackoffsets', kind: "functiondeclaration", path: './dmd/backend/cgcod/stackoffsets.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcod.stackpush', kind: "variabledeclaration", path: './dmd/backend/cgcod/stackpush.html', attributes: []},
{name: 'dmd.backend.cgcod.useregs', kind: "functiondeclaration", path: './dmd/backend/cgcod/useregs.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcs', kind: "module", path: './dmd/backend/cgcs.html', attributes: []},
{name: 'dmd.backend.cgcs.cgcs_term', kind: "functiondeclaration", path: './dmd/backend/cgcs/cgcs_term.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcs.comsubs', kind: "functiondeclaration", path: './dmd/backend/cgcs/comsubs.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgcse', kind: "module", path: './dmd/backend/cgcse.html', attributes: []},
{name: 'dmd.backend.cgcse.CSEload', kind: "enummemberdeclaration", path: './dmd/backend/cgcse/cs_eload.html', attributes: []},
{name: 'dmd.backend.cgcv', kind: "module", path: './dmd/backend/cgcv.html', attributes: []},
{name: 'dmd.backend.cgelem', kind: "module", path: './dmd/backend/cgelem.html', attributes: []},
{name: 'dmd.backend.cgelem.doptelem', kind: "functiondeclaration", path: './dmd/backend/cgelem/doptelem.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgelem.elddtor', kind: "functiondeclaration", path: './dmd/backend/cgelem/elddtor.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgelem.elemisnegone', kind: "functiondeclaration", path: './dmd/backend/cgelem/elemisnegone.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgelem.elemisone', kind: "functiondeclaration", path: './dmd/backend/cgelem/elemisone.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgelem.elmsw', kind: "functiondeclaration", path: './dmd/backend/cgelem/elmsw.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgelem.elpair', kind: "functiondeclaration", path: './dmd/backend/cgelem/elpair.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgelem.elstruct', kind: "functiondeclaration", path: './dmd/backend/cgelem/elstruct.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgelem.fillinops', kind: "functiondeclaration", path: './dmd/backend/cgelem/fillinops.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgelem.postoptelem', kind: "functiondeclaration", path: './dmd/backend/cgelem/postoptelem.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgelem.swaprel', kind: "functiondeclaration", path: './dmd/backend/cgelem/swaprel.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgen', kind: "module", path: './dmd/backend/cgen.html', attributes: []},
{name: 'dmd.backend.cgen.addtofixlist', kind: "functiondeclaration", path: './dmd/backend/cgen/addtofixlist.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgen.cat', kind: "functiondeclaration", path: './dmd/backend/cgen/cat.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgen.cgen_prelinnum', kind: "functiondeclaration", path: './dmd/backend/cgen/cgen_prelinnum.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgen.code_last', kind: "functiondeclaration", path: './dmd/backend/cgen/code_last.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgen.code_orflag', kind: "functiondeclaration", path: './dmd/backend/cgen/code_orflag.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgen.code_orrex', kind: "functiondeclaration", path: './dmd/backend/cgen/code_orrex.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgen.Fixup', kind: "structdeclaration", path: './dmd/backend/cgen/fixup.html', attributes: []},
{name: 'dmd.backend.cgen.gen', kind: "functiondeclaration", path: './dmd/backend/cgen/gen.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgen.genadjfpu', kind: "functiondeclaration", path: './dmd/backend/cgen/genadjfpu.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgen.genc', kind: "functiondeclaration", path: './dmd/backend/cgen/genc.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgen.gencodelem', kind: "functiondeclaration", path: './dmd/backend/cgen/gencodelem.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgen.genlinnum', kind: "functiondeclaration", path: './dmd/backend/cgen/genlinnum.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgen.gennop', kind: "functiondeclaration", path: './dmd/backend/cgen/gennop.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgen.outfixlist', kind: "functiondeclaration", path: './dmd/backend/cgen/outfixlist.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgen.reghasvalue', kind: "functiondeclaration", path: './dmd/backend/cgen/reghasvalue.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgen.regwithvalue', kind: "functiondeclaration", path: './dmd/backend/cgen/regwithvalue.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgobj', kind: "module", path: './dmd/backend/cgobj.html', attributes: []},
{name: 'dmd.backend.cgreg', kind: "module", path: './dmd/backend/cgreg.html', attributes: []},
{name: 'dmd.backend.cgreg.cgreg_gotoepilog', kind: "functiondeclaration", path: './dmd/backend/cgreg/cgreg_gotoepilog.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgreg.cgreg_init', kind: "functiondeclaration", path: './dmd/backend/cgreg/cgreg_init.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgreg.cgreg_reset', kind: "functiondeclaration", path: './dmd/backend/cgreg/cgreg_reset.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgreg.cgreg_spillreg_epilog', kind: "functiondeclaration", path: './dmd/backend/cgreg/cgreg_spillreg_epilog.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgreg.cgreg_spillreg_prolog', kind: "functiondeclaration", path: './dmd/backend/cgreg/cgreg_spillreg_prolog.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgreg.cgreg_term', kind: "functiondeclaration", path: './dmd/backend/cgreg/cgreg_term.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgreg.cgreg_unregister', kind: "functiondeclaration", path: './dmd/backend/cgreg/cgreg_unregister.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgreg.cgreg_used', kind: "functiondeclaration", path: './dmd/backend/cgreg/cgreg_used.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgreg.Reg', kind: "structdeclaration", path: './dmd/backend/cgreg/reg.html', attributes: []},
{name: 'dmd.backend.cgsched', kind: "module", path: './dmd/backend/cgsched.html', attributes: []},
{name: 'dmd.backend.cgsched.B', kind: "enummemberdeclaration", path: './dmd/backend/cgsched/b.html', attributes: []},
{name: 'dmd.backend.cgsched.C', kind: "enummemberdeclaration", path: './dmd/backend/cgsched/c.html', attributes: []},
{name: 'dmd.backend.cgsched.cgsched_block', kind: "functiondeclaration", path: './dmd/backend/cgsched/cgsched_block.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgsched.F', kind: "enummemberdeclaration", path: './dmd/backend/cgsched/f.html', attributes: []},
{name: 'dmd.backend.cgsched.FX', kind: "enummemberdeclaration", path: './dmd/backend/cgsched/fx.html', attributes: []},
{name: 'dmd.backend.cgsched.mMEM', kind: "enummemberdeclaration", path: './dmd/backend/cgsched/mmem.html', attributes: []},
{name: 'dmd.backend.cgsched.N', kind: "enummemberdeclaration", path: './dmd/backend/cgsched/n.html', attributes: []},
{name: 'dmd.backend.cgsched.NP', kind: "enummemberdeclaration", path: './dmd/backend/cgsched/np.html', attributes: []},
{name: 'dmd.backend.cgsched.PE', kind: "enummemberdeclaration", path: './dmd/backend/cgsched/pe.html', attributes: []},
{name: 'dmd.backend.cgsched.PF', kind: "enummemberdeclaration", path: './dmd/backend/cgsched/pf.html', attributes: []},
{name: 'dmd.backend.cgsched.PU', kind: "enummemberdeclaration", path: './dmd/backend/cgsched/pu.html', attributes: []},
{name: 'dmd.backend.cgsched.PV', kind: "enummemberdeclaration", path: './dmd/backend/cgsched/pv.html', attributes: []},
{name: 'dmd.backend.cgsched.R', kind: "enummemberdeclaration", path: './dmd/backend/cgsched/r.html', attributes: []},
{name: 'dmd.backend.cgsched.S', kind: "enummemberdeclaration", path: './dmd/backend/cgsched/s.html', attributes: []},
{name: 'dmd.backend.cgsched.simpleops', kind: "functiondeclaration", path: './dmd/backend/cgsched/simpleops.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgsched.UV', kind: "enummemberdeclaration", path: './dmd/backend/cgsched/uv.html', attributes: []},
{name: 'dmd.backend.cgxmm', kind: "module", path: './dmd/backend/cgxmm.html', attributes: []},
{name: 'dmd.backend.cgxmm.cdvecfill', kind: "functiondeclaration", path: './dmd/backend/cgxmm/cdvecfill.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgxmm.cdvecsto', kind: "functiondeclaration", path: './dmd/backend/cgxmm/cdvecsto.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgxmm.checkSetVex', kind: "functiondeclaration", path: './dmd/backend/cgxmm/check_set_vex.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgxmm.checkSetVex3', kind: "functiondeclaration", path: './dmd/backend/cgxmm/check_set_vex3.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgxmm.isXMMstore', kind: "functiondeclaration", path: './dmd/backend/cgxmm/is_xm_mstore.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgxmm.orthxmm', kind: "functiondeclaration", path: './dmd/backend/cgxmm/orthxmm.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgxmm.xmmcnvt', kind: "functiondeclaration", path: './dmd/backend/cgxmm/xmmcnvt.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgxmm.xmmeq', kind: "functiondeclaration", path: './dmd/backend/cgxmm/xmmeq.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgxmm.xmmIsAligned', kind: "functiondeclaration", path: './dmd/backend/cgxmm/xmm_is_aligned.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgxmm.xmmload', kind: "functiondeclaration", path: './dmd/backend/cgxmm/xmmload.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgxmm.xmmneg', kind: "functiondeclaration", path: './dmd/backend/cgxmm/xmmneg.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgxmm.xmmopass', kind: "functiondeclaration", path: './dmd/backend/cgxmm/xmmopass.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgxmm.xmmpost', kind: "functiondeclaration", path: './dmd/backend/cgxmm/xmmpost.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cgxmm.xmmstore', kind: "functiondeclaration", path: './dmd/backend/cgxmm/xmmstore.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1', kind: "module", path: './dmd/backend/cod1.html', attributes: []},
{name: 'dmd.backend.cod1.buildEA', kind: "functiondeclaration", path: './dmd/backend/cod1/build_ea.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.buildModregrm', kind: "functiondeclaration", path: './dmd/backend/cod1/build_modregrm.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.callclib', kind: "functiondeclaration", path: './dmd/backend/cod1/callclib.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.cdfunc', kind: "functiondeclaration", path: './dmd/backend/cod1/cdfunc.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.cdisscaledindex', kind: "functiondeclaration", path: './dmd/backend/cod1/cdisscaledindex.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.cdstrthis', kind: "functiondeclaration", path: './dmd/backend/cod1/cdstrthis.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.fixresult', kind: "functiondeclaration", path: './dmd/backend/cod1/fixresult.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.fltregs', kind: "functiondeclaration", path: './dmd/backend/cod1/fltregs.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.FuncParamRegs_create', kind: "functiondeclaration", path: './dmd/backend/cod1/func_param_regs_create.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.genEEcode', kind: "functiondeclaration", path: './dmd/backend/cod1/gen_e_ecode.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.gensaverestore', kind: "functiondeclaration", path: './dmd/backend/cod1/gensaverestore.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.genstackclean', kind: "functiondeclaration", path: './dmd/backend/cod1/genstackclean.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.getaddrmode', kind: "functiondeclaration", path: './dmd/backend/cod1/getaddrmode.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.getlvalue', kind: "functiondeclaration", path: './dmd/backend/cod1/getlvalue.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.getlvalue_lsw', kind: "functiondeclaration", path: './dmd/backend/cod1/getlvalue_lsw.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.getlvalue_msw', kind: "functiondeclaration", path: './dmd/backend/cod1/getlvalue_msw.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.INF32', kind: "enummemberdeclaration", path: './dmd/backend/cod1/in_f32.html', attributes: []},
{name: 'dmd.backend.cod1.INF64', kind: "enummemberdeclaration", path: './dmd/backend/cod1/in_f64.html', attributes: []},
{name: 'dmd.backend.cod1.INFfloat', kind: "enummemberdeclaration", path: './dmd/backend/cod1/in_ffloat.html', attributes: []},
{name: 'dmd.backend.cod1.INFpusheabcdx', kind: "enummemberdeclaration", path: './dmd/backend/cod1/in_fpusheabcdx.html', attributes: []},
{name: 'dmd.backend.cod1.INFpushebx', kind: "enummemberdeclaration", path: './dmd/backend/cod1/in_fpushebx.html', attributes: []},
{name: 'dmd.backend.cod1.INFwkdone', kind: "enummemberdeclaration", path: './dmd/backend/cod1/in_fwkdone.html', attributes: []},
{name: 'dmd.backend.cod1.isscaledindex', kind: "functiondeclaration", path: './dmd/backend/cod1/isscaledindex.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.loaddata', kind: "functiondeclaration", path: './dmd/backend/cod1/loaddata.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.loadea', kind: "functiondeclaration", path: './dmd/backend/cod1/loadea.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.logexp', kind: "functiondeclaration", path: './dmd/backend/cod1/logexp.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.offsetinreg', kind: "functiondeclaration", path: './dmd/backend/cod1/offsetinreg.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.Parameter', kind: "structdeclaration", path: './dmd/backend/cod1/parameter.html', attributes: []},
{name: 'dmd.backend.cod1.paramsize', kind: "functiondeclaration", path: './dmd/backend/cod1/paramsize.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.pushParams', kind: "functiondeclaration", path: './dmd/backend/cod1/push_params.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.regParamInPreg', kind: "functiondeclaration", path: './dmd/backend/cod1/reg_param_in_preg.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod1.SSFLlea', kind: "enummemberdeclaration", path: './dmd/backend/cod1/ssf_llea.html', attributes: []},
{name: 'dmd.backend.cod1.SSFLnobase', kind: "enummemberdeclaration", path: './dmd/backend/cod1/ssf_lnobase.html', attributes: []},
{name: 'dmd.backend.cod1.SSFLnobase1', kind: "enummemberdeclaration", path: './dmd/backend/cod1/ssf_lnobase1.html', attributes: []},
{name: 'dmd.backend.cod1.SSFLnobp', kind: "enummemberdeclaration", path: './dmd/backend/cod1/ssf_lnobp.html', attributes: []},
{name: 'dmd.backend.cod1.tstresult', kind: "functiondeclaration", path: './dmd/backend/cod1/tstresult.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2', kind: "module", path: './dmd/backend/cod2.html', attributes: []},
{name: 'dmd.backend.cod2.cdabs', kind: "functiondeclaration", path: './dmd/backend/cod2/cdabs.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdbswap', kind: "functiondeclaration", path: './dmd/backend/cod2/cdbswap.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdcom', kind: "functiondeclaration", path: './dmd/backend/cod2/cdcom.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdcomma', kind: "functiondeclaration", path: './dmd/backend/cod2/cdcomma.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdcond', kind: "functiondeclaration", path: './dmd/backend/cod2/cdcond.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdctor', kind: "functiondeclaration", path: './dmd/backend/cod2/cdctor.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cddctor', kind: "functiondeclaration", path: './dmd/backend/cod2/cddctor.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdddtor', kind: "functiondeclaration", path: './dmd/backend/cod2/cdddtor.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdhalt', kind: "functiondeclaration", path: './dmd/backend/cod2/cdhalt.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdind', kind: "functiondeclaration", path: './dmd/backend/cod2/cdind.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdloglog', kind: "functiondeclaration", path: './dmd/backend/cod2/cdloglog.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdmemcmp', kind: "functiondeclaration", path: './dmd/backend/cod2/cdmemcmp.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdmemcpy', kind: "functiondeclaration", path: './dmd/backend/cod2/cdmemcpy.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdmemset', kind: "functiondeclaration", path: './dmd/backend/cod2/cdmemset.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdmul', kind: "functiondeclaration", path: './dmd/backend/cod2/cdmul.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdneg', kind: "functiondeclaration", path: './dmd/backend/cod2/cdneg.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdnot', kind: "functiondeclaration", path: './dmd/backend/cod2/cdnot.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdorth', kind: "functiondeclaration", path: './dmd/backend/cod2/cdorth.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdpost', kind: "functiondeclaration", path: './dmd/backend/cod2/cdpost.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdrelconst', kind: "functiondeclaration", path: './dmd/backend/cod2/cdrelconst.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdshift', kind: "functiondeclaration", path: './dmd/backend/cod2/cdshift.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdstrcmp', kind: "functiondeclaration", path: './dmd/backend/cod2/cdstrcmp.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdstrcpy', kind: "functiondeclaration", path: './dmd/backend/cod2/cdstrcpy.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdstreq', kind: "functiondeclaration", path: './dmd/backend/cod2/cdstreq.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdstrlen', kind: "functiondeclaration", path: './dmd/backend/cod2/cdstrlen.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.cdvoid', kind: "functiondeclaration", path: './dmd/backend/cod2/cdvoid.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.getoffset', kind: "functiondeclaration", path: './dmd/backend/cod2/getoffset.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.idxregm', kind: "functiondeclaration", path: './dmd/backend/cod2/idxregm.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod2.movOnly', kind: "functiondeclaration", path: './dmd/backend/cod2/mov_only.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3', kind: "module", path: './dmd/backend/cod3.html', attributes: []},
{name: 'dmd.backend.cod3._compare_fp_t', kind: "aliasdeclaration", path: './dmd/backend/cod3/_compare_fp_t.html', attributes: ["nothrow"]},
{name: 'dmd.backend.cod3.assignaddr', kind: "functiondeclaration", path: './dmd/backend/cod3/assignaddr.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.branch', kind: "functiondeclaration", path: './dmd/backend/cod3/branch.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.calcblksize', kind: "functiondeclaration", path: './dmd/backend/cod3/calcblksize.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.calccodsize', kind: "functiondeclaration", path: './dmd/backend/cod3/calccodsize.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.cdframeptr', kind: "functiondeclaration", path: './dmd/backend/cod3/cdframeptr.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.cdgot', kind: "functiondeclaration", path: './dmd/backend/cod3/cdgot.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.cgreg_dst_regs', kind: "functiondeclaration", path: './dmd/backend/cod3/cgreg_dst_regs.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.cod3_adjSymOffsets', kind: "functiondeclaration", path: './dmd/backend/cod3/cod3_adj_sym_offsets.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.cod3_align', kind: "functiondeclaration", path: './dmd/backend/cod3/cod3_align.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.cod3_align_bytes', kind: "functiondeclaration", path: './dmd/backend/cod3/cod3_align_bytes.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.cod3_bpoffset', kind: "functiondeclaration", path: './dmd/backend/cod3/cod3_bpoffset.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.cod3_EA', kind: "functiondeclaration", path: './dmd/backend/cod3/cod3__ea.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.cod3_initregs', kind: "functiondeclaration", path: './dmd/backend/cod3/cod3_initregs.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.cod3_ptrchk', kind: "functiondeclaration", path: './dmd/backend/cod3/cod3_ptrchk.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.cod3_set32', kind: "functiondeclaration", path: './dmd/backend/cod3/cod3_set32.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.cod3_set64', kind: "functiondeclaration", path: './dmd/backend/cod3/cod3_set64.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.cod3_setdefault', kind: "functiondeclaration", path: './dmd/backend/cod3/cod3_setdefault.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.cod3_spoff', kind: "functiondeclaration", path: './dmd/backend/cod3/cod3_spoff.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.cod3_stackadj', kind: "functiondeclaration", path: './dmd/backend/cod3/cod3_stackadj.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.cod3_stackalign', kind: "functiondeclaration", path: './dmd/backend/cod3/cod3_stackalign.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.cod3_thunk', kind: "functiondeclaration", path: './dmd/backend/cod3/cod3_thunk.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.cod3_useBP', kind: "functiondeclaration", path: './dmd/backend/cod3/cod3_use_bp.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.cse_simple', kind: "functiondeclaration", path: './dmd/backend/cod3/cse_simple.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.doswitch', kind: "functiondeclaration", path: './dmd/backend/cod3/doswitch.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.epilog', kind: "functiondeclaration", path: './dmd/backend/cod3/epilog.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.gen_storecse', kind: "functiondeclaration", path: './dmd/backend/cod3/gen_storecse.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.genjmp', kind: "functiondeclaration", path: './dmd/backend/cod3/genjmp.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.genmovreg', kind: "functiondeclaration", path: './dmd/backend/cod3/genmovreg.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.genmulimm', kind: "functiondeclaration", path: './dmd/backend/cod3/genmulimm.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.genshift', kind: "functiondeclaration", path: './dmd/backend/cod3/genshift.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.jmpaddr', kind: "functiondeclaration", path: './dmd/backend/cod3/jmpaddr.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.jmpopcode', kind: "functiondeclaration", path: './dmd/backend/cod3/jmpopcode.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.load_localgot', kind: "functiondeclaration", path: './dmd/backend/cod3/load_localgot.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.makeitextern', kind: "functiondeclaration", path: './dmd/backend/cod3/makeitextern.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.movregconst', kind: "functiondeclaration", path: './dmd/backend/cod3/movregconst.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.outblkexitcode', kind: "functiondeclaration", path: './dmd/backend/cod3/outblkexitcode.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.outjmptab', kind: "functiondeclaration", path: './dmd/backend/cod3/outjmptab.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.outswitab', kind: "functiondeclaration", path: './dmd/backend/cod3/outswitab.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.pinholeopt', kind: "functiondeclaration", path: './dmd/backend/cod3/pinholeopt.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.prolog_frame', kind: "functiondeclaration", path: './dmd/backend/cod3/prolog_frame.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.prolog_genvarargs', kind: "functiondeclaration", path: './dmd/backend/cod3/prolog_genvarargs.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.prolog_ifunc', kind: "functiondeclaration", path: './dmd/backend/cod3/prolog_ifunc.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.prolog_loadparams', kind: "functiondeclaration", path: './dmd/backend/cod3/prolog_loadparams.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.prolog_saveregs', kind: "functiondeclaration", path: './dmd/backend/cod3/prolog_saveregs.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.prolog_stackalign', kind: "functiondeclaration", path: './dmd/backend/cod3/prolog_stackalign.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.regmask', kind: "functiondeclaration", path: './dmd/backend/cod3/regmask.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.REGSAVE_restore', kind: "functiondeclaration", path: './dmd/backend/cod3/regsav_e_restore.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.REGSAVE_save', kind: "functiondeclaration", path: './dmd/backend/cod3/regsav_e_save.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.vex_inssize', kind: "functiondeclaration", path: './dmd/backend/cod3/vex_inssize.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod3.WRcodlst', kind: "functiondeclaration", path: './dmd/backend/cod3/w_rcodlst.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4', kind: "module", path: './dmd/backend/cod4.html', attributes: []},
{name: 'dmd.backend.cod4.cdaddass', kind: "functiondeclaration", path: './dmd/backend/cod4/cdaddass.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.cdasm', kind: "functiondeclaration", path: './dmd/backend/cod4/cdasm.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.cdbscan', kind: "functiondeclaration", path: './dmd/backend/cod4/cdbscan.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.cdbt', kind: "functiondeclaration", path: './dmd/backend/cod4/cdbt.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.cdbtst', kind: "functiondeclaration", path: './dmd/backend/cod4/cdbtst.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.cdbyteint', kind: "functiondeclaration", path: './dmd/backend/cod4/cdbyteint.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.cdcmp', kind: "functiondeclaration", path: './dmd/backend/cod4/cdcmp.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.cdcmpxchg', kind: "functiondeclaration", path: './dmd/backend/cod4/cdcmpxchg.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.cdcnvt', kind: "functiondeclaration", path: './dmd/backend/cod4/cdcnvt.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.cdeq', kind: "functiondeclaration", path: './dmd/backend/cod4/cdeq.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.cdfar16', kind: "functiondeclaration", path: './dmd/backend/cod4/cdfar16.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.cdlngsht', kind: "functiondeclaration", path: './dmd/backend/cod4/cdlngsht.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.cdmsw', kind: "functiondeclaration", path: './dmd/backend/cod4/cdmsw.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.cdmulass', kind: "functiondeclaration", path: './dmd/backend/cod4/cdmulass.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.cdpair', kind: "functiondeclaration", path: './dmd/backend/cod4/cdpair.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.cdpopcnt', kind: "functiondeclaration", path: './dmd/backend/cod4/cdpopcnt.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.cdport', kind: "functiondeclaration", path: './dmd/backend/cod4/cdport.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.cdprefetch', kind: "functiondeclaration", path: './dmd/backend/cod4/cdprefetch.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.cdshass', kind: "functiondeclaration", path: './dmd/backend/cod4/cdshass.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.cdshtlng', kind: "functiondeclaration", path: './dmd/backend/cod4/cdshtlng.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.doinreg', kind: "functiondeclaration", path: './dmd/backend/cod4/doinreg.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.longcmp', kind: "functiondeclaration", path: './dmd/backend/cod4/longcmp.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod4.modEA', kind: "functiondeclaration", path: './dmd/backend/cod4/mod_ea.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod5', kind: "module", path: './dmd/backend/cod5.html', attributes: []},
{name: 'dmd.backend.cod5.cod5_noprol', kind: "functiondeclaration", path: './dmd/backend/cod5/cod5_noprol.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.cod5.cod5_prol_epi', kind: "functiondeclaration", path: './dmd/backend/cod5/cod5_prol_epi.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.code', kind: "module", path: './dmd/backend/code.html', attributes: []},
{name: 'dmd.backend.code._Declaration', kind: "structdeclaration", path: './dmd/backend/code/__declaration.html', attributes: []},
{name: 'dmd.backend.code.CGstate', kind: "structdeclaration", path: './dmd/backend/code/c_gstate.html', attributes: []},
{name: 'dmd.backend.code.code_calloc', kind: "functiondeclaration", path: './dmd/backend/code/code_calloc.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.code.FuncParamRegs', kind: "structdeclaration", path: './dmd/backend/code/func_param_regs.html', attributes: []},
{name: 'dmd.backend.code.LocalSection', kind: "structdeclaration", path: './dmd/backend/code/local_section.html', attributes: []},
{name: 'dmd.backend.code.regimmed_set', kind: "functiondeclaration", path: './dmd/backend/code/regimmed_set.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.code.REGSAVE', kind: "structdeclaration", path: './dmd/backend/code/regsave.html', attributes: []},
{name: 'dmd.backend.code.usednteh', kind: "variabledeclaration", path: './dmd/backend/code/usednteh.html', attributes: []},
{name: 'dmd.backend.code_x86', kind: "module", path: './dmd/backend/code_x86.html', attributes: []},
{name: 'dmd.backend.code_x86.CLIB', kind: "enumdeclaration", path: './dmd/backend/code_x86/clib.html', attributes: []},
{name: 'dmd.backend.code_x86.getlvalue', kind: "functiondeclaration", path: './dmd/backend/code_x86/getlvalue.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.code_x86.getlvalue_lsw', kind: "functiondeclaration", path: './dmd/backend/code_x86/getlvalue_lsw.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.code_x86.getlvalue_msw', kind: "functiondeclaration", path: './dmd/backend/code_x86/getlvalue_msw.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.code_x86.global87', kind: "variabledeclaration", path: './dmd/backend/code_x86/global87.html', attributes: []},
{name: 'dmd.backend.code_x86.Globals87', kind: "structdeclaration", path: './dmd/backend/code_x86/globals87.html', attributes: []},
{name: 'dmd.backend.code_x86.loadea', kind: "functiondeclaration", path: './dmd/backend/code_x86/loadea.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.code_x86.mLSW', kind: "enummemberdeclaration", path: './dmd/backend/code_x86/mlsw.html', attributes: []},
{name: 'dmd.backend.code_x86.mMSW', kind: "enummemberdeclaration", path: './dmd/backend/code_x86/mmsw.html', attributes: []},
{name: 'dmd.backend.code_x86.modregrm', kind: "functiondeclaration", path: './dmd/backend/code_x86/modregrm.html', attributes: []},
{name: 'dmd.backend.code_x86.NDP', kind: "structdeclaration", path: './dmd/backend/code_x86/ndp.html', attributes: []},
{name: 'dmd.backend.codebuilder', kind: "module", path: './dmd/backend/codebuilder.html', attributes: []},
{name: 'dmd.backend.cv4', kind: "module", path: './dmd/backend/cv4.html', attributes: []},
{name: 'dmd.backend.cv4.LF_MODIFIER_V2', kind: "enummemberdeclaration", path: './dmd/backend/cv4/l_f_modifie_r__v2.html', attributes: []},
{name: 'dmd.backend.cv4.S_REGISTER_V2', kind: "enummemberdeclaration", path: './dmd/backend/cv4/s_registe_r__v2.html', attributes: []},
{name: 'dmd.backend.cv8', kind: "module", path: './dmd/backend/cv8.html', attributes: []},
{name: 'dmd.backend.dcgcv', kind: "module", path: './dmd/backend/dcgcv.html', attributes: []},
{name: 'dmd.backend.dcode', kind: "module", path: './dmd/backend/dcode.html', attributes: []},
{name: 'dmd.backend.dcode.code_calloc', kind: "functiondeclaration", path: './dmd/backend/dcode/code_calloc.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dcode.code_chunk_alloc', kind: "functiondeclaration", path: './dmd/backend/dcode/code_chunk_alloc.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dcode.code_free', kind: "functiondeclaration", path: './dmd/backend/dcode/code_free.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dcode.code_term', kind: "functiondeclaration", path: './dmd/backend/dcode/code_term.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.debugprint', kind: "module", path: './dmd/backend/debugprint.html', attributes: []},
{name: 'dmd.backend.debugprint.numberBlocks', kind: "functiondeclaration", path: './dmd/backend/debugprint/number_blocks.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.debugprint.str_class', kind: "functiondeclaration", path: './dmd/backend/debugprint/str_class.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.debugprint.WRarglst', kind: "functiondeclaration", path: './dmd/backend/debugprint/w_rarglst.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.debugprint.WRblock', kind: "functiondeclaration", path: './dmd/backend/debugprint/w_rblock.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.debugprint.WReqn', kind: "functiondeclaration", path: './dmd/backend/debugprint/w_reqn.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.debugprint.WROP', kind: "functiondeclaration", path: './dmd/backend/debugprint/wrop.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.debugprint.WRTYxx', kind: "functiondeclaration", path: './dmd/backend/debugprint/wrt_yxx.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dlist', kind: "module", path: './dmd/backend/dlist.html', attributes: []},
{name: 'dmd.backend.dlist.list_append', kind: "functiondeclaration", path: './dmd/backend/dlist/list_append.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dlist.list_apply', kind: "functiondeclaration", path: './dmd/backend/dlist/list_apply.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dlist.list_data', kind: "functiondeclaration", path: './dmd/backend/dlist/list_data.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dlist.list_equal', kind: "functiondeclaration", path: './dmd/backend/dlist/list_equal.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dlist.list_free', kind: "functiondeclaration", path: './dmd/backend/dlist/list_free.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dlist.list_inlist', kind: "functiondeclaration", path: './dmd/backend/dlist/list_inlist.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dlist.list_next', kind: "functiondeclaration", path: './dmd/backend/dlist/list_next.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dlist.list_nitems', kind: "functiondeclaration", path: './dmd/backend/dlist/list_nitems.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dlist.list_nth', kind: "functiondeclaration", path: './dmd/backend/dlist/list_nth.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dlist.list_pop', kind: "functiondeclaration", path: './dmd/backend/dlist/list_pop.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dlist.list_prepend', kind: "functiondeclaration", path: './dmd/backend/dlist/list_prepend.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dlist.list_prependdata', kind: "functiondeclaration", path: './dmd/backend/dlist/list_prependdata.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dlist.list_ptr', kind: "functiondeclaration", path: './dmd/backend/dlist/list_ptr.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dlist.list_reverse', kind: "functiondeclaration", path: './dmd/backend/dlist/list_reverse.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dlist.list_subtract', kind: "functiondeclaration", path: './dmd/backend/dlist/list_subtract.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dlist.ListRange', kind: "structdeclaration", path: './dmd/backend/dlist/list_range.html', attributes: []},
{name: 'dmd.backend.dout', kind: "module", path: './dmd/backend/dout.html', attributes: []},
{name: 'dmd.backend.dout.alignOffset', kind: "functiondeclaration", path: './dmd/backend/dout/align_offset.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dout.dt_writeToObj', kind: "functiondeclaration", path: './dmd/backend/dout/dt_write_to_obj.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dout.out_readonly', kind: "functiondeclaration", path: './dmd/backend/dout/out_readonly.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dout.out_readonly_comdat', kind: "functiondeclaration", path: './dmd/backend/dout/out_readonly_comdat.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dout.out_regcand', kind: "functiondeclaration", path: './dmd/backend/dout/out_regcand.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dout.out_string_literal', kind: "functiondeclaration", path: './dmd/backend/dout/out_string_literal.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dout.outcommon', kind: "functiondeclaration", path: './dmd/backend/dout/outcommon.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dout.outdata', kind: "functiondeclaration", path: './dmd/backend/dout/outdata.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dout.outelem', kind: "functiondeclaration", path: './dmd/backend/dout/outelem.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dout.outthunk', kind: "functiondeclaration", path: './dmd/backend/dout/outthunk.html', attributes: ["extern(C)"]},
{name: 'dmd.backend.dout.ROMAX', kind: "enummemberdeclaration", path: './dmd/backend/dout/romax.html', attributes: []},
{name: 'dmd.backend.dout.writefunc', kind: "functiondeclaration", path: './dmd/backend/dout/writefunc.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.drtlsym', kind: "module", path: './dmd/backend/drtlsym.html', attributes: []},
{name: 'dmd.backend.drtlsym.getRtlsym', kind: "functiondeclaration", path: './dmd/backend/drtlsym/get_rtlsym.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.drtlsym.getRtlsymPersonality', kind: "functiondeclaration", path: './dmd/backend/drtlsym/get_rtlsym_personality.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.drtlsym.rtlsym_init', kind: "functiondeclaration", path: './dmd/backend/drtlsym/rtlsym_init.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.drtlsym.rtlsym_reset', kind: "functiondeclaration", path: './dmd/backend/drtlsym/rtlsym_reset.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.drtlsym.rtlsym_term', kind: "functiondeclaration", path: './dmd/backend/drtlsym/rtlsym_term.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dt', kind: "module", path: './dmd/backend/dt.html', attributes: []},
{name: 'dmd.backend.dt.dt2common', kind: "functiondeclaration", path: './dmd/backend/dt/dt2common.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.dt_free', kind: "functiondeclaration", path: './dmd/backend/dt/dt_free.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.dt_get_nzeros', kind: "functiondeclaration", path: './dmd/backend/dt/dt_get_nzeros.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.dt_size', kind: "functiondeclaration", path: './dmd/backend/dt/dt_size.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.dt_term', kind: "functiondeclaration", path: './dmd/backend/dt/dt_term.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.dtallzeros', kind: "functiondeclaration", path: './dmd/backend/dt/dtallzeros.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.DtBuilder', kind: "structdeclaration", path: './dmd/backend/dt/dt_builder.html', attributes: []},
{name: 'dmd.backend.dt.DtBuilder.abytes', kind: "functiondeclaration", path: './dmd/backend/dt/dt_builder.abytes.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.DtBuilder.cat', kind: "functiondeclaration", path: './dmd/backend/dt/dt_builder.cat.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.DtBuilder.coff', kind: "functiondeclaration", path: './dmd/backend/dt/dt_builder.coff.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.DtBuilder.dtoff', kind: "functiondeclaration", path: './dmd/backend/dt/dt_builder.dtoff.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.DtBuilder.dword', kind: "functiondeclaration", path: './dmd/backend/dt/dt_builder.dword.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.DtBuilder.finish', kind: "functiondeclaration", path: './dmd/backend/dt/dt_builder.finish.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.DtBuilder.isZeroLength', kind: "functiondeclaration", path: './dmd/backend/dt/dt_builder.is_zero_length.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.DtBuilder.length', kind: "functiondeclaration", path: './dmd/backend/dt/dt_builder.length.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.DtBuilder.nbytes', kind: "functiondeclaration", path: './dmd/backend/dt/dt_builder.nbytes.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.DtBuilder.nzeros', kind: "functiondeclaration", path: './dmd/backend/dt/dt_builder.nzeros.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.DtBuilder.repeat', kind: "functiondeclaration", path: './dmd/backend/dt/dt_builder.repeat.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.DtBuilder.size', kind: "functiondeclaration", path: './dmd/backend/dt/dt_builder.size.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.DtBuilder.xoff', kind: "functiondeclaration", path: './dmd/backend/dt/dt_builder.xoff.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.DtBuilder.xoffpatch', kind: "functiondeclaration", path: './dmd/backend/dt/dt_builder.xoffpatch.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.dtpatchoffset', kind: "functiondeclaration", path: './dmd/backend/dt/dtpatchoffset.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.dtpointers', kind: "functiondeclaration", path: './dmd/backend/dt/dtpointers.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dt.init_common', kind: "functiondeclaration", path: './dmd/backend/dt/init_common.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.dtype', kind: "module", path: './dmd/backend/dtype.html', attributes: []},
{name: 'dmd.backend.dtype.param_append_type', kind: "functiondeclaration", path: './dmd/backend/dtype/param_append_type.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.param_calloc', kind: "functiondeclaration", path: './dmd/backend/dtype/param_calloc.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.param_free', kind: "functiondeclaration", path: './dmd/backend/dtype/param_free.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.param_free_l', kind: "functiondeclaration", path: './dmd/backend/dtype/param_free_l.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.param_search', kind: "functiondeclaration", path: './dmd/backend/dtype/param_search.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.param_t_createTal', kind: "functiondeclaration", path: './dmd/backend/dtype/param_t_create_tal.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.param_t_length', kind: "functiondeclaration", path: './dmd/backend/dtype/param_t_length.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.param_t_print', kind: "functiondeclaration", path: './dmd/backend/dtype/param_t_print.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.param_t_search', kind: "functiondeclaration", path: './dmd/backend/dtype/param_t_search.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.param_t_searchn', kind: "functiondeclaration", path: './dmd/backend/dtype/param_t_searchn.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_alignsize', kind: "functiondeclaration", path: './dmd/backend/dtype/type_alignsize.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_alloc', kind: "functiondeclaration", path: './dmd/backend/dtype/type_alloc.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_allocn', kind: "functiondeclaration", path: './dmd/backend/dtype/type_allocn.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_assoc_array', kind: "functiondeclaration", path: './dmd/backend/dtype/type_assoc_array.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_copy', kind: "functiondeclaration", path: './dmd/backend/dtype/type_copy.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_delegate', kind: "functiondeclaration", path: './dmd/backend/dtype/type_delegate.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_dyn_array', kind: "functiondeclaration", path: './dmd/backend/dtype/type_dyn_array.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_embed', kind: "functiondeclaration", path: './dmd/backend/dtype/type_embed.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_enum', kind: "functiondeclaration", path: './dmd/backend/dtype/type_enum.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_fake', kind: "functiondeclaration", path: './dmd/backend/dtype/type_fake.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_free', kind: "functiondeclaration", path: './dmd/backend/dtype/type_free.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_function', kind: "functiondeclaration", path: './dmd/backend/dtype/type_function.html', attributes: ["extern(C)"]},
{name: 'dmd.backend.dtype.type_isdependent', kind: "functiondeclaration", path: './dmd/backend/dtype/type_isdependent.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_isvla', kind: "functiondeclaration", path: './dmd/backend/dtype/type_isvla.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_parameterSize', kind: "functiondeclaration", path: './dmd/backend/dtype/type_parameter_size.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_paramsize', kind: "functiondeclaration", path: './dmd/backend/dtype/type_paramsize.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_pointer', kind: "functiondeclaration", path: './dmd/backend/dtype/type_pointer.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_print', kind: "functiondeclaration", path: './dmd/backend/dtype/type_print.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_setcv', kind: "functiondeclaration", path: './dmd/backend/dtype/type_setcv.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_setdependent', kind: "functiondeclaration", path: './dmd/backend/dtype/type_setdependent.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_setdim', kind: "functiondeclaration", path: './dmd/backend/dtype/type_setdim.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_setmangle', kind: "functiondeclaration", path: './dmd/backend/dtype/type_setmangle.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_setty', kind: "functiondeclaration", path: './dmd/backend/dtype/type_setty.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_settype', kind: "functiondeclaration", path: './dmd/backend/dtype/type_settype.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_size', kind: "functiondeclaration", path: './dmd/backend/dtype/type_size.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_static_array', kind: "functiondeclaration", path: './dmd/backend/dtype/type_static_array.html', attributes: ["extern(C)"]},
{name: 'dmd.backend.dtype.type_struct_class', kind: "functiondeclaration", path: './dmd/backend/dtype/type_struct_class.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_term', kind: "functiondeclaration", path: './dmd/backend/dtype/type_term.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.type_zeroSize', kind: "functiondeclaration", path: './dmd/backend/dtype/type_zero_size.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dtype.typematch', kind: "functiondeclaration", path: './dmd/backend/dtype/typematch.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dvarstats', kind: "module", path: './dmd/backend/dvarstats.html', attributes: []},
{name: 'dmd.backend.dvec', kind: "module", path: './dmd/backend/dvec.html', attributes: []},
{name: 'dmd.backend.dvec.vec_and', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_and.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_andass', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_andass.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_calloc', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_calloc.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_clear', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_clear.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_clearbit', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_clearbit.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_clearextrabits', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_clearextrabits.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_clone', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_clone.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_copy', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_copy.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_disjoint', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_disjoint.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_equal', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_equal.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_free', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_free.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_index', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_index.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_init', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_init.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_or', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_or.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_orass', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_orass.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_println', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_println.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_realloc', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_realloc.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_recycle', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_recycle.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_set', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_set.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_setbit', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_setbit.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_sub', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_sub.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_subass', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_subass.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_term', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_term.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_testbit', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_testbit.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_xor', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_xor.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dvec.vec_xorass', kind: "functiondeclaration", path: './dmd/backend/dvec/vec_xorass.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.backend.dwarf', kind: "module", path: './dmd/backend/dwarf.html', attributes: []},
{name: 'dmd.backend.dwarfdbginf', kind: "module", path: './dmd/backend/dwarfdbginf.html', attributes: []},
{name: 'dmd.backend.dwarfdbginf.CFA_reg', kind: "structdeclaration", path: './dmd/backend/dwarfdbginf/cf_a_reg.html', attributes: []},
{name: 'dmd.backend.dwarfdbginf.cv_func', kind: "functiondeclaration", path: './dmd/backend/dwarfdbginf/cv_func.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfdbginf.cv_outlist', kind: "functiondeclaration", path: './dmd/backend/dwarfdbginf/cv_outlist.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfdbginf.cv_outsym', kind: "functiondeclaration", path: './dmd/backend/dwarfdbginf/cv_outsym.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfdbginf.doUnwindEhFrame', kind: "functiondeclaration", path: './dmd/backend/dwarfdbginf/do_unwind_eh_frame.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfdbginf.dwarf_CFA_args_size', kind: "functiondeclaration", path: './dmd/backend/dwarfdbginf/dwarf__cf_a_args_size.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfdbginf.dwarf_CFA_offset', kind: "functiondeclaration", path: './dmd/backend/dwarfdbginf/dwarf__cf_a_offset.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfdbginf.dwarf_CFA_set_loc', kind: "functiondeclaration", path: './dmd/backend/dwarfdbginf/dwarf__cf_a_set_loc.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfdbginf.dwarf_CFA_set_reg_offset', kind: "functiondeclaration", path: './dmd/backend/dwarfdbginf/dwarf__cf_a_set_reg_offset.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfdbginf.dwarf_except_gentables', kind: "functiondeclaration", path: './dmd/backend/dwarfdbginf/dwarf_except_gentables.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfdbginf.dwarf_func_start', kind: "functiondeclaration", path: './dmd/backend/dwarfdbginf/dwarf_func_start.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfdbginf.dwarf_func_term', kind: "functiondeclaration", path: './dmd/backend/dwarfdbginf/dwarf_func_term.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfdbginf.dwarf_line_addfile', kind: "functiondeclaration", path: './dmd/backend/dwarfdbginf/dwarf_line_addfile.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfdbginf.dwarf_regno', kind: "functiondeclaration", path: './dmd/backend/dwarfdbginf/dwarf_regno.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfdbginf.dwarf_termfile', kind: "functiondeclaration", path: './dmd/backend/dwarfdbginf/dwarf_termfile.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfdbginf.writeDebugFrameFDE', kind: "functiondeclaration", path: './dmd/backend/dwarfdbginf/write_debug_frame_fde.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfdbginf.writeDebugFrameHeader', kind: "functiondeclaration", path: './dmd/backend/dwarfdbginf/write_debug_frame_header.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfdbginf.writeEhFrameFDE', kind: "functiondeclaration", path: './dmd/backend/dwarfdbginf/write_eh_frame_fde.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfeh', kind: "module", path: './dmd/backend/dwarfeh.html', attributes: []},
{name: 'dmd.backend.dwarfeh.actionTableInsert', kind: "functiondeclaration", path: './dmd/backend/dwarfeh/action_table_insert.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfeh.genDwarfEh', kind: "functiondeclaration", path: './dmd/backend/dwarfeh/gen_dwarf_eh.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfeh.sLEB128size', kind: "functiondeclaration", path: './dmd/backend/dwarfeh/sle_b128size.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.dwarfeh.uLEB128size', kind: "functiondeclaration", path: './dmd/backend/dwarfeh/ule_b128size.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.ee', kind: "module", path: './dmd/backend/ee.html', attributes: []},
{name: 'dmd.backend.ee.eecontext_convs', kind: "functiondeclaration", path: './dmd/backend/ee/eecontext_convs.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.el', kind: "module", path: './dmd/backend/el.html', attributes: []},
{name: 'dmd.backend.el.elem', kind: "structdeclaration", path: './dmd/backend/el/elem.html', attributes: []},
{name: 'dmd.backend.elem', kind: "module", path: './dmd/backend/elem.html', attributes: []},
{name: 'dmd.backend.elem.el_alignsize', kind: "functiondeclaration", path: './dmd/backend/elem/el_alignsize.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_allbits', kind: "functiondeclaration", path: './dmd/backend/elem/el_allbits.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_alloctmp', kind: "functiondeclaration", path: './dmd/backend/elem/el_alloctmp.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_anydef', kind: "functiondeclaration", path: './dmd/backend/elem/el_anydef.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_appears', kind: "functiondeclaration", path: './dmd/backend/elem/el_appears.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_bint', kind: "functiondeclaration", path: './dmd/backend/elem/el_bint.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_calloc', kind: "functiondeclaration", path: './dmd/backend/elem/el_calloc.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_combine', kind: "functiondeclaration", path: './dmd/backend/elem/el_combine.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_combines', kind: "functiondeclaration", path: './dmd/backend/elem/el_combines.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_const', kind: "functiondeclaration", path: './dmd/backend/elem/el_const.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_convert', kind: "functiondeclaration", path: './dmd/backend/elem/el_convert.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_convfloat', kind: "functiondeclaration", path: './dmd/backend/elem/el_convfloat.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_convstring', kind: "functiondeclaration", path: './dmd/backend/elem/el_convstring.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_convxmm', kind: "functiondeclaration", path: './dmd/backend/elem/el_convxmm.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_copy', kind: "functiondeclaration", path: './dmd/backend/elem/el_copy.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_copytotmp', kind: "functiondeclaration", path: './dmd/backend/elem/el_copytotmp.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_copytree', kind: "functiondeclaration", path: './dmd/backend/elem/el_copytree.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_countCommas', kind: "functiondeclaration", path: './dmd/backend/elem/el_count_commas.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_ctor_dtor', kind: "functiondeclaration", path: './dmd/backend/elem/el_ctor_dtor.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_depends', kind: "functiondeclaration", path: './dmd/backend/elem/el_depends.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_dtor', kind: "functiondeclaration", path: './dmd/backend/elem/el_dtor.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_free', kind: "functiondeclaration", path: './dmd/backend/elem/el_free.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_funcsideeff', kind: "functiondeclaration", path: './dmd/backend/elem/el_funcsideeff.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_init', kind: "functiondeclaration", path: './dmd/backend/elem/el_init.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_isdependent', kind: "functiondeclaration", path: './dmd/backend/elem/el_isdependent.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_longt', kind: "functiondeclaration", path: './dmd/backend/elem/el_longt.html', attributes: ["extern(C)"]},
{name: 'dmd.backend.elem.el_match', kind: "functiondeclaration", path: './dmd/backend/elem/el_match.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_match2', kind: "functiondeclaration", path: './dmd/backend/elem/el_match2.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_match3', kind: "functiondeclaration", path: './dmd/backend/elem/el_match3.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_match4', kind: "functiondeclaration", path: './dmd/backend/elem/el_match4.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_match5', kind: "functiondeclaration", path: './dmd/backend/elem/el_match5.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_nparams', kind: "functiondeclaration", path: './dmd/backend/elem/el_nparams.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_opArray', kind: "functiondeclaration", path: './dmd/backend/elem/el_op_array.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_opCombine', kind: "functiondeclaration", path: './dmd/backend/elem/el_op_combine.html', attributes: ["extern(C)"]},
{name: 'dmd.backend.elem.el_opN', kind: "functiondeclaration", path: './dmd/backend/elem/el_op_n.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_pair', kind: "functiondeclaration", path: './dmd/backend/elem/el_pair.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_param', kind: "functiondeclaration", path: './dmd/backend/elem/el_param.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_paramArray', kind: "functiondeclaration", path: './dmd/backend/elem/el_param_array.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_params', kind: "functiondeclaration", path: './dmd/backend/elem/el_params.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_parent', kind: "functiondeclaration", path: './dmd/backend/elem/el_parent.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_reset', kind: "functiondeclaration", path: './dmd/backend/elem/el_reset.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_returns', kind: "functiondeclaration", path: './dmd/backend/elem/el_returns.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_same', kind: "functiondeclaration", path: './dmd/backend/elem/el_same.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_scancommas', kind: "functiondeclaration", path: './dmd/backend/elem/el_scancommas.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_selecte1', kind: "functiondeclaration", path: './dmd/backend/elem/el_selecte1.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_selecte2', kind: "functiondeclaration", path: './dmd/backend/elem/el_selecte2.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_settype', kind: "functiondeclaration", path: './dmd/backend/elem/el_settype.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_sideeffect', kind: "functiondeclaration", path: './dmd/backend/elem/el_sideeffect.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_signx32', kind: "functiondeclaration", path: './dmd/backend/elem/el_signx32.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_term', kind: "functiondeclaration", path: './dmd/backend/elem/el_term.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_toldouble', kind: "functiondeclaration", path: './dmd/backend/elem/el_toldouble.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_tolong', kind: "functiondeclaration", path: './dmd/backend/elem/el_tolong.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_tolongt', kind: "functiondeclaration", path: './dmd/backend/elem/el_tolongt.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_typesize', kind: "functiondeclaration", path: './dmd/backend/elem/el_typesize.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_unat', kind: "functiondeclaration", path: './dmd/backend/elem/el_unat.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.el_zero', kind: "functiondeclaration", path: './dmd/backend/elem/el_zero.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.elem_print', kind: "functiondeclaration", path: './dmd/backend/elem/elem_print.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.ERTOL', kind: "functiondeclaration", path: './dmd/backend/elem/ertol.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.exp2_copytotemp', kind: "functiondeclaration", path: './dmd/backend/elem/exp2_copytotemp.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.shrinkLongDoubleConstantIfPossible', kind: "functiondeclaration", path: './dmd/backend/elem/shrink_long_double_constant_if_possible.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elem.STAB', kind: "structdeclaration", path: './dmd/backend/elem/stab.html', attributes: []},
{name: 'dmd.backend.elfobj', kind: "module", path: './dmd/backend/elfobj.html', attributes: []},
{name: 'dmd.backend.elfobj.addSegmentToComdat', kind: "functiondeclaration", path: './dmd/backend/elfobj/add_segment_to_comdat.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.DMDV2', kind: "enummemberdeclaration", path: './dmd/backend/elfobj/dmd_v2.html', attributes: []},
{name: 'dmd.backend.elfobj.dwarf_reftoident', kind: "functiondeclaration", path: './dmd/backend/elfobj/dwarf_reftoident.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.elf_align', kind: "functiondeclaration", path: './dmd/backend/elfobj/elf_align.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.ELF_COMDAT', kind: "enummemberdeclaration", path: './dmd/backend/elfobj/el_f_comdat.html', attributes: []},
{name: 'dmd.backend.elfobj.elf_renumbersyms', kind: "functiondeclaration", path: './dmd/backend/elfobj/elf_renumbersyms.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_addstr', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_addstr.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_alias', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_alias.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_allowZeroSize', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_allow_zero_size.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_byte', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_byte.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_bytes', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_bytes.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_codeseg', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_codeseg.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_common_block', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_common_block.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_compiler', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_compiler.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_data_readonly', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_data_readonly.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_data_start', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_data_start.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_ehsections', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_ehsections.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_ehtables', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_ehtables.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_exestr', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_exestr.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_export_symbol', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_export_symbol.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_external', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_external.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_external_def', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_external_def.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_far16thunk', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_far16thunk.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.obj_filename', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_filename.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_fltused', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_fltused.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_func_start', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_func_start.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_func_term', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_func_term.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_getsegment', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_getsegment.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_gotref', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_gotref.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_includelib', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_includelib.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_init', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_init.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_initfile', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_initfile.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_lidata', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_lidata.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_linkerdirective', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_linkerdirective.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_linnum', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_linnum.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.obj_mangle2', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_mangle2.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_moduleinfo', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_moduleinfo.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_pubdef', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_pubdef.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_pubdefsize', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_pubdefsize.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_reftocodeseg', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_reftocodeseg.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_reftodatseg', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_reftodatseg.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_reftoident', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_reftoident.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_setcodeseg', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_setcodeseg.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_setModuleCtorDtor', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_set_module_ctor_dtor.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_startaddress', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_startaddress.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_staticctor', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_staticctor.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_staticdtor', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_staticdtor.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_string_literal_segment', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_string_literal_segment.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_sym_cdata', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_sym_cdata.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_term', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_term.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_termfile', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_termfile.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_tlsseg', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_tlsseg.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_tlsseg_bss', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_tlsseg_bss.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_user', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_user.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_wkext', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_wkext.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_write_byte', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_write_byte.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_write_bytes', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_write_bytes.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_write_zeros', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_write_zeros.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.Obj_writerel', kind: "functiondeclaration", path: './dmd/backend/elfobj/obj_writerel.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.objfile_delete', kind: "functiondeclaration", path: './dmd/backend/elfobj/objfile_delete.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.objfile_term', kind: "functiondeclaration", path: './dmd/backend/elfobj/objfile_term.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elfobj.relcnt', kind: "variabledeclaration", path: './dmd/backend/elfobj/relcnt.html', attributes: []},
{name: 'dmd.backend.elfobj.reltype_t', kind: "aliasdeclaration", path: './dmd/backend/elfobj/reltype_t.html', attributes: []},
{name: 'dmd.backend.elfobj.USE_INIT_ARRAY', kind: "enummemberdeclaration", path: './dmd/backend/elfobj/us_e_ini_t_array.html', attributes: []},
{name: 'dmd.backend.elpicpie', kind: "module", path: './dmd/backend/elpicpie.html', attributes: []},
{name: 'dmd.backend.elpicpie.el_ptr', kind: "functiondeclaration", path: './dmd/backend/elpicpie/el_ptr.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.elpicpie.el_var', kind: "functiondeclaration", path: './dmd/backend/elpicpie/el_var.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.errors', kind: "module", path: './dmd/backend/errors.html', attributes: []},
{name: 'dmd.backend.errors.error', kind: "functiondeclaration", path: './dmd/backend/errors/error.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.evalu8', kind: "module", path: './dmd/backend/evalu8.html', attributes: []},
{name: 'dmd.backend.evalu8._modulo', kind: "functiondeclaration", path: './dmd/backend/evalu8/_modulo.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.evalu8.boolres', kind: "functiondeclaration", path: './dmd/backend/evalu8/boolres.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.evalu8.el_toldoubled', kind: "functiondeclaration", path: './dmd/backend/evalu8/el_toldoubled.html', attributes: []},
{name: 'dmd.backend.evalu8.evalu8', kind: "functiondeclaration", path: './dmd/backend/evalu8/evalu8.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.evalu8.iffalse', kind: "functiondeclaration", path: './dmd/backend/evalu8/iffalse.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.evalu8.iftrue', kind: "functiondeclaration", path: './dmd/backend/evalu8/iftrue.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.exh', kind: "module", path: './dmd/backend/exh.html', attributes: []},
{name: 'dmd.backend.fp', kind: "module", path: './dmd/backend/fp.html', attributes: []},
{name: 'dmd.backend.gdag', kind: "module", path: './dmd/backend/gdag.html', attributes: []},
{name: 'dmd.backend.gdag.boolopt', kind: "functiondeclaration", path: './dmd/backend/gdag/boolopt.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gdag.builddags', kind: "functiondeclaration", path: './dmd/backend/gdag/builddags.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gflow', kind: "module", path: './dmd/backend/gflow.html', attributes: []},
{name: 'dmd.backend.gflow.flowae', kind: "functiondeclaration", path: './dmd/backend/gflow/flowae.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gflow.flowcp', kind: "functiondeclaration", path: './dmd/backend/gflow/flowcp.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gflow.flowlv', kind: "functiondeclaration", path: './dmd/backend/gflow/flowlv.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gflow.flowrd', kind: "functiondeclaration", path: './dmd/backend/gflow/flowrd.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gflow.flowvbe', kind: "functiondeclaration", path: './dmd/backend/gflow/flowvbe.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gflow.genkillae', kind: "functiondeclaration", path: './dmd/backend/gflow/genkillae.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.global', kind: "module", path: './dmd/backend/global.html', attributes: []},
{name: 'dmd.backend.glocal', kind: "module", path: './dmd/backend/glocal.html', attributes: []},
{name: 'dmd.backend.glocal.localize', kind: "functiondeclaration", path: './dmd/backend/glocal/localize.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gloop', kind: "module", path: './dmd/backend/gloop.html', attributes: []},
{name: 'dmd.backend.gloop.blockinit', kind: "functiondeclaration", path: './dmd/backend/gloop/blockinit.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gloop.compdom', kind: "functiondeclaration", path: './dmd/backend/gloop/compdom.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gloop.dom', kind: "functiondeclaration", path: './dmd/backend/gloop/dom.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gloop.el_length', kind: "functiondeclaration", path: './dmd/backend/gloop/el_length.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gloop.fillInDNunambig', kind: "functiondeclaration", path: './dmd/backend/gloop/fill_ind_nunambig.html', attributes: ["extern(C)"]},
{name: 'dmd.backend.gloop.loop', kind: "structdeclaration", path: './dmd/backend/gloop/loop.html', attributes: []},
{name: 'dmd.backend.gloop.loop.print', kind: "functiondeclaration", path: './dmd/backend/gloop/loop.print.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gloop.loop.reset', kind: "functiondeclaration", path: './dmd/backend/gloop/loop.reset.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gloop.loopopt', kind: "functiondeclaration", path: './dmd/backend/gloop/loopopt.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gloop.UnrollWalker', kind: "structdeclaration", path: './dmd/backend/gloop/unroll_walker.html', attributes: []},
{name: 'dmd.backend.gloop.UnrollWalker.walker', kind: "functiondeclaration", path: './dmd/backend/gloop/unroll_walker.walker.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gloop.updaterd', kind: "functiondeclaration", path: './dmd/backend/gloop/updaterd.html', attributes: ["extern(C)"]},
{name: 'dmd.backend.go', kind: "module", path: './dmd/backend/go.html', attributes: []},
{name: 'dmd.backend.go.go_flag', kind: "functiondeclaration", path: './dmd/backend/go/go_flag.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.go.mem_free', kind: "functiondeclaration", path: './dmd/backend/go/mem_free.html', attributes: ["extern(C)"]},
{name: 'dmd.backend.go.optfunc', kind: "functiondeclaration", path: './dmd/backend/go/optfunc.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.goh', kind: "module", path: './dmd/backend/goh.html', attributes: []},
{name: 'dmd.backend.goh.DefNode', kind: "structdeclaration", path: './dmd/backend/goh/def_node.html', attributes: []},
{name: 'dmd.backend.goh.mftype', kind: "aliasdeclaration", path: './dmd/backend/goh/mftype.html', attributes: []},
{name: 'dmd.backend.gother', kind: "module", path: './dmd/backend/gother.html', attributes: []},
{name: 'dmd.backend.gother.constprop', kind: "functiondeclaration", path: './dmd/backend/gother/constprop.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gother.copyprop', kind: "functiondeclaration", path: './dmd/backend/gother/copyprop.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gother.deadvar', kind: "functiondeclaration", path: './dmd/backend/gother/deadvar.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gother.Elemdatas', kind: "aliasdeclaration", path: './dmd/backend/gother/elemdatas.html', attributes: []},
{name: 'dmd.backend.gother.elimass', kind: "functiondeclaration", path: './dmd/backend/gother/elimass.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gother.find', kind: "functiondeclaration", path: './dmd/backend/gother/find.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gother.listrds', kind: "functiondeclaration", path: './dmd/backend/gother/listrds.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.gsroa', kind: "module", path: './dmd/backend/gsroa.html', attributes: []},
{name: 'dmd.backend.gsroa.NOTSLICE', kind: "enummemberdeclaration", path: './dmd/backend/gsroa/notslice.html', attributes: []},
{name: 'dmd.backend.iasm', kind: "module", path: './dmd/backend/iasm.html', attributes: []},
{name: 'dmd.backend.iasm._modrm', kind: "enummemberdeclaration", path: './dmd/backend/iasm/_modrm.html', attributes: []},
{name: 'dmd.backend.iasm.CONSTRUCT_FLAGS', kind: "functiondeclaration", path: './dmd/backend/iasm/construc_t_flags.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.iasm.opflag_t', kind: "aliasdeclaration", path: './dmd/backend/iasm/opflag_t.html', attributes: []},
{name: 'dmd.backend.machobj', kind: "module", path: './dmd/backend/machobj.html', attributes: []},
{name: 'dmd.backend.md5', kind: "module", path: './dmd/backend/md5.html', attributes: []},
{name: 'dmd.backend.melf', kind: "module", path: './dmd/backend/melf.html', attributes: []},
{name: 'dmd.backend.melf.Elf64_Addr', kind: "aliasdeclaration", path: './dmd/backend/melf/elf64__addr.html', attributes: []},
{name: 'dmd.backend.mem', kind: "module", path: './dmd/backend/mem.html', attributes: []},
{name: 'dmd.backend.mscoff', kind: "module", path: './dmd/backend/mscoff.html', attributes: []},
{name: 'dmd.backend.mscoffobj', kind: "module", path: './dmd/backend/mscoffobj.html', attributes: []},
{name: 'dmd.backend.newman', kind: "module", path: './dmd/backend/newman.html', attributes: []},
{name: 'dmd.backend.newman.cpp_typetostring', kind: "functiondeclaration", path: './dmd/backend/newman/cpp_typetostring.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.newman.OPTABLE', kind: "structdeclaration", path: './dmd/backend/newman/optable.html', attributes: []},
{name: 'dmd.backend.nteh', kind: "module", path: './dmd/backend/nteh.html', attributes: []},
{name: 'dmd.backend.nteh.cdsetjmp', kind: "functiondeclaration", path: './dmd/backend/nteh/cdsetjmp.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.nteh.nteh_context_string', kind: "functiondeclaration", path: './dmd/backend/nteh/nteh_context_string.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.nteh.nteh_contextsym', kind: "functiondeclaration", path: './dmd/backend/nteh/nteh_contextsym.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.nteh.nteh_contextsym_size', kind: "functiondeclaration", path: './dmd/backend/nteh/nteh_contextsym_size.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.nteh.nteh_declarvars', kind: "functiondeclaration", path: './dmd/backend/nteh/nteh_declarvars.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.nteh.nteh_ecodesym', kind: "functiondeclaration", path: './dmd/backend/nteh/nteh_ecodesym.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.nteh.nteh_epilog', kind: "functiondeclaration", path: './dmd/backend/nteh/nteh_epilog.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.nteh.nteh_filltables', kind: "functiondeclaration", path: './dmd/backend/nteh/nteh_filltables.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.nteh.nteh_filter', kind: "functiondeclaration", path: './dmd/backend/nteh/nteh_filter.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.nteh.nteh_framehandler', kind: "functiondeclaration", path: './dmd/backend/nteh/nteh_framehandler.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.nteh.nteh_gentables', kind: "functiondeclaration", path: './dmd/backend/nteh/nteh_gentables.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.nteh.nteh_monitor_epilog', kind: "functiondeclaration", path: './dmd/backend/nteh/nteh_monitor_epilog.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.nteh.nteh_monitor_prolog', kind: "functiondeclaration", path: './dmd/backend/nteh/nteh_monitor_prolog.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.nteh.nteh_patchindex', kind: "functiondeclaration", path: './dmd/backend/nteh/nteh_patchindex.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.nteh.nteh_prolog', kind: "functiondeclaration", path: './dmd/backend/nteh/nteh_prolog.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.nteh.nteh_setScopeTableIndex', kind: "functiondeclaration", path: './dmd/backend/nteh/nteh_set_scope_table_index.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.nteh.nteh_setsp', kind: "functiondeclaration", path: './dmd/backend/nteh/nteh_setsp.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.nteh.nteh_unwind', kind: "functiondeclaration", path: './dmd/backend/nteh/nteh_unwind.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.nteh.nteh_usevars', kind: "functiondeclaration", path: './dmd/backend/nteh/nteh_usevars.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.obj', kind: "module", path: './dmd/backend/obj.html', attributes: []},
{name: 'dmd.backend.oper', kind: "module", path: './dmd/backend/oper.html', attributes: []},
{name: 'dmd.backend.oper._rel_exception', kind: "variabledeclaration", path: './dmd/backend/oper/_rel_exception.html', attributes: []},
{name: 'dmd.backend.oper._rel_integral', kind: "variabledeclaration", path: './dmd/backend/oper/_rel_integral.html', attributes: []},
{name: 'dmd.backend.oper._rel_not', kind: "variabledeclaration", path: './dmd/backend/oper/_rel_not.html', attributes: []},
{name: 'dmd.backend.oper._rel_swap', kind: "variabledeclaration", path: './dmd/backend/oper/_rel_swap.html', attributes: []},
{name: 'dmd.backend.oper._rel_unord', kind: "variabledeclaration", path: './dmd/backend/oper/_rel_unord.html', attributes: []},
{name: 'dmd.backend.oper.convidx', kind: "functiondeclaration", path: './dmd/backend/oper/convidx.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.oper.debtab', kind: "variabledeclaration", path: './dmd/backend/oper/debtab.html', attributes: []},
{name: 'dmd.backend.oper.opcost', kind: "variabledeclaration", path: './dmd/backend/oper/opcost.html', attributes: []},
{name: 'dmd.backend.oper.optab1', kind: "variabledeclaration", path: './dmd/backend/oper/optab1.html', attributes: []},
{name: 'dmd.backend.oper.optab2', kind: "variabledeclaration", path: './dmd/backend/oper/optab2.html', attributes: []},
{name: 'dmd.backend.oper.optab3', kind: "variabledeclaration", path: './dmd/backend/oper/optab3.html', attributes: []},
{name: 'dmd.backend.oper.rel_not', kind: "functiondeclaration", path: './dmd/backend/oper/rel_not.html', attributes: ["nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.backend.outbuf', kind: "module", path: './dmd/backend/outbuf.html', attributes: []},
{name: 'dmd.backend.pdata', kind: "module", path: './dmd/backend/pdata.html', attributes: []},
{name: 'dmd.backend.ph2', kind: "module", path: './dmd/backend/ph2.html', attributes: []},
{name: 'dmd.backend.ph2.Heap', kind: "structdeclaration", path: './dmd/backend/ph2/heap.html', attributes: []},
{name: 'dmd.backend.ptrntab', kind: "module", path: './dmd/backend/ptrntab.html', attributes: []},
{name: 'dmd.backend.ptrntab.aptb0EMMS', kind: "variabledeclaration", path: './dmd/backend/ptrntab/aptb0_emms.html', attributes: []},
{name: 'dmd.backend.ptrntab.aptb2PAVGUSB', kind: "variabledeclaration", path: './dmd/backend/ptrntab/aptb2_pavgusb.html', attributes: []},
{name: 'dmd.backend.ptrntab.asm_op_lookup', kind: "functiondeclaration", path: './dmd/backend/ptrntab/asm_op_lookup.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.ptrntab.asm_opstr', kind: "functiondeclaration", path: './dmd/backend/ptrntab/asm_opstr.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.ptrntab.init_optab', kind: "functiondeclaration", path: './dmd/backend/ptrntab/init_optab.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.ptrntab.optab', kind: "variabledeclaration", path: './dmd/backend/ptrntab/optab.html', attributes: []},
{name: 'dmd.backend.rtlsym', kind: "module", path: './dmd/backend/rtlsym.html', attributes: []},
{name: 'dmd.backend.symbol', kind: "module", path: './dmd/backend/symbol.html', attributes: []},
{name: 'dmd.backend.symbol.baseclass_find', kind: "functiondeclaration", path: './dmd/backend/symbol/baseclass_find.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.baseclass_nitems', kind: "functiondeclaration", path: './dmd/backend/symbol/baseclass_nitems.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.freesymtab', kind: "functiondeclaration", path: './dmd/backend/symbol/freesymtab.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.meminit_free', kind: "functiondeclaration", path: './dmd/backend/symbol/meminit_free.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.symbol_add', kind: "functiondeclaration", path: './dmd/backend/symbol/symbol_add.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.symbol_calloc', kind: "functiondeclaration", path: './dmd/backend/symbol/symbol_calloc.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.symbol_copy', kind: "functiondeclaration", path: './dmd/backend/symbol/symbol_copy.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.symbol_func', kind: "functiondeclaration", path: './dmd/backend/symbol/symbol_func.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.symbol_funcalias', kind: "functiondeclaration", path: './dmd/backend/symbol/symbol_funcalias.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.symbol_genauto', kind: "functiondeclaration", path: './dmd/backend/symbol/symbol_genauto.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.symbol_generate', kind: "functiondeclaration", path: './dmd/backend/symbol/symbol_generate.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.symbol_ident', kind: "functiondeclaration", path: './dmd/backend/symbol/symbol_ident.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.symbol_insert', kind: "functiondeclaration", path: './dmd/backend/symbol/symbol_insert.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.Symbol_isAffected', kind: "functiondeclaration", path: './dmd/backend/symbol/symbol_is_affected.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.symbol_name', kind: "functiondeclaration", path: './dmd/backend/symbol/symbol_name.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.Symbol_needThis', kind: "functiondeclaration", path: './dmd/backend/symbol/symbol_need_this.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.symbol_pointerType', kind: "functiondeclaration", path: './dmd/backend/symbol/symbol_pointer_type.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.symbol_print', kind: "functiondeclaration", path: './dmd/backend/symbol/symbol_print.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.symbol_reset', kind: "functiondeclaration", path: './dmd/backend/symbol/symbol_reset.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.Symbol_Salignsize', kind: "functiondeclaration", path: './dmd/backend/symbol/symbol__salignsize.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.Symbol_Sisdead', kind: "functiondeclaration", path: './dmd/backend/symbol/symbol__sisdead.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.symbol_struct_addField', kind: "functiondeclaration", path: './dmd/backend/symbol/symbol_struct_add_field.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.symbol.symtab_realloc', kind: "functiondeclaration", path: './dmd/backend/symbol/symtab_realloc.html', attributes: ["extern(C)"]},
{name: 'dmd.backend.ty', kind: "module", path: './dmd/backend/ty.html', attributes: []},
{name: 'dmd.backend.type', kind: "module", path: './dmd/backend/type.html', attributes: []},
{name: 'dmd.backend.type.type_flags_t', kind: "aliasdeclaration", path: './dmd/backend/type/type_flags_t.html', attributes: []},
{name: 'dmd.backend.util2', kind: "module", path: './dmd/backend/util2.html', attributes: []},
{name: 'dmd.backend.util2.err_break', kind: "functiondeclaration", path: './dmd/backend/util2/err_break.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.util2.err_exit', kind: "functiondeclaration", path: './dmd/backend/util2/err_exit.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.util2.ispow2', kind: "functiondeclaration", path: './dmd/backend/util2/ispow2.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.util2.mem_malloc2', kind: "functiondeclaration", path: './dmd/backend/util2/mem_malloc2.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.util2.util_assert', kind: "functiondeclaration", path: './dmd/backend/util2/util_assert.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.util2.util_exit', kind: "functiondeclaration", path: './dmd/backend/util2/util_exit.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.util2.UTIL_PH', kind: "enummemberdeclaration", path: './dmd/backend/util2/uti_l_ph.html', attributes: []},
{name: 'dmd.backend.util2.util_progress', kind: "functiondeclaration", path: './dmd/backend/util2/util_progress.html', attributes: ["extern(C++)"]},
{name: 'dmd.backend.var', kind: "module", path: './dmd/backend/var.html', attributes: []},
{name: 'dmd.backend.var._tyalignsize', kind: "variabledeclaration", path: './dmd/backend/var/_tyalignsize.html', attributes: []},
{name: 'dmd.backend.var._tyrelax', kind: "variabledeclaration", path: './dmd/backend/var/_tyrelax.html', attributes: []},
{name: 'dmd.backend.var._tysize', kind: "variabledeclaration", path: './dmd/backend/var/_tysize.html', attributes: []},
{name: 'dmd.backend.var.dttab', kind: "variabledeclaration", path: './dmd/backend/var/dttab.html', attributes: []},
{name: 'dmd.backend.var.dttab4', kind: "variabledeclaration", path: './dmd/backend/var/dttab4.html', attributes: []},
{name: 'dmd.backend.var.mask', kind: "variabledeclaration", path: './dmd/backend/var/mask.html', attributes: []},
{name: 'dmd.backend.var.sytab', kind: "variabledeclaration", path: './dmd/backend/var/sytab.html', attributes: []},
{name: 'dmd.backend.var.tyequiv', kind: "variabledeclaration", path: './dmd/backend/var/tyequiv.html', attributes: []},
{name: 'dmd.backend.var.tytouns', kind: "variabledeclaration", path: './dmd/backend/var/tytouns.html', attributes: []},
{name: 'dmd.backend.xmm', kind: "module", path: './dmd/backend/xmm.html', attributes: []},
{name: 'dmd.root.aav', kind: "module", path: './dmd/root/aav.html', attributes: []},
{name: 'dmd.root.aav.asRange', kind: "functiondeclaration", path: './dmd/root/aav/as_range.html', attributes: ["auto", "pure", "nothrow", "property", "nogc"]},
{name: 'dmd.root.array', kind: "module", path: './dmd/root/array.html', attributes: []},
{name: 'dmd.root.array.peekSlice', kind: "functiondeclaration", path: './dmd/root/array/peek_slice.html', attributes: ["pure", "nothrow", "nogc", "property"]},
{name: 'dmd.root.array.reverse', kind: "functiondeclaration", path: './dmd/root/array/reverse.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dmd.root.array.split', kind: "functiondeclaration", path: './dmd/root/array/split.html', attributes: ["pure", "nothrow"]},
{name: 'dmd.root.bitarray', kind: "module", path: './dmd/root/bitarray.html', attributes: []},
{name: 'dmd.root.ctfloat', kind: "module", path: './dmd/root/ctfloat.html', attributes: []},
{name: 'dmd.root.file', kind: "module", path: './dmd/root/file.html', attributes: []},
{name: 'dmd.root.file.File', kind: "structdeclaration", path: './dmd/root/file/file.html', attributes: []},
{name: 'dmd.root.file.File.read', kind: "functiondeclaration", path: './dmd/root/file/file.read.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.root.file.File.ReadResult', kind: "structdeclaration", path: './dmd/root/file/file.read_result.html', attributes: []},
{name: 'dmd.root.file.File.ReadResult.extractDataZ', kind: "functiondeclaration", path: './dmd/root/file/file.read_result.extract_data_z.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'dmd.root.file.File.ReadResult.extractSlice', kind: "functiondeclaration", path: './dmd/root/file/file.read_result.extract_slice.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dmd.root.file.File.remove', kind: "functiondeclaration", path: './dmd/root/file/file.remove.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.root.file.File.write', kind: "functiondeclaration", path: './dmd/root/file/file.write.html', attributes: ["static"]},
{name: 'dmd.root.file.FileBuffer', kind: "structdeclaration", path: './dmd/root/file/file_buffer.html', attributes: []},
{name: 'dmd.root.file.FileBuffer.extractSlice', kind: "functiondeclaration", path: './dmd/root/file/file_buffer.extract_slice.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dmd.root.filename', kind: "module", path: './dmd/root/filename.html', attributes: []},
{name: 'dmd.root.filename.FileName', kind: "structdeclaration", path: './dmd/root/filename/file_name.html', attributes: []},
{name: 'dmd.root.filename.FileName.absolute', kind: "functiondeclaration", path: './dmd/root/filename/file_name.absolute.html', attributes: ["static", "pure", "nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.root.filename.FileName.addExt', kind: "functiondeclaration", path: './dmd/root/filename/file_name.add_ext.html', attributes: ["static", "pure"]},
{name: 'dmd.root.filename.FileName.canonicalName', kind: "functiondeclaration", path: './dmd/root/filename/file_name.canonical_name.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.root.filename.FileName.combine', kind: "functiondeclaration", path: './dmd/root/filename/file_name.combine.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.root.filename.FileName.defaultExt', kind: "functiondeclaration", path: './dmd/root/filename/file_name.default_ext.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.root.filename.FileName.ensurePathExists', kind: "functiondeclaration", path: './dmd/root/filename/file_name.ensure_path_exists.html', attributes: ["static"]},
{name: 'dmd.root.filename.FileName.equals', kind: "functiondeclaration", path: './dmd/root/filename/file_name.equals.html', attributes: ["static", "pure", "nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.root.filename.FileName.equalsExt', kind: "functiondeclaration", path: './dmd/root/filename/file_name.equals_ext.html', attributes: ["static", "pure", "nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.root.filename.FileName.exists', kind: "functiondeclaration", path: './dmd/root/filename/file_name.exists.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.root.filename.FileName.ext', kind: "functiondeclaration", path: './dmd/root/filename/file_name.ext.html', attributes: ["static", "pure", "nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.root.filename.FileName.forceExt', kind: "functiondeclaration", path: './dmd/root/filename/file_name.force_ext.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.root.filename.FileName.free', kind: "functiondeclaration", path: './dmd/root/filename/file_name.free.html', attributes: ["static", "pure", "extern(C++)"]},
{name: 'dmd.root.filename.FileName.name', kind: "functiondeclaration", path: './dmd/root/filename/file_name.name.html', attributes: ["static", "pure", "nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.root.filename.FileName.path', kind: "functiondeclaration", path: './dmd/root/filename/file_name.path.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.root.filename.FileName.removeExt', kind: "functiondeclaration", path: './dmd/root/filename/file_name.remove_ext.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.root.filename.FileName.replaceName', kind: "functiondeclaration", path: './dmd/root/filename/file_name.replace_name.html', attributes: ["static"]},
{name: 'dmd.root.filename.FileName.safeSearchPath', kind: "functiondeclaration", path: './dmd/root/filename/file_name.safe_search_path.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.root.filename.FileName.searchPath', kind: "functiondeclaration", path: './dmd/root/filename/file_name.search_path.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.root.filename.FileName.splitPath', kind: "functiondeclaration", path: './dmd/root/filename/file_name.split_path.html', attributes: ["static"]},
{name: 'dmd.root.filename.FileName.this', kind: "functiondeclaration", path: './dmd/root/filename/file_name.this.html', attributes: ["pure", "nothrow"]},
{name: 'dmd.root.filename.FileName.toAbsolute', kind: "functiondeclaration", path: './dmd/root/filename/file_name.to_absolute.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.root.hash', kind: "module", path: './dmd/root/hash.html', attributes: []},
{name: 'dmd.root.hash.calcHash', kind: "functiondeclaration", path: './dmd/root/hash/calc_hash.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dmd.root.longdouble', kind: "module", path: './dmd/root/longdouble.html', attributes: []},
{name: 'dmd.root.man', kind: "module", path: './dmd/root/man.html', attributes: []},
{name: 'dmd.root.outbuffer', kind: "module", path: './dmd/root/outbuffer.html', attributes: []},
{name: 'dmd.root.port', kind: "module", path: './dmd/root/port.html', attributes: []},
{name: 'dmd.root.region', kind: "module", path: './dmd/root/region.html', attributes: []},
{name: 'dmd.root.region.Region', kind: "structdeclaration", path: './dmd/root/region/region.html', attributes: []},
{name: 'dmd.root.region.Region.contains', kind: "functiondeclaration", path: './dmd/root/region/region.contains.html', attributes: []},
{name: 'dmd.root.region.Region.malloc', kind: "functiondeclaration", path: './dmd/root/region/region.malloc.html', attributes: []},
{name: 'dmd.root.region.Region.release', kind: "functiondeclaration", path: './dmd/root/region/region.release.html', attributes: []},
{name: 'dmd.root.region.Region.savePos', kind: "functiondeclaration", path: './dmd/root/region/region.save_pos.html', attributes: []},
{name: 'dmd.root.region.Region.size', kind: "functiondeclaration", path: './dmd/root/region/region.size.html', attributes: []},
{name: 'dmd.root.response', kind: "module", path: './dmd/root/response.html', attributes: []},
{name: 'dmd.root.response.insertArgumentsFromResponse', kind: "functiondeclaration", path: './dmd/root/response/insert_arguments_from_response.html', attributes: []},
{name: 'dmd.root.response.responseExpand', kind: "aliasdeclaration", path: './dmd/root/response/response_expand.html', attributes: []},
{name: 'dmd.root.response.responseExpandFrom', kind: "functiondeclaration", path: './dmd/root/response/response_expand_from.html', attributes: ["nothrow"]},
{name: 'dmd.root.rmem', kind: "module", path: './dmd/root/rmem.html', attributes: []},
{name: 'dmd.root.rmem.arraydup', kind: "functiondeclaration", path: './dmd/root/rmem/arraydup.html', attributes: ["pure", "nothrow"]},
{name: 'dmd.root.rmem.pureCalloc', kind: "functiondeclaration", path: './dmd/root/rmem/pure_calloc.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'dmd.root.rmem.pureFree', kind: "functiondeclaration", path: './dmd/root/rmem/pure_free.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.root.rmem.pureMalloc', kind: "functiondeclaration", path: './dmd/root/rmem/pure_malloc.html', attributes: ["pure", "nothrow", "nogc", "trusted", "extern(C)"]},
{name: 'dmd.root.rmem.pureRealloc', kind: "functiondeclaration", path: './dmd/root/rmem/pure_realloc.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'dmd.root.rmem.xarraydup', kind: "functiondeclaration", path: './dmd/root/rmem/xarraydup.html', attributes: ["pure"]},
{name: 'dmd.root.rootobject', kind: "module", path: './dmd/root/rootobject.html', attributes: []},
{name: 'dmd.root.rootobject.DYNCAST', kind: "enumdeclaration", path: './dmd/root/rootobject/dyncast.html', attributes: []},
{name: 'dmd.root.rootobject.RootObject', kind: "classdeclaration", path: './dmd/root/rootobject/root_object.html', attributes: []},
{name: 'dmd.root.rootobject.RootObject.toString', kind: "functiondeclaration", path: './dmd/root/rootobject/root_object.to_string.html', attributes: ["const"]},
{name: 'dmd.root.speller', kind: "module", path: './dmd/root/speller.html', attributes: []},
{name: 'dmd.root.speller.speller', kind: "functiondeclaration", path: './dmd/root/speller/speller.html', attributes: ["auto"]},
{name: 'dmd.root.string', kind: "module", path: './dmd/root/string.html', attributes: []},
{name: 'dmd.root.string.dstrcmp', kind: "functiondeclaration", path: './dmd/root/string/dstrcmp.html', attributes: ["trusted"]},
{name: 'dmd.root.string.iequals', kind: "functiondeclaration", path: './dmd/root/string/iequals.html', attributes: ["static"]},
{name: 'dmd.root.string.startsWith', kind: "functiondeclaration", path: './dmd/root/string/starts_with.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'dmd.root.string.stripLeadingLineTerminator', kind: "functiondeclaration", path: './dmd/root/string/strip_leading_line_terminator.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dmd.root.string.toCStringThen', kind: "functiondeclaration", path: './dmd/root/string/to_c_string_then.html', attributes: ["auto", "nothrow"]},
{name: 'dmd.root.string.toDString', kind: "functiondeclaration", path: './dmd/root/string/to_d_string.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'dmd.root.string.toStaticArray', kind: "functiondeclaration", path: './dmd/root/string/to_static_array.html', attributes: []},
{name: 'dmd.root.stringtable', kind: "module", path: './dmd/root/stringtable.html', attributes: []},
{name: 'dmd.root.strtold', kind: "module", path: './dmd/root/strtold.html', attributes: []},
{name: 'dmd.access', kind: "module", path: './dmd/access.html', attributes: []},
{name: 'dmd.access.checkAccess', kind: "functiondeclaration", path: './dmd/access/check_access.html', attributes: []},
{name: 'dmd.access.checkSymbolAccess', kind: "functiondeclaration", path: './dmd/access/check_symbol_access.html', attributes: []},
{name: 'dmd.access.mostVisibleOverload', kind: "functiondeclaration", path: './dmd/access/most_visible_overload.html', attributes: []},
{name: 'dmd.access.symbolIsVisible', kind: "functiondeclaration", path: './dmd/access/symbol_is_visible.html', attributes: []},
{name: 'dmd.aggregate', kind: "module", path: './dmd/aggregate.html', attributes: []},
{name: 'dmd.aggregate.AggregateDeclaration', kind: "classdeclaration", path: './dmd/aggregate/aggregate_declaration.html', attributes: []},
{name: 'dmd.aggregate.AggregateDeclaration.alignmember', kind: "functiondeclaration", path: './dmd/aggregate/aggregate_declaration.alignmember.html', attributes: ["static", "pure", "nothrow", "safe"]},
{name: 'dmd.aggregate.AggregateDeclaration.checkOverlappedFields', kind: "functiondeclaration", path: './dmd/aggregate/aggregate_declaration.check_overlapped_fields.html', attributes: ["final"]},
{name: 'dmd.aggregate.AggregateDeclaration.classKind', kind: "variabledeclaration", path: './dmd/aggregate/aggregate_declaration.class_kind.html', attributes: []},
{name: 'dmd.aggregate.AggregateDeclaration.cppmangle', kind: "variabledeclaration", path: './dmd/aggregate/aggregate_declaration.cppmangle.html', attributes: []},
{name: 'dmd.aggregate.AggregateDeclaration.determineFields', kind: "functiondeclaration", path: './dmd/aggregate/aggregate_declaration.determine_fields.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.aggregate.AggregateDeclaration.determineSize', kind: "functiondeclaration", path: './dmd/aggregate/aggregate_declaration.determine_size.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.aggregate.AggregateDeclaration.fill', kind: "functiondeclaration", path: './dmd/aggregate/aggregate_declaration.fill.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.aggregate.AggregateDeclaration.isNested', kind: "functiondeclaration", path: './dmd/aggregate/aggregate_declaration.is_nested.html', attributes: ["final", "extern(C++)", "const"]},
{name: 'dmd.aggregate.AggregateDeclaration.newScope', kind: "functiondeclaration", path: './dmd/aggregate/aggregate_declaration.new_scope.html', attributes: ["extern(C++)"]},
{name: 'dmd.aggregate.AggregateDeclaration.nonHiddenFields', kind: "functiondeclaration", path: './dmd/aggregate/aggregate_declaration.non_hidden_fields.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.aggregate.AggregateDeclaration.placeField', kind: "functiondeclaration", path: './dmd/aggregate/aggregate_declaration.place_field.html', attributes: ["static"]},
{name: 'dmd.aggregate.AggregateDeclaration.searchCtor', kind: "functiondeclaration", path: './dmd/aggregate/aggregate_declaration.search_ctor.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.aggregate.AggregateDeclaration.setDeprecated', kind: "functiondeclaration", path: './dmd/aggregate/aggregate_declaration.set_deprecated.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.dsymbol.ScopeDsymbol._foreach', kind: "functiondeclaration", path: './dmd/dsymbol/scope_dsymbol._foreach.html', attributes: ["static"]},
{name: 'dmd.dsymbol.Dsymbol.accept', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.accept.html', attributes: ["override", "extern(C++)"]},
{name: 'dmd.dsymbol.Dsymbol.addComment', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.add_comment.html', attributes: ["extern(C++)"]},
{name: 'dmd.dsymbol.Dsymbol.arraySyntaxCopy', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.array_syntax_copy.html', attributes: ["static"]},
{name: 'dmd.dsymbol.Dsymbol.cppnamespace', kind: "variabledeclaration", path: './dmd/dsymbol/dsymbol.cppnamespace.html', attributes: []},
{name: 'dmd.dsymbol.ScopeDsymbol.findGetMembers', kind: "functiondeclaration", path: './dmd/dsymbol/scope_dsymbol.find_get_members.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.dsymbol.Dsymbol.followInstantiationContext', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.follow_instantiation_context.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.dsymbol.Dsymbol.getAccessModule', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.get_access_module.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.dsymbol.Dsymbol.getModule', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.get_module.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.dsymbol.Dsymbol.hasPointers', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.has_pointers.html', attributes: ["extern(C++)"]},
{name: 'dmd.dsymbol.ScopeDsymbol.hasStaticCtorOrDtor', kind: "functiondeclaration", path: './dmd/dsymbol/scope_dsymbol.has_static_ctor_or_dtor.html', attributes: ["override", "extern(C++)"]},
{name: 'dmd.dsymbol.Dsymbol.inNonRoot', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.in_non_root.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.dsymbol.Dsymbol.isMember', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.is_member.html', attributes: ["final", "extern(C++)", "inout"]},
{name: 'dmd.dsymbol.Dsymbol.isMember2', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.is_member2.html', attributes: ["final", "extern(C++)", "inout"]},
{name: 'dmd.dsymbol.Dsymbol.isMemberDecl', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.is_member_decl.html', attributes: ["final", "extern(C++)", "inout"]},
{name: 'dmd.dsymbol.Dsymbol.isMemberLocal', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.is_member_local.html', attributes: ["final", "extern(C++)", "inout"]},
{name: 'dmd.dsymbol.Dsymbol.oneMember', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.one_member.html', attributes: ["extern(C++)"]},
{name: 'dmd.dsymbol.Dsymbol.oneMembers', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.one_members.html', attributes: ["static"]},
{name: 'dmd.dsymbol.Dsymbol.pastMixin', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.past_mixin.html', attributes: ["final", "extern(C++)", "inout"]},
{name: 'dmd.dsymbol.Dsymbol.prot', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.prot.html', attributes: ["pure", "nothrow", "nogc", "safe", "extern(C++)"]},
{name: 'dmd.dsymbol.ScopeDsymbol.search', kind: "functiondeclaration", path: './dmd/dsymbol/scope_dsymbol.search.html', attributes: ["override", "extern(C++)"]},
{name: 'dmd.dsymbol.Dsymbol.searchX', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.search_x.html', attributes: ["final"]},
{name: 'dmd.dsymbol.Dsymbol.setScope', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.set_scope.html', attributes: ["extern(C++)"]},
{name: 'dmd.dsymbol.Dsymbol.size', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.size.html', attributes: ["extern(C++)"]},
{name: 'dmd.dsymbol.ScopeDsymbol.symtabLookup', kind: "functiondeclaration", path: './dmd/dsymbol/scope_dsymbol.symtab_lookup.html', attributes: ["extern(C++)"]},
{name: 'dmd.dsymbol.Dsymbol.syntaxCopy', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.syntax_copy.html', attributes: ["extern(C++)"]},
{name: 'dmd.dsymbol.Dsymbol.toAlias', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.to_alias.html', attributes: ["extern(C++)"]},
{name: 'dmd.dsymbol.Dsymbol.toAlias2', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.to_alias2.html', attributes: ["extern(C++)"]},
{name: 'dmd.dsymbol.Dsymbol.toParent', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.to_parent.html', attributes: ["final", "extern(C++)", "inout"]},
{name: 'dmd.dsymbol.Dsymbol.toParent2', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.to_parent2.html', attributes: ["final", "extern(C++)", "inout"]},
{name: 'dmd.dsymbol.Dsymbol.toParentDecl', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.to_parent_decl.html', attributes: ["final", "extern(C++)", "inout"]},
{name: 'dmd.dsymbol.Dsymbol.toParentLocal', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.to_parent_local.html', attributes: ["final", "extern(C++)", "inout"]},
{name: 'dmd.dsymbol.Dsymbol.toParentP', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.to_parent_p.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.aggregate.ClassKind', kind: "enumdeclaration", path: './dmd/aggregate/class_kind.html', attributes: []},
{name: 'dmd.aggregate.ClassKind.cpp', kind: "enummemberdeclaration", path: './dmd/aggregate/class_kind.html#cpp', attributes: []},
{name: 'dmd.aggregate.ClassKind.d', kind: "enummemberdeclaration", path: './dmd/aggregate/class_kind.html#d', attributes: []},
{name: 'dmd.aggregate.ClassKind.objc', kind: "enummemberdeclaration", path: './dmd/aggregate/class_kind.html#objc', attributes: []},
{name: 'dmd.aliasthis', kind: "module", path: './dmd/aliasthis.html', attributes: []},
{name: 'dmd.aliasthis.AliasThis', kind: "classdeclaration", path: './dmd/aliasthis/alias_this.html', attributes: []},
{name: 'dmd.aliasthis.AliasThis.isDeprecated_', kind: "variabledeclaration", path: './dmd/aliasthis/alias_this.is_deprecated_.html', attributes: []},
{name: 'dmd.aliasthis.AliasThis.sym', kind: "variabledeclaration", path: './dmd/aliasthis/alias_this.sym.html', attributes: []},
{name: 'dmd.dsymbol.Dsymbol.search', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol.search.html', attributes: ["extern(C++)"]},
{name: 'dmd.aliasthis.checkDeprecatedAliasThis', kind: "functiondeclaration", path: './dmd/aliasthis/check_deprecated_alias_this.html', attributes: []},
{name: 'dmd.apply', kind: "module", path: './dmd/apply.html', attributes: []},
{name: 'dmd.apply.apply', kind: "functiondeclaration", path: './dmd/apply/apply.html', attributes: []},
{name: 'dmd.argtypes', kind: "module", path: './dmd/argtypes.html', attributes: []},
{name: 'dmd.argtypes.toArgTypes', kind: "functiondeclaration", path: './dmd/argtypes/to_arg_types.html', attributes: ["extern(C++)"]},
{name: 'dmd.argtypes_aarch64', kind: "module", path: './dmd/argtypes_aarch64.html', attributes: []},
{name: 'dmd.argtypes_aarch64.isHFVA', kind: "functiondeclaration", path: './dmd/argtypes_aarch64/is_hfva.html', attributes: ["extern(C++)"]},
{name: 'dmd.argtypes_aarch64.toArgTypes_aarch64', kind: "functiondeclaration", path: './dmd/argtypes_aarch64/to_arg_types_aarch64.html', attributes: ["extern(C++)"]},
{name: 'dmd.argtypes_sysv_x64', kind: "module", path: './dmd/argtypes_sysv_x64.html', attributes: []},
{name: 'dmd.argtypes_sysv_x64.toArgTypes_sysv_x64', kind: "functiondeclaration", path: './dmd/argtypes_sysv_x64/to_arg_types_sysv_x64.html', attributes: ["extern(C++)"]},
{name: 'dmd.arrayop', kind: "module", path: './dmd/arrayop.html', attributes: []},
{name: 'dmd.arrayop.arrayOp', kind: "functiondeclaration", path: './dmd/arrayop/array_op.html', attributes: []},
{name: 'dmd.arrayop.arrayOpInvalidError', kind: "functiondeclaration", path: './dmd/arrayop/array_op_invalid_error.html', attributes: []},
{name: 'dmd.arrayop.isArrayOpImplicitCast', kind: "functiondeclaration", path: './dmd/arrayop/is_array_op_implicit_cast.html', attributes: []},
{name: 'dmd.arrayop.isArrayOpOperand', kind: "functiondeclaration", path: './dmd/arrayop/is_array_op_operand.html', attributes: []},
{name: 'dmd.arrayop.isArrayOpValid', kind: "functiondeclaration", path: './dmd/arrayop/is_array_op_valid.html', attributes: []},
{name: 'dmd.arrayop.isBinArrayOp', kind: "functiondeclaration", path: './dmd/arrayop/is_bin_array_op.html', attributes: []},
{name: 'dmd.arrayop.isBinAssignArrayOp', kind: "functiondeclaration", path: './dmd/arrayop/is_bin_assign_array_op.html', attributes: []},
{name: 'dmd.arrayop.isUnaArrayOp', kind: "functiondeclaration", path: './dmd/arrayop/is_una_array_op.html', attributes: []},
{name: 'dmd.arraytypes', kind: "module", path: './dmd/arraytypes.html', attributes: []},
{name: 'dmd.ast_node', kind: "module", path: './dmd/ast_node.html', attributes: []},
{name: 'dmd.ast_node.ASTNode', kind: "classdeclaration", path: './dmd/ast_node/ast_node.html', attributes: []},
{name: 'dmd.ast_node.ASTNode.accept', kind: "functiondeclaration", path: './dmd/ast_node/ast_node.accept.html', attributes: ["abstract", "extern(C++)"]},
{name: 'dmd.astbase', kind: "module", path: './dmd/astbase.html', attributes: []},
{name: 'dmd.astbase.ASTBase', kind: "structdeclaration", path: './dmd/astbase/ast_base.html', attributes: []},
{name: 'dmd.astcodegen', kind: "module", path: './dmd/astcodegen.html', attributes: []},
{name: 'dmd.asttypename', kind: "module", path: './dmd/asttypename.html', attributes: []},
{name: 'dmd.asttypename.astTypeName', kind: "functiondeclaration", path: './dmd/asttypename/ast_type_name.html', attributes: []},
{name: 'dmd.attrib', kind: "module", path: './dmd/attrib.html', attributes: []},
{name: 'dmd.attrib.AlignDeclaration', kind: "classdeclaration", path: './dmd/attrib/align_declaration.html', attributes: []},
{name: 'dmd.attrib.AttribDeclaration.addLocalClass', kind: "functiondeclaration", path: './dmd/attrib/attrib_declaration.add_local_class.html', attributes: ["final", "override", "extern(C++)"]},
{name: 'dmd.attrib.AttribDeclaration.createNewScope', kind: "functiondeclaration", path: './dmd/attrib/attrib_declaration.create_new_scope.html', attributes: ["static"]},
{name: 'dmd.attrib.AttribDeclaration.newScope', kind: "functiondeclaration", path: './dmd/attrib/attrib_declaration.new_scope.html', attributes: ["extern(C++)"]},
{name: 'dmd.attrib.AnonDeclaration', kind: "classdeclaration", path: './dmd/attrib/anon_declaration.html', attributes: []},
{name: 'dmd.attrib.AttribDeclaration', kind: "classdeclaration", path: './dmd/attrib/attrib_declaration.html', attributes: []},
{name: 'dmd.attrib.CompileDeclaration', kind: "classdeclaration", path: './dmd/attrib/compile_declaration.html', attributes: []},
{name: 'dmd.attrib.ConditionalDeclaration', kind: "classdeclaration", path: './dmd/attrib/conditional_declaration.html', attributes: []},
{name: 'dmd.attrib.CPPMangleDeclaration', kind: "classdeclaration", path: './dmd/attrib/cpp_mangle_declaration.html', attributes: []},
{name: 'dmd.attrib.CPPNamespaceDeclaration', kind: "classdeclaration", path: './dmd/attrib/cpp_namespace_declaration.html', attributes: []},
{name: 'dmd.attrib.CPPNamespaceDeclaration.exp', kind: "variabledeclaration", path: './dmd/attrib/cpp_namespace_declaration.exp.html', attributes: []},
{name: 'dmd.attrib.CPPNamespaceDeclaration.newScope', kind: "functiondeclaration", path: './dmd/attrib/cpp_namespace_declaration.new_scope.html', attributes: ["override", "extern(C++)"]},
{name: 'dmd.attrib.DeprecatedDeclaration', kind: "classdeclaration", path: './dmd/attrib/deprecated_declaration.html', attributes: []},
{name: 'dmd.attrib.DeprecatedDeclaration.newScope', kind: "functiondeclaration", path: './dmd/attrib/deprecated_declaration.new_scope.html', attributes: ["override", "extern(C++)"]},
{name: 'dmd.attrib.ForwardingAttribDeclaration', kind: "classdeclaration", path: './dmd/attrib/forwarding_attrib_declaration.html', attributes: []},
{name: 'dmd.attrib.ForwardingAttribDeclaration.addMember', kind: "functiondeclaration", path: './dmd/attrib/forwarding_attrib_declaration.add_member.html', attributes: ["override", "extern(C++)"]},
{name: 'dmd.attrib.ForwardingAttribDeclaration.newScope', kind: "functiondeclaration", path: './dmd/attrib/forwarding_attrib_declaration.new_scope.html', attributes: ["override", "extern(C++)"]},
{name: 'dmd.attrib.LinkDeclaration', kind: "classdeclaration", path: './dmd/attrib/link_declaration.html', attributes: []},
{name: 'dmd.attrib.PragmaDeclaration', kind: "classdeclaration", path: './dmd/attrib/pragma_declaration.html', attributes: []},
{name: 'dmd.attrib.ProtDeclaration', kind: "classdeclaration", path: './dmd/attrib/prot_declaration.html', attributes: []},
{name: 'dmd.attrib.ProtDeclaration.this', kind: "functiondeclaration", path: './dmd/attrib/prot_declaration.this.html', attributes: []},
{name: 'dmd.attrib.StaticForeachDeclaration', kind: "classdeclaration", path: './dmd/attrib/static_foreach_declaration.html', attributes: []},
{name: 'dmd.attrib.StaticForeachDeclaration.onStack', kind: "variabledeclaration", path: './dmd/attrib/static_foreach_declaration.on_stack.html', attributes: []},
{name: 'dmd.attrib.StaticForeachDeclaration.scopesym', kind: "variabledeclaration", path: './dmd/attrib/static_foreach_declaration.scopesym.html', attributes: []},
{name: 'dmd.attrib.StaticForeachDeclaration.sfe', kind: "variabledeclaration", path: './dmd/attrib/static_foreach_declaration.sfe.html', attributes: []},
{name: 'dmd.attrib.StaticIfDeclaration', kind: "classdeclaration", path: './dmd/attrib/static_if_declaration.html', attributes: []},
{name: 'dmd.attrib.StaticIfDeclaration.include', kind: "functiondeclaration", path: './dmd/attrib/static_if_declaration.include.html', attributes: ["override", "extern(C++)"]},
{name: 'dmd.attrib.StorageClassDeclaration', kind: "classdeclaration", path: './dmd/attrib/storage_class_declaration.html', attributes: []},
{name: 'dmd.attrib.UserAttributeDeclaration', kind: "classdeclaration", path: './dmd/attrib/user_attribute_declaration.html', attributes: []},
{name: 'dmd.attrib.UserAttributeDeclaration.checkGNUABITag', kind: "functiondeclaration", path: './dmd/attrib/user_attribute_declaration.check_gnuabi_tag.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.attrib.UserAttributeDeclaration.isGNUABITag', kind: "functiondeclaration", path: './dmd/attrib/user_attribute_declaration.is_gnuabi_tag.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.blockexit', kind: "module", path: './dmd/blockexit.html', attributes: []},
{name: 'dmd.blockexit.BE', kind: "enumdeclaration", path: './dmd/blockexit/be.html', attributes: []},
{name: 'dmd.blockexit.blockExit', kind: "functiondeclaration", path: './dmd/blockexit/block_exit.html', attributes: []},
{name: 'dmd.builtin', kind: "module", path: './dmd/builtin.html', attributes: []},
{name: 'dmd.builtin.eval_builtin', kind: "functiondeclaration", path: './dmd/builtin/eval_builtin.html', attributes: ["extern(C++)"]},
{name: 'dmd.builtin.isBuiltin', kind: "functiondeclaration", path: './dmd/builtin/is_builtin.html', attributes: ["extern(C++)"]},
{name: 'dmd.canthrow', kind: "module", path: './dmd/canthrow.html', attributes: []},
{name: 'dmd.canthrow.canThrow', kind: "functiondeclaration", path: './dmd/canthrow/can_throw.html', attributes: ["extern(C++)"]},
{name: 'dmd.chkformat', kind: "module", path: './dmd/chkformat.html', attributes: []},
{name: 'dmd.chkformat.checkPrintfFormat', kind: "functiondeclaration", path: './dmd/chkformat/check_printf_format.html', attributes: []},
{name: 'dmd.chkformat.checkScanfFormat', kind: "functiondeclaration", path: './dmd/chkformat/check_scanf_format.html', attributes: []},
{name: 'dmd.cli', kind: "module", path: './dmd/cli.html', attributes: []},
{name: 'dmd.cli.capitalize', kind: "functiondeclaration", path: './dmd/cli/capitalize.html', attributes: ["static"]},
{name: 'dmd.cli.CLIUsage', kind: "structdeclaration", path: './dmd/cli/cli_usage.html', attributes: []},
{name: 'dmd.cli.CLIUsage.checkActionUsage', kind: "enummemberdeclaration", path: './dmd/cli/cli_usage.check_action_usage.html', attributes: []},
{name: 'dmd.cli.CLIUsage.checkUsage', kind: "enummemberdeclaration", path: './dmd/cli/cli_usage.check_usage.html', attributes: []},
{name: 'dmd.cli.CLIUsage.externStdUsage', kind: "enummemberdeclaration", path: './dmd/cli/cli_usage.extern_std_usage.html', attributes: []},
{name: 'dmd.cli.CLIUsage.mcpuUsage', kind: "enummemberdeclaration", path: './dmd/cli/cli_usage.mcpu_usage.html', attributes: []},
{name: 'dmd.cli.CLIUsage.previewUsage', kind: "enummemberdeclaration", path: './dmd/cli/cli_usage.preview_usage.html', attributes: []},
{name: 'dmd.cli.CLIUsage.revertUsage', kind: "enummemberdeclaration", path: './dmd/cli/cli_usage.revert_usage.html', attributes: []},
{name: 'dmd.cli.CLIUsage.transitionUsage', kind: "enummemberdeclaration", path: './dmd/cli/cli_usage.transition_usage.html', attributes: []},
{name: 'dmd.cli.CLIUsage.usage', kind: "functiondeclaration", path: './dmd/cli/cli_usage.usage.html', attributes: ["static"]},
{name: 'dmd.cli.isCurrentTargetOS', kind: "functiondeclaration", path: './dmd/cli/is_current_target_os.html', attributes: []},
{name: 'dmd.cli.TargetOS', kind: "enumdeclaration", path: './dmd/cli/target_os.html', attributes: []},
{name: 'dmd.cli.Usage', kind: "structdeclaration", path: './dmd/cli/usage.html', attributes: []},
{name: 'dmd.cli.Usage.Feature', kind: "structdeclaration", path: './dmd/cli/usage.feature.html', attributes: []},
{name: 'dmd.cli.Usage.Feature.deprecated_', kind: "variabledeclaration", path: './dmd/cli/usage.feature.deprecated_.html', attributes: []},
{name: 'dmd.cli.Usage.Feature.name', kind: "variabledeclaration", path: './dmd/cli/usage.feature.name.html', attributes: []},
{name: 'dmd.cli.Usage.Option', kind: "structdeclaration", path: './dmd/cli/usage.option.html', attributes: []},
{name: 'dmd.cli.Usage.Option.flag', kind: "variabledeclaration", path: './dmd/cli/usage.option.flag.html', attributes: []},
{name: 'dmd.cli.Usage.Option.helpText', kind: "variabledeclaration", path: './dmd/cli/usage.option.help_text.html', attributes: []},
{name: 'dmd.cli.Usage.Option.os', kind: "variabledeclaration", path: './dmd/cli/usage.option.os.html', attributes: []},
{name: 'dmd.cli.Usage.Option.this', kind: "functiondeclaration", path: './dmd/cli/usage.option.this.html', attributes: []},
{name: 'dmd.cli.Usage.options', kind: "variabledeclaration", path: './dmd/cli/usage.options.html', attributes: []},
{name: 'dmd.cli.Usage.previews', kind: "variabledeclaration", path: './dmd/cli/usage.previews.html', attributes: []},
{name: 'dmd.cli.Usage.reverts', kind: "variabledeclaration", path: './dmd/cli/usage.reverts.html', attributes: []},
{name: 'dmd.cli.Usage.transitions', kind: "variabledeclaration", path: './dmd/cli/usage.transitions.html', attributes: []},
{name: 'dmd.clone', kind: "module", path: './dmd/clone.html', attributes: []},
{name: 'dmd.clone.buildDtor', kind: "functiondeclaration", path: './dmd/clone/build_dtor.html', attributes: []},
{name: 'dmd.clone.buildExternDDtor', kind: "functiondeclaration", path: './dmd/clone/build_extern_d_dtor.html', attributes: []},
{name: 'dmd.clone.buildInv', kind: "functiondeclaration", path: './dmd/clone/build_inv.html', attributes: []},
{name: 'dmd.clone.buildOpAssign', kind: "functiondeclaration", path: './dmd/clone/build_op_assign.html', attributes: []},
{name: 'dmd.clone.buildOpEquals', kind: "functiondeclaration", path: './dmd/clone/build_op_equals.html', attributes: []},
{name: 'dmd.clone.buildXopCmp', kind: "functiondeclaration", path: './dmd/clone/build_xop_cmp.html', attributes: []},
{name: 'dmd.clone.buildXopEquals', kind: "functiondeclaration", path: './dmd/clone/build_xop_equals.html', attributes: []},
{name: 'dmd.clone.buildXtoHash', kind: "functiondeclaration", path: './dmd/clone/build_xto_hash.html', attributes: []},
{name: 'dmd.clone.hasIdentityOpAssign', kind: "functiondeclaration", path: './dmd/clone/has_identity_op_assign.html', attributes: []},
{name: 'dmd.clone.mergeFuncAttrs', kind: "functiondeclaration", path: './dmd/clone/merge_func_attrs.html', attributes: []},
{name: 'dmd.clone.needOpEquals', kind: "functiondeclaration", path: './dmd/clone/need_op_equals.html', attributes: []},
{name: 'dmd.compiler', kind: "module", path: './dmd/compiler.html', attributes: []},
{name: 'dmd.compiler.Compiler', kind: "structdeclaration", path: './dmd/compiler/compiler.html', attributes: []},
{name: 'dmd.compiler.Compiler.loadModule', kind: "functiondeclaration", path: './dmd/compiler/compiler.load_module.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.compiler.Compiler.onImport', kind: "functiondeclaration", path: './dmd/compiler/compiler.on_import.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.compiler.Compiler.paintAsType', kind: "functiondeclaration", path: './dmd/compiler/compiler.paint_as_type.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.compiler.rootHasMain', kind: "variabledeclaration", path: './dmd/compiler/root_has_main.html', attributes: []},
{name: 'dmd.complex', kind: "module", path: './dmd/complex.html', attributes: []},
{name: 'dmd.cond', kind: "module", path: './dmd/cond.html', attributes: []},
{name: 'dmd.cond.DebugCondition', kind: "classdeclaration", path: './dmd/cond/debug_condition.html', attributes: []},
{name: 'dmd.cond.DebugCondition.addGlobalIdent', kind: "functiondeclaration", path: './dmd/cond/debug_condition.add_global_ident.html', attributes: ["static", "deprecated", "extern(C++)"]},
{name: 'dmd.cond.DebugCondition.this', kind: "functiondeclaration", path: './dmd/cond/debug_condition.this.html', attributes: []},
{name: 'dmd.cond.DVCondition', kind: "classdeclaration", path: './dmd/cond/dv_condition.html', attributes: []},
{name: 'dmd.cond.findCondition', kind: "functiondeclaration", path: './dmd/cond/find_condition.html', attributes: []},
{name: 'dmd.cond.Include', kind: "enumdeclaration", path: './dmd/cond/include.html', attributes: []},
{name: 'dmd.cond.Include.no', kind: "enummemberdeclaration", path: './dmd/cond/include.html#no', attributes: []},
{name: 'dmd.cond.Include.notComputed', kind: "enummemberdeclaration", path: './dmd/cond/include.html#notComputed', attributes: []},
{name: 'dmd.cond.Include.yes', kind: "enummemberdeclaration", path: './dmd/cond/include.html#yes', attributes: []},
{name: 'dmd.cond.StaticForeach', kind: "classdeclaration", path: './dmd/cond/static_foreach.html', attributes: []},
{name: 'dmd.cond.StaticForeach.aggrfe', kind: "variabledeclaration", path: './dmd/cond/static_foreach.aggrfe.html', attributes: []},
{name: 'dmd.cond.StaticForeach.needExpansion', kind: "variabledeclaration", path: './dmd/cond/static_foreach.need_expansion.html', attributes: []},
{name: 'dmd.cond.StaticForeach.prepare', kind: "functiondeclaration", path: './dmd/cond/static_foreach.prepare.html', attributes: []},
{name: 'dmd.cond.StaticForeach.rangefe', kind: "variabledeclaration", path: './dmd/cond/static_foreach.rangefe.html', attributes: []},
{name: 'dmd.cond.StaticForeach.ready', kind: "functiondeclaration", path: './dmd/cond/static_foreach.ready.html', attributes: []},
{name: 'dmd.cond.StaticIfCondition', kind: "classdeclaration", path: './dmd/cond/static_if_condition.html', attributes: []},
{name: 'dmd.cond.VersionCondition', kind: "classdeclaration", path: './dmd/cond/version_condition.html', attributes: []},
{name: 'dmd.cond.VersionCondition.addGlobalIdent', kind: "functiondeclaration", path: './dmd/cond/version_condition.add_global_ident.html', attributes: ["static", "deprecated", "extern(C++)"]},
{name: 'dmd.cond.VersionCondition.addPredefinedGlobalIdent', kind: "functiondeclaration", path: './dmd/cond/version_condition.add_predefined_global_ident.html', attributes: ["static", "deprecated", "extern(C++)"]},
{name: 'dmd.cond.VersionCondition.checkReserved', kind: "functiondeclaration", path: './dmd/cond/version_condition.check_reserved.html', attributes: ["static"]},
{name: 'dmd.cond.VersionCondition.this', kind: "functiondeclaration", path: './dmd/cond/version_condition.this.html', attributes: []},
{name: 'dmd.console', kind: "module", path: './dmd/console.html', attributes: []},
{name: 'dmd.constfold', kind: "module", path: './dmd/constfold.html', attributes: []},
{name: 'dmd.constfold.cantExp', kind: "functiondeclaration", path: './dmd/constfold/cant_exp.html', attributes: []},
{name: 'dmd.constfold.isConst', kind: "functiondeclaration", path: './dmd/constfold/is_const.html', attributes: []},
{name: 'dmd.cppmangle', kind: "module", path: './dmd/cppmangle.html', attributes: []},
{name: 'dmd.cppmangle.cppTypeInfoMangleItanium', kind: "functiondeclaration", path: './dmd/cppmangle/cpp_type_info_mangle_itanium.html', attributes: ["extern(C++)"]},
{name: 'dmd.cppmangle.isPrimaryDtor', kind: "functiondeclaration", path: './dmd/cppmangle/is_primary_dtor.html', attributes: []},
{name: 'dmd.cppmangle.toCppMangleItanium', kind: "functiondeclaration", path: './dmd/cppmangle/to_cpp_mangle_itanium.html', attributes: ["extern(C++)"]},
{name: 'dmd.cppmanglewin', kind: "module", path: './dmd/cppmanglewin.html', attributes: []},
{name: 'dmd.ctfeexpr', kind: "module", path: './dmd/ctfeexpr.html', attributes: []},
{name: 'dmd.ctfeexpr.assignInPlace', kind: "functiondeclaration", path: './dmd/ctfeexpr/assign_in_place.html', attributes: []},
{name: 'dmd.ctfeexpr.changeArrayLiteralLength', kind: "functiondeclaration", path: './dmd/ctfeexpr/change_array_literal_length.html', attributes: []},
{name: 'dmd.ctfeexpr.ClassReferenceExp', kind: "classdeclaration", path: './dmd/ctfeexpr/class_reference_exp.html', attributes: []},
{name: 'dmd.expression.Expression.addDtorHook', kind: "functiondeclaration", path: './dmd/expression/expression.add_dtor_hook.html', attributes: ["extern(C++)"]},
{name: 'dmd.expression.Expression.addressOf', kind: "functiondeclaration", path: './dmd/expression/expression.address_of.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.expression.Expression.checkModifiable', kind: "functiondeclaration", path: './dmd/expression/expression.check_modifiable.html', attributes: ["extern(C++)"]},
{name: 'dmd.expression.Expression.checkNogc', kind: "functiondeclaration", path: './dmd/expression/expression.check_nogc.html', attributes: ["final"]},
{name: 'dmd.expression.Expression.checkPostblit', kind: "functiondeclaration", path: './dmd/expression/expression.check_postblit.html', attributes: ["final"]},
{name: 'dmd.expression.Expression.checkPurity', kind: "functiondeclaration", path: './dmd/expression/expression.check_purity.html', attributes: ["final"]},
{name: 'dmd.expression.Expression.checkReadModifyWrite', kind: "functiondeclaration", path: './dmd/expression/expression.check_read_modify_write.html', attributes: ["final"]},
{name: 'dmd.expression.Expression.checkSafety', kind: "functiondeclaration", path: './dmd/expression/expression.check_safety.html', attributes: ["final"]},
{name: 'dmd.expression.Expression.checkType', kind: "functiondeclaration", path: './dmd/expression/expression.check_type.html', attributes: ["extern(C++)"]},
{name: 'dmd.expression.Expression.checkValue', kind: "functiondeclaration", path: './dmd/expression/expression.check_value.html', attributes: ["extern(C++)"]},
{name: 'dmd.expression.Expression.combine', kind: "functiondeclaration", path: './dmd/expression/expression.combine.html', attributes: ["static"]},
{name: 'dmd.expression.Expression.copy', kind: "functiondeclaration", path: './dmd/expression/expression.copy.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.expression.Expression.deinitialize', kind: "functiondeclaration", path: './dmd/expression/expression.deinitialize.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.expression.Expression.deref', kind: "functiondeclaration", path: './dmd/expression/expression.deref.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.expression.Expression.extractLast', kind: "functiondeclaration", path: './dmd/expression/expression.extract_last.html', attributes: ["static"]},
{name: 'dmd.expression.Expression.isBool', kind: "functiondeclaration", path: './dmd/expression/expression.is_bool.html', attributes: ["extern(C++)"]},
{name: 'dmd.expression.Expression.isLvalue', kind: "functiondeclaration", path: './dmd/expression/expression.is_lvalue.html', attributes: ["extern(C++)"]},
{name: 'dmd.expression.Expression.resolveLoc', kind: "functiondeclaration", path: './dmd/expression/expression.resolve_loc.html', attributes: ["extern(C++)"]},
{name: 'dmd.expression.Expression.toBoolean', kind: "functiondeclaration", path: './dmd/expression/expression.to_boolean.html', attributes: ["extern(C++)"]},
{name: 'dmd.expression.Expression.toLvalue', kind: "functiondeclaration", path: './dmd/expression/expression.to_lvalue.html', attributes: ["extern(C++)"]},
{name: 'dmd.ctfeexpr.createBlockDuplicatedArrayLiteral', kind: "functiondeclaration", path: './dmd/ctfeexpr/create_block_duplicated_array_literal.html', attributes: []},
{name: 'dmd.ctfeexpr.createBlockDuplicatedStringLiteral', kind: "functiondeclaration", path: './dmd/ctfeexpr/create_block_duplicated_string_literal.html', attributes: []},
{name: 'dmd.ctfeexpr.ctfeCmp', kind: "functiondeclaration", path: './dmd/ctfeexpr/ctfe_cmp.html', attributes: []},
{name: 'dmd.ctfeexpr.ctfeEqual', kind: "functiondeclaration", path: './dmd/ctfeexpr/ctfe_equal.html', attributes: []},
{name: 'dmd.ctfeexpr.CTFEExp', kind: "classdeclaration", path: './dmd/ctfeexpr/ctfe_exp.html', attributes: []},
{name: 'dmd.ctfeexpr.ctfeIdentity', kind: "functiondeclaration", path: './dmd/ctfeexpr/ctfe_identity.html', attributes: []},
{name: 'dmd.ctfeexpr.findFieldIndexByName', kind: "functiondeclaration", path: './dmd/ctfeexpr/find_field_index_by_name.html', attributes: []},
{name: 'dmd.ctfeexpr.intSignedCmp', kind: "functiondeclaration", path: './dmd/ctfeexpr/int_signed_cmp.html', attributes: []},
{name: 'dmd.ctfeexpr.intUnsignedCmp', kind: "functiondeclaration", path: './dmd/ctfeexpr/int_unsigned_cmp.html', attributes: []},
{name: 'dmd.ctfeexpr.isCtfeComparable', kind: "functiondeclaration", path: './dmd/ctfeexpr/is_ctfe_comparable.html', attributes: []},
{name: 'dmd.ctfeexpr.isCtfeValueValid', kind: "functiondeclaration", path: './dmd/ctfeexpr/is_ctfe_value_valid.html', attributes: []},
{name: 'dmd.ctfeexpr.isPointer', kind: "functiondeclaration", path: './dmd/ctfeexpr/is_pointer.html', attributes: []},
{name: 'dmd.ctfeexpr.isTypeInfo_Class', kind: "functiondeclaration", path: './dmd/ctfeexpr/is_type_info__class.html', attributes: []},
{name: 'dmd.ctfeexpr.needToCopyLiteral', kind: "functiondeclaration", path: './dmd/ctfeexpr/need_to_copy_literal.html', attributes: []},
{name: 'dmd.ctfeexpr.pointToSameMemoryBlock', kind: "functiondeclaration", path: './dmd/ctfeexpr/point_to_same_memory_block.html', attributes: []},
{name: 'dmd.ctfeexpr.realCmp', kind: "functiondeclaration", path: './dmd/ctfeexpr/real_cmp.html', attributes: []},
{name: 'dmd.ctfeexpr.resolveSlice', kind: "functiondeclaration", path: './dmd/ctfeexpr/resolve_slice.html', attributes: []},
{name: 'dmd.ctfeexpr.specificCmp', kind: "functiondeclaration", path: './dmd/ctfeexpr/specific_cmp.html', attributes: []},
{name: 'dmd.ctfeexpr.ThrownExceptionExp', kind: "classdeclaration", path: './dmd/ctfeexpr/thrown_exception_exp.html', attributes: []},
{name: 'dmd.ctfeexpr.voidInitLiteral', kind: "functiondeclaration", path: './dmd/ctfeexpr/void_init_literal.html', attributes: []},
{name: 'dmd.ctorflow', kind: "module", path: './dmd/ctorflow.html', attributes: []},
{name: 'dmd.ctorflow.CtorFlow', kind: "structdeclaration", path: './dmd/ctorflow/ctor_flow.html', attributes: []},
{name: 'dmd.ctorflow.CtorFlow.callSuper', kind: "variabledeclaration", path: './dmd/ctorflow/ctor_flow.call_super.html', attributes: []},
{name: 'dmd.ctorflow.CtorFlow.clone', kind: "functiondeclaration", path: './dmd/ctorflow/ctor_flow.clone.html', attributes: []},
{name: 'dmd.ctorflow.CtorFlow.fieldinit', kind: "variabledeclaration", path: './dmd/ctorflow/ctor_flow.fieldinit.html', attributes: []},
{name: 'dmd.ctorflow.CtorFlow.OR', kind: "functiondeclaration", path: './dmd/ctorflow/ctor_flow.or.html', attributes: ["pure"]},
{name: 'dmd.ctorflow.CtorFlow.orCSX', kind: "functiondeclaration", path: './dmd/ctorflow/ctor_flow.or_csx.html', attributes: ["pure"]},
{name: 'dmd.ctorflow.FieldInit', kind: "structdeclaration", path: './dmd/ctorflow/field_init.html', attributes: []},
{name: 'dmd.ctorflow.FieldInit.csx', kind: "variabledeclaration", path: './dmd/ctorflow/field_init.csx.html', attributes: []},
{name: 'dmd.ctorflow.FieldInit.loc', kind: "variabledeclaration", path: './dmd/ctorflow/field_init.loc.html', attributes: []},
{name: 'dmd.ctorflow.mergeCallSuper', kind: "functiondeclaration", path: './dmd/ctorflow/merge_call_super.html', attributes: ["pure"]},
{name: 'dmd.ctorflow.mergeFieldInit', kind: "functiondeclaration", path: './dmd/ctorflow/merge_field_init.html', attributes: ["pure"]},
{name: 'dmd.dcast', kind: "module", path: './dmd/dcast.html', attributes: []},
{name: 'dmd.dcast.arrayTypeCompatible', kind: "functiondeclaration", path: './dmd/dcast/array_type_compatible.html', attributes: ["extern(C++)"]},
{name: 'dmd.dcast.arrayTypeCompatibleWithoutCasting', kind: "functiondeclaration", path: './dmd/dcast/array_type_compatible_without_casting.html', attributes: ["extern(C++)"]},
{name: 'dmd.dcast.castTo', kind: "functiondeclaration", path: './dmd/dcast/cast_to.html', attributes: []},
{name: 'dmd.dcast.fix16997', kind: "functiondeclaration", path: './dmd/dcast/fix16997.html', attributes: []},
{name: 'dmd.dcast.getIntRange', kind: "functiondeclaration", path: './dmd/dcast/get_int_range.html', attributes: []},
{name: 'dmd.dcast.implicitCastTo', kind: "functiondeclaration", path: './dmd/dcast/implicit_cast_to.html', attributes: []},
{name: 'dmd.dcast.implicitConvTo', kind: "functiondeclaration", path: './dmd/dcast/implicit_conv_to.html', attributes: []},
{name: 'dmd.dcast.inferType', kind: "functiondeclaration", path: './dmd/dcast/infer_type.html', attributes: []},
{name: 'dmd.dcast.integralPromotions', kind: "functiondeclaration", path: './dmd/dcast/integral_promotions.html', attributes: []},
{name: 'dmd.dcast.scaleFactor', kind: "functiondeclaration", path: './dmd/dcast/scale_factor.html', attributes: []},
{name: 'dmd.dcast.typeCombine', kind: "functiondeclaration", path: './dmd/dcast/type_combine.html', attributes: []},
{name: 'dmd.dcast.typeMerge', kind: "functiondeclaration", path: './dmd/dcast/type_merge.html', attributes: []},
{name: 'dmd.dclass', kind: "module", path: './dmd/dclass.html', attributes: []},
{name: 'dmd.dclass.BaseClass', kind: "structdeclaration", path: './dmd/dclass/base_class.html', attributes: []},
{name: 'dmd.dclass.BaseClass.fillVtbl', kind: "functiondeclaration", path: './dmd/dclass/base_class.fill_vtbl.html', attributes: ["extern(C++)"]},
{name: 'dmd.dclass.ClassDeclaration', kind: "classdeclaration", path: './dmd/dclass/class_declaration.html', attributes: []},
{name: 'dmd.dclass.ClassDeclaration.addLocalClass', kind: "functiondeclaration", path: './dmd/dclass/class_declaration.add_local_class.html', attributes: ["final", "override", "extern(C++)"]},
{name: 'dmd.dclass.ClassDeclaration.baseok', kind: "variabledeclaration", path: './dmd/dclass/class_declaration.baseok.html', attributes: []},
{name: 'dmd.dclass.ClassDeclaration.cppDtorVtblIndex', kind: "variabledeclaration", path: './dmd/dclass/class_declaration.cpp_dtor_vtbl_index.html', attributes: []},
{name: 'dmd.dclass.ClassDeclaration.findFunc', kind: "functiondeclaration", path: './dmd/dclass/class_declaration.find_func.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.dclass.ClassDeclaration.hasMonitor', kind: "functiondeclaration", path: './dmd/dclass/class_declaration.has_monitor.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.dclass.ClassDeclaration.isAbstract', kind: "functiondeclaration", path: './dmd/dclass/class_declaration.is_abstract.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.dclass.ClassDeclaration.isBaseInfoComplete', kind: "functiondeclaration", path: './dmd/dclass/class_declaration.is_base_info_complete.html', attributes: ["final", "extern(C++)", "const"]},
{name: 'dmd.dclass.ClassDeclaration.isBaseOf', kind: "functiondeclaration", path: './dmd/dclass/class_declaration.is_base_of.html', attributes: ["extern(C++)"]},
{name: 'dmd.dclass.ClassDeclaration.isBaseOf2', kind: "functiondeclaration", path: './dmd/dclass/class_declaration.is_base_of2.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.dclass.ClassDeclaration.isCOMclass', kind: "functiondeclaration", path: './dmd/dclass/class_declaration.is_co_mclass.html', attributes: ["final", "extern(C++)", "const"]},
{name: 'dmd.dclass.ClassDeclaration.kind', kind: "functiondeclaration", path: './dmd/dclass/class_declaration.kind.html', attributes: ["override", "pure", "nothrow", "nogc", "safe", "extern(C++)", "const"]},
{name: 'dmd.dclass.ClassDeclaration.objc', kind: "variabledeclaration", path: './dmd/dclass/class_declaration.objc.html', attributes: []},
{name: 'dmd.dclass.ClassDeclaration.searchBase', kind: "functiondeclaration", path: './dmd/dclass/class_declaration.search_base.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.dclass.ClassDeclaration.stack', kind: "variabledeclaration", path: './dmd/dclass/class_declaration.stack.html', attributes: []},
{name: 'dmd.dclass.ClassDeclaration.vtblOffset', kind: "functiondeclaration", path: './dmd/dclass/class_declaration.vtbl_offset.html', attributes: ["extern(C++)", "const"]},
{name: 'dmd.dclass.InterfaceDeclaration', kind: "classdeclaration", path: './dmd/dclass/interface_declaration.html', attributes: []},
{name: 'dmd.dclass.InterfaceDeclaration.isBaseOf', kind: "functiondeclaration", path: './dmd/dclass/interface_declaration.is_base_of.html', attributes: ["override", "extern(C++)"]},
{name: 'dmd.dclass.InterfaceDeclaration.kind', kind: "functiondeclaration", path: './dmd/dclass/interface_declaration.kind.html', attributes: ["override", "pure", "nothrow", "nogc", "safe", "extern(C++)", "const"]},
{name: 'dmd.dclass.InterfaceDeclaration.vtblOffset', kind: "functiondeclaration", path: './dmd/dclass/interface_declaration.vtbl_offset.html', attributes: ["override", "extern(C++)", "const"]},
{name: 'dmd.declaration', kind: "module", path: './dmd/declaration.html', attributes: []},
{name: 'dmd.declaration.AliasDeclaration', kind: "classdeclaration", path: './dmd/declaration/alias_declaration.html', attributes: []},
{name: 'dmd.declaration.AliasDeclaration.wasTemplateParameter', kind: "variabledeclaration", path: './dmd/declaration/alias_declaration.was_template_parameter.html', attributes: []},
{name: 'dmd.declaration.Declaration.checkDisabled', kind: "functiondeclaration", path: './dmd/declaration/declaration.check_disabled.html', attributes: ["final"]},
{name: 'dmd.declaration.Declaration.checkModify', kind: "functiondeclaration", path: './dmd/declaration/declaration.check_modify.html', attributes: ["final"]},
{name: 'dmd.declaration.checkFrameAccess', kind: "functiondeclaration", path: './dmd/declaration/check_frame_access.html', attributes: []},
{name: 'dmd.declaration.Declaration', kind: "classdeclaration", path: './dmd/declaration/declaration.html', attributes: []},
{name: 'dmd.declaration.modifyFieldVar', kind: "functiondeclaration", path: './dmd/declaration/modify_field_var.html', attributes: []},
{name: 'dmd.declaration.ObjectNotFound', kind: "functiondeclaration", path: './dmd/declaration/object_not_found.html', attributes: ["extern(C++)"]},
{name: 'dmd.declaration.OverDeclaration', kind: "classdeclaration", path: './dmd/declaration/over_declaration.html', attributes: []},
{name: 'dmd.declaration.STCFlowThruAggregate', kind: "enummemberdeclaration", path: './dmd/declaration/stc_flow_thru_aggregate.html', attributes: []},
{name: 'dmd.declaration.STCFlowThruFunction', kind: "enummemberdeclaration", path: './dmd/declaration/stc_flow_thru_function.html', attributes: []},
{name: 'dmd.declaration.SymbolDeclaration', kind: "classdeclaration", path: './dmd/declaration/symbol_declaration.html', attributes: []},
{name: 'dmd.declaration.ThisDeclaration', kind: "classdeclaration", path: './dmd/declaration/this_declaration.html', attributes: []},
{name: 'dmd.declaration.VarDeclaration.addMaybe', kind: "functiondeclaration", path: './dmd/declaration/var_declaration.add_maybe.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.declaration.VarDeclaration.callScopeDtor', kind: "functiondeclaration", path: './dmd/declaration/var_declaration.call_scope_dtor.html', attributes: ["final"]},
{name: 'dmd.declaration.VarDeclaration.canTakeAddressOf', kind: "functiondeclaration", path: './dmd/declaration/var_declaration.can_take_address_of.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.declaration.VarDeclaration.checkNestedReference', kind: "functiondeclaration", path: './dmd/declaration/var_declaration.check_nested_reference.html', attributes: ["final"]},
{name: 'dmd.declaration.VarDeclaration.enclosesLifetimeOf', kind: "functiondeclaration", path: './dmd/declaration/var_declaration.encloses_lifetime_of.html', attributes: ["final", "pure", "extern(C++)", "const"]},
{name: 'dmd.declaration.VarDeclaration.expandInitializer', kind: "functiondeclaration", path: './dmd/declaration/var_declaration.expand_initializer.html', attributes: ["final"]},
{name: 'dmd.declaration.VarDeclaration.getConstInitializer', kind: "functiondeclaration", path: './dmd/declaration/var_declaration.get_const_initializer.html', attributes: ["final"]},
{name: 'dmd.declaration.VarDeclaration.isCTFE', kind: "functiondeclaration", path: './dmd/declaration/var_declaration.is_ctfe.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.declaration.VarDeclaration.isDataseg', kind: "functiondeclaration", path: './dmd/declaration/var_declaration.is_dataseg.html', attributes: ["final", "override", "extern(C++)"]},
{name: 'dmd.declaration.VarDeclaration.isThreadlocal', kind: "functiondeclaration", path: './dmd/declaration/var_declaration.is_threadlocal.html', attributes: ["final", "override", "extern(C++)"]},
{name: 'dmd.declaration.VarDeclaration.needsScopeDtor', kind: "functiondeclaration", path: './dmd/declaration/var_declaration.needs_scope_dtor.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.declaration.TupleDeclaration', kind: "classdeclaration", path: './dmd/declaration/tuple_declaration.html', attributes: []},
{name: 'dmd.declaration.TypeInfoArrayDeclaration', kind: "classdeclaration", path: './dmd/declaration/type_info_array_declaration.html', attributes: []},
{name: 'dmd.declaration.TypeInfoAssociativeArrayDeclaration', kind: "classdeclaration", path: './dmd/declaration/type_info_associative_array_declaration.html', attributes: []},
{name: 'dmd.declaration.TypeInfoClassDeclaration', kind: "classdeclaration", path: './dmd/declaration/type_info_class_declaration.html', attributes: []},
{name: 'dmd.declaration.TypeInfoConstDeclaration', kind: "classdeclaration", path: './dmd/declaration/type_info_const_declaration.html', attributes: []},
{name: 'dmd.declaration.TypeInfoDeclaration', kind: "classdeclaration", path: './dmd/declaration/type_info_declaration.html', attributes: []},
{name: 'dmd.declaration.TypeInfoDelegateDeclaration', kind: "classdeclaration", path: './dmd/declaration/type_info_delegate_declaration.html', attributes: []},
{name: 'dmd.declaration.TypeInfoEnumDeclaration', kind: "classdeclaration", path: './dmd/declaration/type_info_enum_declaration.html', attributes: []},
{name: 'dmd.declaration.TypeInfoFunctionDeclaration', kind: "classdeclaration", path: './dmd/declaration/type_info_function_declaration.html', attributes: []},
{name: 'dmd.declaration.TypeInfoInterfaceDeclaration', kind: "classdeclaration", path: './dmd/declaration/type_info_interface_declaration.html', attributes: []},
{name: 'dmd.declaration.TypeInfoInvariantDeclaration', kind: "classdeclaration", path: './dmd/declaration/type_info_invariant_declaration.html', attributes: []},
{name: 'dmd.declaration.TypeInfoPointerDeclaration', kind: "classdeclaration", path: './dmd/declaration/type_info_pointer_declaration.html', attributes: []},
{name: 'dmd.declaration.TypeInfoSharedDeclaration', kind: "classdeclaration", path: './dmd/declaration/type_info_shared_declaration.html', attributes: []},
{name: 'dmd.declaration.TypeInfoStaticArrayDeclaration', kind: "classdeclaration", path: './dmd/declaration/type_info_static_array_declaration.html', attributes: []},
{name: 'dmd.declaration.TypeInfoStructDeclaration', kind: "classdeclaration", path: './dmd/declaration/type_info_struct_declaration.html', attributes: []},
{name: 'dmd.declaration.TypeInfoTupleDeclaration', kind: "classdeclaration", path: './dmd/declaration/type_info_tuple_declaration.html', attributes: []},
{name: 'dmd.declaration.TypeInfoVectorDeclaration', kind: "classdeclaration", path: './dmd/declaration/type_info_vector_declaration.html', attributes: []},
{name: 'dmd.declaration.TypeInfoWildDeclaration', kind: "classdeclaration", path: './dmd/declaration/type_info_wild_declaration.html', attributes: []},
{name: 'dmd.declaration.VarDeclaration', kind: "classdeclaration", path: './dmd/declaration/var_declaration.html', attributes: []},
{name: 'dmd.delegatize', kind: "module", path: './dmd/delegatize.html', attributes: []},
{name: 'dmd.delegatize.ensureStaticLinkTo', kind: "functiondeclaration", path: './dmd/delegatize/ensure_static_link_to.html', attributes: []},
{name: 'dmd.delegatize.lambdaCheckForNestedRef', kind: "functiondeclaration", path: './dmd/delegatize/lambda_check_for_nested_ref.html', attributes: []},
{name: 'dmd.delegatize.toDelegate', kind: "functiondeclaration", path: './dmd/delegatize/to_delegate.html', attributes: []},
{name: 'dmd.denum', kind: "module", path: './dmd/denum.html', attributes: []},
{name: 'dmd.denum.EnumDeclaration', kind: "classdeclaration", path: './dmd/denum/enum_declaration.html', attributes: []},
{name: 'dmd.denum.EnumDeclaration.getMaxMinValue', kind: "functiondeclaration", path: './dmd/denum/enum_declaration.get_max_min_value.html', attributes: ["extern(C++)"]},
{name: 'dmd.denum.EnumDeclaration.isSpecial', kind: "functiondeclaration", path: './dmd/denum/enum_declaration.is_special.html', attributes: ["nothrow", "nogc", "extern(C++)", "const"]},
{name: 'dmd.denum.EnumMember', kind: "classdeclaration", path: './dmd/denum/enum_member.html', attributes: []},
{name: 'dmd.denum.isSpecialEnumIdent', kind: "functiondeclaration", path: './dmd/denum/is_special_enum_ident.html', attributes: ["nothrow", "nogc"]},
{name: 'dmd.dimport', kind: "module", path: './dmd/dimport.html', attributes: []},
{name: 'dmd.dimport.Import', kind: "classdeclaration", path: './dmd/dimport/import.html', attributes: []},
{name: 'dmd.dimport.Import.addMember', kind: "functiondeclaration", path: './dmd/dimport/import.add_member.html', attributes: ["override", "extern(C++)"]},
{name: 'dmd.dimport.Import.load', kind: "functiondeclaration", path: './dmd/dimport/import.load.html', attributes: ["extern(C++)"]},
{name: 'dmd.dinifile', kind: "module", path: './dmd/dinifile.html', attributes: []},
{name: 'dmd.dinifile.findConfFile', kind: "functiondeclaration", path: './dmd/dinifile/find_conf_file.html', attributes: []},
{name: 'dmd.dinifile.parseConfFile', kind: "functiondeclaration", path: './dmd/dinifile/parse_conf_file.html', attributes: []},
{name: 'dmd.dinifile.readFromEnv', kind: "functiondeclaration", path: './dmd/dinifile/read_from_env.html', attributes: []},
{name: 'dmd.dinifile.updateRealEnvironment', kind: "functiondeclaration", path: './dmd/dinifile/update_real_environment.html', attributes: []},
{name: 'dmd.dinterpret', kind: "module", path: './dmd/dinterpret.html', attributes: []},
{name: 'dmd.dinterpret.ctfeEmplaceExp', kind: "functiondeclaration", path: './dmd/dinterpret/ctfe_emplace_exp.html', attributes: []},
{name: 'dmd.dinterpret.ctfeInterpret', kind: "functiondeclaration", path: './dmd/dinterpret/ctfe_interpret.html', attributes: []},
{name: 'dmd.dinterpret.incArrayAllocs', kind: "functiondeclaration", path: './dmd/dinterpret/inc_array_allocs.html', attributes: []},
{name: 'dmd.dmacro', kind: "module", path: './dmd/dmacro.html', attributes: []},
{name: 'dmd.dmangle', kind: "module", path: './dmd/dmangle.html', attributes: []},
{name: 'dmd.dmangle.mangleExact', kind: "functiondeclaration", path: './dmd/dmangle/mangle_exact.html', attributes: ["extern(C++)"]},
{name: 'dmd.dmangle.mangleToFuncSignature', kind: "functiondeclaration", path: './dmd/dmangle/mangle_to_func_signature.html', attributes: []},
{name: 'dmd.dmodule', kind: "module", path: './dmd/dmodule.html', attributes: []},
{name: 'dmd.dmodule.Module', kind: "classdeclaration", path: './dmd/dmodule/module.html', attributes: []},
{name: 'dmd.dmodule.Module.addDeferredSemantic', kind: "functiondeclaration", path: './dmd/dmodule/module.add_deferred_semantic.html', attributes: ["static"]},
{name: 'dmd.dmodule.Module.checkImportDeprecation', kind: "functiondeclaration", path: './dmd/dmodule/module.check_import_deprecation.html', attributes: ["extern(C++)"]},
{name: 'dmd.dmodule.Module.deinitialize', kind: "functiondeclaration", path: './dmd/dmodule/module.deinitialize.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.dmodule.Module.fullyQualifiedName', kind: "functiondeclaration", path: './dmd/dmodule/module.fully_qualified_name.html', attributes: ["extern(C++)"]},
{name: 'dmd.dmodule.Module.importedFrom', kind: "variabledeclaration", path: './dmd/dmodule/module.imported_from.html', attributes: []},
{name: 'dmd.dmodule.Module.imports', kind: "functiondeclaration", path: './dmd/dmodule/module.imports.html', attributes: ["extern(C++)"]},
{name: 'dmd.dmodule.Module.loadSourceBuffer', kind: "functiondeclaration", path: './dmd/dmodule/module.load_source_buffer.html', attributes: ["extern(C++)"]},
{name: 'dmd.dmodule.Module.needModuleInfo', kind: "functiondeclaration", path: './dmd/dmodule/module.need_module_info.html', attributes: ["extern(C++)"]},
{name: 'dmd.dmodule.Module.parse', kind: "functiondeclaration", path: './dmd/dmodule/module.parse.html', attributes: ["extern(C++)"]},
{name: 'dmd.dmodule.Module.parseModule', kind: "functiondeclaration", path: './dmd/dmodule/module.parse_module.html', attributes: []},
{name: 'dmd.dmodule.Module.read', kind: "functiondeclaration", path: './dmd/dmodule/module.read.html', attributes: ["extern(C++)"]},
{name: 'dmd.dmodule.Module.rootImports', kind: "functiondeclaration", path: './dmd/dmodule/module.root_imports.html', attributes: ["extern(C++)"]},
{name: 'dmd.dmodule.Module.runDeferredSemantic', kind: "functiondeclaration", path: './dmd/dmodule/module.run_deferred_semantic.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.dmodule.Module.selfImports', kind: "functiondeclaration", path: './dmd/dmodule/module.self_imports.html', attributes: ["extern(C++)"]},
{name: 'dmd.dmodule.Module.setOutfilename', kind: "functiondeclaration", path: './dmd/dmodule/module.set_outfilename.html', attributes: []},
{name: 'dmd.dmodule.Package.isAncestorPackageOf', kind: "functiondeclaration", path: './dmd/dmodule/package.is_ancestor_package_of.html', attributes: ["final", "extern(C++)", "const"]},
{name: 'dmd.dmodule.Package.resolve', kind: "functiondeclaration", path: './dmd/dmodule/package.resolve.html', attributes: ["static"]},
{name: 'dmd.dmodule.Package.resolvePKGunknown', kind: "functiondeclaration", path: './dmd/dmodule/package.resolve_pk_gunknown.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.dmodule.ModuleDeclaration', kind: "structdeclaration", path: './dmd/dmodule/module_declaration.html', attributes: []},
{name: 'dmd.dmodule.ModuleDeclaration.toString', kind: "functiondeclaration", path: './dmd/dmodule/module_declaration.to_string.html', attributes: ["const"]},
{name: 'dmd.dmodule.Package', kind: "classdeclaration", path: './dmd/dmodule/package.html', attributes: []},
{name: 'dmd.dmsc', kind: "module", path: './dmd/dmsc.html', attributes: []},
{name: 'dmd.dmsc._align', kind: "functiondeclaration", path: './dmd/dmsc/_align.html', attributes: ["extern(C++)"]},
{name: 'dmd.dmsc.backend_init', kind: "functiondeclaration", path: './dmd/dmsc/backend_init.html', attributes: ["extern(C++)"]},
{name: 'dmd.dmsc.backend_term', kind: "functiondeclaration", path: './dmd/dmsc/backend_term.html', attributes: ["extern(C++)"]},
{name: 'dmd.dmsc.size', kind: "functiondeclaration", path: './dmd/dmsc/size.html', attributes: ["extern(C++)"]},
{name: 'dmd.dmsc.symboldata', kind: "functiondeclaration", path: './dmd/dmsc/symboldata.html', attributes: ["extern(C++)"]},
{name: 'dmd.doc', kind: "module", path: './dmd/doc.html', attributes: []},
{name: 'dmd.doc.DocComment', kind: "structdeclaration", path: './dmd/doc/doc_comment.html', attributes: []},
{name: 'dmd.doc.DocComment.parseEscapes', kind: "functiondeclaration", path: './dmd/doc/doc_comment.parse_escapes.html', attributes: ["static"]},
{name: 'dmd.doc.DocComment.parseMacros', kind: "functiondeclaration", path: './dmd/doc/doc_comment.parse_macros.html', attributes: ["static"]},
{name: 'dmd.doc.DocComment.parseSections', kind: "functiondeclaration", path: './dmd/doc/doc_comment.parse_sections.html', attributes: []},
{name: 'dmd.doc.escapeDdocString', kind: "functiondeclaration", path: './dmd/doc/escape_ddoc_string.html', attributes: []},
{name: 'dmd.doc.gendocfile', kind: "functiondeclaration", path: './dmd/doc/gendocfile.html', attributes: ["extern(C++)"]},
{name: 'dmd.doc.isIdStart', kind: "functiondeclaration", path: './dmd/doc/is_id_start.html', attributes: []},
{name: 'dmd.doc.isIdTail', kind: "functiondeclaration", path: './dmd/doc/is_id_tail.html', attributes: []},
{name: 'dmd.doc.skiptoident', kind: "functiondeclaration", path: './dmd/doc/skiptoident.html', attributes: []},
{name: 'dmd.doc.utfStride', kind: "functiondeclaration", path: './dmd/doc/utf_stride.html', attributes: []},
{name: 'dmd.dscope', kind: "module", path: './dmd/dscope.html', attributes: []},
{name: 'dmd.dstruct', kind: "module", path: './dmd/dstruct.html', attributes: []},
{name: 'dmd.dstruct.search_toString', kind: "functiondeclaration", path: './dmd/dstruct/search_to_string.html', attributes: ["extern(C++)"]},
{name: 'dmd.dstruct.semanticTypeInfo', kind: "functiondeclaration", path: './dmd/dstruct/semantic_type_info.html', attributes: ["extern(C++)"]},
{name: 'dmd.dstruct.StructDeclaration', kind: "classdeclaration", path: './dmd/dstruct/struct_declaration.html', attributes: []},
{name: 'dmd.dstruct.StructDeclaration.fit', kind: "functiondeclaration", path: './dmd/dstruct/struct_declaration.fit.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.dstruct.StructDeclaration.isPOD', kind: "functiondeclaration", path: './dmd/dstruct/struct_declaration.is_pod.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.dstruct.UnionDeclaration', kind: "classdeclaration", path: './dmd/dstruct/union_declaration.html', attributes: []},
{name: 'dmd.dsymbol', kind: "module", path: './dmd/dsymbol.html', attributes: []},
{name: 'dmd.dsymbol.ArrayScopeSymbol', kind: "classdeclaration", path: './dmd/dsymbol/array_scope_symbol.html', attributes: []},
{name: 'dmd.dsymbol.Dsymbol', kind: "classdeclaration", path: './dmd/dsymbol/dsymbol.html', attributes: []},
{name: 'dmd.dsymbol.DsymbolTable', kind: "classdeclaration", path: './dmd/dsymbol/dsymbol_table.html', attributes: []},
{name: 'dmd.dsymbol.DsymbolTable.length', kind: "functiondeclaration", path: './dmd/dsymbol/dsymbol_table.length.html', attributes: ["pure", "extern(C++)", "const"]},
{name: 'dmd.dsymbol.ExpressionDsymbol', kind: "classdeclaration", path: './dmd/dsymbol/expression_dsymbol.html', attributes: []},
{name: 'dmd.dsymbol.foreachDsymbol', kind: "functiondeclaration", path: './dmd/dsymbol/foreach_dsymbol.html', attributes: []},
{name: 'dmd.dsymbol.ForwardingScopeDsymbol', kind: "classdeclaration", path: './dmd/dsymbol/forwarding_scope_dsymbol.html', attributes: []},
{name: 'dmd.dsymbol.ForwardingScopeDsymbol.forward', kind: "variabledeclaration", path: './dmd/dsymbol/forwarding_scope_dsymbol.forward.html', attributes: []},
{name: 'dmd.dsymbol.ForwardingScopeDsymbol.symtabLookup', kind: "functiondeclaration", path: './dmd/dsymbol/forwarding_scope_dsymbol.symtab_lookup.html', attributes: ["override", "extern(C++)"]},
{name: 'dmd.dsymbol.OverloadSet', kind: "classdeclaration", path: './dmd/dsymbol/overload_set.html', attributes: []},
{name: 'dmd.dsymbol.ScopeDsymbol', kind: "classdeclaration", path: './dmd/dsymbol/scope_dsymbol.html', attributes: []},
{name: 'dmd.dsymbol.WithScopeSymbol', kind: "classdeclaration", path: './dmd/dsymbol/with_scope_symbol.html', attributes: []},
{name: 'dmd.dsymbolsem', kind: "module", path: './dmd/dsymbolsem.html', attributes: []},
{name: 'dmd.dsymbolsem.dsymbolSemantic', kind: "functiondeclaration", path: './dmd/dsymbolsem/dsymbol_semantic.html', attributes: ["extern(C++)"]},
{name: 'dmd.dtemplate', kind: "module", path: './dmd/dtemplate.html', attributes: []},
{name: 'dmd.dtemplate.arrayObjectIsError', kind: "functiondeclaration", path: './dmd/dtemplate/array_object_is_error.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'dmd.dtemplate.definitelyValueParameter', kind: "functiondeclaration", path: './dmd/dtemplate/definitely_value_parameter.html', attributes: []},
{name: 'dmd.dtemplate.functionResolve', kind: "functiondeclaration", path: './dmd/dtemplate/function_resolve.html', attributes: []},
{name: 'dmd.dtemplate.getType', kind: "functiondeclaration", path: './dmd/dtemplate/get_type.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'dmd.dtemplate.isError', kind: "functiondeclaration", path: './dmd/dtemplate/is_error.html', attributes: ["pure", "nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.dtemplate.isExpression', kind: "functiondeclaration", path: './dmd/dtemplate/is_expression.html', attributes: ["pure", "nothrow", "nogc", "extern(C++)"]},
{name: 'dmd.dtemplate.matchArg', kind: "functiondeclaration", path: './dmd/dtemplate/match_arg.html', attributes: []},
{name: 'dmd.dtemplate.reliesOnTident', kind: "functiondeclaration", path: './dmd/dtemplate/relies_on_tident.html', attributes: []},
{name: 'dmd.dtemplate.TemplateAliasParameter', kind: "classdeclaration", path: './dmd/dtemplate/template_alias_parameter.html', attributes: []},
{name: 'dmd.dtemplate.TemplateDeclaration', kind: "classdeclaration", path: './dmd/dtemplate/template_declaration.html', attributes: []},
{name: 'dmd.dtemplate.TemplateDeclaration.addInstance', kind: "functiondeclaration", path: './dmd/dtemplate/template_declaration.add_instance.html', attributes: []},
{name: 'dmd.dtemplate.TemplateDeclaration.declareParameter', kind: "functiondeclaration", path: './dmd/dtemplate/template_declaration.declare_parameter.html', attributes: ["extern(C++)"]},
{name: 'dmd.dtemplate.TemplateDeclaration.deduceFunctionTemplateMatch', kind: "functiondeclaration", path: './dmd/dtemplate/template_declaration.deduce_function_template_match.html', attributes: []},
{name: 'dmd.dtemplate.TemplateDeclaration.doHeaderInstantiation', kind: "functiondeclaration", path: './dmd/dtemplate/template_declaration.do_header_instantiation.html', attributes: []},
{name: 'dmd.dtemplate.TemplateDeclaration.evaluateConstraint', kind: "functiondeclaration", path: './dmd/dtemplate/template_declaration.evaluate_constraint.html', attributes: []},
{name: 'dmd.dtemplate.TemplateDeclaration.findExistingInstance', kind: "functiondeclaration", path: './dmd/dtemplate/template_declaration.find_existing_instance.html', attributes: []},
{name: 'dmd.dtemplate.TemplateDeclaration.getConstraintEvalError', kind: "functiondeclaration", path: './dmd/dtemplate/template_declaration.get_constraint_eval_error.html', attributes: ["extern(C++)"]},
{name: 'dmd.dtemplate.TemplateDeclaration.inuse', kind: "variabledeclaration", path: './dmd/dtemplate/template_declaration.inuse.html', attributes: []},
{name: 'dmd.dtemplate.TemplateDeclaration.isOverloadable', kind: "functiondeclaration", path: './dmd/dtemplate/template_declaration.is_overloadable.html', attributes: ["override", "extern(C++)", "const"]},
{name: 'dmd.dtemplate.TemplateDeclaration.isTrivialAlias', kind: "variabledeclaration", path: './dmd/dtemplate/template_declaration.is_trivial_alias.html', attributes: []},
{name: 'dmd.dtemplate.TemplateDeclaration.isTrivialAliasSeq', kind: "variabledeclaration", path: './dmd/dtemplate/template_declaration.is_trivial_alias_seq.html', attributes: []},
{name: 'dmd.dtemplate.TemplateDeclaration.isVariadic', kind: "functiondeclaration", path: './dmd/dtemplate/template_declaration.is_variadic.html', attributes: ["extern(C++)"]},
{name: 'dmd.dtemplate.TemplateDeclaration.leastAsSpecialized', kind: "functiondeclaration", path: './dmd/dtemplate/template_declaration.least_as_specialized.html', attributes: ["extern(C++)"]},
{name: 'dmd.dtemplate.TemplateDeclaration.matchWithInstance', kind: "functiondeclaration", path: './dmd/dtemplate/template_declaration.match_with_instance.html', attributes: []},
{name: 'dmd.dtemplate.TemplateDeclaration.overloadInsert', kind: "functiondeclaration", path: './dmd/dtemplate/template_declaration.overload_insert.html', attributes: ["override", "extern(C++)"]},
{name: 'dmd.dtemplate.TemplateDeclaration.removeInstance', kind: "functiondeclaration", path: './dmd/dtemplate/template_declaration.remove_instance.html', attributes: []},
{name: 'dmd.dtemplate.TemplateDeclaration.scopeForTemplateParameters', kind: "functiondeclaration", path: './dmd/dtemplate/template_declaration.scope_for_template_parameters.html', attributes: ["extern(C++)"]},
{name: 'dmd.dtemplate.TemplateDeclaration.toCharsNoConstraints', kind: "functiondeclaration", path: './dmd/dtemplate/template_declaration.to_chars_no_constraints.html', attributes: ["extern(C++)"]},
{name: 'dmd.dtemplate.TemplateInstance', kind: "classdeclaration", path: './dmd/dtemplate/template_instance.html', attributes: []},
{name: 'dmd.dtemplate.TemplateInstance.appendToModuleMember', kind: "functiondeclaration", path: './dmd/dtemplate/template_instance.append_to_module_member.html', attributes: ["final"]},
{name: 'dmd.dtemplate.TemplateInstance.declareParameters', kind: "functiondeclaration", path: './dmd/dtemplate/template_instance.declare_parameters.html', attributes: ["final"]},
{name: 'dmd.dtemplate.TemplateInstance.equalsx', kind: "functiondeclaration", path: './dmd/dtemplate/template_instance.equalsx.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.dtemplate.TemplateInstance.findTempDecl', kind: "functiondeclaration", path: './dmd/dtemplate/template_instance.find_temp_decl.html', attributes: ["final"]},
{name: 'dmd.dtemplate.TemplateInstance.genIdent', kind: "functiondeclaration", path: './dmd/dtemplate/template_instance.gen_ident.html', attributes: ["final"]},
{name: 'dmd.dtemplate.TemplateInstance.getIdent', kind: "functiondeclaration", path: './dmd/dtemplate/template_instance.get_ident.html', attributes: ["final", "override", "extern(C++)"]},
{name: 'dmd.dtemplate.TemplateInstance.hasNestedArgs', kind: "functiondeclaration", path: './dmd/dtemplate/template_instance.has_nested_args.html', attributes: ["final"]},
{name: 'dmd.dtemplate.TemplateInstance.isDiscardable', kind: "functiondeclaration", path: './dmd/dtemplate/template_instance.is_discardable.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.dtemplate.TemplateInstance.needsCodegen', kind: "functiondeclaration", path: './dmd/dtemplate/template_instance.needs_codegen.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.dtemplate.TemplateInstance.needsTypeInference', kind: "functiondeclaration", path: './dmd/dtemplate/template_instance.needs_type_inference.html', attributes: ["final"]},
{name: 'dmd.dtemplate.TemplateInstance.printInstantiationTrace', kind: "functiondeclaration", path: './dmd/dtemplate/template_instance.print_instantiation_trace.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.dtemplate.TemplateInstance.semanticTiargs', kind: "functiondeclaration", path: './dmd/dtemplate/template_instance.semantic_tiargs.html', attributes: ["static"]},
{name: 'dmd.dtemplate.TemplateInstance.this', kind: "functiondeclaration", path: './dmd/dtemplate/template_instance.this.html', attributes: []},
{name: 'dmd.dtemplate.TemplateInstance.updateTempDecl', kind: "functiondeclaration", path: './dmd/dtemplate/template_instance.update_temp_decl.html', attributes: ["final"]},
{name: 'dmd.dtemplate.TemplateInstanceBox', kind: "structdeclaration", path: './dmd/dtemplate/template_instance_box.html', attributes: []},
{name: 'dmd.dtemplate.TemplateMixin', kind: "classdeclaration", path: './dmd/dtemplate/template_mixin.html', attributes: []},
{name: 'dmd.dtemplate.TemplateParameter', kind: "classdeclaration", path: './dmd/dtemplate/template_parameter.html', attributes: []},
{name: 'dmd.dtemplate.TemplateStats', kind: "structdeclaration", path: './dmd/dtemplate/template_stats.html', attributes: []},
{name: 'dmd.dtemplate.TemplateStats.incInstance', kind: "functiondeclaration", path: './dmd/dtemplate/template_stats.inc_instance.html', attributes: ["static"]},
{name: 'dmd.dtemplate.TemplateStats.incUnique', kind: "functiondeclaration", path: './dmd/dtemplate/template_stats.inc_unique.html', attributes: ["static"]},
{name: 'dmd.dtemplate.TemplateThisParameter', kind: "classdeclaration", path: './dmd/dtemplate/template_this_parameter.html', attributes: []},
{name: 'dmd.dtemplate.TemplateTupleParameter', kind: "classdeclaration", path: './dmd/dtemplate/template_tuple_parameter.html', attributes: []},
{name: 'dmd.dtemplate.TemplateTypeParameter', kind: "classdeclaration", path: './dmd/dtemplate/template_type_parameter.html', attributes: []},
{name: 'dmd.dtemplate.TemplateValueParameter', kind: "classdeclaration", path: './dmd/dtemplate/template_value_parameter.html', attributes: []},
{name: 'dmd.dtemplate.unSpeculative', kind: "functiondeclaration", path: './dmd/dtemplate/un_speculative.html', attributes: []},
{name: 'dmd.dtoh', kind: "module", path: './dmd/dtoh.html', attributes: []},
{name: 'dmd.dtoh.ToCppBuffer', kind: "classdeclaration", path: './dmd/dtoh/to_cpp_buffer.html', attributes: []},
{name: 'dmd.dversion', kind: "module", path: './dmd/dversion.html', attributes: []},
{name: 'dmd.dversion.DebugSymbol', kind: "classdeclaration", path: './dmd/dversion/debug_symbol.html', attributes: []},
{name: 'dmd.dversion.VersionSymbol', kind: "classdeclaration", path: './dmd/dversion/version_symbol.html', attributes: []},
{name: 'dmd.e2ir', kind: "module", path: './dmd/e2ir.html', attributes: []},
{name: 'dmd.e2ir.addressElem', kind: "functiondeclaration", path: './dmd/e2ir/address_elem.html', attributes: ["extern(C++)"]},
{name: 'dmd.e2ir.array_toDarray', kind: "functiondeclaration", path: './dmd/e2ir/array_to_darray.html', attributes: ["extern(C++)"]},
{name: 'dmd.e2ir.array_toPtr', kind: "functiondeclaration", path: './dmd/e2ir/array_to_ptr.html', attributes: ["extern(C++)"]},
{name: 'dmd.e2ir.buildArrayBoundsError', kind: "functiondeclaration", path: './dmd/e2ir/build_array_bounds_error.html', attributes: ["extern(C++)"]},
{name: 'dmd.e2ir.callCAssert', kind: "functiondeclaration", path: './dmd/e2ir/call_c_assert.html', attributes: ["extern(C++)"]},
{name: 'dmd.e2ir.clearStringTab', kind: "functiondeclaration", path: './dmd/e2ir/clear_string_tab.html', attributes: ["extern(C++)"]},
{name: 'dmd.e2ir.elAssign', kind: "functiondeclaration", path: './dmd/e2ir/el_assign.html', attributes: ["extern(C++)"]},
{name: 'dmd.e2ir.elemIsLvalue', kind: "functiondeclaration", path: './dmd/e2ir/elem_is_lvalue.html', attributes: ["extern(C++)"]},
{name: 'dmd.e2ir.genHalt', kind: "functiondeclaration", path: './dmd/e2ir/gen_halt.html', attributes: ["extern(C++)"]},
{name: 'dmd.e2ir.getTypeInfo', kind: "functiondeclaration", path: './dmd/e2ir/get_type_info.html', attributes: ["extern(C++)"]},
{name: 'dmd.e2ir.needsDtor', kind: "functiondeclaration", path: './dmd/e2ir/needs_dtor.html', attributes: ["extern(C++)"]},
{name: 'dmd.e2ir.needsPostblit', kind: "functiondeclaration", path: './dmd/e2ir/needs_postblit.html', attributes: ["extern(C++)"]},
{name: 'dmd.e2ir.sarray_toDarray', kind: "functiondeclaration", path: './dmd/e2ir/sarray_to_darray.html', attributes: ["extern(C++)"]},
{name: 'dmd.e2ir.setEthis2', kind: "functiondeclaration", path: './dmd/e2ir/set_ethis2.html', attributes: ["extern(C++)"]},
{name: 'dmd.e2ir.toElemDtor', kind: "functiondeclaration", path: './dmd/e2ir/to_elem_dtor.html', attributes: ["extern(C++)"]},
{name: 'dmd.e2ir.toStringSymbol', kind: "functiondeclaration", path: './dmd/e2ir/to_string_symbol.html', attributes: ["extern(C++)"]},
{name: 'dmd.e2ir.toTraceGC', kind: "functiondeclaration", path: './dmd/e2ir/to_trace_gc.html', attributes: ["extern(C++)"]},
{name: 'dmd.e2ir.type_zeroCopy', kind: "functiondeclaration", path: './dmd/e2ir/type_zero_copy.html', attributes: ["extern(C++)"]},
{name: 'dmd.eh', kind: "module", path: './dmd/eh.html', attributes: []},
{name: 'dmd.eh.except_fillInEHTable', kind: "functiondeclaration", path: './dmd/eh/except_fill_ineh_table.html', attributes: ["extern(C++)"]},
{name: 'dmd.eh.except_gentables', kind: "functiondeclaration", path: './dmd/eh/except_gentables.html', attributes: ["extern(C++)"]},
{name: 'dmd.entity', kind: "module", path: './dmd/entity.html', attributes: []},
{name: 'dmd.env', kind: "module", path: './dmd/env.html', attributes: []},
{name: 'dmd.env.allocNameValue', kind: "functiondeclaration", path: './dmd/env/alloc_name_value.html', attributes: []},
{name: 'dmd.env.putenvRestorable', kind: "functiondeclaration", path: './dmd/env/putenv_restorable.html', attributes: []},
{name: 'dmd.env.restoreEnvVars', kind: "functiondeclaration", path: './dmd/env/restore_env_vars.html', attributes: []},
{name: 'dmd.env.saveEnvVar', kind: "functiondeclaration", path: './dmd/env/save_env_var.html', attributes: []},
{name: 'dmd.errors', kind: "module", path: './dmd/errors.html', attributes: []},
{name: 'dmd.errors.Classification', kind: "enumdeclaration", path: './dmd/errors/classification.html', attributes: []},
{name: 'dmd.errors.Classification.deprecation', kind: "enummemberdeclaration", path: './dmd/errors/classification.html#deprecation', attributes: []},
{name: 'dmd.errors.Classification.error', kind: "enummemberdeclaration", path: './dmd/errors/classification.html#error', attributes: []},
{name: 'dmd.errors.Classification.gagged', kind: "enummemberdeclaration", path: './dmd/errors/classification.html#gagged', attributes: []},
{name: 'dmd.errors.Classification.tip', kind: "enummemberdeclaration", path: './dmd/errors/classification.html#tip', attributes: []},
{name: 'dmd.errors.Classification.warning', kind: "enummemberdeclaration", path: './dmd/errors/classification.html#warning', attributes: []},
{name: 'dmd.errors.deprecation', kind: "functiondeclaration", path: './dmd/errors/deprecation.html', attributes: ["extern(C++)"]},
{name: 'dmd.errors.deprecationSupplemental', kind: "functiondeclaration", path: './dmd/errors/deprecation_supplemental.html', attributes: ["extern(C++)"]},
{name: 'dmd.errors.DiagnosticHandler', kind: "aliasdeclaration", path: './dmd/errors/diagnostic_handler.html', attributes: []},
{name: 'dmd.errors.diagnosticHandler', kind: "variabledeclaration", path: './dmd/errors/diagnostic_handler.html', attributes: []},
{name: 'dmd.errors.error', kind: "functiondeclaration", path: './dmd/errors/error.html', attributes: ["extern(C++)"]},
{name: 'dmd.errors.errorSupplemental', kind: "functiondeclaration", path: './dmd/errors/error_supplemental.html', attributes: ["extern(C++)"]},
{name: 'dmd.errors.fatal', kind: "functiondeclaration", path: './dmd/errors/fatal.html', attributes: ["extern(C++)"]},
{name: 'dmd.errors.halt', kind: "functiondeclaration", path: './dmd/errors/halt.html', attributes: ["extern(C++)"]},
{name: 'dmd.errors.HIGHLIGHT', kind: "enumdeclaration", path: './dmd/errors/highlight.html', attributes: []},
{name: 'dmd.errors.message', kind: "functiondeclaration", path: './dmd/errors/message.html', attributes: ["extern(C++)"]},
{name: 'dmd.errors.tip', kind: "functiondeclaration", path: './dmd/errors/tip.html', attributes: ["extern(C++)"]},
{name: 'dmd.errors.vdeprecation', kind: "functiondeclaration", path: './dmd/errors/vdeprecation.html', attributes: ["extern(C++)"]},
{name: 'dmd.errors.vdeprecationSupplemental', kind: "functiondeclaration", path: './dmd/errors/vdeprecation_supplemental.html', attributes: ["extern(C++)"]},
{name: 'dmd.errors.verror', kind: "functiondeclaration", path: './dmd/errors/verror.html', attributes: ["extern(C++)"]},
{name: 'dmd.errors.verrorSupplemental', kind: "functiondeclaration", path: './dmd/errors/verror_supplemental.html', attributes: ["extern(C++)"]},
{name: 'dmd.errors.vmessage', kind: "functiondeclaration", path: './dmd/errors/vmessage.html', attributes: ["extern(C++)"]},
{name: 'dmd.errors.vtip', kind: "functiondeclaration", path: './dmd/errors/vtip.html', attributes: ["extern(C++)"]},
{name: 'dmd.errors.vwarning', kind: "functiondeclaration", path: './dmd/errors/vwarning.html', attributes: ["extern(C++)"]},
{name: 'dmd.errors.vwarningSupplemental', kind: "functiondeclaration", path: './dmd/errors/vwarning_supplemental.html', attributes: ["extern(C++)"]},
{name: 'dmd.errors.warning', kind: "functiondeclaration", path: './dmd/errors/warning.html', attributes: ["extern(C++)"]},
{name: 'dmd.errors.warningSupplemental', kind: "functiondeclaration", path: './dmd/errors/warning_supplemental.html', attributes: ["extern(C++)"]},
{name: 'dmd.escape', kind: "module", path: './dmd/escape.html', attributes: []},
{name: 'dmd.escape.checkArrayLiteralEscape', kind: "functiondeclaration", path: './dmd/escape/check_array_literal_escape.html', attributes: []},
{name: 'dmd.escape.checkAssignEscape', kind: "functiondeclaration", path: './dmd/escape/check_assign_escape.html', attributes: []},
{name: 'dmd.escape.checkAssocArrayLiteralEscape', kind: "functiondeclaration", path: './dmd/escape/check_assoc_array_literal_escape.html', attributes: []},
{name: 'dmd.escape.checkConstructorEscape', kind: "functiondeclaration", path: './dmd/escape/check_constructor_escape.html', attributes: []},
{name: 'dmd.escape.checkMutableArguments', kind: "functiondeclaration", path: './dmd/escape/check_mutable_arguments.html', attributes: []},
{name: 'dmd.escape.checkNewEscape', kind: "functiondeclaration", path: './dmd/escape/check_new_escape.html', attributes: []},
{name: 'dmd.escape.checkParamArgumentEscape', kind: "functiondeclaration", path: './dmd/escape/check_param_argument_escape.html', attributes: []},
{name: 'dmd.escape.checkParamArgumentReturn', kind: "functiondeclaration", path: './dmd/escape/check_param_argument_return.html', attributes: []},
{name: 'dmd.escape.checkReturnEscape', kind: "functiondeclaration", path: './dmd/escape/check_return_escape.html', attributes: []},
{name: 'dmd.escape.checkReturnEscapeRef', kind: "functiondeclaration", path: './dmd/escape/check_return_escape_ref.html', attributes: []},
{name: 'dmd.escape.checkThrowEscape', kind: "functiondeclaration", path: './dmd/escape/check_throw_escape.html', attributes: []},
{name: 'dmd.escape.eliminateMaybeScopes', kind: "functiondeclaration", path: './dmd/escape/eliminate_maybe_scopes.html', attributes: []},
{name: 'dmd.escape.escapeByRef', kind: "functiondeclaration", path: './dmd/escape/escape_by_ref.html', attributes: []},
{name: 'dmd.escape.EscapeByResults', kind: "structdeclaration", path: './dmd/escape/escape_by_results.html', attributes: []},
{name: 'dmd.escape.EscapeByResults.reset', kind: "functiondeclaration", path: './dmd/escape/escape_by_results.reset.html', attributes: []},
{name: 'dmd.escape.escapeByValue', kind: "functiondeclaration", path: './dmd/escape/escape_by_value.html', attributes: []},
{name: 'dmd.escape.findAllOuterAccessedVariables', kind: "functiondeclaration", path: './dmd/escape/find_all_outer_accessed_variables.html', attributes: []},
{name: 'dmd.escape.isReferenceToMutable', kind: "functiondeclaration", path: './dmd/escape/is_reference_to_mutable.html', attributes: []},
{name: 'dmd.escape.notMaybeScope', kind: "functiondeclaration", path: './dmd/escape/not_maybe_scope.html', attributes: []},
{name: 'dmd.expression', kind: "module", path: './dmd/expression.html', attributes: []},
{name: 'dmd.expression.AddAssignExp', kind: "classdeclaration", path: './dmd/expression/add_assign_exp.html', attributes: []},
{name: 'dmd.expression.BinExp.incompatibleTypes', kind: "functiondeclaration", path: './dmd/expression/bin_exp.incompatible_types.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.expression.BinExp.setNoderefOperands', kind: "functiondeclaration", path: './dmd/expression/bin_exp.set_noderef_operands.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.expression.AddExp', kind: "classdeclaration", path: './dmd/expression/add_exp.html', attributes: []},
{name: 'dmd.expression.AddrExp', kind: "classdeclaration", path: './dmd/expression/addr_exp.html', attributes: []},
{name: 'dmd.expression.UnaExp.incompatibleTypes', kind: "functiondeclaration", path: './dmd/expression/una_exp.incompatible_types.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.expression.UnaExp.setNoderefOperand', kind: "functiondeclaration", path: './dmd/expression/una_exp.set_noderef_operand.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.expression.AndAssignExp', kind: "classdeclaration", path: './dmd/expression/and_assign_exp.html', attributes: []},
{name: 'dmd.expression.AndExp', kind: "classdeclaration", path: './dmd/expression/and_exp.html', attributes: []},
{name: 'dmd.expression.ArrayExp', kind: "classdeclaration", path: './dmd/expression/array_exp.html', attributes: []},
{name: 'dmd.expression.ArrayLengthExp', kind: "classdeclaration", path: './dmd/expression/array_length_exp.html', attributes: []},
{name: 'dmd.expression.ArrayLiteralExp', kind: "classdeclaration", path: './dmd/expression/array_literal_exp.html', attributes: []},
{name: 'dmd.expression.ArrayLiteralExp.basis', kind: "variabledeclaration", path: './dmd/expression/array_literal_exp.basis.html', attributes: []},
{name: 'dmd.expression.AssertExp', kind: "classdeclaration", path: './dmd/expression/assert_exp.html', attributes: []},
{name: 'dmd.expression.AssignExp', kind: "classdeclaration", path: './dmd/expression/assign_exp.html', attributes: []},
{name: 'dmd.expression.AssignExp.this', kind: "functiondeclaration", path: './dmd/expression/assign_exp.this.html', attributes: []},
{name: 'dmd.expression.AssocArrayLiteralExp', kind: "classdeclaration", path: './dmd/expression/assoc_array_literal_exp.html', attributes: []},
{name: 'dmd.expression.BinAssignExp', kind: "classdeclaration", path: './dmd/expression/bin_assign_exp.html', attributes: []},
{name: 'dmd.expression.BinExp', kind: "classdeclaration", path: './dmd/expression/bin_exp.html', attributes: []},
{name: 'dmd.expression.BlitExp', kind: "classdeclaration", path: './dmd/expression/blit_exp.html', attributes: []},
{name: 'dmd.expression.CallExp', kind: "classdeclaration", path: './dmd/expression/call_exp.html', attributes: []},
{name: 'dmd.expression.CallExp.create', kind: "functiondeclaration", path: './dmd/expression/call_exp.create.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.expression.CallExp.this', kind: "functiondeclaration", path: './dmd/expression/call_exp.this.html', attributes: []},
{name: 'dmd.expression.CastExp', kind: "classdeclaration", path: './dmd/expression/cast_exp.html', attributes: []},
{name: 'dmd.expression.CatAssignExp', kind: "classdeclaration", path: './dmd/expression/cat_assign_exp.html', attributes: []},
{name: 'dmd.expression.CatDcharAssignExp', kind: "classdeclaration", path: './dmd/expression/cat_dchar_assign_exp.html', attributes: []},
{name: 'dmd.expression.CatElemAssignExp', kind: "classdeclaration", path: './dmd/expression/cat_elem_assign_exp.html', attributes: []},
{name: 'dmd.expression.CatExp', kind: "classdeclaration", path: './dmd/expression/cat_exp.html', attributes: []},
{name: 'dmd.expression.CmpExp', kind: "classdeclaration", path: './dmd/expression/cmp_exp.html', attributes: []},
{name: 'dmd.expression.ComExp', kind: "classdeclaration", path: './dmd/expression/com_exp.html', attributes: []},
{name: 'dmd.expression.CommaExp', kind: "classdeclaration", path: './dmd/expression/comma_exp.html', attributes: []},
{name: 'dmd.expression.CommaExp.allow', kind: "functiondeclaration", path: './dmd/expression/comma_exp.allow.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.expression.CommaExp.allowCommaExp', kind: "variabledeclaration", path: './dmd/expression/comma_exp.allow_comma_exp.html', attributes: []},
{name: 'dmd.expression.CommaExp.isGenerated', kind: "variabledeclaration", path: './dmd/expression/comma_exp.is_generated.html', attributes: []},
{name: 'dmd.expression.CompileExp', kind: "classdeclaration", path: './dmd/expression/compile_exp.html', attributes: []},
{name: 'dmd.expression.ComplexExp', kind: "classdeclaration", path: './dmd/expression/complex_exp.html', attributes: []},
{name: 'dmd.expression.CondExp', kind: "classdeclaration", path: './dmd/expression/cond_exp.html', attributes: []},
{name: 'dmd.expression.ConstructExp', kind: "classdeclaration", path: './dmd/expression/construct_exp.html', attributes: []},
{name: 'dmd.expression.DeclarationExp', kind: "classdeclaration", path: './dmd/expression/declaration_exp.html', attributes: []},
{name: 'dmd.expression.DefaultInitExp', kind: "classdeclaration", path: './dmd/expression/default_init_exp.html', attributes: []},
{name: 'dmd.expression.DelegateExp', kind: "classdeclaration", path: './dmd/expression/delegate_exp.html', attributes: []},
{name: 'dmd.expression.DelegateFuncptrExp', kind: "classdeclaration", path: './dmd/expression/delegate_funcptr_exp.html', attributes: []},
{name: 'dmd.expression.DeleteExp', kind: "classdeclaration", path: './dmd/expression/delete_exp.html', attributes: []},
{name: 'dmd.expression.DivAssignExp', kind: "classdeclaration", path: './dmd/expression/div_assign_exp.html', attributes: []},
{name: 'dmd.expression.DivExp', kind: "classdeclaration", path: './dmd/expression/div_exp.html', attributes: []},
{name: 'dmd.expression.doCopyOrMove', kind: "functiondeclaration", path: './dmd/expression/do_copy_or_move.html', attributes: []},
{name: 'dmd.expression.DollarExp', kind: "classdeclaration", path: './dmd/expression/dollar_exp.html', attributes: []},
{name: 'dmd.expression.DotExp', kind: "classdeclaration", path: './dmd/expression/dot_exp.html', attributes: []},
{name: 'dmd.expression.DotIdExp', kind: "classdeclaration", path: './dmd/expression/dot_id_exp.html', attributes: []},
{name: 'dmd.expression.DotTemplateExp', kind: "classdeclaration", path: './dmd/expression/dot_template_exp.html', attributes: []},
{name: 'dmd.expression.DotTemplateInstanceExp', kind: "classdeclaration", path: './dmd/expression/dot_template_instance_exp.html', attributes: []},
{name: 'dmd.expression.DotTypeExp', kind: "classdeclaration", path: './dmd/expression/dot_type_exp.html', attributes: []},
{name: 'dmd.expression.DotVarExp', kind: "classdeclaration", path: './dmd/expression/dot_var_exp.html', attributes: []},
{name: 'dmd.expression.DsymbolExp', kind: "classdeclaration", path: './dmd/expression/dsymbol_exp.html', attributes: []},
{name: 'dmd.expression.EqualExp', kind: "classdeclaration", path: './dmd/expression/equal_exp.html', attributes: []},
{name: 'dmd.expression.ErrorExp', kind: "classdeclaration", path: './dmd/expression/error_exp.html', attributes: []},
{name: 'dmd.expression.expandTuples', kind: "functiondeclaration", path: './dmd/expression/expand_tuples.html', attributes: ["extern(C++)"]},
{name: 'dmd.expression.Expression', kind: "classdeclaration", path: './dmd/expression/expression.html', attributes: []},
{name: 'dmd.expression.expToVariable', kind: "functiondeclaration", path: './dmd/expression/exp_to_variable.html', attributes: []},
{name: 'dmd.expression.FileInitExp', kind: "classdeclaration", path: './dmd/expression/file_init_exp.html', attributes: []},
{name: 'dmd.expression.firstComma', kind: "functiondeclaration", path: './dmd/expression/first_comma.html', attributes: []},
{name: 'dmd.expression.FuncExp', kind: "classdeclaration", path: './dmd/expression/func_exp.html', attributes: []},
{name: 'dmd.expression.FuncInitExp', kind: "classdeclaration", path: './dmd/expression/func_init_exp.html', attributes: []},
{name: 'dmd.expression.getFuncTemplateDecl', kind: "functiondeclaration", path: './dmd/expression/get_func_template_decl.html', attributes: []},
{name: 'dmd.expression.HaltExp', kind: "classdeclaration", path: './dmd/expression/halt_exp.html', attributes: []},
{name: 'dmd.expression.hasThis', kind: "functiondeclaration", path: './dmd/expression/has_this.html', attributes: []},
{name: 'dmd.expression.IdentifierExp', kind: "classdeclaration", path: './dmd/expression/identifier_exp.html', attributes: []},
{name: 'dmd.expression.IdentityExp', kind: "classdeclaration", path: './dmd/expression/identity_exp.html', attributes: []},
{name: 'dmd.expression.ImportExp', kind: "classdeclaration", path: './dmd/expression/import_exp.html', attributes: []},
{name: 'dmd.expression.IndexExp', kind: "classdeclaration", path: './dmd/expression/index_exp.html', attributes: []},
{name: 'dmd.expression.InExp', kind: "classdeclaration", path: './dmd/expression/in_exp.html', attributes: []},
{name: 'dmd.expression.IntegerExp', kind: "classdeclaration", path: './dmd/expression/integer_exp.html', attributes: []},
{name: 'dmd.expression.IntegerExp.createBool', kind: "functiondeclaration", path: './dmd/expression/integer_exp.create_bool.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.expression.IntegerExp.literal', kind: "functiondeclaration", path: './dmd/expression/integer_exp.literal.html', attributes: ["extern(C++)"]},
{name: 'dmd.expression.IntervalExp', kind: "classdeclaration", path: './dmd/expression/interval_exp.html', attributes: []},
{name: 'dmd.expression.isAliasThisTuple', kind: "functiondeclaration", path: './dmd/expression/is_alias_this_tuple.html', attributes: []},
{name: 'dmd.expression.isDotOpDispatch', kind: "functiondeclaration", path: './dmd/expression/is_dot_op_dispatch.html', attributes: []},
{name: 'dmd.expression.IsExp', kind: "classdeclaration", path: './dmd/expression/is_exp.html', attributes: []},
{name: 'dmd.expression.isNeedThisScope', kind: "functiondeclaration", path: './dmd/expression/is_need_this_scope.html', attributes: []},
{name: 'dmd.expression.lastComma', kind: "functiondeclaration", path: './dmd/expression/last_comma.html', attributes: []},
{name: 'dmd.expression.LineInitExp', kind: "classdeclaration", path: './dmd/expression/line_init_exp.html', attributes: []},
{name: 'dmd.expression.LogicalExp', kind: "classdeclaration", path: './dmd/expression/logical_exp.html', attributes: []},
{name: 'dmd.expression.MinAssignExp', kind: "classdeclaration", path: './dmd/expression/min_assign_exp.html', attributes: []},
{name: 'dmd.expression.MinExp', kind: "classdeclaration", path: './dmd/expression/min_exp.html', attributes: []},
{name: 'dmd.expression.ModAssignExp', kind: "classdeclaration", path: './dmd/expression/mod_assign_exp.html', attributes: []},
{name: 'dmd.expression.ModExp', kind: "classdeclaration", path: './dmd/expression/mod_exp.html', attributes: []},
{name: 'dmd.expression.ModuleInitExp', kind: "classdeclaration", path: './dmd/expression/module_init_exp.html', attributes: []},
{name: 'dmd.expression.MulAssignExp', kind: "classdeclaration", path: './dmd/expression/mul_assign_exp.html', attributes: []},
{name: 'dmd.expression.MulExp', kind: "classdeclaration", path: './dmd/expression/mul_exp.html', attributes: []},
{name: 'dmd.expression.NegExp', kind: "classdeclaration", path: './dmd/expression/neg_exp.html', attributes: []},
{name: 'dmd.expression.NewAnonClassExp', kind: "classdeclaration", path: './dmd/expression/new_anon_class_exp.html', attributes: []},
{name: 'dmd.expression.NewExp', kind: "classdeclaration", path: './dmd/expression/new_exp.html', attributes: []},
{name: 'dmd.expression.NotExp', kind: "classdeclaration", path: './dmd/expression/not_exp.html', attributes: []},
{name: 'dmd.expression.NullExp', kind: "classdeclaration", path: './dmd/expression/null_exp.html', attributes: []},
{name: 'dmd.expression.ObjcClassReferenceExp', kind: "classdeclaration", path: './dmd/expression/objc_class_reference_exp.html', attributes: []},
{name: 'dmd.expression.OrAssignExp', kind: "classdeclaration", path: './dmd/expression/or_assign_exp.html', attributes: []},
{name: 'dmd.expression.OrExp', kind: "classdeclaration", path: './dmd/expression/or_exp.html', attributes: []},
{name: 'dmd.expression.OverExp', kind: "classdeclaration", path: './dmd/expression/over_exp.html', attributes: []},
{name: 'dmd.expression.PostExp', kind: "classdeclaration", path: './dmd/expression/post_exp.html', attributes: []},
{name: 'dmd.expression.PowAssignExp', kind: "classdeclaration", path: './dmd/expression/pow_assign_exp.html', attributes: []},
{name: 'dmd.expression.PowExp', kind: "classdeclaration", path: './dmd/expression/pow_exp.html', attributes: []},
{name: 'dmd.expression.PreExp', kind: "classdeclaration", path: './dmd/expression/pre_exp.html', attributes: []},
{name: 'dmd.expression.PrettyFuncInitExp', kind: "classdeclaration", path: './dmd/expression/pretty_func_init_exp.html', attributes: []},
{name: 'dmd.expression.PtrExp', kind: "classdeclaration", path: './dmd/expression/ptr_exp.html', attributes: []},
{name: 'dmd.expression.RealExp', kind: "classdeclaration", path: './dmd/expression/real_exp.html', attributes: []},
{name: 'dmd.expression.RealIdentical', kind: "functiondeclaration", path: './dmd/expression/real_identical.html', attributes: []},
{name: 'dmd.expression.RemoveExp', kind: "classdeclaration", path: './dmd/expression/remove_exp.html', attributes: []},
{name: 'dmd.expression.ScopeExp', kind: "classdeclaration", path: './dmd/expression/scope_exp.html', attributes: []},
{name: 'dmd.expression.ShlAssignExp', kind: "classdeclaration", path: './dmd/expression/shl_assign_exp.html', attributes: []},
{name: 'dmd.expression.ShlExp', kind: "classdeclaration", path: './dmd/expression/shl_exp.html', attributes: []},
{name: 'dmd.expression.ShrAssignExp', kind: "classdeclaration", path: './dmd/expression/shr_assign_exp.html', attributes: []},
{name: 'dmd.expression.ShrExp', kind: "classdeclaration", path: './dmd/expression/shr_exp.html', attributes: []},
{name: 'dmd.expression.SliceExp', kind: "classdeclaration", path: './dmd/expression/slice_exp.html', attributes: []},
{name: 'dmd.expression.SliceExp.this', kind: "functiondeclaration", path: './dmd/expression/slice_exp.this.html', attributes: []},
{name: 'dmd.expression.stageApply', kind: "enummemberdeclaration", path: './dmd/expression/stage_apply.html', attributes: []},
{name: 'dmd.expression.stageInlineScan', kind: "enummemberdeclaration", path: './dmd/expression/stage_inline_scan.html', attributes: []},
{name: 'dmd.expression.stageOptimize', kind: "enummemberdeclaration", path: './dmd/expression/stage_optimize.html', attributes: []},
{name: 'dmd.expression.stageScrub', kind: "enummemberdeclaration", path: './dmd/expression/stage_scrub.html', attributes: []},
{name: 'dmd.expression.stageSearchPointers', kind: "enummemberdeclaration", path: './dmd/expression/stage_search_pointers.html', attributes: []},
{name: 'dmd.expression.stageToCBuffer', kind: "enummemberdeclaration", path: './dmd/expression/stage_toc_buffer.html', attributes: []},
{name: 'dmd.expression.StringExp', kind: "classdeclaration", path: './dmd/expression/string_exp.html', attributes: []},
{name: 'dmd.expression.StringExp.borrowData', kind: "functiondeclaration", path: './dmd/expression/string_exp.borrow_data.html', attributes: []},
{name: 'dmd.expression.StringExp.compare', kind: "functiondeclaration", path: './dmd/expression/string_exp.compare.html', attributes: ["pure", "nothrow", "nogc", "extern(C++)", "const"]},
{name: 'dmd.expression.StringExp.getCodeUnit', kind: "functiondeclaration", path: './dmd/expression/string_exp.get_code_unit.html', attributes: ["pure", "extern(C++)", "const"]},
{name: 'dmd.expression.StringExp.numberOfCodeUnits', kind: "functiondeclaration", path: './dmd/expression/string_exp.number_of_code_units.html', attributes: ["extern(C++)", "const"]},
{name: 'dmd.expression.StringExp.peekData', kind: "functiondeclaration", path: './dmd/expression/string_exp.peek_data.html', attributes: ["const"]},
{name: 'dmd.expression.StringExp.setCodeUnit', kind: "functiondeclaration", path: './dmd/expression/string_exp.set_code_unit.html', attributes: ["extern(C++)"]},
{name: 'dmd.expression.StringExp.setData', kind: "functiondeclaration", path: './dmd/expression/string_exp.set_data.html', attributes: []},
{name: 'dmd.expression.StringExp.toStringz', kind: "functiondeclaration", path: './dmd/expression/string_exp.to_stringz.html', attributes: ["const"]},
{name: 'dmd.expression.StringExp.toUTF8', kind: "functiondeclaration", path: './dmd/expression/string_exp.to_ut_f8.html', attributes: ["extern(C++)"]},
{name: 'dmd.expression.StringExp.writeTo', kind: "functiondeclaration", path: './dmd/expression/string_exp.write_to.html', attributes: ["extern(C++)", "const"]},
{name: 'dmd.expression.StructLiteralExp', kind: "classdeclaration", path: './dmd/expression/struct_literal_exp.html', attributes: []},
{name: 'dmd.expression.StructLiteralExp.elements', kind: "variabledeclaration", path: './dmd/expression/struct_literal_exp.elements.html', attributes: []},
{name: 'dmd.expression.StructLiteralExp.getField', kind: "functiondeclaration", path: './dmd/expression/struct_literal_exp.get_field.html', attributes: ["extern(C++)"]},
{name: 'dmd.expression.StructLiteralExp.getFieldIndex', kind: "functiondeclaration", path: './dmd/expression/struct_literal_exp.get_field_index.html', attributes: ["extern(C++)"]},
{name: 'dmd.expression.StructLiteralExp.inlinecopy', kind: "variabledeclaration", path: './dmd/expression/struct_literal_exp.inlinecopy.html', attributes: []},
{name: 'dmd.expression.StructLiteralExp.isOriginal', kind: "variabledeclaration", path: './dmd/expression/struct_literal_exp.is_original.html', attributes: []},
{name: 'dmd.expression.StructLiteralExp.origin', kind: "variabledeclaration", path: './dmd/expression/struct_literal_exp.origin.html', attributes: []},
{name: 'dmd.expression.StructLiteralExp.sd', kind: "variabledeclaration", path: './dmd/expression/struct_literal_exp.sd.html', attributes: []},
{name: 'dmd.expression.StructLiteralExp.stageflags', kind: "variabledeclaration", path: './dmd/expression/struct_literal_exp.stageflags.html', attributes: []},
{name: 'dmd.expression.StructLiteralExp.stype', kind: "variabledeclaration", path: './dmd/expression/struct_literal_exp.stype.html', attributes: []},
{name: 'dmd.expression.StructLiteralExp.sym', kind: "variabledeclaration", path: './dmd/expression/struct_literal_exp.sym.html', attributes: []},
{name: 'dmd.expression.StructLiteralExp.useStaticInit', kind: "variabledeclaration", path: './dmd/expression/struct_literal_exp.use_static_init.html', attributes: []},
{name: 'dmd.expression.SuperExp', kind: "classdeclaration", path: './dmd/expression/super_exp.html', attributes: []},
{name: 'dmd.expression.SymbolExp', kind: "classdeclaration", path: './dmd/expression/symbol_exp.html', attributes: []},
{name: 'dmd.expression.SymOffExp', kind: "classdeclaration", path: './dmd/expression/sym_off_exp.html', attributes: []},
{name: 'dmd.expression.TemplateExp', kind: "classdeclaration", path: './dmd/expression/template_exp.html', attributes: []},
{name: 'dmd.expression.ThisExp', kind: "classdeclaration", path: './dmd/expression/this_exp.html', attributes: []},
{name: 'dmd.expression.TraitsExp', kind: "classdeclaration", path: './dmd/expression/traits_exp.html', attributes: []},
{name: 'dmd.expression.TupleExp', kind: "classdeclaration", path: './dmd/expression/tuple_exp.html', attributes: []},
{name: 'dmd.expression.typeDotIdExp', kind: "functiondeclaration", path: './dmd/expression/type_dot_id_exp.html', attributes: []},
{name: 'dmd.expression.TypeExp', kind: "classdeclaration", path: './dmd/expression/type_exp.html', attributes: []},
{name: 'dmd.expression.TypeidExp', kind: "classdeclaration", path: './dmd/expression/typeid_exp.html', attributes: []},
{name: 'dmd.expression.UAddExp', kind: "classdeclaration", path: './dmd/expression/u_add_exp.html', attributes: []},
{name: 'dmd.expression.UnaExp', kind: "classdeclaration", path: './dmd/expression/una_exp.html', attributes: []},
{name: 'dmd.expression.UnionExp', kind: "structdeclaration", path: './dmd/expression/union_exp.html', attributes: []},
{name: 'dmd.expression.UshrAssignExp', kind: "classdeclaration", path: './dmd/expression/ushr_assign_exp.html', attributes: []},
{name: 'dmd.expression.UshrExp', kind: "classdeclaration", path: './dmd/expression/ushr_exp.html', attributes: []},
{name: 'dmd.expression.valueNoDtor', kind: "functiondeclaration", path: './dmd/expression/value_no_dtor.html', attributes: []},
{name: 'dmd.expression.VarExp', kind: "classdeclaration", path: './dmd/expression/var_exp.html', attributes: []},
{name: 'dmd.expression.VectorArrayExp', kind: "classdeclaration", path: './dmd/expression/vector_array_exp.html', attributes: []},
{name: 'dmd.expression.VectorExp', kind: "classdeclaration", path: './dmd/expression/vector_exp.html', attributes: []},
{name: 'dmd.expression.VoidInitExp', kind: "classdeclaration", path: './dmd/expression/void_init_exp.html', attributes: []},
{name: 'dmd.expression.VoidInitExp.this', kind: "functiondeclaration", path: './dmd/expression/void_init_exp.this.html', attributes: []},
{name: 'dmd.expression.VoidInitExp.var', kind: "variabledeclaration", path: './dmd/expression/void_init_exp.var.html', attributes: []},
{name: 'dmd.expression.XorAssignExp', kind: "classdeclaration", path: './dmd/expression/xor_assign_exp.html', attributes: []},
{name: 'dmd.expression.XorExp', kind: "classdeclaration", path: './dmd/expression/xor_exp.html', attributes: []},
{name: 'dmd.expressionsem', kind: "module", path: './dmd/expressionsem.html', attributes: []},
{name: 'dmd.expressionsem.arrayExpressionSemantic', kind: "functiondeclaration", path: './dmd/expressionsem/array_expression_semantic.html', attributes: []},
{name: 'dmd.expressionsem.binSemantic', kind: "functiondeclaration", path: './dmd/expressionsem/bin_semantic.html', attributes: []},
{name: 'dmd.expressionsem.checkAddressVar', kind: "functiondeclaration", path: './dmd/expressionsem/check_address_var.html', attributes: []},
{name: 'dmd.expressionsem.checkSharedAccess', kind: "functiondeclaration", path: './dmd/expressionsem/check_shared_access.html', attributes: []},
{name: 'dmd.expressionsem.expressionsToString', kind: "functiondeclaration", path: './dmd/expressionsem/expressions_to_string.html', attributes: []},
{name: 'dmd.expressionsem.getThisSkipNestedFuncs', kind: "functiondeclaration", path: './dmd/expressionsem/get_this_skip_nested_funcs.html', attributes: []},
{name: 'dmd.expressionsem.makeThis2Argument', kind: "functiondeclaration", path: './dmd/expressionsem/make_this2_argument.html', attributes: []},
{name: 'dmd.expressionsem.resolveIsPackage', kind: "functiondeclaration", path: './dmd/expressionsem/resolve_is_package.html', attributes: []},
{name: 'dmd.expressionsem.resolveOpDollar', kind: "functiondeclaration", path: './dmd/expressionsem/resolve_op_dollar.html', attributes: []},
{name: 'dmd.expressionsem.resolvePropertiesOnly', kind: "functiondeclaration", path: './dmd/expressionsem/resolve_properties_only.html', attributes: []},
{name: 'dmd.expressionsem.semanticString', kind: "functiondeclaration", path: './dmd/expressionsem/semantic_string.html', attributes: []},
{name: 'dmd.expressionsem.symbolToExp', kind: "functiondeclaration", path: './dmd/expressionsem/symbol_to_exp.html', attributes: []},
{name: 'dmd.expressionsem.trySemantic', kind: "functiondeclaration", path: './dmd/expressionsem/try_semantic.html', attributes: []},
{name: 'dmd.expressionsem.unaSemantic', kind: "functiondeclaration", path: './dmd/expressionsem/una_semantic.html', attributes: []},
{name: 'dmd.expressionsem.verifyHookExist', kind: "functiondeclaration", path: './dmd/expressionsem/verify_hook_exist.html', attributes: []},
{name: 'dmd.filecache', kind: "module", path: './dmd/filecache.html', attributes: []},
{name: 'dmd.filecache.FileAndLines', kind: "classdeclaration", path: './dmd/filecache/file_and_lines.html', attributes: []},
{name: 'dmd.filecache.FileAndLines.this', kind: "functiondeclaration", path: './dmd/filecache/file_and_lines.this.html', attributes: []},
{name: 'dmd.filecache.FileCache', kind: "structdeclaration", path: './dmd/filecache/file_cache.html', attributes: []},
{name: 'dmd.filecache.FileCache.addOrGetFile', kind: "functiondeclaration", path: './dmd/filecache/file_cache.add_or_get_file.html', attributes: []},
{name: 'dmd.foreachvar', kind: "module", path: './dmd/foreachvar.html', attributes: []},
{name: 'dmd.foreachvar.foreachExpAndVar', kind: "functiondeclaration", path: './dmd/foreachvar/foreach_exp_and_var.html', attributes: []},
{name: 'dmd.foreachvar.foreachVar', kind: "functiondeclaration", path: './dmd/foreachvar/foreach_var.html', attributes: []},
{name: 'dmd.frontend', kind: "module", path: './dmd/frontend.html', attributes: []},
{name: 'dmd.frontend.addImport', kind: "functiondeclaration", path: './dmd/frontend/add_import.html', attributes: []},
{name: 'dmd.frontend.addStringImport', kind: "functiondeclaration", path: './dmd/frontend/add_string_import.html', attributes: []},
{name: 'dmd.frontend.ContractChecking', kind: "enumdeclaration", path: './dmd/frontend/contract_checking.html', attributes: []},
{name: 'dmd.frontend.ContractChecking.default_', kind: "enummemberdeclaration", path: './dmd/frontend/contract_checking.html#default_', attributes: []},
{name: 'dmd.frontend.ContractChecking.disabled', kind: "enummemberdeclaration", path: './dmd/frontend/contract_checking.html#disabled', attributes: []},
{name: 'dmd.frontend.ContractChecking.enabled', kind: "enummemberdeclaration", path: './dmd/frontend/contract_checking.html#enabled', attributes: []},
{name: 'dmd.frontend.ContractChecking.enabledInSafe', kind: "enummemberdeclaration", path: './dmd/frontend/contract_checking.html#enabledInSafe', attributes: []},
{name: 'dmd.frontend.ContractChecks', kind: "structdeclaration", path: './dmd/frontend/contract_checks.html', attributes: []},
{name: 'dmd.frontend.ContractChecks.arrayBounds', kind: "variabledeclaration", path: './dmd/frontend/contract_checks.array_bounds.html', attributes: []},
{name: 'dmd.frontend.ContractChecks.assert_', kind: "variabledeclaration", path: './dmd/frontend/contract_checks.assert_.html', attributes: []},
{name: 'dmd.frontend.ContractChecks.invariant_', kind: "variabledeclaration", path: './dmd/frontend/contract_checks.invariant_.html', attributes: []},
{name: 'dmd.frontend.ContractChecks.postcondition', kind: "variabledeclaration", path: './dmd/frontend/contract_checks.postcondition.html', attributes: []},
{name: 'dmd.frontend.ContractChecks.precondition', kind: "variabledeclaration", path: './dmd/frontend/contract_checks.precondition.html', attributes: []},
{name: 'dmd.frontend.ContractChecks.switchError', kind: "variabledeclaration", path: './dmd/frontend/contract_checks.switch_error.html', attributes: []},
{name: 'dmd.frontend.deinitializeDMD', kind: "functiondeclaration", path: './dmd/frontend/deinitialize_dmd.html', attributes: []},
{name: 'dmd.frontend.determineDefaultCompiler', kind: "functiondeclaration", path: './dmd/frontend/determine_default_compiler.html', attributes: []},
{name: 'dmd.frontend.DiagnosticReporter', kind: "classdeclaration", path: './dmd/frontend/diagnostic_reporter.html', attributes: []},
{name: 'dmd.frontend.DiagnosticReporter.deprecation', kind: "functiondeclaration", path: './dmd/frontend/diagnostic_reporter.deprecation.html', attributes: ["abstract"]},
{name: 'dmd.frontend.DiagnosticReporter.deprecationCount', kind: "functiondeclaration", path: './dmd/frontend/diagnostic_reporter.deprecation_count.html', attributes: ["abstract"]},
{name: 'dmd.frontend.DiagnosticReporter.deprecationSupplemental', kind: "functiondeclaration", path: './dmd/frontend/diagnostic_reporter.deprecation_supplemental.html', attributes: ["abstract"]},
{name: 'dmd.frontend.DiagnosticReporter.error', kind: "functiondeclaration", path: './dmd/frontend/diagnostic_reporter.error.html', attributes: ["abstract"]},
{name: 'dmd.frontend.DiagnosticReporter.errorCount', kind: "functiondeclaration", path: './dmd/frontend/diagnostic_reporter.error_count.html', attributes: ["abstract"]},
{name: 'dmd.frontend.DiagnosticReporter.errorSupplemental', kind: "functiondeclaration", path: './dmd/frontend/diagnostic_reporter.error_supplemental.html', attributes: ["abstract"]},
{name: 'dmd.frontend.DiagnosticReporter.warning', kind: "functiondeclaration", path: './dmd/frontend/diagnostic_reporter.warning.html', attributes: ["abstract"]},
{name: 'dmd.frontend.DiagnosticReporter.warningCount', kind: "functiondeclaration", path: './dmd/frontend/diagnostic_reporter.warning_count.html', attributes: ["abstract"]},
{name: 'dmd.frontend.DiagnosticReporter.warningSupplemental', kind: "functiondeclaration", path: './dmd/frontend/diagnostic_reporter.warning_supplemental.html', attributes: ["abstract"]},
{name: 'dmd.frontend.Diagnostics', kind: "structdeclaration", path: './dmd/frontend/diagnostics.html', attributes: []},
{name: 'dmd.frontend.Diagnostics.errors', kind: "variabledeclaration", path: './dmd/frontend/diagnostics.errors.html', attributes: []},
{name: 'dmd.frontend.Diagnostics.hasErrors', kind: "functiondeclaration", path: './dmd/frontend/diagnostics.has_errors.html', attributes: ["immutable"]},
{name: 'dmd.frontend.Diagnostics.hasWarnings', kind: "functiondeclaration", path: './dmd/frontend/diagnostics.has_warnings.html', attributes: ["immutable"]},
{name: 'dmd.frontend.Diagnostics.warnings', kind: "variabledeclaration", path: './dmd/frontend/diagnostics.warnings.html', attributes: []},
{name: 'dmd.frontend.findDMDConfig', kind: "functiondeclaration", path: './dmd/frontend/find_dmd_config.html', attributes: []},
{name: 'dmd.frontend.findImportPaths', kind: "functiondeclaration", path: './dmd/frontend/find_import_paths.html', attributes: ["auto"]},
{name: 'dmd.frontend.findLDCConfig', kind: "functiondeclaration", path: './dmd/frontend/find_ldc_config.html', attributes: []},
{name: 'dmd.frontend.fullSemantic', kind: "functiondeclaration", path: './dmd/frontend/full_semantic.html', attributes: []},
{name: 'dmd.frontend.parseImportPathsFromConfig', kind: "functiondeclaration", path: './dmd/frontend/parse_import_paths_from_config.html', attributes: ["auto"]},
{name: 'dmd.frontend.parseModule', kind: "functiondeclaration", path: './dmd/frontend/parse_module.html', attributes: []},
{name: 'dmd.frontend.prettyPrint', kind: "functiondeclaration", path: './dmd/frontend/pretty_print.html', attributes: []},
{name: 'dmd.frontend.StderrDiagnosticReporter', kind: "classdeclaration", path: './dmd/frontend/stderr_diagnostic_reporter.html', attributes: []},
{name: 'dmd.frontend.StderrDiagnosticReporter.this', kind: "functiondeclaration", path: './dmd/frontend/stderr_diagnostic_reporter.this.html', attributes: []},
{name: 'dmd.func', kind: "module", path: './dmd/func.html', attributes: []},
{name: 'dmd.func.addInvariant', kind: "functiondeclaration", path: './dmd/func/add_invariant.html', attributes: []},
{name: 'dmd.func.CtorDeclaration', kind: "classdeclaration", path: './dmd/func/ctor_declaration.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.buildEnsureRequire', kind: "functiondeclaration", path: './dmd/func/func_declaration.build_ensure_require.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.buildResultVar', kind: "functiondeclaration", path: './dmd/func/func_declaration.build_result_var.html', attributes: ["final"]},
{name: 'dmd.func.FuncDeclaration.builtin', kind: "variabledeclaration", path: './dmd/func/func_declaration.builtin.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.canInferAttributes', kind: "functiondeclaration", path: './dmd/func/func_declaration.can_infer_attributes.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.checkClosure', kind: "functiondeclaration", path: './dmd/func/func_declaration.check_closure.html', attributes: ["final"]},
{name: 'dmd.func.FuncDeclaration.checkDmain', kind: "functiondeclaration", path: './dmd/func/func_declaration.check_dmain.html', attributes: ["final"]},
{name: 'dmd.func.FuncDeclaration.checkForwardRef', kind: "functiondeclaration", path: './dmd/func/func_declaration.check_forward_ref.html', attributes: ["final"]},
{name: 'dmd.func.FuncDeclaration.checkNestedReference', kind: "functiondeclaration", path: './dmd/func/func_declaration.check_nested_reference.html', attributes: ["final"]},
{name: 'dmd.func.FuncDeclaration.checkNrvo', kind: "functiondeclaration", path: './dmd/func/func_declaration.check_nrvo.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.closureVars', kind: "variabledeclaration", path: './dmd/func/func_declaration.closure_vars.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.declareThis', kind: "functiondeclaration", path: './dmd/func/func_declaration.declare_this.html', attributes: ["final"]},
{name: 'dmd.func.FuncDeclaration.eh_none', kind: "variabledeclaration", path: './dmd/func/func_declaration.eh_none.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.endloc', kind: "variabledeclaration", path: './dmd/func/func_declaration.endloc.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.fbody', kind: "variabledeclaration", path: './dmd/func/func_declaration.fbody.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.fdensure', kind: "variabledeclaration", path: './dmd/func/func_declaration.fdensure.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.fdensureParams', kind: "variabledeclaration", path: './dmd/func/func_declaration.fdensure_params.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.fdrequire', kind: "variabledeclaration", path: './dmd/func/func_declaration.fdrequire.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.fdrequireParams', kind: "variabledeclaration", path: './dmd/func/func_declaration.fdrequire_params.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.fensure', kind: "variabledeclaration", path: './dmd/func/func_declaration.fensure.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.fensures', kind: "variabledeclaration", path: './dmd/func/func_declaration.fensures.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.fes', kind: "variabledeclaration", path: './dmd/func/func_declaration.fes.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.findTemplateDeclRoot', kind: "functiondeclaration", path: './dmd/func/func_declaration.find_template_decl_root.html', attributes: ["final"]},
{name: 'dmd.func.FuncDeclaration.findVtblIndex', kind: "functiondeclaration", path: './dmd/func/func_declaration.find_vtbl_index.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.flags', kind: "variabledeclaration", path: './dmd/func/func_declaration.flags.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.foverrides', kind: "variabledeclaration", path: './dmd/func/func_declaration.foverrides.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.frequire', kind: "variabledeclaration", path: './dmd/func/func_declaration.frequire.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.frequires', kind: "variabledeclaration", path: './dmd/func/func_declaration.frequires.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.functionSemantic', kind: "functiondeclaration", path: './dmd/func/func_declaration.function_semantic.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.functionSemantic3', kind: "functiondeclaration", path: './dmd/func/func_declaration.function_semantic3.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.genCfunc', kind: "functiondeclaration", path: './dmd/func/func_declaration.gen_cfunc.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.generated', kind: "variabledeclaration", path: './dmd/func/func_declaration.generated.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.getLevel', kind: "functiondeclaration", path: './dmd/func/func_declaration.get_level.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.getLevelAndCheck', kind: "functiondeclaration", path: './dmd/func/func_declaration.get_level_and_check.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.getParameterList', kind: "functiondeclaration", path: './dmd/func/func_declaration.get_parameter_list.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.gotos', kind: "variabledeclaration", path: './dmd/func/func_declaration.gotos.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.hasNestedFrameRefs', kind: "functiondeclaration", path: './dmd/func/func_declaration.has_nested_frame_refs.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.hasReturnExp', kind: "variabledeclaration", path: './dmd/func/func_declaration.has_return_exp.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.inferRetType', kind: "variabledeclaration", path: './dmd/func/func_declaration.infer_ret_type.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.initInferAttributes', kind: "functiondeclaration", path: './dmd/func/func_declaration.init_infer_attributes.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.inlineNest', kind: "variabledeclaration", path: './dmd/func/func_declaration.inline_nest.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.inlineStatusStmt', kind: "variabledeclaration", path: './dmd/func/func_declaration.inline_status_stmt.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.interfaceVirtual', kind: "variabledeclaration", path: './dmd/func/func_declaration.interface_virtual.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.introducing', kind: "variabledeclaration", path: './dmd/func/func_declaration.introducing.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.inUnittest', kind: "functiondeclaration", path: './dmd/func/func_declaration.in_unittest.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.isAbstract', kind: "functiondeclaration", path: './dmd/func/func_declaration.is_abstract.html', attributes: ["final", "override", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.isArrayOp', kind: "variabledeclaration", path: './dmd/func/func_declaration.is_array_op.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.isCrtCtorDtor', kind: "variabledeclaration", path: './dmd/func/func_declaration.is_crt_ctor_dtor.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.isNested', kind: "functiondeclaration", path: './dmd/func/func_declaration.is_nested.html', attributes: ["extern(C++)", "const"]},
{name: 'dmd.func.FuncDeclaration.isReturnIsolated', kind: "functiondeclaration", path: './dmd/func/func_declaration.is_return_isolated.html', attributes: ["final"]},
{name: 'dmd.func.FuncDeclaration.isThis', kind: "functiondeclaration", path: './dmd/func/func_declaration.is_this.html', attributes: ["override", "extern(C++)", "inout"]},
{name: 'dmd.func.FuncDeclaration.isThis2', kind: "variabledeclaration", path: './dmd/func/func_declaration.is_this2.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.isTypeIsolated', kind: "functiondeclaration", path: './dmd/func/func_declaration.is_type_isolated.html', attributes: ["final"]},
{name: 'dmd.func.FuncDeclaration.isUnique', kind: "functiondeclaration", path: './dmd/func/func_declaration.is_unique.html', attributes: ["final", "extern(C++)", "const"]},
{name: 'dmd.func.FuncDeclaration.labtab', kind: "variabledeclaration", path: './dmd/func/func_declaration.labtab.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.leastAsSpecialized', kind: "functiondeclaration", path: './dmd/func/func_declaration.least_as_specialized.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.mangleString', kind: "variabledeclaration", path: './dmd/func/func_declaration.mangle_string.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.mergeFensure', kind: "functiondeclaration", path: './dmd/func/func_declaration.merge_fensure.html', attributes: ["final"]},
{name: 'dmd.func.FuncDeclaration.mergeFrequire', kind: "functiondeclaration", path: './dmd/func/func_declaration.merge_frequire.html', attributes: ["final"]},
{name: 'dmd.func.FuncDeclaration.naked', kind: "variabledeclaration", path: './dmd/func/func_declaration.naked.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.needsClosure', kind: "functiondeclaration", path: './dmd/func/func_declaration.needs_closure.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.needsFensure', kind: "functiondeclaration", path: './dmd/func/func_declaration.needs_fensure.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.nrvo_can', kind: "variabledeclaration", path: './dmd/func/func_declaration.nrvo_can.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.nrvo_var', kind: "variabledeclaration", path: './dmd/func/func_declaration.nrvo_var.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.outerVars', kind: "variabledeclaration", path: './dmd/func/func_declaration.outer_vars.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.overloadExactMatch', kind: "functiondeclaration", path: './dmd/func/func_declaration.overload_exact_match.html', attributes: ["final"]},
{name: 'dmd.func.FuncDeclaration.overloadInsert', kind: "functiondeclaration", path: './dmd/func/func_declaration.overload_insert.html', attributes: ["override", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.overloadModMatch', kind: "functiondeclaration", path: './dmd/func/func_declaration.overload_mod_match.html', attributes: ["final"]},
{name: 'dmd.func.FuncDeclaration.overnext', kind: "variabledeclaration", path: './dmd/func/func_declaration.overnext.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.overnext0', kind: "variabledeclaration", path: './dmd/func/func_declaration.overnext0.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.overrideInterface', kind: "functiondeclaration", path: './dmd/func/func_declaration.override_interface.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.overrides', kind: "functiondeclaration", path: './dmd/func/func_declaration.overrides.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.parameters', kind: "variabledeclaration", path: './dmd/func/func_declaration.parameters.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.returnLabel', kind: "variabledeclaration", path: './dmd/func/func_declaration.return_label.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.searchLabel', kind: "functiondeclaration", path: './dmd/func/func_declaration.search_label.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.selector', kind: "variabledeclaration", path: './dmd/func/func_declaration.selector.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.selectorParameter', kind: "variabledeclaration", path: './dmd/func/func_declaration.selector_parameter.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.semantic3Errors', kind: "variabledeclaration", path: './dmd/func/func_declaration.semantic3_errors.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.setGC', kind: "functiondeclaration", path: './dmd/func/func_declaration.set_gc.html', attributes: ["final"]},
{name: 'dmd.func.FuncDeclaration.setImpure', kind: "functiondeclaration", path: './dmd/func/func_declaration.set_impure.html', attributes: ["final"]},
{name: 'dmd.func.FuncDeclaration.setUnsafe', kind: "functiondeclaration", path: './dmd/func/func_declaration.set_unsafe.html', attributes: ["final"]},
{name: 'dmd.func.FuncDeclaration.shidden', kind: "variabledeclaration", path: './dmd/func/func_declaration.shidden.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.siblingCallers', kind: "variabledeclaration", path: './dmd/func/func_declaration.sibling_callers.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.storage_class2', kind: "variabledeclaration", path: './dmd/func/func_declaration.storage_class2.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.tintro', kind: "variabledeclaration", path: './dmd/func/func_declaration.tintro.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.toFullSignature', kind: "functiondeclaration", path: './dmd/func/func_declaration.to_full_signature.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.func.FuncDeclaration.tookAddressOf', kind: "variabledeclaration", path: './dmd/func/func_declaration.took_address_of.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.v_argptr', kind: "variabledeclaration", path: './dmd/func/func_declaration.v_argptr.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.v_arguments', kind: "variabledeclaration", path: './dmd/func/func_declaration.v_arguments.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.vresult', kind: "variabledeclaration", path: './dmd/func/func_declaration.vresult.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.vtblIndex', kind: "variabledeclaration", path: './dmd/func/func_declaration.vtbl_index.html', attributes: []},
{name: 'dmd.func.FuncDeclaration.vthis', kind: "variabledeclaration", path: './dmd/func/func_declaration.vthis.html', attributes: []},
{name: 'dmd.func.DtorDeclaration', kind: "classdeclaration", path: './dmd/func/dtor_declaration.html', attributes: []},
{name: 'dmd.func.Ensure', kind: "structdeclaration", path: './dmd/func/ensure.html', attributes: []},
{name: 'dmd.func.Ensure.arraySyntaxCopy', kind: "functiondeclaration", path: './dmd/func/ensure.array_syntax_copy.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.func.FuncAliasDeclaration', kind: "classdeclaration", path: './dmd/func/func_alias_declaration.html', attributes: []},
{name: 'dmd.func.FuncDeclaration', kind: "classdeclaration", path: './dmd/func/func_declaration.html', attributes: []},
{name: 'dmd.func.FuncLiteralDeclaration', kind: "classdeclaration", path: './dmd/func/func_literal_declaration.html', attributes: []},
{name: 'dmd.func.FuncLiteralDeclaration.modifyReturns', kind: "functiondeclaration", path: './dmd/func/func_literal_declaration.modify_returns.html', attributes: ["extern(C++)"]},
{name: 'dmd.func.FuncResolveFlag', kind: "enumdeclaration", path: './dmd/func/func_resolve_flag.html', attributes: []},
{name: 'dmd.func.FuncResolveFlag.overloadOnly', kind: "enummemberdeclaration", path: './dmd/func/func_resolve_flag.html#overloadOnly', attributes: []},
{name: 'dmd.func.FuncResolveFlag.quiet', kind: "enummemberdeclaration", path: './dmd/func/func_resolve_flag.html#quiet', attributes: []},
{name: 'dmd.func.FuncResolveFlag.standard', kind: "enummemberdeclaration", path: './dmd/func/func_resolve_flag.html#standard', attributes: []},
{name: 'dmd.func.getIndirection', kind: "functiondeclaration", path: './dmd/func/get_indirection.html', attributes: []},
{name: 'dmd.func.ILS', kind: "enumdeclaration", path: './dmd/func/ils.html', attributes: []},
{name: 'dmd.func.ILS.no', kind: "enummemberdeclaration", path: './dmd/func/ils.html#no', attributes: []},
{name: 'dmd.func.ILS.uninitialized', kind: "enummemberdeclaration", path: './dmd/func/ils.html#uninitialized', attributes: []},
{name: 'dmd.func.ILS.yes', kind: "enummemberdeclaration", path: './dmd/func/ils.html#yes', attributes: []},
{name: 'dmd.func.InvariantDeclaration', kind: "classdeclaration", path: './dmd/func/invariant_declaration.html', attributes: []},
{name: 'dmd.func.MODMatchToBuffer', kind: "functiondeclaration", path: './dmd/func/mod_match_to_buffer.html', attributes: ["auto"]},
{name: 'dmd.func.NewDeclaration', kind: "classdeclaration", path: './dmd/func/new_declaration.html', attributes: []},
{name: 'dmd.func.overloadApply', kind: "functiondeclaration", path: './dmd/func/overload_apply.html', attributes: []},
{name: 'dmd.func.PostBlitDeclaration', kind: "classdeclaration", path: './dmd/func/post_blit_declaration.html', attributes: []},
{name: 'dmd.func.resolveFuncCall', kind: "functiondeclaration", path: './dmd/func/resolve_func_call.html', attributes: []},
{name: 'dmd.func.SharedStaticCtorDeclaration', kind: "classdeclaration", path: './dmd/func/shared_static_ctor_declaration.html', attributes: []},
{name: 'dmd.func.SharedStaticDtorDeclaration', kind: "classdeclaration", path: './dmd/func/shared_static_dtor_declaration.html', attributes: []},
{name: 'dmd.func.StaticCtorDeclaration', kind: "classdeclaration", path: './dmd/func/static_ctor_declaration.html', attributes: []},
{name: 'dmd.func.StaticDtorDeclaration', kind: "classdeclaration", path: './dmd/func/static_dtor_declaration.html', attributes: []},
{name: 'dmd.func.UnitTestDeclaration', kind: "classdeclaration", path: './dmd/func/unit_test_declaration.html', attributes: []},
{name: 'dmd.globals', kind: "module", path: './dmd/globals.html', attributes: []},
{name: 'dmd.globals.JsonFieldFlags', kind: "enumdeclaration", path: './dmd/globals/json_field_flags.html', attributes: []},
{name: 'dmd.glue', kind: "module", path: './dmd/glue.html', attributes: []},
{name: 'dmd.glue.bzeroSymbol', kind: "variabledeclaration", path: './dmd/glue/bzero_symbol.html', attributes: []},
{name: 'dmd.glue.genObjFile', kind: "functiondeclaration", path: './dmd/glue/gen_obj_file.html', attributes: ["extern(C++)"]},
{name: 'dmd.glue.getBzeroSymbol', kind: "functiondeclaration", path: './dmd/glue/get_bzero_symbol.html', attributes: ["extern(C++)"]},
{name: 'dmd.glue.obj_symbols_towrite', kind: "variabledeclaration", path: './dmd/glue/obj_symbols_towrite.html', attributes: []},
{name: 'dmd.glue.objbuf', kind: "variabledeclaration", path: './dmd/glue/objbuf.html', attributes: []},
{name: 'dmd.glue.toSymbol', kind: "functiondeclaration", path: './dmd/glue/to_symbol.html', attributes: ["extern(C++)"]},
{name: 'dmd.glue.totym', kind: "functiondeclaration", path: './dmd/glue/totym.html', attributes: ["extern(C++)"]},
{name: 'dmd.gluelayer', kind: "module", path: './dmd/gluelayer.html', attributes: []},
{name: 'dmd.hdrgen', kind: "module", path: './dmd/hdrgen.html', attributes: []},
{name: 'dmd.hdrgen.argExpTypesToCBuffer', kind: "functiondeclaration", path: './dmd/hdrgen/arg_exp_types_toc_buffer.html', attributes: []},
{name: 'dmd.hdrgen.moduleToBuffer', kind: "functiondeclaration", path: './dmd/hdrgen/module_to_buffer.html', attributes: ["extern(C++)"]},
{name: 'dmd.hdrgen.parametersTypeToChars', kind: "functiondeclaration", path: './dmd/hdrgen/parameters_type_to_chars.html', attributes: ["extern(C++)"]},
{name: 'dmd.hdrgen.parameterToChars', kind: "functiondeclaration", path: './dmd/hdrgen/parameter_to_chars.html', attributes: []},
{name: 'dmd.hdrgen.protectionToChars', kind: "functiondeclaration", path: './dmd/hdrgen/protection_to_chars.html', attributes: []},
{name: 'dmd.hdrgen.protectionToString', kind: "functiondeclaration", path: './dmd/hdrgen/protection_to_string.html', attributes: ["pure"]},
{name: 'dmd.hdrgen.stcToString', kind: "functiondeclaration", path: './dmd/hdrgen/stc_to_string.html', attributes: []},
{name: 'dmd.hdrgen.trustToString', kind: "functiondeclaration", path: './dmd/hdrgen/trust_to_string.html', attributes: ["pure"]},
{name: 'dmd.iasm', kind: "module", path: './dmd/iasm.html', attributes: []},
{name: 'dmd.iasm.asmSemantic', kind: "functiondeclaration", path: './dmd/iasm/asm_semantic.html', attributes: ["extern(C++)"]},
{name: 'dmd.iasmdmd', kind: "module", path: './dmd/iasmdmd.html', attributes: []},
{name: 'dmd.iasmdmd.iasm_regs', kind: "functiondeclaration", path: './dmd/iasmdmd/iasm_regs.html', attributes: ["extern(C++)"]},
{name: 'dmd.iasmdmd.inlineAsmSemantic', kind: "functiondeclaration", path: './dmd/iasmdmd/inline_asm_semantic.html', attributes: []},
{name: 'dmd.iasmgcc', kind: "module", path: './dmd/iasmgcc.html', attributes: []},
{name: 'dmd.iasmgcc.gccAsmSemantic', kind: "functiondeclaration", path: './dmd/iasmgcc/gcc_asm_semantic.html', attributes: []},
{name: 'dmd.id', kind: "module", path: './dmd/id.html', attributes: []},
{name: 'dmd.id.Id', kind: "structdeclaration", path: './dmd/id/id.html', attributes: []},
{name: 'dmd.id.Id.deinitialize', kind: "functiondeclaration", path: './dmd/id/id.deinitialize.html', attributes: ["static", "__gshared"]},
{name: 'dmd.id.Id.initialize', kind: "functiondeclaration", path: './dmd/id/id.initialize.html', attributes: ["static", "__gshared", "extern(C++)"]},
{name: 'dmd.identifier', kind: "module", path: './dmd/identifier.html', attributes: []},
{name: 'dmd.identifier.Identifier', kind: "classdeclaration", path: './dmd/identifier/identifier.html', attributes: []},
{name: 'dmd.identifier.Identifier.anonymous', kind: "functiondeclaration", path: './dmd/identifier/identifier.anonymous.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.identifier.Identifier.generateIdWithLoc', kind: "functiondeclaration", path: './dmd/identifier/identifier.generate_id_with_loc.html', attributes: ["static"]},
{name: 'dmd.identifier.Identifier.idPool', kind: "functiondeclaration", path: './dmd/identifier/identifier.id_pool.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.identifier.Identifier.isValidIdentifier', kind: "functiondeclaration", path: './dmd/identifier/identifier.is_valid_identifier.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.identifier.Identifier.this', kind: "functiondeclaration", path: './dmd/identifier/identifier.this.html', attributes: []},
{name: 'dmd.impcnvtab', kind: "module", path: './dmd/impcnvtab.html', attributes: []},
{name: 'dmd.imphint', kind: "module", path: './dmd/imphint.html', attributes: []},
{name: 'dmd.imphint.importHint', kind: "functiondeclaration", path: './dmd/imphint/import_hint.html', attributes: []},
{name: 'dmd.init', kind: "module", path: './dmd/init.html', attributes: []},
{name: 'dmd.init.ArrayInitializer', kind: "classdeclaration", path: './dmd/init/array_initializer.html', attributes: []},
{name: 'dmd.init.ErrorInitializer', kind: "classdeclaration", path: './dmd/init/error_initializer.html', attributes: []},
{name: 'dmd.init.ExpInitializer', kind: "classdeclaration", path: './dmd/init/exp_initializer.html', attributes: []},
{name: 'dmd.init.Initializer', kind: "classdeclaration", path: './dmd/init/initializer.html', attributes: []},
{name: 'dmd.init.InitKind', kind: "enumdeclaration", path: './dmd/init/init_kind.html', attributes: []},
{name: 'dmd.init.StructInitializer', kind: "classdeclaration", path: './dmd/init/struct_initializer.html', attributes: []},
{name: 'dmd.init.syntaxCopy', kind: "functiondeclaration", path: './dmd/init/syntax_copy.html', attributes: []},
{name: 'dmd.init.VoidInitializer', kind: "classdeclaration", path: './dmd/init/void_initializer.html', attributes: []},
{name: 'dmd.initsem', kind: "module", path: './dmd/initsem.html', attributes: []},
{name: 'dmd.initsem.inferType', kind: "functiondeclaration", path: './dmd/initsem/infer_type.html', attributes: []},
{name: 'dmd.initsem.initializerSemantic', kind: "functiondeclaration", path: './dmd/initsem/initializer_semantic.html', attributes: ["extern(C++)"]},
{name: 'dmd.initsem.initializerToExpression', kind: "functiondeclaration", path: './dmd/initsem/initializer_to_expression.html', attributes: ["extern(C++)"]},
{name: 'dmd.initsem.toAssocArrayLiteral', kind: "functiondeclaration", path: './dmd/initsem/to_assoc_array_literal.html', attributes: []},
{name: 'dmd.inline', kind: "module", path: './dmd/inline.html', attributes: []},
{name: 'dmd.inline.inlineCopy', kind: "functiondeclaration", path: './dmd/inline/inline_copy.html', attributes: []},
{name: 'dmd.inline.inlineScanModule', kind: "functiondeclaration", path: './dmd/inline/inline_scan_module.html', attributes: []},
{name: 'dmd.inlinecost', kind: "module", path: './dmd/inlinecost.html', attributes: []},
{name: 'dmd.inlinecost.inlineCostExpression', kind: "functiondeclaration", path: './dmd/inlinecost/inline_cost_expression.html', attributes: []},
{name: 'dmd.inlinecost.inlineCostFunction', kind: "functiondeclaration", path: './dmd/inlinecost/inline_cost_function.html', attributes: []},
{name: 'dmd.inlinecost.isInlinableNestedAggregate', kind: "functiondeclaration", path: './dmd/inlinecost/is_inlinable_nested_aggregate.html', attributes: []},
{name: 'dmd.inlinecost.tooCostly', kind: "functiondeclaration", path: './dmd/inlinecost/too_costly.html', attributes: ["pure"]},
{name: 'dmd.intrange', kind: "module", path: './dmd/intrange.html', attributes: []},
{name: 'dmd.json', kind: "module", path: './dmd/json.html', attributes: []},
{name: 'dmd.json.jsonFieldNames', kind: "enummemberdeclaration", path: './dmd/json/json_field_names.html', attributes: []},
{name: 'dmd.json.tryParseJsonField', kind: "functiondeclaration", path: './dmd/json/try_parse_json_field.html', attributes: ["extern(C++)"]},
{name: 'dmd.lambdacomp', kind: "module", path: './dmd/lambdacomp.html', attributes: []},
{name: 'dmd.lambdacomp.isSameFuncLiteral', kind: "functiondeclaration", path: './dmd/lambdacomp/is_same_func_literal.html', attributes: []},
{name: 'dmd.lexer', kind: "module", path: './dmd/lexer.html', attributes: []},
{name: 'dmd.lexer.Lexer', kind: "classdeclaration", path: './dmd/lexer/lexer.html', attributes: []},
{name: 'dmd.lexer.Lexer.allocateToken', kind: "functiondeclaration", path: './dmd/lexer/lexer.allocate_token.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'dmd.lexer.Lexer.combineComments', kind: "functiondeclaration", path: './dmd/lexer/lexer.combine_comments.html', attributes: ["static", "pure"]},
{name: 'dmd.lexer.Lexer.peekNext', kind: "functiondeclaration", path: './dmd/lexer/lexer.peek_next.html', attributes: ["final"]},
{name: 'dmd.lexer.Lexer.peekNext2', kind: "functiondeclaration", path: './dmd/lexer/lexer.peek_next2.html', attributes: ["final"]},
{name: 'dmd.lexer.Lexer.peekPastParen', kind: "functiondeclaration", path: './dmd/lexer/lexer.peek_past_paren.html', attributes: ["final"]},
{name: 'dmd.lexer.Lexer.scan', kind: "functiondeclaration", path: './dmd/lexer/lexer.scan.html', attributes: ["final"]},
{name: 'dmd.lexer.Lexer.this', kind: "functiondeclaration", path: './dmd/lexer/lexer.this.html', attributes: ["pure"]},
{name: 'dmd.lib', kind: "module", path: './dmd/lib.html', attributes: []},
{name: 'dmd.libelf', kind: "module", path: './dmd/libelf.html', attributes: []},
{name: 'dmd.libomf', kind: "module", path: './dmd/libomf.html', attributes: []},
{name: 'dmd.link', kind: "module", path: './dmd/link.html', attributes: []},
{name: 'dmd.link.runLINK', kind: "functiondeclaration", path: './dmd/link/run_link.html', attributes: []},
{name: 'dmd.link.runProgram', kind: "functiondeclaration", path: './dmd/link/run_program.html', attributes: []},
{name: 'dmd.mars', kind: "module", path: './dmd/mars.html', attributes: []},
{name: 'dmd.mars._Dmain', kind: "functiondeclaration", path: './dmd/mars/__dmain.html', attributes: ["extern(C)"]},
{name: 'dmd.mars.addDefaultVersionIdentifiers', kind: "functiondeclaration", path: './dmd/mars/add_default_version_identifiers.html', attributes: []},
{name: 'dmd.mars.createModule', kind: "functiondeclaration", path: './dmd/mars/create_module.html', attributes: []},
{name: 'dmd.mars.createModules', kind: "functiondeclaration", path: './dmd/mars/create_modules.html', attributes: []},
{name: 'dmd.mars.flushMixins', kind: "functiondeclaration", path: './dmd/mars/flush_mixins.html', attributes: ["extern(C)"]},
{name: 'dmd.mars.getenv_setargv', kind: "functiondeclaration", path: './dmd/mars/getenv_setargv.html', attributes: []},
{name: 'dmd.mars.main', kind: "functiondeclaration", path: './dmd/mars/main.html', attributes: ["extern(C)"]},
{name: 'dmd.mars.parse_arch_arg', kind: "functiondeclaration", path: './dmd/mars/parse_arch_arg.html', attributes: []},
{name: 'dmd.mars.parse_conf_arg', kind: "functiondeclaration", path: './dmd/mars/parse_conf_arg.html', attributes: []},
{name: 'dmd.mars.parseCommandLine', kind: "functiondeclaration", path: './dmd/mars/parse_command_line.html', attributes: []},
{name: 'dmd.mars.printInternalFailure', kind: "functiondeclaration", path: './dmd/mars/print_internal_failure.html', attributes: ["extern(C)"]},
{name: 'dmd.mars.setTarget', kind: "functiondeclaration", path: './dmd/mars/set_target.html', attributes: []},
{name: 'dmd.mtype', kind: "module", path: './dmd/mtype.html', attributes: []},
{name: 'dmd.mtype.attributesApply', kind: "functiondeclaration", path: './dmd/mtype/attributes_apply.html', attributes: []},
{name: 'dmd.mtype.DotExpFlag', kind: "enumdeclaration", path: './dmd/mtype/dot_exp_flag.html', attributes: []},
{name: 'dmd.mtype.isAggregate', kind: "functiondeclaration", path: './dmd/mtype/is_aggregate.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.isCopyable', kind: "functiondeclaration", path: './dmd/mtype/is_copyable.html', attributes: []},
{name: 'dmd.mtype.isIndexableNonAggregate', kind: "functiondeclaration", path: './dmd/mtype/is_indexable_non_aggregate.html', attributes: []},
{name: 'dmd.mtype.isSomeChar', kind: "functiondeclaration", path: './dmd/mtype/is_some_char.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dmd.mtype.modifiersApply', kind: "functiondeclaration", path: './dmd/mtype/modifiers_apply.html', attributes: []},
{name: 'dmd.mtype.MODimplicitConv', kind: "functiondeclaration", path: './dmd/mtype/mo_dimplicit_conv.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dmd.mtype.MODmerge', kind: "functiondeclaration", path: './dmd/mtype/mo_dmerge.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dmd.mtype.MODmethodConv', kind: "functiondeclaration", path: './dmd/mtype/mo_dmethod_conv.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dmd.mtype.MODtoBuffer', kind: "functiondeclaration", path: './dmd/mtype/mo_dto_buffer.html', attributes: []},
{name: 'dmd.mtype.MODtoChars', kind: "functiondeclaration", path: './dmd/mtype/mo_dto_chars.html', attributes: ["pure"]},
{name: 'dmd.mtype.ModToStc', kind: "functiondeclaration", path: './dmd/mtype/mod_to_stc.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dmd.mtype.MODtoString', kind: "functiondeclaration", path: './dmd/mtype/mo_dto_string.html', attributes: ["pure"]},
{name: 'dmd.mtype.Parameter', kind: "classdeclaration", path: './dmd/mtype/parameter.html', attributes: []},
{name: 'dmd.mtype.Parameter._foreach', kind: "functiondeclaration", path: './dmd/mtype/parameter._foreach.html', attributes: ["static"]},
{name: 'dmd.mtype.Parameter.dim', kind: "functiondeclaration", path: './dmd/mtype/parameter.dim.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.mtype.Parameter.getNth', kind: "functiondeclaration", path: './dmd/mtype/parameter.get_nth.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.mtype.Parameter.isCovariant', kind: "functiondeclaration", path: './dmd/mtype/parameter.is_covariant.html', attributes: ["pure", "nothrow", "nogc", "safe", "extern(C++)", "const"]},
{name: 'dmd.mtype.Parameter.isLazyArray', kind: "functiondeclaration", path: './dmd/mtype/parameter.is_lazy_array.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.ParameterList', kind: "structdeclaration", path: './dmd/mtype/parameter_list.html', attributes: []},
{name: 'dmd.mtype.toAutoQualChars', kind: "functiondeclaration", path: './dmd/mtype/to_auto_qual_chars.html', attributes: []},
{name: 'dmd.mtype.Type', kind: "classdeclaration", path: './dmd/mtype/type.html', attributes: []},
{name: 'dmd.mtype.Type.addMod', kind: "functiondeclaration", path: './dmd/mtype/type.add_mod.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.mtype.Type.addSTC', kind: "functiondeclaration", path: './dmd/mtype/type.add_stc.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.mtype.Type.addStorageClass', kind: "functiondeclaration", path: './dmd/mtype/type.add_storage_class.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.Type.alignment', kind: "functiondeclaration", path: './dmd/mtype/type.alignment.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.Type.baseElemOf', kind: "functiondeclaration", path: './dmd/mtype/type.base_elem_of.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.mtype.Type.castMod', kind: "functiondeclaration", path: './dmd/mtype/type.cast_mod.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.mtype.Type.check', kind: "functiondeclaration", path: './dmd/mtype/type.check.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.mtype.Type.checkComplexTransition', kind: "functiondeclaration", path: './dmd/mtype/type.check_complex_transition.html', attributes: ["final"]},
{name: 'dmd.mtype.Type.checkDeprecated', kind: "functiondeclaration", path: './dmd/mtype/type.check_deprecated.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.Type.constConv', kind: "functiondeclaration", path: './dmd/mtype/type.const_conv.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.Type.constOf', kind: "functiondeclaration", path: './dmd/mtype/type.const_of.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.mtype.Type.covariant', kind: "functiondeclaration", path: './dmd/mtype/type.covariant.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.mtype.Type.deduceWild', kind: "functiondeclaration", path: './dmd/mtype/type.deduce_wild.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.Type.defaultInitLiteral', kind: "functiondeclaration", path: './dmd/mtype/type.default_init_literal.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.Type.deinitialize', kind: "functiondeclaration", path: './dmd/mtype/type.deinitialize.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.mtype.Type.fixTo', kind: "functiondeclaration", path: './dmd/mtype/type.fix_to.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.mtype.Type.hasPointers', kind: "functiondeclaration", path: './dmd/mtype/type.has_pointers.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.Type.hasVoidInitPointers', kind: "functiondeclaration", path: './dmd/mtype/type.has_void_init_pointers.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.Type.hasWild', kind: "functiondeclaration", path: './dmd/mtype/type.has_wild.html', attributes: ["extern(C++)", "const"]},
{name: 'dmd.mtype.Type.immutableOf', kind: "functiondeclaration", path: './dmd/mtype/type.immutable_of.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.mtype.Type.implicitConvTo', kind: "functiondeclaration", path: './dmd/mtype/type.implicit_conv_to.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.Type.isAssignable', kind: "functiondeclaration", path: './dmd/mtype/type.is_assignable.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.Type.isBoolean', kind: "functiondeclaration", path: './dmd/mtype/type.is_boolean.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.Type.merge2', kind: "functiondeclaration", path: './dmd/mtype/type.merge2.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.mtype.Type.modToBuffer', kind: "functiondeclaration", path: './dmd/mtype/type.mod_to_buffer.html', attributes: ["final", "nothrow", "extern(C++)", "const"]},
{name: 'dmd.mtype.Type.modToChars', kind: "functiondeclaration", path: './dmd/mtype/type.mod_to_chars.html', attributes: ["final", "nothrow", "extern(C++)", "const"]},
{name: 'dmd.mtype.Type.mutableOf', kind: "functiondeclaration", path: './dmd/mtype/type.mutable_of.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.mtype.Type.needsCopyOrPostblit', kind: "functiondeclaration", path: './dmd/mtype/type.needs_copy_or_postblit.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.Type.needsDestruction', kind: "functiondeclaration", path: './dmd/mtype/type.needs_destruction.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.Type.needsNested', kind: "functiondeclaration", path: './dmd/mtype/type.needs_nested.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.Type.nextOf', kind: "functiondeclaration", path: './dmd/mtype/type.next_of.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.Type.nullAttributes', kind: "functiondeclaration", path: './dmd/mtype/type.null_attributes.html', attributes: ["final", "nothrow", "extern(C++)", "const"]},
{name: 'dmd.mtype.Type.numberOfElems', kind: "functiondeclaration", path: './dmd/mtype/type.number_of_elems.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.mtype.Type.sizemask', kind: "functiondeclaration", path: './dmd/mtype/type.sizemask.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.mtype.Type.toBasetype', kind: "functiondeclaration", path: './dmd/mtype/type.to_basetype.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.mtype.Type.toChars', kind: "functiondeclaration", path: './dmd/mtype/type.to_chars.html', attributes: ["final", "override", "extern(C++)", "const"]},
{name: 'dmd.mtype.Type.toHeadMutable', kind: "functiondeclaration", path: './dmd/mtype/type.to_head_mutable.html', attributes: ["extern(C++)", "inout"]},
{name: 'dmd.mtype.Type.toPrettyChars', kind: "functiondeclaration", path: './dmd/mtype/type.to_pretty_chars.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.mtype.Type.unSharedOf', kind: "functiondeclaration", path: './dmd/mtype/type.un_shared_of.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.mtype.Type.wildOf', kind: "functiondeclaration", path: './dmd/mtype/type.wild_of.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.mtype.TypeAArray', kind: "classdeclaration", path: './dmd/mtype/type_a_array.html', attributes: []},
{name: 'dmd.mtype.TypeNext.nextOf', kind: "functiondeclaration", path: './dmd/mtype/type_next.next_of.html', attributes: ["final", "override", "extern(C++)"]},
{name: 'dmd.mtype.TypeArray', kind: "classdeclaration", path: './dmd/mtype/type_array.html', attributes: []},
{name: 'dmd.mtype.TypeBasic', kind: "classdeclaration", path: './dmd/mtype/type_basic.html', attributes: []},
{name: 'dmd.mtype.TypeClass', kind: "classdeclaration", path: './dmd/mtype/type_class.html', attributes: []},
{name: 'dmd.mtype.TypeDArray', kind: "classdeclaration", path: './dmd/mtype/type_d_array.html', attributes: []},
{name: 'dmd.mtype.TypeDelegate', kind: "classdeclaration", path: './dmd/mtype/type_delegate.html', attributes: []},
{name: 'dmd.mtype.TypeEnum', kind: "classdeclaration", path: './dmd/mtype/type_enum.html', attributes: []},
{name: 'dmd.mtype.TypeError', kind: "classdeclaration", path: './dmd/mtype/type_error.html', attributes: []},
{name: 'dmd.mtype.TypeFunction', kind: "classdeclaration", path: './dmd/mtype/type_function.html', attributes: []},
{name: 'dmd.mtype.TypeFunction.callMatch', kind: "functiondeclaration", path: './dmd/mtype/type_function.call_match.html', attributes: []},
{name: 'dmd.mtype.TypeFunction.hasLazyParameters', kind: "functiondeclaration", path: './dmd/mtype/type_function.has_lazy_parameters.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.TypeFunction.isDstyleVariadic', kind: "functiondeclaration", path: './dmd/mtype/type_function.is_dstyle_variadic.html', attributes: ["pure", "nothrow", "extern(C++)", "const"]},
{name: 'dmd.mtype.TypeFunction.parameterEscapes', kind: "functiondeclaration", path: './dmd/mtype/type_function.parameter_escapes.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.TypeFunction.parameterStorageClass', kind: "functiondeclaration", path: './dmd/mtype/type_function.parameter_storage_class.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.TypeFunction.purityLevel', kind: "functiondeclaration", path: './dmd/mtype/type_function.purity_level.html', attributes: ["extern(C++)"]},
{name: 'dmd.mtype.TypeIdentifier', kind: "classdeclaration", path: './dmd/mtype/type_identifier.html', attributes: []},
{name: 'dmd.mtype.TypeIdentifier.toDsymbol', kind: "functiondeclaration", path: './dmd/mtype/type_identifier.to_dsymbol.html', attributes: ["override", "extern(C++)"]},
{name: 'dmd.mtype.TypeInstance', kind: "classdeclaration", path: './dmd/mtype/type_instance.html', attributes: []},
{name: 'dmd.mtype.TypeMixin', kind: "classdeclaration", path: './dmd/mtype/type_mixin.html', attributes: []},
{name: 'dmd.mtype.TypeNext', kind: "classdeclaration", path: './dmd/mtype/type_next.html', attributes: []},
{name: 'dmd.mtype.TypeNull', kind: "classdeclaration", path: './dmd/mtype/type_null.html', attributes: []},
{name: 'dmd.mtype.TypePointer', kind: "classdeclaration", path: './dmd/mtype/type_pointer.html', attributes: []},
{name: 'dmd.mtype.TypeQualified', kind: "classdeclaration", path: './dmd/mtype/type_qualified.html', attributes: []},
{name: 'dmd.mtype.TypeReference', kind: "classdeclaration", path: './dmd/mtype/type_reference.html', attributes: []},
{name: 'dmd.mtype.TypeReturn', kind: "classdeclaration", path: './dmd/mtype/type_return.html', attributes: []},
{name: 'dmd.mtype.TypeSArray', kind: "classdeclaration", path: './dmd/mtype/type_s_array.html', attributes: []},
{name: 'dmd.mtype.TypeSArray.needsNested', kind: "functiondeclaration", path: './dmd/mtype/type_s_array.needs_nested.html', attributes: ["override", "extern(C++)"]},
{name: 'dmd.mtype.TypeSlice', kind: "classdeclaration", path: './dmd/mtype/type_slice.html', attributes: []},
{name: 'dmd.mtype.TypeStruct', kind: "classdeclaration", path: './dmd/mtype/type_struct.html', attributes: []},
{name: 'dmd.mtype.TypeStruct.defaultInitLiteral', kind: "functiondeclaration", path: './dmd/mtype/type_struct.default_init_literal.html', attributes: ["override", "extern(C++)"]},
{name: 'dmd.mtype.TypeTraits', kind: "classdeclaration", path: './dmd/mtype/type_traits.html', attributes: []},
{name: 'dmd.mtype.TypeTraits.exp', kind: "variabledeclaration", path: './dmd/mtype/type_traits.exp.html', attributes: []},
{name: 'dmd.mtype.TypeTraits.sym', kind: "variabledeclaration", path: './dmd/mtype/type_traits.sym.html', attributes: []},
{name: 'dmd.mtype.TypeTuple', kind: "classdeclaration", path: './dmd/mtype/type_tuple.html', attributes: []},
{name: 'dmd.mtype.TypeTuple.this', kind: "functiondeclaration", path: './dmd/mtype/type_tuple.this.html', attributes: []},
{name: 'dmd.mtype.TypeTypeof', kind: "classdeclaration", path: './dmd/mtype/type_typeof.html', attributes: []},
{name: 'dmd.mtype.TypeVector', kind: "classdeclaration", path: './dmd/mtype/type_vector.html', attributes: []},
{name: 'dmd.mtype.VarArg', kind: "enumdeclaration", path: './dmd/mtype/var_arg.html', attributes: []},
{name: 'dmd.mtype.VarArg.none', kind: "enummemberdeclaration", path: './dmd/mtype/var_arg.html#none', attributes: []},
{name: 'dmd.mtype.VarArg.typesafe', kind: "enummemberdeclaration", path: './dmd/mtype/var_arg.html#typesafe', attributes: []},
{name: 'dmd.mtype.VarArg.variadic', kind: "enummemberdeclaration", path: './dmd/mtype/var_arg.html#variadic', attributes: []},
{name: 'dmd.nogc', kind: "module", path: './dmd/nogc.html', attributes: []},
{name: 'dmd.nogc.NOGCVisitor', kind: "classdeclaration", path: './dmd/nogc/nogc_visitor.html', attributes: []},
{name: 'dmd.nspace', kind: "module", path: './dmd/nspace.html', attributes: []},
{name: 'dmd.nspace.Nspace', kind: "classdeclaration", path: './dmd/nspace/nspace.html', attributes: []},
{name: 'dmd.nspace.Nspace.identExp', kind: "variabledeclaration", path: './dmd/nspace/nspace.ident_exp.html', attributes: []},
{name: 'dmd.ob', kind: "module", path: './dmd/ob.html', attributes: []},
{name: 'dmd.ob.allocDeps', kind: "functiondeclaration", path: './dmd/ob/alloc_deps.html', attributes: []},
{name: 'dmd.ob.allocStates', kind: "functiondeclaration", path: './dmd/ob/alloc_states.html', attributes: []},
{name: 'dmd.ob.checkObErrors', kind: "functiondeclaration", path: './dmd/ob/check_ob_errors.html', attributes: []},
{name: 'dmd.ob.collectVars', kind: "functiondeclaration", path: './dmd/ob/collect_vars.html', attributes: []},
{name: 'dmd.ob.computePreds', kind: "functiondeclaration", path: './dmd/ob/compute_preds.html', attributes: []},
{name: 'dmd.ob.doDataFlowAnalysis', kind: "functiondeclaration", path: './dmd/ob/do_data_flow_analysis.html', attributes: []},
{name: 'dmd.ob.genKill', kind: "functiondeclaration", path: './dmd/ob/gen_kill.html', attributes: []},
{name: 'dmd.ob.hasMutableFields', kind: "functiondeclaration", path: './dmd/ob/has_mutable_fields.html', attributes: []},
{name: 'dmd.ob.hasPointersToMutableFields', kind: "functiondeclaration", path: './dmd/ob/has_pointers_to_mutable_fields.html', attributes: []},
{name: 'dmd.ob.insertFinallyBlockCalls', kind: "functiondeclaration", path: './dmd/ob/insert_finally_block_calls.html', attributes: []},
{name: 'dmd.ob.insertFinallyBlockGotos', kind: "functiondeclaration", path: './dmd/ob/insert_finally_block_gotos.html', attributes: []},
{name: 'dmd.ob.isBorrowedPtr', kind: "functiondeclaration", path: './dmd/ob/is_borrowed_ptr.html', attributes: []},
{name: 'dmd.ob.isMutableRef', kind: "functiondeclaration", path: './dmd/ob/is_mutable_ref.html', attributes: []},
{name: 'dmd.ob.isReadonlyPtr', kind: "functiondeclaration", path: './dmd/ob/is_readonly_ptr.html', attributes: []},
{name: 'dmd.ob.isTrackableVar', kind: "functiondeclaration", path: './dmd/ob/is_trackable_var.html', attributes: []},
{name: 'dmd.ob.isTrackableVarExp', kind: "functiondeclaration", path: './dmd/ob/is_trackable_var_exp.html', attributes: []},
{name: 'dmd.ob.makeChildrenUndefined', kind: "functiondeclaration", path: './dmd/ob/make_children_undefined.html', attributes: []},
{name: 'dmd.ob.makeUndefined', kind: "functiondeclaration", path: './dmd/ob/make_undefined.html', attributes: []},
{name: 'dmd.ob.numberNodes', kind: "functiondeclaration", path: './dmd/ob/number_nodes.html', attributes: []},
{name: 'dmd.ob.oblive', kind: "functiondeclaration", path: './dmd/ob/oblive.html', attributes: []},
{name: 'dmd.ob.ObNode', kind: "structdeclaration", path: './dmd/ob/ob_node.html', attributes: []},
{name: 'dmd.ob.ObNode.exp', kind: "variabledeclaration", path: './dmd/ob/ob_node.exp.html', attributes: []},
{name: 'dmd.ob.ObNode.gen', kind: "variabledeclaration", path: './dmd/ob/ob_node.gen.html', attributes: []},
{name: 'dmd.ob.ObNode.index', kind: "variabledeclaration", path: './dmd/ob/ob_node.index.html', attributes: []},
{name: 'dmd.ob.ObNode.input', kind: "variabledeclaration", path: './dmd/ob/ob_node.input.html', attributes: []},
{name: 'dmd.ob.ObNode.output', kind: "variabledeclaration", path: './dmd/ob/ob_node.output.html', attributes: []},
{name: 'dmd.ob.ObNode.preds', kind: "variabledeclaration", path: './dmd/ob/ob_node.preds.html', attributes: []},
{name: 'dmd.ob.ObNode.succs', kind: "variabledeclaration", path: './dmd/ob/ob_node.succs.html', attributes: []},
{name: 'dmd.ob.ObNode.tryBlock', kind: "variabledeclaration", path: './dmd/ob/ob_node.try_block.html', attributes: []},
{name: 'dmd.ob.ObState', kind: "structdeclaration", path: './dmd/ob/ob_state.html', attributes: []},
{name: 'dmd.ob.ObState.mutableStack', kind: "variabledeclaration", path: './dmd/ob/ob_state.mutable_stack.html', attributes: []},
{name: 'dmd.ob.ObState.varPool', kind: "variabledeclaration", path: './dmd/ob/ob_state.var_pool.html', attributes: []},
{name: 'dmd.ob.ObState.varStack', kind: "variabledeclaration", path: './dmd/ob/ob_state.var_stack.html', attributes: []},
{name: 'dmd.ob.PtrState', kind: "enumdeclaration", path: './dmd/ob/ptr_state.html', attributes: []},
{name: 'dmd.ob.PtrVarState', kind: "structdeclaration", path: './dmd/ob/ptr_var_state.html', attributes: []},
{name: 'dmd.ob.PtrVarState.deps', kind: "variabledeclaration", path: './dmd/ob/ptr_var_state.deps.html', attributes: []},
{name: 'dmd.ob.PtrVarState.depsToBuf', kind: "functiondeclaration", path: './dmd/ob/ptr_var_state.deps_to_buf.html', attributes: []},
{name: 'dmd.ob.PtrVarState.print', kind: "functiondeclaration", path: './dmd/ob/ptr_var_state.print.html', attributes: []},
{name: 'dmd.ob.PtrVarState.state', kind: "variabledeclaration", path: './dmd/ob/ptr_var_state.state.html', attributes: []},
{name: 'dmd.ob.readVar', kind: "functiondeclaration", path: './dmd/ob/read_var.html', attributes: []},
{name: 'dmd.ob.removeUnreachable', kind: "functiondeclaration", path: './dmd/ob/remove_unreachable.html', attributes: []},
{name: 'dmd.ob.setLabelStatementExtraFields', kind: "functiondeclaration", path: './dmd/ob/set_label_statement_extra_fields.html', attributes: []},
{name: 'dmd.ob.toChars', kind: "functiondeclaration", path: './dmd/ob/to_chars.html', attributes: []},
{name: 'dmd.ob.toObNodes', kind: "functiondeclaration", path: './dmd/ob/to_ob_nodes.html', attributes: []},
{name: 'dmd.ob.toPtrState', kind: "functiondeclaration", path: './dmd/ob/to_ptr_state.html', attributes: []},
{name: 'dmd.objc', kind: "module", path: './dmd/objc.html', attributes: []},
{name: 'dmd.objc.ObjcClassDeclaration', kind: "structdeclaration", path: './dmd/objc/objc_class_declaration.html', attributes: []},
{name: 'dmd.objc.ObjcClassDeclaration.classDeclaration', kind: "variabledeclaration", path: './dmd/objc/objc_class_declaration.class_declaration.html', attributes: []},
{name: 'dmd.objc.ObjcClassDeclaration.identifier', kind: "variabledeclaration", path: './dmd/objc/objc_class_declaration.identifier.html', attributes: []},
{name: 'dmd.objc.ObjcClassDeclaration.isExtern', kind: "variabledeclaration", path: './dmd/objc/objc_class_declaration.is_extern.html', attributes: []},
{name: 'dmd.objc.ObjcClassDeclaration.isMeta', kind: "variabledeclaration", path: './dmd/objc/objc_class_declaration.is_meta.html', attributes: []},
{name: 'dmd.objc.ObjcClassDeclaration.metaclass', kind: "variabledeclaration", path: './dmd/objc/objc_class_declaration.metaclass.html', attributes: []},
{name: 'dmd.objc.ObjcClassDeclaration.methodList', kind: "variabledeclaration", path: './dmd/objc/objc_class_declaration.method_list.html', attributes: []},
{name: 'dmd.objc_glue', kind: "module", path: './dmd/objc_glue.html', attributes: []},
{name: 'dmd.opover', kind: "module", path: './dmd/opover.html', attributes: []},
{name: 'dmd.opover.build_overload', kind: "functiondeclaration", path: './dmd/opover/build_overload.html', attributes: []},
{name: 'dmd.opover.inferApplyArgTypes', kind: "functiondeclaration", path: './dmd/opover/infer_apply_arg_types.html', attributes: []},
{name: 'dmd.opover.inferForeachAggregate', kind: "functiondeclaration", path: './dmd/opover/infer_foreach_aggregate.html', attributes: []},
{name: 'dmd.opover.isCommutative', kind: "functiondeclaration", path: './dmd/opover/is_commutative.html', attributes: []},
{name: 'dmd.opover.op_overload', kind: "functiondeclaration", path: './dmd/opover/op_overload.html', attributes: []},
{name: 'dmd.opover.opToArg', kind: "functiondeclaration", path: './dmd/opover/op_to_arg.html', attributes: []},
{name: 'dmd.opover.search_function', kind: "functiondeclaration", path: './dmd/opover/search_function.html', attributes: []},
{name: 'dmd.optimize', kind: "module", path: './dmd/optimize.html', attributes: []},
{name: 'dmd.optimize.expandVar', kind: "functiondeclaration", path: './dmd/optimize/expand_var.html', attributes: []},
{name: 'dmd.optimize.Expression_optimize', kind: "functiondeclaration", path: './dmd/optimize/expression_optimize.html', attributes: []},
{name: 'dmd.parse', kind: "module", path: './dmd/parse.html', attributes: []},
{name: 'dmd.parse.Parser', kind: "classdeclaration", path: './dmd/parse/parser.html', attributes: []},
{name: 'dmd.parse.Parser.addComment', kind: "functiondeclaration", path: './dmd/parse/parser.add_comment.html', attributes: []},
{name: 'dmd.parse.Parser.appendStorageClass', kind: "functiondeclaration", path: './dmd/parse/parser.append_storage_class.html', attributes: []},
{name: 'dmd.parse.Parser.checkDanglingElse', kind: "functiondeclaration", path: './dmd/parse/parser.check_dangling_else.html', attributes: []},
{name: 'dmd.parse.Parser.isBuiltinAtAttribute', kind: "functiondeclaration", path: './dmd/parse/parser.is_builtin_at_attribute.html', attributes: ["static"]},
{name: 'dmd.parse.Parser.isDeclaration', kind: "functiondeclaration", path: './dmd/parse/parser.is_declaration.html', attributes: []},
{name: 'dmd.parse.Parser.NeedDeclaratorId', kind: "enumdeclaration", path: './dmd/parse/parser.need_declarator_id.html', attributes: []},
{name: 'dmd.parse.Parser.parseAggregate', kind: "functiondeclaration", path: './dmd/parse/parser.parse_aggregate.html', attributes: []},
{name: 'dmd.parse.Parser.parseArguments', kind: "functiondeclaration", path: './dmd/parse/parser.parse_arguments.html', attributes: []},
{name: 'dmd.parse.Parser.parseAttribute', kind: "functiondeclaration", path: './dmd/parse/parser.parse_attribute.html', attributes: []},
{name: 'dmd.parse.Parser.parseAutoDeclarations', kind: "functiondeclaration", path: './dmd/parse/parser.parse_auto_declarations.html', attributes: []},
{name: 'dmd.parse.Parser.parseBaseClasses', kind: "functiondeclaration", path: './dmd/parse/parser.parse_base_classes.html', attributes: []},
{name: 'dmd.parse.Parser.parseBasicType2', kind: "functiondeclaration", path: './dmd/parse/parser.parse_basic_type2.html', attributes: []},
{name: 'dmd.parse.Parser.parseBlock', kind: "functiondeclaration", path: './dmd/parse/parser.parse_block.html', attributes: []},
{name: 'dmd.parse.Parser.parseConstraint', kind: "functiondeclaration", path: './dmd/parse/parser.parse_constraint.html', attributes: []},
{name: 'dmd.parse.Parser.parseContracts', kind: "functiondeclaration", path: './dmd/parse/parser.parse_contracts.html', attributes: []},
{name: 'dmd.parse.Parser.parseCtor', kind: "functiondeclaration", path: './dmd/parse/parser.parse_ctor.html', attributes: []},
{name: 'dmd.parse.Parser.parseDebugCondition', kind: "functiondeclaration", path: './dmd/parse/parser.parse_debug_condition.html', attributes: []},
{name: 'dmd.parse.Parser.parseDeclarations', kind: "functiondeclaration", path: './dmd/parse/parser.parse_declarations.html', attributes: []},
{name: 'dmd.parse.Parser.parseDefaultInitExp', kind: "functiondeclaration", path: './dmd/parse/parser.parse_default_init_exp.html', attributes: []},
{name: 'dmd.parse.Parser.parseDeprecatedAttribute', kind: "functiondeclaration", path: './dmd/parse/parser.parse_deprecated_attribute.html', attributes: []},
{name: 'dmd.parse.Parser.parseDtor', kind: "functiondeclaration", path: './dmd/parse/parser.parse_dtor.html', attributes: []},
{name: 'dmd.parse.Parser.parseEnum', kind: "functiondeclaration", path: './dmd/parse/parser.parse_enum.html', attributes: []},
{name: 'dmd.parse.Parser.parseForeach', kind: "functiondeclaration", path: './dmd/parse/parser.parse_foreach.html', attributes: []},
{name: 'dmd.parse.Parser.ParseForeachArgs', kind: "aliasdeclaration", path: './dmd/parse/parser.parse_foreach_args.html', attributes: []},
{name: 'dmd.parse.Parser.ParseForeachRet', kind: "aliasdeclaration", path: './dmd/parse/parser.parse_foreach_ret.html', attributes: []},
{name: 'dmd.parse.Parser.parseInitializer', kind: "functiondeclaration", path: './dmd/parse/parser.parse_initializer.html', attributes: []},
{name: 'dmd.parse.Parser.parseInvariant', kind: "functiondeclaration", path: './dmd/parse/parser.parse_invariant.html', attributes: []},
{name: 'dmd.parse.Parser.parseLinkage', kind: "functiondeclaration", path: './dmd/parse/parser.parse_linkage.html', attributes: []},
{name: 'dmd.parse.Parser.parseMixin', kind: "functiondeclaration", path: './dmd/parse/parser.parse_mixin.html', attributes: []},
{name: 'dmd.parse.Parser.parseNew', kind: "functiondeclaration", path: './dmd/parse/parser.parse_new.html', attributes: []},
{name: 'dmd.parse.Parser.parseNewExp', kind: "functiondeclaration", path: './dmd/parse/parser.parse_new_exp.html', attributes: []},
{name: 'dmd.parse.Parser.parseParameterList', kind: "functiondeclaration", path: './dmd/parse/parser.parse_parameter_list.html', attributes: []},
{name: 'dmd.parse.Parser.parsePostfix', kind: "functiondeclaration", path: './dmd/parse/parser.parse_postfix.html', attributes: []},
{name: 'dmd.parse.Parser.parsePrimaryExp', kind: "functiondeclaration", path: './dmd/parse/parser.parse_primary_exp.html', attributes: []},
{name: 'dmd.parse.Parser.parseQualifiedIdentifier', kind: "functiondeclaration", path: './dmd/parse/parser.parse_qualified_identifier.html', attributes: []},
{name: 'dmd.parse.Parser.parseSharedStaticCtor', kind: "functiondeclaration", path: './dmd/parse/parser.parse_shared_static_ctor.html', attributes: []},
{name: 'dmd.parse.Parser.parseSharedStaticDtor', kind: "functiondeclaration", path: './dmd/parse/parser.parse_shared_static_dtor.html', attributes: []},
{name: 'dmd.parse.Parser.parseStatement', kind: "functiondeclaration", path: './dmd/parse/parser.parse_statement.html', attributes: []},
{name: 'dmd.parse.Parser.parseStaticAssert', kind: "functiondeclaration", path: './dmd/parse/parser.parse_static_assert.html', attributes: []},
{name: 'dmd.parse.Parser.parseStaticCtor', kind: "functiondeclaration", path: './dmd/parse/parser.parse_static_ctor.html', attributes: []},
{name: 'dmd.parse.Parser.parseStaticDtor', kind: "functiondeclaration", path: './dmd/parse/parser.parse_static_dtor.html', attributes: []},
{name: 'dmd.parse.Parser.parseStaticIfCondition', kind: "functiondeclaration", path: './dmd/parse/parser.parse_static_if_condition.html', attributes: []},
{name: 'dmd.parse.Parser.parseTemplateArgumentList', kind: "functiondeclaration", path: './dmd/parse/parser.parse_template_argument_list.html', attributes: []},
{name: 'dmd.parse.Parser.parseTemplateArguments', kind: "functiondeclaration", path: './dmd/parse/parser.parse_template_arguments.html', attributes: []},
{name: 'dmd.parse.Parser.parseTemplateDeclaration', kind: "functiondeclaration", path: './dmd/parse/parser.parse_template_declaration.html', attributes: []},
{name: 'dmd.parse.Parser.parseTemplateParameterList', kind: "functiondeclaration", path: './dmd/parse/parser.parse_template_parameter_list.html', attributes: []},
{name: 'dmd.parse.Parser.parseTemplateSingleArgument', kind: "functiondeclaration", path: './dmd/parse/parser.parse_template_single_argument.html', attributes: []},
{name: 'dmd.parse.Parser.parseTypeof', kind: "functiondeclaration", path: './dmd/parse/parser.parse_typeof.html', attributes: []},
{name: 'dmd.parse.Parser.parseTypeOrAssignExp', kind: "functiondeclaration", path: './dmd/parse/parser.parse_type_or_assign_exp.html', attributes: []},
{name: 'dmd.parse.Parser.parseUnitTest', kind: "functiondeclaration", path: './dmd/parse/parser.parse_unit_test.html', attributes: []},
{name: 'dmd.parse.Parser.parseVector', kind: "functiondeclaration", path: './dmd/parse/parser.parse_vector.html', attributes: []},
{name: 'dmd.parse.Parser.parseVersionCondition', kind: "functiondeclaration", path: './dmd/parse/parser.parse_version_condition.html', attributes: []},
{name: 'dmd.parse.Parser.skipAttributes', kind: "functiondeclaration", path: './dmd/parse/parser.skip_attributes.html', attributes: []},
{name: 'dmd.parse.Parser.skipParens', kind: "functiondeclaration", path: './dmd/parse/parser.skip_parens.html', attributes: []},
{name: 'dmd.parse.Parser.this', kind: "functiondeclaration", path: './dmd/parse/parser.this.html', attributes: []},
{name: 'dmd.parse.precedence', kind: "variabledeclaration", path: './dmd/parse/precedence.html', attributes: []},
{name: 'dmd.parsetimevisitor', kind: "module", path: './dmd/parsetimevisitor.html', attributes: []},
{name: 'dmd.parsetimevisitor.ParseTimeVisitor', kind: "classdeclaration", path: './dmd/parsetimevisitor/parse_time_visitor.html', attributes: []},
{name: 'dmd.permissivevisitor', kind: "module", path: './dmd/permissivevisitor.html', attributes: []},
{name: 'dmd.permissivevisitor.PermissiveVisitor', kind: "classdeclaration", path: './dmd/permissivevisitor/permissive_visitor.html', attributes: []},
{name: 'dmd.printast', kind: "module", path: './dmd/printast.html', attributes: []},
{name: 'dmd.printast.printAST', kind: "functiondeclaration", path: './dmd/printast/print_ast.html', attributes: []},
{name: 'dmd.s2ir', kind: "module", path: './dmd/s2ir.html', attributes: []},
{name: 'dmd.s2ir.insertFinallyBlockCalls', kind: "functiondeclaration", path: './dmd/s2ir/insert_finally_block_calls.html', attributes: ["extern(C++)"]},
{name: 'dmd.s2ir.insertFinallyBlockGotos', kind: "functiondeclaration", path: './dmd/s2ir/insert_finally_block_gotos.html', attributes: ["extern(C++)"]},
{name: 'dmd.safe', kind: "module", path: './dmd/safe.html', attributes: []},
{name: 'dmd.safe.checkUnsafeAccess', kind: "functiondeclaration", path: './dmd/safe/check_unsafe_access.html', attributes: []},
{name: 'dmd.safe.isSafeCast', kind: "functiondeclaration", path: './dmd/safe/is_safe_cast.html', attributes: []},
{name: 'dmd.sapply', kind: "module", path: './dmd/sapply.html', attributes: []},
{name: 'dmd.sapply.PostorderStatementVisitor', kind: "classdeclaration", path: './dmd/sapply/postorder_statement_visitor.html', attributes: []},
{name: 'dmd.scanelf', kind: "module", path: './dmd/scanelf.html', attributes: []},
{name: 'dmd.scanelf.scanElfObjModule', kind: "functiondeclaration", path: './dmd/scanelf/scan_elf_obj_module.html', attributes: []},
{name: 'dmd.scanomf', kind: "module", path: './dmd/scanomf.html', attributes: []},
{name: 'dmd.semantic2', kind: "module", path: './dmd/semantic2.html', attributes: []},
{name: 'dmd.semantic2.semantic2', kind: "functiondeclaration", path: './dmd/semantic2/semantic2.html', attributes: ["extern(C++)"]},
{name: 'dmd.semantic3', kind: "module", path: './dmd/semantic3.html', attributes: []},
{name: 'dmd.semantic3.semantic3', kind: "functiondeclaration", path: './dmd/semantic3/semantic3.html', attributes: ["extern(C++)"]},
{name: 'dmd.sideeffect', kind: "module", path: './dmd/sideeffect.html', attributes: []},
{name: 'dmd.sideeffect.callSideEffectLevel', kind: "functiondeclaration", path: './dmd/sideeffect/call_side_effect_level.html', attributes: []},
{name: 'dmd.sideeffect.copyToTemp', kind: "functiondeclaration", path: './dmd/sideeffect/copy_to_temp.html', attributes: []},
{name: 'dmd.sideeffect.discardValue', kind: "functiondeclaration", path: './dmd/sideeffect/discard_value.html', attributes: []},
{name: 'dmd.sideeffect.extractSideEffect', kind: "functiondeclaration", path: './dmd/sideeffect/extract_side_effect.html', attributes: []},
{name: 'dmd.sideeffect.hasSideEffect', kind: "functiondeclaration", path: './dmd/sideeffect/has_side_effect.html', attributes: ["extern(C++)"]},
{name: 'dmd.sideeffect.isTrivialExp', kind: "functiondeclaration", path: './dmd/sideeffect/is_trivial_exp.html', attributes: ["extern(C++)"]},
{name: 'dmd.statement', kind: "module", path: './dmd/statement.html', attributes: []},
{name: 'dmd.statement.AsmStatement', kind: "classdeclaration", path: './dmd/statement/asm_statement.html', attributes: []},
{name: 'dmd.statement.Statement.accept', kind: "functiondeclaration", path: './dmd/statement/statement.accept.html', attributes: ["override", "extern(C++)"]},
{name: 'dmd.statement.Statement.arraySyntaxCopy', kind: "functiondeclaration", path: './dmd/statement/statement.array_syntax_copy.html', attributes: ["static", "extern(C++)"]},
{name: 'dmd.statement.Statement.comeFrom', kind: "functiondeclaration", path: './dmd/statement/statement.come_from.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.statement.Statement.endsWithReturnStatement', kind: "functiondeclaration", path: './dmd/statement/statement.ends_with_return_statement.html', attributes: ["pure", "nothrow", "nogc", "extern(C++)", "inout"]},
{name: 'dmd.statement.Statement.flatten', kind: "functiondeclaration", path: './dmd/statement/statement.flatten.html', attributes: ["extern(C++)"]},
{name: 'dmd.statement.Statement.hasBreak', kind: "functiondeclaration", path: './dmd/statement/statement.has_break.html', attributes: ["pure", "nothrow", "extern(C++)", "const"]},
{name: 'dmd.statement.Statement.hasCode', kind: "functiondeclaration", path: './dmd/statement/statement.has_code.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.statement.Statement.hasContinue', kind: "functiondeclaration", path: './dmd/statement/statement.has_continue.html', attributes: ["pure", "nothrow", "extern(C++)", "const"]},
{name: 'dmd.statement.Statement.isErrorStatement', kind: "functiondeclaration", path: './dmd/statement/statement.is_error_statement.html', attributes: ["final", "pure", "nothrow", "nogc", "extern(C++)", "inout"]},
{name: 'dmd.statement.Statement.last', kind: "functiondeclaration", path: './dmd/statement/statement.last.html', attributes: ["pure", "nothrow", "extern(C++)", "inout"]},
{name: 'dmd.statement.Statement.scopeCode', kind: "functiondeclaration", path: './dmd/statement/statement.scope_code.html', attributes: ["extern(C++)"]},
{name: 'dmd.statement.Statement.usesEH', kind: "functiondeclaration", path: './dmd/statement/statement.uses_eh.html', attributes: ["final", "extern(C++)"]},
{name: 'dmd.statement.BreakStatement', kind: "classdeclaration", path: './dmd/statement/break_statement.html', attributes: []},
{name: 'dmd.statement.CaseRangeStatement', kind: "classdeclaration", path: './dmd/statement/case_range_statement.html', attributes: []},
{name: 'dmd.statement.CaseStatement', kind: "classdeclaration", path: './dmd/statement/case_statement.html', attributes: []},
{name: 'dmd.statement.Catch', kind: "classdeclaration", path: './dmd/statement/catch.html', attributes: []},
{name: 'dmd.statement.CompileStatement', kind: "classdeclaration", path: './dmd/statement/compile_statement.html', attributes: []},
{name: 'dmd.statement.CompoundAsmStatement', kind: "classdeclaration", path: './dmd/statement/compound_asm_statement.html', attributes: []},
{name: 'dmd.statement.CompoundDeclarationStatement', kind: "classdeclaration", path: './dmd/statement/compound_declaration_statement.html', attributes: []},
{name: 'dmd.statement.CompoundStatement', kind: "classdeclaration", path: './dmd/statement/compound_statement.html', attributes: []},
{name: 'dmd.statement.CompoundStatement.this', kind: "functiondeclaration", path: './dmd/statement/compound_statement.this.html', attributes: ["final"]},
{name: 'dmd.statement.ConditionalStatement', kind: "classdeclaration", path: './dmd/statement/conditional_statement.html', attributes: []},
{name: 'dmd.statement.ContinueStatement', kind: "classdeclaration", path: './dmd/statement/continue_statement.html', attributes: []},
{name: 'dmd.statement.DebugStatement', kind: "classdeclaration", path: './dmd/statement/debug_statement.html', attributes: []},
{name: 'dmd.statement.DefaultStatement', kind: "classdeclaration", path: './dmd/statement/default_statement.html', attributes: []},
{name: 'dmd.statement.DoStatement', kind: "classdeclaration", path: './dmd/statement/do_statement.html', attributes: []},
{name: 'dmd.statement.DtorExpStatement', kind: "classdeclaration", path: './dmd/statement/dtor_exp_statement.html', attributes: []},
{name: 'dmd.statement.ErrorStatement', kind: "classdeclaration", path: './dmd/statement/error_statement.html', attributes: []},
{name: 'dmd.statement.ExpStatement', kind: "classdeclaration", path: './dmd/statement/exp_statement.html', attributes: []},
{name: 'dmd.statement.ForeachRangeStatement', kind: "classdeclaration", path: './dmd/statement/foreach_range_statement.html', attributes: []},
{name: 'dmd.statement.ForeachStatement', kind: "classdeclaration", path: './dmd/statement/foreach_statement.html', attributes: []},
{name: 'dmd.statement.ForStatement', kind: "classdeclaration", path: './dmd/statement/for_statement.html', attributes: []},
{name: 'dmd.statement.ForwardingStatement', kind: "classdeclaration", path: './dmd/statement/forwarding_statement.html', attributes: []},
{name: 'dmd.statement.ForwardingStatement.flatten', kind: "functiondeclaration", path: './dmd/statement/forwarding_statement.flatten.html', attributes: ["override", "extern(C++)"]},
{name: 'dmd.statement.ForwardingStatement.statement', kind: "variabledeclaration", path: './dmd/statement/forwarding_statement.statement.html', attributes: []},
{name: 'dmd.statement.ForwardingStatement.sym', kind: "variabledeclaration", path: './dmd/statement/forwarding_statement.sym.html', attributes: []},
{name: 'dmd.statement.GccAsmStatement', kind: "classdeclaration", path: './dmd/statement/gcc_asm_statement.html', attributes: []},
{name: 'dmd.statement.getException', kind: "functiondeclaration", path: './dmd/statement/get_exception.html', attributes: []},
{name: 'dmd.statement.getThrowable', kind: "functiondeclaration", path: './dmd/statement/get_throwable.html', attributes: []},
{name: 'dmd.statement.GotoCaseStatement', kind: "classdeclaration", path: './dmd/statement/goto_case_statement.html', attributes: []},
{name: 'dmd.statement.GotoDefaultStatement', kind: "classdeclaration", path: './dmd/statement/goto_default_statement.html', attributes: []},
{name: 'dmd.statement.GotoStatement', kind: "classdeclaration", path: './dmd/statement/goto_statement.html', attributes: []},
{name: 'dmd.statement.GotoStatement.tryBody', kind: "variabledeclaration", path: './dmd/statement/goto_statement.try_body.html', attributes: []},
{name: 'dmd.statement.IfStatement', kind: "classdeclaration", path: './dmd/statement/if_statement.html', attributes: []},
{name: 'dmd.statement.ImportStatement', kind: "classdeclaration", path: './dmd/statement/import_statement.html', attributes: []},
{name: 'dmd.statement.InlineAsmStatement', kind: "classdeclaration", path: './dmd/statement/inline_asm_statement.html', attributes: []},
{name: 'dmd.statement.LabelDsymbol', kind: "classdeclaration", path: './dmd/statement/label_dsymbol.html', attributes: []},
{name: 'dmd.statement.LabelStatement', kind: "classdeclaration", path: './dmd/statement/label_statement.html', attributes: []},
{name: 'dmd.statement.LabelStatement.tryBody', kind: "variabledeclaration", path: './dmd/statement/label_statement.try_body.html', attributes: []},
{name: 'dmd.statement.PeelStatement', kind: "classdeclaration", path: './dmd/statement/peel_statement.html', attributes: []},
{name: 'dmd.statement.PragmaStatement', kind: "classdeclaration", path: './dmd/statement/pragma_statement.html', attributes: []},
{name: 'dmd.statement.ReturnStatement', kind: "classdeclaration", path: './dmd/statement/return_statement.html', attributes: []},
{name: 'dmd.statement.ScopeGuardStatement', kind: "classdeclaration", path: './dmd/statement/scope_guard_statement.html', attributes: []},
{name: 'dmd.statement.ScopeStatement', kind: "classdeclaration", path: './dmd/statement/scope_statement.html', attributes: []},
{name: 'dmd.statement.Statement', kind: "classdeclaration", path: './dmd/statement/statement.html', attributes: []},
{name: 'dmd.statement.StaticAssertStatement', kind: "classdeclaration", path: './dmd/statement/static_assert_statement.html', attributes: []},
{name: 'dmd.statement.StaticForeachStatement', kind: "classdeclaration", path: './dmd/statement/static_foreach_statement.html', attributes: []},
{name: 'dmd.statement.STMT', kind: "enumdeclaration", path: './dmd/statement/stmt.html', attributes: []},
{name: 'dmd.statement.SwitchErrorStatement', kind: "classdeclaration", path: './dmd/statement/switch_error_statement.html', attributes: []},
{name: 'dmd.statement.SwitchStatement', kind: "classdeclaration", path: './dmd/statement/switch_statement.html', attributes: []},
{name: 'dmd.statement.SwitchStatement._body', kind: "variabledeclaration", path: './dmd/statement/switch_statement._body.html', attributes: []},
{name: 'dmd.statement.SwitchStatement.cases', kind: "variabledeclaration", path: './dmd/statement/switch_statement.cases.html', attributes: []},
{name: 'dmd.statement.SwitchStatement.checkLabel', kind: "functiondeclaration", path: './dmd/statement/switch_statement.check_label.html', attributes: []},
{name: 'dmd.statement.SwitchStatement.condition', kind: "variabledeclaration", path: './dmd/statement/switch_statement.condition.html', attributes: []},
{name: 'dmd.statement.SwitchStatement.gotoCases', kind: "variabledeclaration", path: './dmd/statement/switch_statement.goto_cases.html', attributes: []},
{name: 'dmd.statement.SwitchStatement.hasNoDefault', kind: "variabledeclaration", path: './dmd/statement/switch_statement.has_no_default.html', attributes: []},
{name: 'dmd.statement.SwitchStatement.hasVars', kind: "variabledeclaration", path: './dmd/statement/switch_statement.has_vars.html', attributes: []},
{name: 'dmd.statement.SwitchStatement.isFinal', kind: "variabledeclaration", path: './dmd/statement/switch_statement.is_final.html', attributes: []},
{name: 'dmd.statement.SwitchStatement.lastVar', kind: "variabledeclaration", path: './dmd/statement/switch_statement.last_var.html', attributes: []},
{name: 'dmd.statement.SwitchStatement.sdefault', kind: "variabledeclaration", path: './dmd/statement/switch_statement.sdefault.html', attributes: []},
{name: 'dmd.statement.SwitchStatement.tf', kind: "variabledeclaration", path: './dmd/statement/switch_statement.tf.html', attributes: []},
{name: 'dmd.statement.SwitchStatement.tryBody', kind: "variabledeclaration", path: './dmd/statement/switch_statement.try_body.html', attributes: []},
{name: 'dmd.statement.SynchronizedStatement', kind: "classdeclaration", path: './dmd/statement/synchronized_statement.html', attributes: []},
{name: 'dmd.statement.ThrowStatement', kind: "classdeclaration", path: './dmd/statement/throw_statement.html', attributes: []},
{name: 'dmd.statement.TryCatchStatement', kind: "classdeclaration", path: './dmd/statement/try_catch_statement.html', attributes: []},
{name: 'dmd.statement.TryCatchStatement.tryBody', kind: "variabledeclaration", path: './dmd/statement/try_catch_statement.try_body.html', attributes: []},
{name: 'dmd.statement.TryFinallyStatement', kind: "classdeclaration", path: './dmd/statement/try_finally_statement.html', attributes: []},
{name: 'dmd.statement.TryFinallyStatement.bodyFallsThru', kind: "variabledeclaration", path: './dmd/statement/try_finally_statement.body_falls_thru.html', attributes: []},
{name: 'dmd.statement.TryFinallyStatement.tryBody', kind: "variabledeclaration", path: './dmd/statement/try_finally_statement.try_body.html', attributes: []},
{name: 'dmd.statement.UnrolledLoopStatement', kind: "classdeclaration", path: './dmd/statement/unrolled_loop_statement.html', attributes: []},
{name: 'dmd.statement.WhileStatement', kind: "classdeclaration", path: './dmd/statement/while_statement.html', attributes: []},
{name: 'dmd.statement.WithStatement', kind: "classdeclaration", path: './dmd/statement/with_statement.html', attributes: []},
{name: 'dmd.statement_rewrite_walker', kind: "module", path: './dmd/statement_rewrite_walker.html', attributes: []},
{name: 'dmd.statement_rewrite_walker.StatementRewriteWalker', kind: "classdeclaration", path: './dmd/statement_rewrite_walker/statement_rewrite_walker.html', attributes: []},
{name: 'dmd.statementsem', kind: "module", path: './dmd/statementsem.html', attributes: []},
{name: 'dmd.statementsem.makeTupleForeach', kind: "functiondeclaration", path: './dmd/statementsem/make_tuple_foreach.html', attributes: []},
{name: 'dmd.statementsem.TupleForeachArgs', kind: "aliasdeclaration", path: './dmd/statementsem/tuple_foreach_args.html', attributes: []},
{name: 'dmd.statementsem.TupleForeachRet', kind: "aliasdeclaration", path: './dmd/statementsem/tuple_foreach_ret.html', attributes: []},
{name: 'dmd.staticassert', kind: "module", path: './dmd/staticassert.html', attributes: []},
{name: 'dmd.staticassert.StaticAssert', kind: "classdeclaration", path: './dmd/staticassert/static_assert.html', attributes: []},
{name: 'dmd.staticcond', kind: "module", path: './dmd/staticcond.html', attributes: []},
{name: 'dmd.staticcond.evalStaticCondition', kind: "functiondeclaration", path: './dmd/staticcond/eval_static_condition.html', attributes: []},
{name: 'dmd.staticcond.visualizeStaticCondition', kind: "functiondeclaration", path: './dmd/staticcond/visualize_static_condition.html', attributes: []},
{name: 'dmd.stmtstate', kind: "module", path: './dmd/stmtstate.html', attributes: []},
{name: 'dmd.stmtstate.StmtState', kind: "structdeclaration", path: './dmd/stmtstate/stmt_state.html', attributes: []},
{name: 'dmd.strictvisitor', kind: "module", path: './dmd/strictvisitor.html', attributes: []},
{name: 'dmd.strictvisitor.StrictVisitor', kind: "classdeclaration", path: './dmd/strictvisitor/strict_visitor.html', attributes: []},
{name: 'dmd.target', kind: "module", path: './dmd/target.html', attributes: []},
{name: 'dmd.target.Target', kind: "structdeclaration", path: './dmd/target/target.html', attributes: []},
{name: 'dmd.target.Target._init', kind: "functiondeclaration", path: './dmd/target/target._init.html', attributes: ["extern(C++)"]},
{name: 'dmd.target.Target.alignsize', kind: "functiondeclaration", path: './dmd/target/target.alignsize.html', attributes: ["extern(C++)"]},
{name: 'dmd.target.Target.c', kind: "variabledeclaration", path: './dmd/target/target.c.html', attributes: []},
{name: 'dmd.target.Target.classinfosize', kind: "variabledeclaration", path: './dmd/target/target.classinfosize.html', attributes: []},
{name: 'dmd.target.Target.cpp', kind: "variabledeclaration", path: './dmd/target/target.cpp.html', attributes: []},
{name: 'dmd.target.Target.critsecsize', kind: "functiondeclaration", path: './dmd/target/target.critsecsize.html', attributes: ["extern(C++)"]},
{name: 'dmd.target.Target.deinitialize', kind: "functiondeclaration", path: './dmd/target/target.deinitialize.html', attributes: ["extern(C++)"]},
{name: 'dmd.target.Target.DoubleProperties', kind: "variabledeclaration", path: './dmd/target/target.double_properties.html', attributes: []},
{name: 'dmd.target.Target.fieldalign', kind: "functiondeclaration", path: './dmd/target/target.fieldalign.html', attributes: ["extern(C++)"]},
{name: 'dmd.target.Target.FloatProperties', kind: "variabledeclaration", path: './dmd/target/target.float_properties.html', attributes: []},
{name: 'dmd.target.Target.FPTypeProperties', kind: "structdeclaration", path: './dmd/target/target.fp_type_properties.html', attributes: []},
{name: 'dmd.target.Target.FPTypeProperties.dig', kind: "variabledeclaration", path: './dmd/target/target.fp_type_properties.dig.html', attributes: []},
{name: 'dmd.target.Target.FPTypeProperties.epsilon', kind: "variabledeclaration", path: './dmd/target/target.fp_type_properties.epsilon.html', attributes: []},
{name: 'dmd.target.Target.FPTypeProperties.infinity', kind: "variabledeclaration", path: './dmd/target/target.fp_type_properties.infinity.html', attributes: []},
{name: 'dmd.target.Target.FPTypeProperties.mant_dig', kind: "variabledeclaration", path: './dmd/target/target.fp_type_properties.mant_dig.html', attributes: []},
{name: 'dmd.target.Target.FPTypeProperties.max', kind: "variabledeclaration", path: './dmd/target/target.fp_type_properties.max.html', attributes: []},
{name: 'dmd.target.Target.FPTypeProperties.max_10_exp', kind: "variabledeclaration", path: './dmd/target/target.fp_type_properties.max_10_exp.html', attributes: []},
{name: 'dmd.target.Target.FPTypeProperties.max_exp', kind: "variabledeclaration", path: './dmd/target/target.fp_type_properties.max_exp.html', attributes: []},
{name: 'dmd.target.Target.FPTypeProperties.min_10_exp', kind: "variabledeclaration", path: './dmd/target/target.fp_type_properties.min_10_exp.html', attributes: []},
{name: 'dmd.target.Target.FPTypeProperties.min_exp', kind: "variabledeclaration", path: './dmd/target/target.fp_type_properties.min_exp.html', attributes: []},
{name: 'dmd.target.Target.FPTypeProperties.min_normal', kind: "variabledeclaration", path: './dmd/target/target.fp_type_properties.min_normal.html', attributes: []},
{name: 'dmd.target.Target.FPTypeProperties.nan', kind: "variabledeclaration", path: './dmd/target/target.fp_type_properties.nan.html', attributes: []},
{name: 'dmd.target.Target.getTargetInfo', kind: "functiondeclaration", path: './dmd/target/target.get_target_info.html', attributes: ["extern(C++)"]},
{name: 'dmd.target.Target.isPOSIX', kind: "functiondeclaration", path: './dmd/target/target.is_posix.html', attributes: ["nothrow", "property", "nogc", "scope", "const"]},
{name: 'dmd.target.Target.isReturnOnStack', kind: "functiondeclaration", path: './dmd/target/target.is_return_on_stack.html', attributes: ["extern(C++)"]},
{name: 'dmd.target.Target.isVectorOpSupported', kind: "functiondeclaration", path: './dmd/target/target.is_vector_op_supported.html', attributes: ["extern(C++)"]},
{name: 'dmd.target.Target.isVectorTypeSupported', kind: "functiondeclaration", path: './dmd/target/target.is_vector_type_supported.html', attributes: ["extern(C++)"]},
{name: 'dmd.target.Target.isXmmSupported', kind: "functiondeclaration", path: './dmd/target/target.is_xmm_supported.html', attributes: []},
{name: 'dmd.target.Target.maxStaticDataSize', kind: "variabledeclaration", path: './dmd/target/target.max_static_data_size.html', attributes: []},
{name: 'dmd.target.Target.objc', kind: "variabledeclaration", path: './dmd/target/target.objc.html', attributes: []},
{name: 'dmd.target.Target.parameterSize', kind: "functiondeclaration", path: './dmd/target/target.parameter_size.html', attributes: ["extern(C++)"]},
{name: 'dmd.target.Target.ptrsize', kind: "variabledeclaration", path: './dmd/target/target.ptrsize.html', attributes: []},
{name: 'dmd.target.Target.realalignsize', kind: "variabledeclaration", path: './dmd/target/target.realalignsize.html', attributes: []},
{name: 'dmd.target.Target.realpad', kind: "variabledeclaration", path: './dmd/target/target.realpad.html', attributes: []},
{name: 'dmd.target.Target.RealProperties', kind: "variabledeclaration", path: './dmd/target/target.real_properties.html', attributes: []},
{name: 'dmd.target.Target.realsize', kind: "variabledeclaration", path: './dmd/target/target.realsize.html', attributes: []},
{name: 'dmd.target.Target.systemLinkage', kind: "functiondeclaration", path: './dmd/target/target.system_linkage.html', attributes: ["extern(C++)"]},
{name: 'dmd.target.Target.toArgTypes', kind: "functiondeclaration", path: './dmd/target/target.to_arg_types.html', attributes: ["extern(C++)"]},
{name: 'dmd.target.Target.va_listType', kind: "functiondeclaration", path: './dmd/target/target.va_list_type.html', attributes: ["extern(C++)"]},
{name: 'dmd.target.target', kind: "variabledeclaration", path: './dmd/target/target.html', attributes: []},
{name: 'dmd.target.TargetC', kind: "structdeclaration", path: './dmd/target/target_c.html', attributes: []},
{name: 'dmd.target.TargetC.criticalSectionSize', kind: "variabledeclaration", path: './dmd/target/target_c.critical_section_size.html', attributes: []},
{name: 'dmd.target.TargetC.long_doublesize', kind: "variabledeclaration", path: './dmd/target/target_c.long_doublesize.html', attributes: []},
{name: 'dmd.target.TargetC.longsize', kind: "variabledeclaration", path: './dmd/target/target_c.longsize.html', attributes: []},
{name: 'dmd.target.TargetCPP', kind: "structdeclaration", path: './dmd/target/target_cpp.html', attributes: []},
{name: 'dmd.target.TargetCPP.exceptions', kind: "variabledeclaration", path: './dmd/target/target_cpp.exceptions.html', attributes: []},
{name: 'dmd.target.TargetCPP.fundamentalType', kind: "functiondeclaration", path: './dmd/target/target_cpp.fundamental_type.html', attributes: ["extern(C++)"]},
{name: 'dmd.target.TargetCPP.parameterType', kind: "functiondeclaration", path: './dmd/target/target_cpp.parameter_type.html', attributes: ["extern(C++)"]},
{name: 'dmd.target.TargetCPP.reverseOverloads', kind: "variabledeclaration", path: './dmd/target/target_cpp.reverse_overloads.html', attributes: []},
{name: 'dmd.target.TargetCPP.toMangle', kind: "functiondeclaration", path: './dmd/target/target_cpp.to_mangle.html', attributes: ["extern(C++)"]},
{name: 'dmd.target.TargetCPP.twoDtorInVtable', kind: "variabledeclaration", path: './dmd/target/target_cpp.two_dtor_in_vtable.html', attributes: []},
{name: 'dmd.target.TargetCPP.typeInfoMangle', kind: "functiondeclaration", path: './dmd/target/target_cpp.type_info_mangle.html', attributes: ["extern(C++)"]},
{name: 'dmd.target.TargetCPP.typeMangle', kind: "functiondeclaration", path: './dmd/target/target_cpp.type_mangle.html', attributes: ["extern(C++)"]},
{name: 'dmd.target.TargetObjC', kind: "structdeclaration", path: './dmd/target/target_obj_c.html', attributes: []},
{name: 'dmd.target.TargetObjC.supported', kind: "variabledeclaration", path: './dmd/target/target_obj_c.supported.html', attributes: []},
{name: 'dmd.templateparamsem', kind: "module", path: './dmd/templateparamsem.html', attributes: []},
{name: 'dmd.templateparamsem.aliasParameterSemantic', kind: "functiondeclaration", path: './dmd/templateparamsem/alias_parameter_semantic.html', attributes: []},
{name: 'dmd.templateparamsem.tpsemantic', kind: "functiondeclaration", path: './dmd/templateparamsem/tpsemantic.html', attributes: ["extern(C++)"]},
{name: 'dmd.tocsym', kind: "module", path: './dmd/tocsym.html', attributes: []},
{name: 'dmd.tocsym.aaGetSymbol', kind: "functiondeclaration", path: './dmd/tocsym/aa_get_symbol.html', attributes: ["extern(C++)"]},
{name: 'dmd.tocsym.fake_classsym', kind: "functiondeclaration", path: './dmd/tocsym/fake_classsym.html', attributes: ["extern(C++)"]},
{name: 'dmd.tocsym.toImport', kind: "functiondeclaration", path: './dmd/tocsym/to_import.html', attributes: ["extern(C++)"]},
{name: 'dmd.tocsym.toInitializer', kind: "functiondeclaration", path: './dmd/tocsym/to_initializer.html', attributes: ["extern(C++)"]},
{name: 'dmd.tocsym.toSymbol', kind: "functiondeclaration", path: './dmd/tocsym/to_symbol.html', attributes: ["extern(C++)"]},
{name: 'dmd.tocsym.toSymbolCpp', kind: "functiondeclaration", path: './dmd/tocsym/to_symbol_cpp.html', attributes: ["extern(C++)"]},
{name: 'dmd.tocsym.toSymbolCppTypeInfo', kind: "functiondeclaration", path: './dmd/tocsym/to_symbol_cpp_type_info.html', attributes: ["extern(C++)"]},
{name: 'dmd.tocsym.toSymbolX', kind: "functiondeclaration", path: './dmd/tocsym/to_symbol_x.html', attributes: ["extern(C++)"]},
{name: 'dmd.tocsym.toThunkSymbol', kind: "functiondeclaration", path: './dmd/tocsym/to_thunk_symbol.html', attributes: ["extern(C++)"]},
{name: 'dmd.tocsym.toVtblSymbol', kind: "functiondeclaration", path: './dmd/tocsym/to_vtbl_symbol.html', attributes: ["extern(C++)"]},
{name: 'dmd.toctype', kind: "module", path: './dmd/toctype.html', attributes: []},
{name: 'dmd.toctype.modToTym', kind: "functiondeclaration", path: './dmd/toctype/mod_to_tym.html', attributes: []},
{name: 'dmd.toctype.Type_toCtype', kind: "functiondeclaration", path: './dmd/toctype/type_to_ctype.html', attributes: ["extern(C++)"]},
{name: 'dmd.tocvdebug', kind: "module", path: './dmd/tocvdebug.html', attributes: []},
{name: 'dmd.tocvdebug.toDebug', kind: "functiondeclaration", path: './dmd/tocvdebug/to_debug.html', attributes: ["extern(C++)"]},
{name: 'dmd.todt', kind: "module", path: './dmd/todt.html', attributes: []},
{name: 'dmd.todt.cpp_type_info_ptr_toDt', kind: "functiondeclaration", path: './dmd/todt/cpp_type_info_ptr_to_dt.html', attributes: ["extern(C++)"]},
{name: 'dmd.toir', kind: "module", path: './dmd/toir.html', attributes: []},
{name: 'dmd.toir.buildCapture', kind: "functiondeclaration", path: './dmd/toir/build_capture.html', attributes: ["extern(C++)"]},
{name: 'dmd.toir.buildClosure', kind: "functiondeclaration", path: './dmd/toir/build_closure.html', attributes: ["extern(C++)"]},
{name: 'dmd.toir.fixEthis2', kind: "functiondeclaration", path: './dmd/toir/fix_ethis2.html', attributes: ["extern(C++)"]},
{name: 'dmd.toir.getEthis', kind: "functiondeclaration", path: './dmd/toir/get_ethis.html', attributes: ["extern(C++)"]},
{name: 'dmd.toir.getParentClosureType', kind: "functiondeclaration", path: './dmd/toir/get_parent_closure_type.html', attributes: ["extern(C++)"]},
{name: 'dmd.toir.incUsageElem', kind: "functiondeclaration", path: './dmd/toir/inc_usage_elem.html', attributes: []},
{name: 'dmd.toir.intrinsic_op', kind: "functiondeclaration", path: './dmd/toir/intrinsic_op.html', attributes: ["extern(C++)"]},
{name: 'dmd.toir.IRState', kind: "structdeclaration", path: './dmd/toir/ir_state.html', attributes: []},
{name: 'dmd.toir.IRState.arrayBoundsCheck', kind: "functiondeclaration", path: './dmd/toir/ir_state.array_bounds_check.html', attributes: []},
{name: 'dmd.toir.IRState.isNothrow', kind: "functiondeclaration", path: './dmd/toir/ir_state.is_nothrow.html', attributes: []},
{name: 'dmd.toir.Label', kind: "structdeclaration", path: './dmd/toir/label.html', attributes: []},
{name: 'dmd.toir.resolveLengthVar', kind: "functiondeclaration", path: './dmd/toir/resolve_length_var.html', attributes: ["extern(C++)"]},
{name: 'dmd.toir.retStyle', kind: "functiondeclaration", path: './dmd/toir/ret_style.html', attributes: ["extern(C++)"]},
{name: 'dmd.toir.setClosureVarOffset', kind: "functiondeclaration", path: './dmd/toir/set_closure_var_offset.html', attributes: ["extern(C++)"]},
{name: 'dmd.toir.setEthis', kind: "functiondeclaration", path: './dmd/toir/set_ethis.html', attributes: ["extern(C++)"]},
{name: 'dmd.tokens', kind: "module", path: './dmd/tokens.html', attributes: []},
{name: 'dmd.tokens.Token', kind: "structdeclaration", path: './dmd/tokens/token.html', attributes: []},
{name: 'dmd.tokens.Token.setString', kind: "functiondeclaration", path: './dmd/tokens/token.set_string.html', attributes: ["extern(C++)"]},
{name: 'dmd.toobj', kind: "module", path: './dmd/toobj.html', attributes: []},
{name: 'dmd.toobj.baseVtblOffset', kind: "functiondeclaration", path: './dmd/toobj/base_vtbl_offset.html', attributes: ["extern(C++)"]},
{name: 'dmd.toobj.write_instance_pointers', kind: "functiondeclaration", path: './dmd/toobj/write_instance_pointers.html', attributes: ["extern(C++)"]},
{name: 'dmd.toobj.write_pointers', kind: "functiondeclaration", path: './dmd/toobj/write_pointers.html', attributes: ["extern(C++)"]},
{name: 'dmd.traits', kind: "module", path: './dmd/traits.html', attributes: []},
{name: 'dmd.traits.getTypePointerBitmap', kind: "functiondeclaration", path: './dmd/traits/get_type_pointer_bitmap.html', attributes: []},
{name: 'dmd.transitivevisitor', kind: "module", path: './dmd/transitivevisitor.html', attributes: []},
{name: 'dmd.transitivevisitor.ParseTimeTransitiveVisitor', kind: "classdeclaration", path: './dmd/transitivevisitor/parse_time_transitive_visitor.html', attributes: []},
{name: 'dmd.typesem', kind: "module", path: './dmd/typesem.html', attributes: []},
{name: 'dmd.typesem.compileTypeMixin', kind: "functiondeclaration", path: './dmd/typesem/compile_type_mixin.html', attributes: []},
{name: 'dmd.typesem.defaultInit', kind: "functiondeclaration", path: './dmd/typesem/default_init.html', attributes: []},
{name: 'dmd.typesem.dotExp', kind: "functiondeclaration", path: './dmd/typesem/dot_exp.html', attributes: []},
{name: 'dmd.typesem.getProperty', kind: "functiondeclaration", path: './dmd/typesem/get_property.html', attributes: []},
{name: 'dmd.typesem.merge', kind: "functiondeclaration", path: './dmd/typesem/merge.html', attributes: []},
{name: 'dmd.typesem.resolve', kind: "functiondeclaration", path: './dmd/typesem/resolve.html', attributes: []},
{name: 'dmd.typesem.typeSemantic', kind: "functiondeclaration", path: './dmd/typesem/type_semantic.html', attributes: ["extern(C++)"]},
{name: 'dmd.typesem.typeToExpression', kind: "functiondeclaration", path: './dmd/typesem/type_to_expression.html', attributes: []},
{name: 'dmd.typinf', kind: "module", path: './dmd/typinf.html', attributes: []},
{name: 'dmd.typinf.genTypeInfo', kind: "functiondeclaration", path: './dmd/typinf/gen_type_info.html', attributes: []},
{name: 'dmd.typinf.getTypeInfoType', kind: "functiondeclaration", path: './dmd/typinf/get_type_info_type.html', attributes: ["extern(C++)"]},
{name: 'dmd.typinf.isSpeculativeType', kind: "functiondeclaration", path: './dmd/typinf/is_speculative_type.html', attributes: []},
{name: 'dmd.utf', kind: "module", path: './dmd/utf.html', attributes: []},
{name: 'dmd.utf.isUniAlpha', kind: "functiondeclaration", path: './dmd/utf/is_uni_alpha.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'dmd.utf.utf_codeLength', kind: "functiondeclaration", path: './dmd/utf/utf_code_length.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'dmd.utf.utf_codeLengthChar', kind: "functiondeclaration", path: './dmd/utf/utf_code_length_char.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'dmd.utf.utf_decodeChar', kind: "functiondeclaration", path: './dmd/utf/utf_decode_char.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'dmd.utf.utf_decodeWchar', kind: "functiondeclaration", path: './dmd/utf/utf_decode_wchar.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'dmd.utf.utf_isValidDchar', kind: "functiondeclaration", path: './dmd/utf/utf_is_valid_dchar.html', attributes: ["pure", "nothrow", "nogc"]},
{name: 'dmd.utils', kind: "module", path: './dmd/utils.html', attributes: []},
{name: 'dmd.utils.ensurePathToNameExists', kind: "functiondeclaration", path: './dmd/utils/ensure_path_to_name_exists.html', attributes: []},
{name: 'dmd.utils.escapePath', kind: "functiondeclaration", path: './dmd/utils/escape_path.html', attributes: []},
{name: 'dmd.utils.parseDigits', kind: "functiondeclaration", path: './dmd/utils/parse_digits.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'dmd.utils.readFile', kind: "functiondeclaration", path: './dmd/utils/read_file.html', attributes: []},
{name: 'dmd.utils.toWinPath', kind: "functiondeclaration", path: './dmd/utils/to_win_path.html', attributes: []},
{name: 'dmd.utils.writeFile', kind: "functiondeclaration", path: './dmd/utils/write_file.html', attributes: []},
{name: 'dmd.visitor', kind: "module", path: './dmd/visitor.html', attributes: []},
{name: 'dmd.visitor.SemanticTimePermissiveVisitor', kind: "classdeclaration", path: './dmd/visitor/semantic_time_permissive_visitor.html', attributes: []},
{name: 'dmd.visitor.SemanticTimeTransitiveVisitor', kind: "classdeclaration", path: './dmd/visitor/semantic_time_transitive_visitor.html', attributes: []},
{name: 'dmd.visitor.Visitor', kind: "classdeclaration", path: './dmd/visitor/visitor.html', attributes: []},
{name: 'dmd.vsoptions', kind: "module", path: './dmd/vsoptions.html', attributes: []},
{name: 'etc.c.odbc.sql', kind: "module", path: './etc/c/odbc/sql.html', attributes: []},
{name: 'etc.c.odbc.sqlext', kind: "module", path: './etc/c/odbc/sqlext.html', attributes: []},
{name: 'etc.c.odbc.sqltypes', kind: "module", path: './etc/c/odbc/sqltypes.html', attributes: []},
{name: 'etc.c.odbc.sqlucode', kind: "module", path: './etc/c/odbc/sqlucode.html', attributes: []},
{name: 'etc.c.curl', kind: "module", path: './etc/c/curl.html', attributes: []},
{name: 'etc.c.curl._N2', kind: "structdeclaration", path: './etc/c/curl/__n2.html', attributes: []},
{name: 'etc.c.curl._N2.group', kind: "variabledeclaration", path: './etc/c/curl/__n2.group.html', attributes: []},
{name: 'etc.c.curl._N2.perm', kind: "variabledeclaration", path: './etc/c/curl/__n2.perm.html', attributes: []},
{name: 'etc.c.curl._N2.target', kind: "variabledeclaration", path: './etc/c/curl/__n2.target.html', attributes: []},
{name: 'etc.c.curl._N2.time', kind: "variabledeclaration", path: './etc/c/curl/__n2.time.html', attributes: []},
{name: 'etc.c.curl._N2.user', kind: "variabledeclaration", path: './etc/c/curl/__n2.user.html', attributes: []},
{name: 'etc.c.curl._N28', kind: "structdeclaration", path: './etc/c/curl/__n28.html', attributes: []},
{name: 'etc.c.curl._N28.age', kind: "variabledeclaration", path: './etc/c/curl/__n28.age.html', attributes: []},
{name: 'etc.c.curl._N28.ares', kind: "variabledeclaration", path: './etc/c/curl/__n28.ares.html', attributes: []},
{name: 'etc.c.curl._N28.features', kind: "variabledeclaration", path: './etc/c/curl/__n28.features.html', attributes: []},
{name: 'etc.c.curl._N28.host', kind: "variabledeclaration", path: './etc/c/curl/__n28.host.html', attributes: []},
{name: 'etc.c.curl._N28.iconv_ver_num', kind: "variabledeclaration", path: './etc/c/curl/__n28.iconv_ver_num.html', attributes: []},
{name: 'etc.c.curl._N28.libidn', kind: "variabledeclaration", path: './etc/c/curl/__n28.libidn.html', attributes: []},
{name: 'etc.c.curl._N28.libssh_version', kind: "variabledeclaration", path: './etc/c/curl/__n28.libssh_version.html', attributes: []},
{name: 'etc.c.curl._N28.libz_version', kind: "variabledeclaration", path: './etc/c/curl/__n28.libz_version.html', attributes: []},
{name: 'etc.c.curl._N28.protocols', kind: "variabledeclaration", path: './etc/c/curl/__n28.protocols.html', attributes: []},
{name: 'etc.c.curl._N28.ssl_version', kind: "variabledeclaration", path: './etc/c/curl/__n28.ssl_version.html', attributes: []},
{name: 'etc.c.curl._N28.ssl_version_num', kind: "variabledeclaration", path: './etc/c/curl/__n28.ssl_version_num.html', attributes: []},
{name: 'etc.c.curl._N28.version_', kind: "variabledeclaration", path: './etc/c/curl/__n28.version_.html', attributes: []},
{name: 'etc.c.curl._N28.version_num', kind: "variabledeclaration", path: './etc/c/curl/__n28.version_num.html', attributes: []},
{name: 'etc.c.curl._N31', kind: "uniondeclaration", path: './etc/c/curl/__n31.html', attributes: []},
{name: 'etc.c.curl._N31.result', kind: "variabledeclaration", path: './etc/c/curl/__n31.result.html', attributes: []},
{name: 'etc.c.curl._N31.whatever', kind: "variabledeclaration", path: './etc/c/curl/__n31.whatever.html', attributes: []},
{name: 'etc.c.curl.CURL', kind: "aliasdeclaration", path: './etc/c/curl/curl.html', attributes: []},
{name: 'etc.c.curl.curl_calloc_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_calloc_callback.html', attributes: []},
{name: 'etc.c.curl.curl_certinfo', kind: "structdeclaration", path: './etc/c/curl/curl_certinfo.html', attributes: []},
{name: 'etc.c.curl.curl_certinfo.certinfo', kind: "variabledeclaration", path: './etc/c/curl/curl_certinfo.certinfo.html', attributes: []},
{name: 'etc.c.curl.curl_certinfo.num_of_certs', kind: "variabledeclaration", path: './etc/c/curl/curl_certinfo.num_of_certs.html', attributes: []},
{name: 'etc.c.curl.curl_chunk_bgn_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_chunk_bgn_callback.html', attributes: []},
{name: 'etc.c.curl.curl_chunk_end_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_chunk_end_callback.html', attributes: []},
{name: 'etc.c.curl.curl_closepolicy', kind: "aliasdeclaration", path: './etc/c/curl/curl_closepolicy.html', attributes: []},
{name: 'etc.c.curl.curl_conv_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_conv_callback.html', attributes: []},
{name: 'etc.c.curl.curl_debug_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_debug_callback.html', attributes: []},
{name: 'etc.c.curl.curl_easy_cleanup', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_cleanup.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_duphandle', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_duphandle.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_escape', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_escape.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_getinfo', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_getinfo.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_init', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_init.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_pause', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_pause.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_perform', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_perform.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_recv', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_recv.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_reset', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_reset.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_send', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_send.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_setopt', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_setopt.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_strerror', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_strerror.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_easy_unescape', kind: "functiondeclaration", path: './etc/c/curl/curl_easy_unescape.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.CURL_ERROR_SIZE', kind: "enummemberdeclaration", path: './etc/c/curl/cur_l_erro_r_size.html', attributes: []},
{name: 'etc.c.curl.curl_escape', kind: "functiondeclaration", path: './etc/c/curl/curl_escape.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_fileinfo', kind: "structdeclaration", path: './etc/c/curl/curl_fileinfo.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.b_data', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.b_data.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.b_size', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.b_size.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.b_used', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.b_used.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.filename', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.filename.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.filetype', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.filetype.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.flags', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.flags.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.gid', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.gid.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.hardlinks', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.hardlinks.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.perm', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.perm.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.size', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.size.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.strings', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.strings.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.time', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.time.html', attributes: []},
{name: 'etc.c.curl.curl_fileinfo.uid', kind: "variabledeclaration", path: './etc/c/curl/curl_fileinfo.uid.html', attributes: []},
{name: 'etc.c.curl.curl_fnmatch_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_fnmatch_callback.html', attributes: []},
{name: 'etc.c.curl.curl_formadd', kind: "functiondeclaration", path: './etc/c/curl/curl_formadd.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_formfree', kind: "functiondeclaration", path: './etc/c/curl/curl_formfree.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_formget', kind: "functiondeclaration", path: './etc/c/curl/curl_formget.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_formget_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_formget_callback.html', attributes: []},
{name: 'etc.c.curl.curl_forms', kind: "structdeclaration", path: './etc/c/curl/curl_forms.html', attributes: []},
{name: 'etc.c.curl.curl_forms.option', kind: "variabledeclaration", path: './etc/c/curl/curl_forms.option.html', attributes: []},
{name: 'etc.c.curl.curl_forms.value', kind: "variabledeclaration", path: './etc/c/curl/curl_forms.value.html', attributes: []},
{name: 'etc.c.curl.curl_free', kind: "functiondeclaration", path: './etc/c/curl/curl_free.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_free_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_free_callback.html', attributes: []},
{name: 'etc.c.curl.curl_ftpauth', kind: "aliasdeclaration", path: './etc/c/curl/curl_ftpauth.html', attributes: []},
{name: 'etc.c.curl.curl_ftpccc', kind: "aliasdeclaration", path: './etc/c/curl/curl_ftpccc.html', attributes: []},
{name: 'etc.c.curl.curl_ftpcreatedir', kind: "aliasdeclaration", path: './etc/c/curl/curl_ftpcreatedir.html', attributes: []},
{name: 'etc.c.curl.curl_ftpmethod', kind: "aliasdeclaration", path: './etc/c/curl/curl_ftpmethod.html', attributes: []},
{name: 'etc.c.curl.curl_getdate', kind: "functiondeclaration", path: './etc/c/curl/curl_getdate.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_getenv', kind: "functiondeclaration", path: './etc/c/curl/curl_getenv.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_global_cleanup', kind: "functiondeclaration", path: './etc/c/curl/curl_global_cleanup.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_global_init', kind: "functiondeclaration", path: './etc/c/curl/curl_global_init.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_global_init_mem', kind: "functiondeclaration", path: './etc/c/curl/curl_global_init_mem.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_httppost', kind: "structdeclaration", path: './etc/c/curl/curl_httppost.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.buffer', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.buffer.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.bufferlength', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.bufferlength.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.contentheader', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.contentheader.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.contents', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.contents.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.contentslength', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.contentslength.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.contenttype', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.contenttype.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.flags', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.flags.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.more', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.more.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.name', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.name.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.namelength', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.namelength.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.next', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.next.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.showfilename', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.showfilename.html', attributes: []},
{name: 'etc.c.curl.curl_httppost.userp', kind: "variabledeclaration", path: './etc/c/curl/curl_httppost.userp.html', attributes: []},
{name: 'etc.c.curl.curl_infotype', kind: "aliasdeclaration", path: './etc/c/curl/curl_infotype.html', attributes: []},
{name: 'etc.c.curl.curl_ioctl_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_ioctl_callback.html', attributes: []},
{name: 'etc.c.curl.curl_khkey', kind: "structdeclaration", path: './etc/c/curl/curl_khkey.html', attributes: []},
{name: 'etc.c.curl.curl_khkey.key', kind: "variabledeclaration", path: './etc/c/curl/curl_khkey.key.html', attributes: []},
{name: 'etc.c.curl.curl_khkey.keytype', kind: "variabledeclaration", path: './etc/c/curl/curl_khkey.keytype.html', attributes: []},
{name: 'etc.c.curl.curl_khkey.len', kind: "variabledeclaration", path: './etc/c/curl/curl_khkey.len.html', attributes: []},
{name: 'etc.c.curl.curl_lock_access', kind: "aliasdeclaration", path: './etc/c/curl/curl_lock_access.html', attributes: []},
{name: 'etc.c.curl.curl_lock_data', kind: "aliasdeclaration", path: './etc/c/curl/curl_lock_data.html', attributes: []},
{name: 'etc.c.curl.curl_lock_function', kind: "aliasdeclaration", path: './etc/c/curl/curl_lock_function.html', attributes: []},
{name: 'etc.c.curl.curl_malloc_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_malloc_callback.html', attributes: []},
{name: 'etc.c.curl.CURL_MAX_HTTP_HEADER', kind: "enummemberdeclaration", path: './etc/c/curl/cur_l_ma_x_htt_p_header.html', attributes: []},
{name: 'etc.c.curl.CURL_MAX_WRITE_SIZE', kind: "enummemberdeclaration", path: './etc/c/curl/cur_l_ma_x_writ_e_size.html', attributes: []},
{name: 'etc.c.curl.curl_multi_add_handle', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_add_handle.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_assign', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_assign.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_cleanup', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_cleanup.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_fdset', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_fdset.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_info_read', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_info_read.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_init', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_init.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_perform', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_perform.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_remove_handle', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_remove_handle.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_setopt', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_setopt.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_socket', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_socket.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_socket_action', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_socket_action.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_socket_all', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_socket_all.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_strerror', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_strerror.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_timeout', kind: "functiondeclaration", path: './etc/c/curl/curl_multi_timeout.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_multi_timer_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_multi_timer_callback.html', attributes: []},
{name: 'etc.c.curl.curl_off_t', kind: "aliasdeclaration", path: './etc/c/curl/curl_off_t.html', attributes: []},
{name: 'etc.c.curl.curl_opensocket_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_opensocket_callback.html', attributes: []},
{name: 'etc.c.curl.curl_progress_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_progress_callback.html', attributes: []},
{name: 'etc.c.curl.curl_proxytype', kind: "aliasdeclaration", path: './etc/c/curl/curl_proxytype.html', attributes: []},
{name: 'etc.c.curl.curl_read_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_read_callback.html', attributes: []},
{name: 'etc.c.curl.curl_realloc_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_realloc_callback.html', attributes: []},
{name: 'etc.c.curl.curl_seek_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_seek_callback.html', attributes: []},
{name: 'etc.c.curl.curl_share_cleanup', kind: "functiondeclaration", path: './etc/c/curl/curl_share_cleanup.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_share_init', kind: "functiondeclaration", path: './etc/c/curl/curl_share_init.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_share_setopt', kind: "functiondeclaration", path: './etc/c/curl/curl_share_setopt.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_share_strerror', kind: "functiondeclaration", path: './etc/c/curl/curl_share_strerror.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_slist', kind: "structdeclaration", path: './etc/c/curl/curl_slist.html', attributes: []},
{name: 'etc.c.curl.curl_slist_append', kind: "functiondeclaration", path: './etc/c/curl/curl_slist_append.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_slist_free_all', kind: "functiondeclaration", path: './etc/c/curl/curl_slist_free_all.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_sockaddr', kind: "structdeclaration", path: './etc/c/curl/curl_sockaddr.html', attributes: []},
{name: 'etc.c.curl.curl_sockaddr.addr', kind: "variabledeclaration", path: './etc/c/curl/curl_sockaddr.addr.html', attributes: []},
{name: 'etc.c.curl.curl_sockaddr.addrlen', kind: "variabledeclaration", path: './etc/c/curl/curl_sockaddr.addrlen.html', attributes: []},
{name: 'etc.c.curl.curl_sockaddr.family', kind: "variabledeclaration", path: './etc/c/curl/curl_sockaddr.family.html', attributes: []},
{name: 'etc.c.curl.curl_sockaddr.protocol', kind: "variabledeclaration", path: './etc/c/curl/curl_sockaddr.protocol.html', attributes: []},
{name: 'etc.c.curl.curl_sockaddr.socktype', kind: "variabledeclaration", path: './etc/c/curl/curl_sockaddr.socktype.html', attributes: []},
{name: 'etc.c.curl.curl_socket_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_socket_callback.html', attributes: []},
{name: 'etc.c.curl.curl_socket_t', kind: "aliasdeclaration", path: './etc/c/curl/curl_socket_t.html', attributes: []},
{name: 'etc.c.curl.CURL_SOCKET_TIMEOUT', kind: "aliasdeclaration", path: './etc/c/curl/cur_l_socke_t_timeout.html', attributes: []},
{name: 'etc.c.curl.curl_sockopt_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_sockopt_callback.html', attributes: []},
{name: 'etc.c.curl.curl_sshkeycallback', kind: "aliasdeclaration", path: './etc/c/curl/curl_sshkeycallback.html', attributes: []},
{name: 'etc.c.curl.curl_ssl_ctx_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_ssl_ctx_callback.html', attributes: []},
{name: 'etc.c.curl.curl_strdup_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_strdup_callback.html', attributes: []},
{name: 'etc.c.curl.curl_strequal', kind: "functiondeclaration", path: './etc/c/curl/curl_strequal.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_strnequal', kind: "functiondeclaration", path: './etc/c/curl/curl_strnequal.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_TimeCond', kind: "aliasdeclaration", path: './etc/c/curl/curl__time_cond.html', attributes: []},
{name: 'etc.c.curl.curl_unescape', kind: "functiondeclaration", path: './etc/c/curl/curl_unescape.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_unlock_function', kind: "aliasdeclaration", path: './etc/c/curl/curl_unlock_function.html', attributes: []},
{name: 'etc.c.curl.curl_usessl', kind: "aliasdeclaration", path: './etc/c/curl/curl_usessl.html', attributes: []},
{name: 'etc.c.curl.curl_version', kind: "functiondeclaration", path: './etc/c/curl/curl_version.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_version_info', kind: "functiondeclaration", path: './etc/c/curl/curl_version_info.html', attributes: ["extern(C)"]},
{name: 'etc.c.curl.curl_version_info_data', kind: "aliasdeclaration", path: './etc/c/curl/curl_version_info_data.html', attributes: []},
{name: 'etc.c.curl.curl_write_callback', kind: "aliasdeclaration", path: './etc/c/curl/curl_write_callback.html', attributes: []},
{name: 'etc.c.curl.CURL_WRITEFUNC_PAUSE', kind: "enummemberdeclaration", path: './etc/c/curl/cur_l_writefun_c_pause.html', attributes: []},
{name: 'etc.c.curl.CurlAuth', kind: "enumdeclaration", path: './etc/c/curl/curl_auth.html', attributes: []},
{name: 'etc.c.curl.CurlAuth.any', kind: "enummemberdeclaration", path: './etc/c/curl/curl_auth.html#any', attributes: []},
{name: 'etc.c.curl.CurlAuth.anysafe', kind: "enummemberdeclaration", path: './etc/c/curl/curl_auth.html#anysafe', attributes: []},
{name: 'etc.c.curl.CurlAuth.basic', kind: "enummemberdeclaration", path: './etc/c/curl/curl_auth.html#basic', attributes: []},
{name: 'etc.c.curl.CurlAuth.digest', kind: "enummemberdeclaration", path: './etc/c/curl/curl_auth.html#digest', attributes: []},
{name: 'etc.c.curl.CurlAuth.digest_ie', kind: "enummemberdeclaration", path: './etc/c/curl/curl_auth.html#digest_ie', attributes: []},
{name: 'etc.c.curl.CurlAuth.gssnegotiate', kind: "enummemberdeclaration", path: './etc/c/curl/curl_auth.html#gssnegotiate', attributes: []},
{name: 'etc.c.curl.CurlAuth.ntlm', kind: "enummemberdeclaration", path: './etc/c/curl/curl_auth.html#ntlm', attributes: []},
{name: 'etc.c.curl.CurlAuth.only', kind: "enummemberdeclaration", path: './etc/c/curl/curl_auth.html#only', attributes: []},
{name: 'etc.c.curl.CurlCallbackInfo', kind: "enumdeclaration", path: './etc/c/curl/curl_callback_info.html', attributes: []},
{name: 'etc.c.curl.CurlCallbackInfo.data_in', kind: "enummemberdeclaration", path: './etc/c/curl/curl_callback_info.html#data_in', attributes: []},
{name: 'etc.c.curl.CurlCallbackInfo.data_out', kind: "enummemberdeclaration", path: './etc/c/curl/curl_callback_info.html#data_out', attributes: []},
{name: 'etc.c.curl.CurlCallbackInfo.end', kind: "enummemberdeclaration", path: './etc/c/curl/curl_callback_info.html#end', attributes: []},
{name: 'etc.c.curl.CurlCallbackInfo.header_in', kind: "enummemberdeclaration", path: './etc/c/curl/curl_callback_info.html#header_in', attributes: []},
{name: 'etc.c.curl.CurlCallbackInfo.header_out', kind: "enummemberdeclaration", path: './etc/c/curl/curl_callback_info.html#header_out', attributes: []},
{name: 'etc.c.curl.CurlCallbackInfo.ssl_data_in', kind: "enummemberdeclaration", path: './etc/c/curl/curl_callback_info.html#ssl_data_in', attributes: []},
{name: 'etc.c.curl.CurlCallbackInfo.ssl_data_out', kind: "enummemberdeclaration", path: './etc/c/curl/curl_callback_info.html#ssl_data_out', attributes: []},
{name: 'etc.c.curl.CurlCallbackInfo.text', kind: "enummemberdeclaration", path: './etc/c/curl/curl_callback_info.html#text', attributes: []},
{name: 'etc.c.curl.CurlChunkBgnFunc', kind: "enumdeclaration", path: './etc/c/curl/curl_chunk_bgn_func.html', attributes: []},
{name: 'etc.c.curl.CurlChunkBgnFunc.fail', kind: "enummemberdeclaration", path: './etc/c/curl/curl_chunk_bgn_func.html#fail', attributes: []},
{name: 'etc.c.curl.CurlChunkBgnFunc.ok', kind: "enummemberdeclaration", path: './etc/c/curl/curl_chunk_bgn_func.html#ok', attributes: []},
{name: 'etc.c.curl.CurlChunkBgnFunc.skip', kind: "enummemberdeclaration", path: './etc/c/curl/curl_chunk_bgn_func.html#skip', attributes: []},
{name: 'etc.c.curl.CurlChunkEndFunc', kind: "enumdeclaration", path: './etc/c/curl/curl_chunk_end_func.html', attributes: []},
{name: 'etc.c.curl.CurlChunkEndFunc.fail', kind: "enummemberdeclaration", path: './etc/c/curl/curl_chunk_end_func.html#fail', attributes: []},
{name: 'etc.c.curl.CurlChunkEndFunc.ok', kind: "enummemberdeclaration", path: './etc/c/curl/curl_chunk_end_func.html#ok', attributes: []},
{name: 'etc.c.curl.CurlClosePolicy', kind: "enumdeclaration", path: './etc/c/curl/curl_close_policy.html', attributes: []},
{name: 'etc.c.curl.CurlClosePolicy.callback', kind: "enummemberdeclaration", path: './etc/c/curl/curl_close_policy.html#callback', attributes: []},
{name: 'etc.c.curl.CurlClosePolicy.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_close_policy.html#last', attributes: []},
{name: 'etc.c.curl.CurlClosePolicy.least_recently_used', kind: "enummemberdeclaration", path: './etc/c/curl/curl_close_policy.html#least_recently_used', attributes: []},
{name: 'etc.c.curl.CurlClosePolicy.least_traffic', kind: "enummemberdeclaration", path: './etc/c/curl/curl_close_policy.html#least_traffic', attributes: []},
{name: 'etc.c.curl.CurlClosePolicy.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_close_policy.html#none', attributes: []},
{name: 'etc.c.curl.CurlClosePolicy.oldest', kind: "enummemberdeclaration", path: './etc/c/curl/curl_close_policy.html#oldest', attributes: []},
{name: 'etc.c.curl.CurlClosePolicy.slowest', kind: "enummemberdeclaration", path: './etc/c/curl/curl_close_policy.html#slowest', attributes: []},
{name: 'etc.c.curl.CURLcode', kind: "aliasdeclaration", path: './etc/c/curl/cur_lcode.html', attributes: []},
{name: 'etc.c.curl.CurlCSelect', kind: "enumdeclaration", path: './etc/c/curl/curl_c_select.html', attributes: []},
{name: 'etc.c.curl.CurlCSelect.err_', kind: "enummemberdeclaration", path: './etc/c/curl/curl_c_select.html#err_', attributes: []},
{name: 'etc.c.curl.CurlCSelect.in_', kind: "enummemberdeclaration", path: './etc/c/curl/curl_c_select.html#in_', attributes: []},
{name: 'etc.c.curl.CurlCSelect.out_', kind: "enummemberdeclaration", path: './etc/c/curl/curl_c_select.html#out_', attributes: []},
{name: 'etc.c.curl.CurlError', kind: "enumdeclaration", path: './etc/c/curl/curl_error.html', attributes: []},
{name: 'etc.c.curl.CurlError.aborted_by_callback', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#aborted_by_callback', attributes: []},
{name: 'etc.c.curl.CurlError.again', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#again', attributes: []},
{name: 'etc.c.curl.CurlError.bad_content_encoding', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#bad_content_encoding', attributes: []},
{name: 'etc.c.curl.CurlError.bad_download_resume', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#bad_download_resume', attributes: []},
{name: 'etc.c.curl.CurlError.bad_function_argument', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#bad_function_argument', attributes: []},
{name: 'etc.c.curl.CurlError.chunk_failed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#chunk_failed', attributes: []},
{name: 'etc.c.curl.CurlError.conv_failed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#conv_failed', attributes: []},
{name: 'etc.c.curl.CurlError.conv_reqd', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#conv_reqd', attributes: []},
{name: 'etc.c.curl.CurlError.couldnt_connect', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#couldnt_connect', attributes: []},
{name: 'etc.c.curl.CurlError.couldnt_resolve_host', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#couldnt_resolve_host', attributes: []},
{name: 'etc.c.curl.CurlError.couldnt_resolve_proxy', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#couldnt_resolve_proxy', attributes: []},
{name: 'etc.c.curl.CurlError.curl_last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#curl_last', attributes: []},
{name: 'etc.c.curl.CurlError.failed_init', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#failed_init', attributes: []},
{name: 'etc.c.curl.CurlError.file_couldnt_read_file', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#file_couldnt_read_file', attributes: []},
{name: 'etc.c.curl.CurlError.filesize_exceeded', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#filesize_exceeded', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_bad_file_list', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ftp_bad_file_list', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_cant_get_host', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ftp_cant_get_host', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_couldnt_retr_file', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ftp_couldnt_retr_file', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_couldnt_set_type', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ftp_couldnt_set_type', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_couldnt_use_rest', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ftp_couldnt_use_rest', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_port_failed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ftp_port_failed', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_pret_failed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ftp_pret_failed', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_weird_227_format', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ftp_weird_227_format', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_weird_pass_reply', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ftp_weird_pass_reply', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_weird_pasv_reply', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ftp_weird_pasv_reply', attributes: []},
{name: 'etc.c.curl.CurlError.ftp_weird_server_reply', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ftp_weird_server_reply', attributes: []},
{name: 'etc.c.curl.CurlError.function_not_found', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#function_not_found', attributes: []},
{name: 'etc.c.curl.CurlError.got_nothing', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#got_nothing', attributes: []},
{name: 'etc.c.curl.CurlError.http_post_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#http_post_error', attributes: []},
{name: 'etc.c.curl.CurlError.http_returned_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#http_returned_error', attributes: []},
{name: 'etc.c.curl.CurlError.interface_failed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#interface_failed', attributes: []},
{name: 'etc.c.curl.CurlError.ldap_cannot_bind', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ldap_cannot_bind', attributes: []},
{name: 'etc.c.curl.CurlError.ldap_invalid_url', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ldap_invalid_url', attributes: []},
{name: 'etc.c.curl.CurlError.ldap_search_failed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ldap_search_failed', attributes: []},
{name: 'etc.c.curl.CurlError.login_denied', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#login_denied', attributes: []},
{name: 'etc.c.curl.CurlError.not_built_in', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#not_built_in', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete10', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#obsolete10', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete12', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#obsolete12', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete16', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#obsolete16', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete20', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#obsolete20', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete24', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#obsolete24', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete29', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#obsolete29', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete32', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#obsolete32', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete40', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#obsolete40', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete44', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#obsolete44', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete46', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#obsolete46', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete50', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#obsolete50', attributes: []},
{name: 'etc.c.curl.CurlError.obsolete57', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#obsolete57', attributes: []},
{name: 'etc.c.curl.CurlError.ok', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ok', attributes: []},
{name: 'etc.c.curl.CurlError.operation_timedout', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#operation_timedout', attributes: []},
{name: 'etc.c.curl.CurlError.out_of_memory', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#out_of_memory', attributes: []},
{name: 'etc.c.curl.CurlError.partial_file', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#partial_file', attributes: []},
{name: 'etc.c.curl.CurlError.peer_failed_verification', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#peer_failed_verification', attributes: []},
{name: 'etc.c.curl.CurlError.quote_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#quote_error', attributes: []},
{name: 'etc.c.curl.CurlError.range_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#range_error', attributes: []},
{name: 'etc.c.curl.CurlError.read_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#read_error', attributes: []},
{name: 'etc.c.curl.CurlError.recv_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#recv_error', attributes: []},
{name: 'etc.c.curl.CurlError.remote_access_denied', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#remote_access_denied', attributes: []},
{name: 'etc.c.curl.CurlError.remote_disk_full', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#remote_disk_full', attributes: []},
{name: 'etc.c.curl.CurlError.remote_file_exists', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#remote_file_exists', attributes: []},
{name: 'etc.c.curl.CurlError.remote_file_not_found', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#remote_file_not_found', attributes: []},
{name: 'etc.c.curl.CurlError.rtsp_cseq_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#rtsp_cseq_error', attributes: []},
{name: 'etc.c.curl.CurlError.rtsp_session_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#rtsp_session_error', attributes: []},
{name: 'etc.c.curl.CurlError.send_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#send_error', attributes: []},
{name: 'etc.c.curl.CurlError.send_fail_rewind', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#send_fail_rewind', attributes: []},
{name: 'etc.c.curl.CurlError.ssh', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ssh', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_cacert', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ssl_cacert', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_cacert_badfile', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ssl_cacert_badfile', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_certproblem', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ssl_certproblem', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_cipher', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ssl_cipher', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_connect_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ssl_connect_error', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_crl_badfile', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ssl_crl_badfile', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_engine_initfailed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ssl_engine_initfailed', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_engine_notfound', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ssl_engine_notfound', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_engine_setfailed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ssl_engine_setfailed', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_issuer_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ssl_issuer_error', attributes: []},
{name: 'etc.c.curl.CurlError.ssl_shutdown_failed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#ssl_shutdown_failed', attributes: []},
{name: 'etc.c.curl.CurlError.telnet_option_syntax', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#telnet_option_syntax', attributes: []},
{name: 'etc.c.curl.CurlError.tftp_illegal', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#tftp_illegal', attributes: []},
{name: 'etc.c.curl.CurlError.tftp_nosuchuser', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#tftp_nosuchuser', attributes: []},
{name: 'etc.c.curl.CurlError.tftp_notfound', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#tftp_notfound', attributes: []},
{name: 'etc.c.curl.CurlError.tftp_perm', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#tftp_perm', attributes: []},
{name: 'etc.c.curl.CurlError.tftp_unknownid', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#tftp_unknownid', attributes: []},
{name: 'etc.c.curl.CurlError.too_many_redirects', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#too_many_redirects', attributes: []},
{name: 'etc.c.curl.CurlError.unknown_option', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#unknown_option', attributes: []},
{name: 'etc.c.curl.CurlError.unsupported_protocol', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#unsupported_protocol', attributes: []},
{name: 'etc.c.curl.CurlError.upload_failed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#upload_failed', attributes: []},
{name: 'etc.c.curl.CurlError.url_malformat', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#url_malformat', attributes: []},
{name: 'etc.c.curl.CurlError.use_ssl_failed', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#use_ssl_failed', attributes: []},
{name: 'etc.c.curl.CurlError.write_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_error.html#write_error', attributes: []},
{name: 'etc.c.curl.curlfiletype', kind: "aliasdeclaration", path: './etc/c/curl/curlfiletype.html', attributes: []},
{name: 'etc.c.curl.CurlFileType', kind: "enumdeclaration", path: './etc/c/curl/curl_file_type.html', attributes: []},
{name: 'etc.c.curl.CurlFileType.device_block', kind: "enummemberdeclaration", path: './etc/c/curl/curl_file_type.html#device_block', attributes: []},
{name: 'etc.c.curl.CurlFileType.device_char', kind: "enummemberdeclaration", path: './etc/c/curl/curl_file_type.html#device_char', attributes: []},
{name: 'etc.c.curl.CurlFileType.directory', kind: "enummemberdeclaration", path: './etc/c/curl/curl_file_type.html#directory', attributes: []},
{name: 'etc.c.curl.CurlFileType.door', kind: "enummemberdeclaration", path: './etc/c/curl/curl_file_type.html#door', attributes: []},
{name: 'etc.c.curl.CurlFileType.file', kind: "enummemberdeclaration", path: './etc/c/curl/curl_file_type.html#file', attributes: []},
{name: 'etc.c.curl.CurlFileType.namedpipe', kind: "enummemberdeclaration", path: './etc/c/curl/curl_file_type.html#namedpipe', attributes: []},
{name: 'etc.c.curl.CurlFileType.socket', kind: "enummemberdeclaration", path: './etc/c/curl/curl_file_type.html#socket', attributes: []},
{name: 'etc.c.curl.CurlFileType.symlink', kind: "enummemberdeclaration", path: './etc/c/curl/curl_file_type.html#symlink', attributes: []},
{name: 'etc.c.curl.CurlFileType.unknown', kind: "enummemberdeclaration", path: './etc/c/curl/curl_file_type.html#unknown', attributes: []},
{name: 'etc.c.curl.CurlFInfoFlagKnown', kind: "enumdeclaration", path: './etc/c/curl/curl_f_info_flag_known.html', attributes: []},
{name: 'etc.c.curl.CurlFInfoFlagKnown.filename', kind: "enummemberdeclaration", path: './etc/c/curl/curl_f_info_flag_known.html#filename', attributes: []},
{name: 'etc.c.curl.CurlFInfoFlagKnown.filetype', kind: "enummemberdeclaration", path: './etc/c/curl/curl_f_info_flag_known.html#filetype', attributes: []},
{name: 'etc.c.curl.CurlFInfoFlagKnown.gid', kind: "enummemberdeclaration", path: './etc/c/curl/curl_f_info_flag_known.html#gid', attributes: []},
{name: 'etc.c.curl.CurlFInfoFlagKnown.hlinkcount', kind: "enummemberdeclaration", path: './etc/c/curl/curl_f_info_flag_known.html#hlinkcount', attributes: []},
{name: 'etc.c.curl.CurlFInfoFlagKnown.perm', kind: "enummemberdeclaration", path: './etc/c/curl/curl_f_info_flag_known.html#perm', attributes: []},
{name: 'etc.c.curl.CurlFInfoFlagKnown.size', kind: "enummemberdeclaration", path: './etc/c/curl/curl_f_info_flag_known.html#size', attributes: []},
{name: 'etc.c.curl.CurlFInfoFlagKnown.time', kind: "enummemberdeclaration", path: './etc/c/curl/curl_f_info_flag_known.html#time', attributes: []},
{name: 'etc.c.curl.CurlFInfoFlagKnown.uid', kind: "enummemberdeclaration", path: './etc/c/curl/curl_f_info_flag_known.html#uid', attributes: []},
{name: 'etc.c.curl.CurlFnMAtchFunc', kind: "enumdeclaration", path: './etc/c/curl/curl_fnm_atch_func.html', attributes: []},
{name: 'etc.c.curl.CurlFnMAtchFunc.fail', kind: "enummemberdeclaration", path: './etc/c/curl/curl_fnm_atch_func.html#fail', attributes: []},
{name: 'etc.c.curl.CurlFnMAtchFunc.match', kind: "enummemberdeclaration", path: './etc/c/curl/curl_fnm_atch_func.html#match', attributes: []},
{name: 'etc.c.curl.CurlFnMAtchFunc.nomatch', kind: "enummemberdeclaration", path: './etc/c/curl/curl_fnm_atch_func.html#nomatch', attributes: []},
{name: 'etc.c.curl.CurlFormAdd', kind: "enumdeclaration", path: './etc/c/curl/curl_form_add.html', attributes: []},
{name: 'etc.c.curl.CurlFormAdd.disabled', kind: "enummemberdeclaration", path: './etc/c/curl/curl_form_add.html#disabled', attributes: []},
{name: 'etc.c.curl.CurlFormAdd.illegal_array', kind: "enummemberdeclaration", path: './etc/c/curl/curl_form_add.html#illegal_array', attributes: []},
{name: 'etc.c.curl.CurlFormAdd.incomplete', kind: "enummemberdeclaration", path: './etc/c/curl/curl_form_add.html#incomplete', attributes: []},
{name: 'etc.c.curl.CurlFormAdd.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_form_add.html#last', attributes: []},
{name: 'etc.c.curl.CurlFormAdd.memory', kind: "enummemberdeclaration", path: './etc/c/curl/curl_form_add.html#memory', attributes: []},
{name: 'etc.c.curl.CurlFormAdd.null_ptr', kind: "enummemberdeclaration", path: './etc/c/curl/curl_form_add.html#null_ptr', attributes: []},
{name: 'etc.c.curl.CurlFormAdd.ok', kind: "enummemberdeclaration", path: './etc/c/curl/curl_form_add.html#ok', attributes: []},
{name: 'etc.c.curl.CurlFormAdd.option_twice', kind: "enummemberdeclaration", path: './etc/c/curl/curl_form_add.html#option_twice', attributes: []},
{name: 'etc.c.curl.CurlFormAdd.unknown_option', kind: "enummemberdeclaration", path: './etc/c/curl/curl_form_add.html#unknown_option', attributes: []},
{name: 'etc.c.curl.CURLFORMcode', kind: "aliasdeclaration", path: './etc/c/curl/curlfor_mcode.html', attributes: []},
{name: 'etc.c.curl.CurlFtp', kind: "enumdeclaration", path: './etc/c/curl/curl_ftp.html', attributes: []},
{name: 'etc.c.curl.CurlFtp.create_dir', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp.html#create_dir', attributes: []},
{name: 'etc.c.curl.CurlFtp.create_dir_last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp.html#create_dir_last', attributes: []},
{name: 'etc.c.curl.CurlFtp.create_dir_none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp.html#create_dir_none', attributes: []},
{name: 'etc.c.curl.CurlFtp.create_dir_retry', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp.html#create_dir_retry', attributes: []},
{name: 'etc.c.curl.CurlFtpAuth', kind: "enumdeclaration", path: './etc/c/curl/curl_ftp_auth.html', attributes: []},
{name: 'etc.c.curl.CurlFtpAuth.defaultauth', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_auth.html#defaultauth', attributes: []},
{name: 'etc.c.curl.CurlFtpAuth.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_auth.html#last', attributes: []},
{name: 'etc.c.curl.CurlFtpAuth.ssl', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_auth.html#ssl', attributes: []},
{name: 'etc.c.curl.CurlFtpAuth.tls', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_auth.html#tls', attributes: []},
{name: 'etc.c.curl.CurlFtpMethod', kind: "enumdeclaration", path: './etc/c/curl/curl_ftp_method.html', attributes: []},
{name: 'etc.c.curl.CurlFtpMethod.defaultmethod', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_method.html#defaultmethod', attributes: []},
{name: 'etc.c.curl.CurlFtpMethod.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_method.html#last', attributes: []},
{name: 'etc.c.curl.CurlFtpMethod.multicwd', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_method.html#multicwd', attributes: []},
{name: 'etc.c.curl.CurlFtpMethod.nocwd', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_method.html#nocwd', attributes: []},
{name: 'etc.c.curl.CurlFtpMethod.singlecwd', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_method.html#singlecwd', attributes: []},
{name: 'etc.c.curl.CurlFtpSSL', kind: "enumdeclaration", path: './etc/c/curl/curl_ftp_ssl.html', attributes: []},
{name: 'etc.c.curl.CurlFtpSSL.ccc_active', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_ssl.html#ccc_active', attributes: []},
{name: 'etc.c.curl.CurlFtpSSL.ccc_last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_ssl.html#ccc_last', attributes: []},
{name: 'etc.c.curl.CurlFtpSSL.ccc_none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_ssl.html#ccc_none', attributes: []},
{name: 'etc.c.curl.CurlFtpSSL.ccc_passive', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ftp_ssl.html#ccc_passive', attributes: []},
{name: 'etc.c.curl.CurlGlobal', kind: "enumdeclaration", path: './etc/c/curl/curl_global.html', attributes: []},
{name: 'etc.c.curl.CurlGlobal.all', kind: "enummemberdeclaration", path: './etc/c/curl/curl_global.html#all', attributes: []},
{name: 'etc.c.curl.CurlGlobal.default_', kind: "enummemberdeclaration", path: './etc/c/curl/curl_global.html#default_', attributes: []},
{name: 'etc.c.curl.CurlGlobal.nothing', kind: "enummemberdeclaration", path: './etc/c/curl/curl_global.html#nothing', attributes: []},
{name: 'etc.c.curl.CurlGlobal.ssl', kind: "enummemberdeclaration", path: './etc/c/curl/curl_global.html#ssl', attributes: []},
{name: 'etc.c.curl.CurlGlobal.win32', kind: "enummemberdeclaration", path: './etc/c/curl/curl_global.html#win32', attributes: []},
{name: 'etc.c.curl.CurlHttpVersion', kind: "enumdeclaration", path: './etc/c/curl/curl_http_version.html', attributes: []},
{name: 'etc.c.curl.CurlHttpVersion.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_http_version.html#last', attributes: []},
{name: 'etc.c.curl.CurlHttpVersion.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_http_version.html#none', attributes: []},
{name: 'etc.c.curl.CurlHttpVersion.v1_0', kind: "enummemberdeclaration", path: './etc/c/curl/curl_http_version.html#v1_0', attributes: []},
{name: 'etc.c.curl.CurlHttpVersion.v1_1', kind: "enummemberdeclaration", path: './etc/c/curl/curl_http_version.html#v1_1', attributes: []},
{name: 'etc.c.curl.CurlInfo', kind: "enumdeclaration", path: './etc/c/curl/curl_info.html', attributes: []},
{name: 'etc.c.curl.CurlInfo.appconnect_time', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#appconnect_time', attributes: []},
{name: 'etc.c.curl.CurlInfo.certinfo', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#certinfo', attributes: []},
{name: 'etc.c.curl.CurlInfo.condition_unmet', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#condition_unmet', attributes: []},
{name: 'etc.c.curl.CurlInfo.connect_time', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#connect_time', attributes: []},
{name: 'etc.c.curl.CurlInfo.content_length_download', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#content_length_download', attributes: []},
{name: 'etc.c.curl.CurlInfo.content_length_upload', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#content_length_upload', attributes: []},
{name: 'etc.c.curl.CurlInfo.content_type', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#content_type', attributes: []},
{name: 'etc.c.curl.CurlInfo.cookielist', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#cookielist', attributes: []},
{name: 'etc.c.curl.CurlInfo.effective_url', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#effective_url', attributes: []},
{name: 'etc.c.curl.CurlInfo.filetime', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#filetime', attributes: []},
{name: 'etc.c.curl.CurlInfo.ftp_entry_path', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#ftp_entry_path', attributes: []},
{name: 'etc.c.curl.CurlInfo.header_size', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#header_size', attributes: []},
{name: 'etc.c.curl.CurlInfo.http_connectcode', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#http_connectcode', attributes: []},
{name: 'etc.c.curl.CurlInfo.httpauth_avail', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#httpauth_avail', attributes: []},
{name: 'etc.c.curl.CurlInfo.lastone', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#lastone', attributes: []},
{name: 'etc.c.curl.CurlInfo.lastsocket', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#lastsocket', attributes: []},
{name: 'etc.c.curl.CurlInfo.local_ip', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#local_ip', attributes: []},
{name: 'etc.c.curl.CurlInfo.local_port', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#local_port', attributes: []},
{name: 'etc.c.curl.CurlInfo.namelookup_time', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#namelookup_time', attributes: []},
{name: 'etc.c.curl.CurlInfo.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#none', attributes: []},
{name: 'etc.c.curl.CurlInfo.num_connects', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#num_connects', attributes: []},
{name: 'etc.c.curl.CurlInfo.os_errno', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#os_errno', attributes: []},
{name: 'etc.c.curl.CurlInfo.pretransfer_time', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#pretransfer_time', attributes: []},
{name: 'etc.c.curl.CurlInfo.primary_ip', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#primary_ip', attributes: []},
{name: 'etc.c.curl.CurlInfo.primary_port', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#primary_port', attributes: []},
{name: 'etc.c.curl.CurlInfo.private_info', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#private_info', attributes: []},
{name: 'etc.c.curl.CurlInfo.proxyauth_avail', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#proxyauth_avail', attributes: []},
{name: 'etc.c.curl.CurlInfo.redirect_count', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#redirect_count', attributes: []},
{name: 'etc.c.curl.CurlInfo.redirect_time', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#redirect_time', attributes: []},
{name: 'etc.c.curl.CurlInfo.redirect_url', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#redirect_url', attributes: []},
{name: 'etc.c.curl.CurlInfo.request_size', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#request_size', attributes: []},
{name: 'etc.c.curl.CurlInfo.response_code', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#response_code', attributes: []},
{name: 'etc.c.curl.CurlInfo.rtsp_client_cseq', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#rtsp_client_cseq', attributes: []},
{name: 'etc.c.curl.CurlInfo.rtsp_cseq_recv', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#rtsp_cseq_recv', attributes: []},
{name: 'etc.c.curl.CurlInfo.rtsp_server_cseq', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#rtsp_server_cseq', attributes: []},
{name: 'etc.c.curl.CurlInfo.rtsp_session_id', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#rtsp_session_id', attributes: []},
{name: 'etc.c.curl.CurlInfo.size_download', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#size_download', attributes: []},
{name: 'etc.c.curl.CurlInfo.size_upload', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#size_upload', attributes: []},
{name: 'etc.c.curl.CurlInfo.speed_download', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#speed_download', attributes: []},
{name: 'etc.c.curl.CurlInfo.speed_upload', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#speed_upload', attributes: []},
{name: 'etc.c.curl.CurlInfo.ssl_engines', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#ssl_engines', attributes: []},
{name: 'etc.c.curl.CurlInfo.ssl_verifyresult', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#ssl_verifyresult', attributes: []},
{name: 'etc.c.curl.CurlInfo.starttransfer_time', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#starttransfer_time', attributes: []},
{name: 'etc.c.curl.CurlInfo.total_time', kind: "enummemberdeclaration", path: './etc/c/curl/curl_info.html#total_time', attributes: []},
{name: 'etc.c.curl.CURLINFO', kind: "aliasdeclaration", path: './etc/c/curl/curlinfo.html', attributes: []},
{name: 'etc.c.curl.CURLINFO_DOUBLE', kind: "enummemberdeclaration", path: './etc/c/curl/curlinf_o_double.html', attributes: []},
{name: 'etc.c.curl.CURLINFO_HTTP_CODE', kind: "enummemberdeclaration", path: './etc/c/curl/curlinf_o_htt_p_code.html', attributes: []},
{name: 'etc.c.curl.CURLINFO_LONG', kind: "enummemberdeclaration", path: './etc/c/curl/curlinf_o_long.html', attributes: []},
{name: 'etc.c.curl.CURLINFO_MASK', kind: "enummemberdeclaration", path: './etc/c/curl/curlinf_o_mask.html', attributes: []},
{name: 'etc.c.curl.CURLINFO_SLIST', kind: "enummemberdeclaration", path: './etc/c/curl/curlinf_o_slist.html', attributes: []},
{name: 'etc.c.curl.CURLINFO_STRING', kind: "enummemberdeclaration", path: './etc/c/curl/curlinf_o_string.html', attributes: []},
{name: 'etc.c.curl.CURLINFO_TYPEMASK', kind: "enummemberdeclaration", path: './etc/c/curl/curlinf_o_typemask.html', attributes: []},
{name: 'etc.c.curl.CurlIoCmd', kind: "enumdeclaration", path: './etc/c/curl/curl_io_cmd.html', attributes: []},
{name: 'etc.c.curl.CurlIoCmd.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_io_cmd.html#last', attributes: []},
{name: 'etc.c.curl.CurlIoCmd.nop', kind: "enummemberdeclaration", path: './etc/c/curl/curl_io_cmd.html#nop', attributes: []},
{name: 'etc.c.curl.CurlIoCmd.restartread', kind: "enummemberdeclaration", path: './etc/c/curl/curl_io_cmd.html#restartread', attributes: []},
{name: 'etc.c.curl.curliocmd', kind: "aliasdeclaration", path: './etc/c/curl/curliocmd.html', attributes: []},
{name: 'etc.c.curl.curlioerr', kind: "aliasdeclaration", path: './etc/c/curl/curlioerr.html', attributes: []},
{name: 'etc.c.curl.CurlIoError', kind: "enumdeclaration", path: './etc/c/curl/curl_io_error.html', attributes: []},
{name: 'etc.c.curl.CurlIoError.failrestart', kind: "enummemberdeclaration", path: './etc/c/curl/curl_io_error.html#failrestart', attributes: []},
{name: 'etc.c.curl.CurlIoError.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_io_error.html#last', attributes: []},
{name: 'etc.c.curl.CurlIoError.ok', kind: "enummemberdeclaration", path: './etc/c/curl/curl_io_error.html#ok', attributes: []},
{name: 'etc.c.curl.CurlIoError.unknowncmd', kind: "enummemberdeclaration", path: './etc/c/curl/curl_io_error.html#unknowncmd', attributes: []},
{name: 'etc.c.curl.CurlIpResolve', kind: "enumdeclaration", path: './etc/c/curl/curl_ip_resolve.html', attributes: []},
{name: 'etc.c.curl.CurlIpResolve.v4', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ip_resolve.html#v4', attributes: []},
{name: 'etc.c.curl.CurlIpResolve.v6', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ip_resolve.html#v6', attributes: []},
{name: 'etc.c.curl.CurlIpResolve.whatever', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ip_resolve.html#whatever', attributes: []},
{name: 'etc.c.curl.CurlKHMatch', kind: "enumdeclaration", path: './etc/c/curl/curl_kh_match.html', attributes: []},
{name: 'etc.c.curl.CurlKHMatch.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_match.html#last', attributes: []},
{name: 'etc.c.curl.CurlKHMatch.mismatch', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_match.html#mismatch', attributes: []},
{name: 'etc.c.curl.CurlKHMatch.missing', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_match.html#missing', attributes: []},
{name: 'etc.c.curl.CurlKHMatch.ok', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_match.html#ok', attributes: []},
{name: 'etc.c.curl.CurlKHStat', kind: "enumdeclaration", path: './etc/c/curl/curl_kh_stat.html', attributes: []},
{name: 'etc.c.curl.CurlKHStat.defer', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_stat.html#defer', attributes: []},
{name: 'etc.c.curl.CurlKHStat.fine', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_stat.html#fine', attributes: []},
{name: 'etc.c.curl.CurlKHStat.fine_add_to_file', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_stat.html#fine_add_to_file', attributes: []},
{name: 'etc.c.curl.CurlKHStat.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_stat.html#last', attributes: []},
{name: 'etc.c.curl.CurlKHStat.reject', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_stat.html#reject', attributes: []},
{name: 'etc.c.curl.CurlKHType', kind: "enumdeclaration", path: './etc/c/curl/curl_kh_type.html', attributes: []},
{name: 'etc.c.curl.CurlKHType.dss', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_type.html#dss', attributes: []},
{name: 'etc.c.curl.CurlKHType.rsa', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_type.html#rsa', attributes: []},
{name: 'etc.c.curl.CurlKHType.rsa1', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_type.html#rsa1', attributes: []},
{name: 'etc.c.curl.CurlKHType.unknown', kind: "enummemberdeclaration", path: './etc/c/curl/curl_kh_type.html#unknown', attributes: []},
{name: 'etc.c.curl.CurlLockAccess', kind: "enumdeclaration", path: './etc/c/curl/curl_lock_access.html', attributes: []},
{name: 'etc.c.curl.CurlLockAccess.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_access.html#last', attributes: []},
{name: 'etc.c.curl.CurlLockAccess.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_access.html#none', attributes: []},
{name: 'etc.c.curl.CurlLockAccess.shared_access', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_access.html#shared_access', attributes: []},
{name: 'etc.c.curl.CurlLockAccess.single', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_access.html#single', attributes: []},
{name: 'etc.c.curl.CurlLockData', kind: "enumdeclaration", path: './etc/c/curl/curl_lock_data.html', attributes: []},
{name: 'etc.c.curl.CurlLockData.connect', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_data.html#connect', attributes: []},
{name: 'etc.c.curl.CurlLockData.cookie', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_data.html#cookie', attributes: []},
{name: 'etc.c.curl.CurlLockData.dns', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_data.html#dns', attributes: []},
{name: 'etc.c.curl.CurlLockData.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_data.html#last', attributes: []},
{name: 'etc.c.curl.CurlLockData.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_data.html#none', attributes: []},
{name: 'etc.c.curl.CurlLockData.share', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_data.html#share', attributes: []},
{name: 'etc.c.curl.CurlLockData.ssl_session', kind: "enummemberdeclaration", path: './etc/c/curl/curl_lock_data.html#ssl_session', attributes: []},
{name: 'etc.c.curl.CurlM', kind: "enumdeclaration", path: './etc/c/curl/curl_m.html', attributes: []},
{name: 'etc.c.curl.CurlM.bad_easy_handle', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m.html#bad_easy_handle', attributes: []},
{name: 'etc.c.curl.CurlM.bad_handle', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m.html#bad_handle', attributes: []},
{name: 'etc.c.curl.CurlM.bad_socket', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m.html#bad_socket', attributes: []},
{name: 'etc.c.curl.CurlM.call_multi_perform', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m.html#call_multi_perform', attributes: []},
{name: 'etc.c.curl.CurlM.internal_error', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m.html#internal_error', attributes: []},
{name: 'etc.c.curl.CurlM.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m.html#last', attributes: []},
{name: 'etc.c.curl.CurlM.ok', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m.html#ok', attributes: []},
{name: 'etc.c.curl.CurlM.out_of_memory', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m.html#out_of_memory', attributes: []},
{name: 'etc.c.curl.CurlM.unknown_option', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m.html#unknown_option', attributes: []},
{name: 'etc.c.curl.CURLM', kind: "aliasdeclaration", path: './etc/c/curl/curlm.html', attributes: []},
{name: 'etc.c.curl.CURLM_CALL_MULTI_SOCKET', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m_cal_l_mult_i_socket.html', attributes: []},
{name: 'etc.c.curl.CURLMcode', kind: "aliasdeclaration", path: './etc/c/curl/curl_mcode.html', attributes: []},
{name: 'etc.c.curl.CurlMOption', kind: "enumdeclaration", path: './etc/c/curl/curl_m_option.html', attributes: []},
{name: 'etc.c.curl.CurlMOption.lastentry', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m_option.html#lastentry', attributes: []},
{name: 'etc.c.curl.CurlMOption.maxconnects', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m_option.html#maxconnects', attributes: []},
{name: 'etc.c.curl.CurlMOption.pipelining', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m_option.html#pipelining', attributes: []},
{name: 'etc.c.curl.CurlMOption.socketdata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m_option.html#socketdata', attributes: []},
{name: 'etc.c.curl.CurlMOption.socketfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m_option.html#socketfunction', attributes: []},
{name: 'etc.c.curl.CurlMOption.timerdata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m_option.html#timerdata', attributes: []},
{name: 'etc.c.curl.CurlMOption.timerfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_m_option.html#timerfunction', attributes: []},
{name: 'etc.c.curl.CURLMoption', kind: "aliasdeclaration", path: './etc/c/curl/curl_moption.html', attributes: []},
{name: 'etc.c.curl.CURLMsg', kind: "structdeclaration", path: './etc/c/curl/curl_msg.html', attributes: []},
{name: 'etc.c.curl.CURLMsg.data', kind: "variabledeclaration", path: './etc/c/curl/curl_msg.data.html', attributes: []},
{name: 'etc.c.curl.CURLMsg.easy_handle', kind: "variabledeclaration", path: './etc/c/curl/curl_msg.easy_handle.html', attributes: []},
{name: 'etc.c.curl.CURLMsg.msg', kind: "variabledeclaration", path: './etc/c/curl/curl_msg.msg.html', attributes: []},
{name: 'etc.c.curl.CURLMSG', kind: "aliasdeclaration", path: './etc/c/curl/curlmsg.html', attributes: []},
{name: 'etc.c.curl.CurlMsg', kind: "enumdeclaration", path: './etc/c/curl/curl_msg.html', attributes: []},
{name: 'etc.c.curl.CurlMsg.done', kind: "enummemberdeclaration", path: './etc/c/curl/curl_msg.html#done', attributes: []},
{name: 'etc.c.curl.CurlMsg.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_msg.html#last', attributes: []},
{name: 'etc.c.curl.CurlMsg.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_msg.html#none', attributes: []},
{name: 'etc.c.curl.CurlNetRcOption', kind: "enumdeclaration", path: './etc/c/curl/curl_net_rc_option.html', attributes: []},
{name: 'etc.c.curl.CurlNetRcOption.ignored', kind: "enummemberdeclaration", path: './etc/c/curl/curl_net_rc_option.html#ignored', attributes: []},
{name: 'etc.c.curl.CurlNetRcOption.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_net_rc_option.html#last', attributes: []},
{name: 'etc.c.curl.CurlNetRcOption.optional', kind: "enummemberdeclaration", path: './etc/c/curl/curl_net_rc_option.html#optional', attributes: []},
{name: 'etc.c.curl.CurlNetRcOption.required', kind: "enummemberdeclaration", path: './etc/c/curl/curl_net_rc_option.html#required', attributes: []},
{name: 'etc.c.curl.CURLOPT_HEADERDATA', kind: "enummemberdeclaration", path: './etc/c/curl/curlop_t_headerdata.html', attributes: []},
{name: 'etc.c.curl.CURLOPT_READDATA', kind: "enummemberdeclaration", path: './etc/c/curl/curlop_t_readdata.html', attributes: []},
{name: 'etc.c.curl.CURLOPT_RTSPHEADER', kind: "enummemberdeclaration", path: './etc/c/curl/curlop_t_rtspheader.html', attributes: []},
{name: 'etc.c.curl.CURLOPT_SERVER_RESPONSE_TIMEOUT', kind: "enummemberdeclaration", path: './etc/c/curl/curlop_t_serve_r_respons_e_timeout.html', attributes: []},
{name: 'etc.c.curl.CURLOPT_WRITEDATA', kind: "enummemberdeclaration", path: './etc/c/curl/curlop_t_writedata.html', attributes: []},
{name: 'etc.c.curl.CurlOption', kind: "enumdeclaration", path: './etc/c/curl/curl_option.html', attributes: []},
{name: 'etc.c.curl.CurlOption.address_scope', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#address_scope', attributes: []},
{name: 'etc.c.curl.CurlOption.append', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#append', attributes: []},
{name: 'etc.c.curl.CurlOption.autoreferer', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#autoreferer', attributes: []},
{name: 'etc.c.curl.CurlOption.buffersize', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#buffersize', attributes: []},
{name: 'etc.c.curl.CurlOption.cainfo', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#cainfo', attributes: []},
{name: 'etc.c.curl.CurlOption.capath', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#capath', attributes: []},
{name: 'etc.c.curl.CurlOption.certinfo', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#certinfo', attributes: []},
{name: 'etc.c.curl.CurlOption.chunk_bgn_function', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#chunk_bgn_function', attributes: []},
{name: 'etc.c.curl.CurlOption.chunk_data', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#chunk_data', attributes: []},
{name: 'etc.c.curl.CurlOption.chunk_end_function', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#chunk_end_function', attributes: []},
{name: 'etc.c.curl.CurlOption.closepolicy', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#closepolicy', attributes: []},
{name: 'etc.c.curl.CurlOption.connect_only', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#connect_only', attributes: []},
{name: 'etc.c.curl.CurlOption.connecttimeout', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#connecttimeout', attributes: []},
{name: 'etc.c.curl.CurlOption.connecttimeout_ms', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#connecttimeout_ms', attributes: []},
{name: 'etc.c.curl.CurlOption.conv_from_network_function', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#conv_from_network_function', attributes: []},
{name: 'etc.c.curl.CurlOption.conv_from_utf8_function', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#conv_from_utf8_function', attributes: []},
{name: 'etc.c.curl.CurlOption.conv_to_network_function', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#conv_to_network_function', attributes: []},
{name: 'etc.c.curl.CurlOption.cookie', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#cookie', attributes: []},
{name: 'etc.c.curl.CurlOption.cookiefile', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#cookiefile', attributes: []},
{name: 'etc.c.curl.CurlOption.cookiejar', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#cookiejar', attributes: []},
{name: 'etc.c.curl.CurlOption.cookielist', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#cookielist', attributes: []},
{name: 'etc.c.curl.CurlOption.cookiesession', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#cookiesession', attributes: []},
{name: 'etc.c.curl.CurlOption.copypostfields', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#copypostfields', attributes: []},
{name: 'etc.c.curl.CurlOption.crlf', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#crlf', attributes: []},
{name: 'etc.c.curl.CurlOption.crlfile', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#crlfile', attributes: []},
{name: 'etc.c.curl.CurlOption.customrequest', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#customrequest', attributes: []},
{name: 'etc.c.curl.CurlOption.debugdata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#debugdata', attributes: []},
{name: 'etc.c.curl.CurlOption.debugfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#debugfunction', attributes: []},
{name: 'etc.c.curl.CurlOption.dirlistonly', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#dirlistonly', attributes: []},
{name: 'etc.c.curl.CurlOption.dns_cache_timeout', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#dns_cache_timeout', attributes: []},
{name: 'etc.c.curl.CurlOption.dns_use_global_cache', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#dns_use_global_cache', attributes: []},
{name: 'etc.c.curl.CurlOption.egdsocket', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#egdsocket', attributes: []},
{name: 'etc.c.curl.CurlOption.encoding', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#encoding', attributes: []},
{name: 'etc.c.curl.CurlOption.errorbuffer', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#errorbuffer', attributes: []},
{name: 'etc.c.curl.CurlOption.failonerror', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#failonerror', attributes: []},
{name: 'etc.c.curl.CurlOption.file', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#file', attributes: []},
{name: 'etc.c.curl.CurlOption.filetime', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#filetime', attributes: []},
{name: 'etc.c.curl.CurlOption.fnmatch_data', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#fnmatch_data', attributes: []},
{name: 'etc.c.curl.CurlOption.fnmatch_function', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#fnmatch_function', attributes: []},
{name: 'etc.c.curl.CurlOption.followlocation', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#followlocation', attributes: []},
{name: 'etc.c.curl.CurlOption.forbid_reuse', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#forbid_reuse', attributes: []},
{name: 'etc.c.curl.CurlOption.fresh_connect', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#fresh_connect', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_account', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ftp_account', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_alternative_to_user', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ftp_alternative_to_user', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_create_missing_dirs', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ftp_create_missing_dirs', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_filemethod', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ftp_filemethod', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_response_timeout', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ftp_response_timeout', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_skip_pasv_ip', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ftp_skip_pasv_ip', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_ssl_ccc', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ftp_ssl_ccc', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_use_eprt', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ftp_use_eprt', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_use_epsv', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ftp_use_epsv', attributes: []},
{name: 'etc.c.curl.CurlOption.ftp_use_pret', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ftp_use_pret', attributes: []},
{name: 'etc.c.curl.CurlOption.ftpport', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ftpport', attributes: []},
{name: 'etc.c.curl.CurlOption.ftpsslauth', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ftpsslauth', attributes: []},
{name: 'etc.c.curl.CurlOption.header', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#header', attributes: []},
{name: 'etc.c.curl.CurlOption.headerdata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#headerdata', attributes: []},
{name: 'etc.c.curl.CurlOption.headerfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#headerfunction', attributes: []},
{name: 'etc.c.curl.CurlOption.http200aliases', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#http200aliases', attributes: []},
{name: 'etc.c.curl.CurlOption.http_content_decoding', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#http_content_decoding', attributes: []},
{name: 'etc.c.curl.CurlOption.http_transfer_decoding', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#http_transfer_decoding', attributes: []},
{name: 'etc.c.curl.CurlOption.http_version', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#http_version', attributes: []},
{name: 'etc.c.curl.CurlOption.httpauth', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#httpauth', attributes: []},
{name: 'etc.c.curl.CurlOption.httpget', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#httpget', attributes: []},
{name: 'etc.c.curl.CurlOption.httpheader', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#httpheader', attributes: []},
{name: 'etc.c.curl.CurlOption.httppost', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#httppost', attributes: []},
{name: 'etc.c.curl.CurlOption.httpproxytunnel', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#httpproxytunnel', attributes: []},
{name: 'etc.c.curl.CurlOption.ignore_content_length', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ignore_content_length', attributes: []},
{name: 'etc.c.curl.CurlOption.infile', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#infile', attributes: []},
{name: 'etc.c.curl.CurlOption.infilesize', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#infilesize', attributes: []},
{name: 'etc.c.curl.CurlOption.infilesize_large', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#infilesize_large', attributes: []},
{name: 'etc.c.curl.CurlOption.interleavedata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#interleavedata', attributes: []},
{name: 'etc.c.curl.CurlOption.interleavefunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#interleavefunction', attributes: []},
{name: 'etc.c.curl.CurlOption.intrface', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#intrface', attributes: []},
{name: 'etc.c.curl.CurlOption.ioctldata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ioctldata', attributes: []},
{name: 'etc.c.curl.CurlOption.ioctlfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ioctlfunction', attributes: []},
{name: 'etc.c.curl.CurlOption.ipresolve', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ipresolve', attributes: []},
{name: 'etc.c.curl.CurlOption.issuercert', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#issuercert', attributes: []},
{name: 'etc.c.curl.CurlOption.keypasswd', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#keypasswd', attributes: []},
{name: 'etc.c.curl.CurlOption.krblevel', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#krblevel', attributes: []},
{name: 'etc.c.curl.CurlOption.lastentry', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#lastentry', attributes: []},
{name: 'etc.c.curl.CurlOption.localport', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#localport', attributes: []},
{name: 'etc.c.curl.CurlOption.localportrange', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#localportrange', attributes: []},
{name: 'etc.c.curl.CurlOption.low_speed_limit', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#low_speed_limit', attributes: []},
{name: 'etc.c.curl.CurlOption.low_speed_time', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#low_speed_time', attributes: []},
{name: 'etc.c.curl.CurlOption.mail_from', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#mail_from', attributes: []},
{name: 'etc.c.curl.CurlOption.mail_rcpt', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#mail_rcpt', attributes: []},
{name: 'etc.c.curl.CurlOption.max_recv_speed_large', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#max_recv_speed_large', attributes: []},
{name: 'etc.c.curl.CurlOption.max_send_speed_large', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#max_send_speed_large', attributes: []},
{name: 'etc.c.curl.CurlOption.maxconnects', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#maxconnects', attributes: []},
{name: 'etc.c.curl.CurlOption.maxfilesize', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#maxfilesize', attributes: []},
{name: 'etc.c.curl.CurlOption.maxfilesize_large', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#maxfilesize_large', attributes: []},
{name: 'etc.c.curl.CurlOption.maxredirs', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#maxredirs', attributes: []},
{name: 'etc.c.curl.CurlOption.netrc', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#netrc', attributes: []},
{name: 'etc.c.curl.CurlOption.netrc_file', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#netrc_file', attributes: []},
{name: 'etc.c.curl.CurlOption.new_directory_perms', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#new_directory_perms', attributes: []},
{name: 'etc.c.curl.CurlOption.new_file_perms', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#new_file_perms', attributes: []},
{name: 'etc.c.curl.CurlOption.nobody', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#nobody', attributes: []},
{name: 'etc.c.curl.CurlOption.noprogress', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#noprogress', attributes: []},
{name: 'etc.c.curl.CurlOption.noproxy', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#noproxy', attributes: []},
{name: 'etc.c.curl.CurlOption.nosignal', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#nosignal', attributes: []},
{name: 'etc.c.curl.CurlOption.opensocketdata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#opensocketdata', attributes: []},
{name: 'etc.c.curl.CurlOption.opensocketfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#opensocketfunction', attributes: []},
{name: 'etc.c.curl.CurlOption.password', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#password', attributes: []},
{name: 'etc.c.curl.CurlOption.port', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#port', attributes: []},
{name: 'etc.c.curl.CurlOption.post', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#post', attributes: []},
{name: 'etc.c.curl.CurlOption.postfields', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#postfields', attributes: []},
{name: 'etc.c.curl.CurlOption.postfieldsize', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#postfieldsize', attributes: []},
{name: 'etc.c.curl.CurlOption.postfieldsize_large', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#postfieldsize_large', attributes: []},
{name: 'etc.c.curl.CurlOption.postquote', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#postquote', attributes: []},
{name: 'etc.c.curl.CurlOption.postredir', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#postredir', attributes: []},
{name: 'etc.c.curl.CurlOption.prequote', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#prequote', attributes: []},
{name: 'etc.c.curl.CurlOption.private_opt', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#private_opt', attributes: []},
{name: 'etc.c.curl.CurlOption.progressdata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#progressdata', attributes: []},
{name: 'etc.c.curl.CurlOption.progressfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#progressfunction', attributes: []},
{name: 'etc.c.curl.CurlOption.protocols', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#protocols', attributes: []},
{name: 'etc.c.curl.CurlOption.proxy', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#proxy', attributes: []},
{name: 'etc.c.curl.CurlOption.proxy_transfer_mode', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#proxy_transfer_mode', attributes: []},
{name: 'etc.c.curl.CurlOption.proxyauth', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#proxyauth', attributes: []},
{name: 'etc.c.curl.CurlOption.proxypassword', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#proxypassword', attributes: []},
{name: 'etc.c.curl.CurlOption.proxyport', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#proxyport', attributes: []},
{name: 'etc.c.curl.CurlOption.proxytype', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#proxytype', attributes: []},
{name: 'etc.c.curl.CurlOption.proxyusername', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#proxyusername', attributes: []},
{name: 'etc.c.curl.CurlOption.proxyuserpwd', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#proxyuserpwd', attributes: []},
{name: 'etc.c.curl.CurlOption.put', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#put', attributes: []},
{name: 'etc.c.curl.CurlOption.quote', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#quote', attributes: []},
{name: 'etc.c.curl.CurlOption.random_file', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#random_file', attributes: []},
{name: 'etc.c.curl.CurlOption.range', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#range', attributes: []},
{name: 'etc.c.curl.CurlOption.readdata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#readdata', attributes: []},
{name: 'etc.c.curl.CurlOption.readfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#readfunction', attributes: []},
{name: 'etc.c.curl.CurlOption.redir_protocols', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#redir_protocols', attributes: []},
{name: 'etc.c.curl.CurlOption.referer', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#referer', attributes: []},
{name: 'etc.c.curl.CurlOption.resolve', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#resolve', attributes: []},
{name: 'etc.c.curl.CurlOption.resume_from', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#resume_from', attributes: []},
{name: 'etc.c.curl.CurlOption.resume_from_large', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#resume_from_large', attributes: []},
{name: 'etc.c.curl.CurlOption.rtsp_client_cseq', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#rtsp_client_cseq', attributes: []},
{name: 'etc.c.curl.CurlOption.rtsp_request', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#rtsp_request', attributes: []},
{name: 'etc.c.curl.CurlOption.rtsp_server_cseq', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#rtsp_server_cseq', attributes: []},
{name: 'etc.c.curl.CurlOption.rtsp_session_id', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#rtsp_session_id', attributes: []},
{name: 'etc.c.curl.CurlOption.rtsp_stream_uri', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#rtsp_stream_uri', attributes: []},
{name: 'etc.c.curl.CurlOption.rtsp_transport', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#rtsp_transport', attributes: []},
{name: 'etc.c.curl.CurlOption.rtspheader', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#rtspheader', attributes: []},
{name: 'etc.c.curl.CurlOption.seekdata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#seekdata', attributes: []},
{name: 'etc.c.curl.CurlOption.seekfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#seekfunction', attributes: []},
{name: 'etc.c.curl.CurlOption.share', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#share', attributes: []},
{name: 'etc.c.curl.CurlOption.sockoptfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#sockoptfunction', attributes: []},
{name: 'etc.c.curl.CurlOption.socks5_gssapi_nec', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#socks5_gssapi_nec', attributes: []},
{name: 'etc.c.curl.CurlOption.socks5_gssapi_service', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#socks5_gssapi_service', attributes: []},
{name: 'etc.c.curl.CurlOption.ssh_auth_types', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ssh_auth_types', attributes: []},
{name: 'etc.c.curl.CurlOption.ssh_host_public_key_md5', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ssh_host_public_key_md5', attributes: []},
{name: 'etc.c.curl.CurlOption.ssh_keydata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ssh_keydata', attributes: []},
{name: 'etc.c.curl.CurlOption.ssh_keyfunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ssh_keyfunction', attributes: []},
{name: 'etc.c.curl.CurlOption.ssh_knownhosts', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ssh_knownhosts', attributes: []},
{name: 'etc.c.curl.CurlOption.ssh_public_keyfile', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ssh_public_keyfile', attributes: []},
{name: 'etc.c.curl.CurlOption.ssl_cipher_list', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ssl_cipher_list', attributes: []},
{name: 'etc.c.curl.CurlOption.ssl_ctx_data', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ssl_ctx_data', attributes: []},
{name: 'etc.c.curl.CurlOption.ssl_ctx_function', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ssl_ctx_function', attributes: []},
{name: 'etc.c.curl.CurlOption.ssl_sessionid_cache', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ssl_sessionid_cache', attributes: []},
{name: 'etc.c.curl.CurlOption.ssl_verifyhost', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ssl_verifyhost', attributes: []},
{name: 'etc.c.curl.CurlOption.ssl_verifypeer', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#ssl_verifypeer', attributes: []},
{name: 'etc.c.curl.CurlOption.sslcert', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#sslcert', attributes: []},
{name: 'etc.c.curl.CurlOption.sslcerttype', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#sslcerttype', attributes: []},
{name: 'etc.c.curl.CurlOption.sslengine', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#sslengine', attributes: []},
{name: 'etc.c.curl.CurlOption.sslengine_default', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#sslengine_default', attributes: []},
{name: 'etc.c.curl.CurlOption.sslkey', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#sslkey', attributes: []},
{name: 'etc.c.curl.CurlOption.sslkeytype', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#sslkeytype', attributes: []},
{name: 'etc.c.curl.CurlOption.sslversion', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#sslversion', attributes: []},
{name: 'etc.c.curl.CurlOption.stderr', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#stderr', attributes: []},
{name: 'etc.c.curl.CurlOption.tcp_nodelay', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#tcp_nodelay', attributes: []},
{name: 'etc.c.curl.CurlOption.telnetoptions', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#telnetoptions', attributes: []},
{name: 'etc.c.curl.CurlOption.tftp_blksize', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#tftp_blksize', attributes: []},
{name: 'etc.c.curl.CurlOption.timecondition', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#timecondition', attributes: []},
{name: 'etc.c.curl.CurlOption.timeout', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#timeout', attributes: []},
{name: 'etc.c.curl.CurlOption.timeout_ms', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#timeout_ms', attributes: []},
{name: 'etc.c.curl.CurlOption.timevalue', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#timevalue', attributes: []},
{name: 'etc.c.curl.CurlOption.tlsauth_password', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#tlsauth_password', attributes: []},
{name: 'etc.c.curl.CurlOption.tlsauth_type', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#tlsauth_type', attributes: []},
{name: 'etc.c.curl.CurlOption.tlsauth_username', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#tlsauth_username', attributes: []},
{name: 'etc.c.curl.CurlOption.transfertext', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#transfertext', attributes: []},
{name: 'etc.c.curl.CurlOption.unrestricted_auth', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#unrestricted_auth', attributes: []},
{name: 'etc.c.curl.CurlOption.upload', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#upload', attributes: []},
{name: 'etc.c.curl.CurlOption.url', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#url', attributes: []},
{name: 'etc.c.curl.CurlOption.use_ssl', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#use_ssl', attributes: []},
{name: 'etc.c.curl.CurlOption.useragent', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#useragent', attributes: []},
{name: 'etc.c.curl.CurlOption.username', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#username', attributes: []},
{name: 'etc.c.curl.CurlOption.userpwd', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#userpwd', attributes: []},
{name: 'etc.c.curl.CurlOption.verbose', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#verbose', attributes: []},
{name: 'etc.c.curl.CurlOption.wildcardmatch', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#wildcardmatch', attributes: []},
{name: 'etc.c.curl.CurlOption.writedata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#writedata', attributes: []},
{name: 'etc.c.curl.CurlOption.writefunction', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#writefunction', attributes: []},
{name: 'etc.c.curl.CurlOption.writeheader', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#writeheader', attributes: []},
{name: 'etc.c.curl.CurlOption.writeinfo', kind: "enummemberdeclaration", path: './etc/c/curl/curl_option.html#writeinfo', attributes: []},
{name: 'etc.c.curl.CURLoption', kind: "aliasdeclaration", path: './etc/c/curl/cur_loption.html', attributes: []},
{name: 'etc.c.curl.CURLOPTTYPE_FUNCTIONPOINT', kind: "enummemberdeclaration", path: './etc/c/curl/curlopttyp_e_functionpoint.html', attributes: []},
{name: 'etc.c.curl.CURLOPTTYPE_LONG', kind: "enummemberdeclaration", path: './etc/c/curl/curlopttyp_e_long.html', attributes: []},
{name: 'etc.c.curl.CURLOPTTYPE_OBJECTPOINT', kind: "enummemberdeclaration", path: './etc/c/curl/curlopttyp_e_objectpoint.html', attributes: []},
{name: 'etc.c.curl.CURLOPTTYPE_OFF_T', kind: "enummemberdeclaration", path: './etc/c/curl/curlopttyp_e_of_f_t.html', attributes: []},
{name: 'etc.c.curl.CurlPause', kind: "enumdeclaration", path: './etc/c/curl/curl_pause.html', attributes: []},
{name: 'etc.c.curl.CurlPause.all', kind: "enummemberdeclaration", path: './etc/c/curl/curl_pause.html#all', attributes: []},
{name: 'etc.c.curl.CurlPause.cont', kind: "enummemberdeclaration", path: './etc/c/curl/curl_pause.html#cont', attributes: []},
{name: 'etc.c.curl.CurlPause.recv', kind: "enummemberdeclaration", path: './etc/c/curl/curl_pause.html#recv', attributes: []},
{name: 'etc.c.curl.CurlPause.recv_cont', kind: "enummemberdeclaration", path: './etc/c/curl/curl_pause.html#recv_cont', attributes: []},
{name: 'etc.c.curl.CurlPause.send', kind: "enummemberdeclaration", path: './etc/c/curl/curl_pause.html#send', attributes: []},
{name: 'etc.c.curl.CurlPause.send_cont', kind: "enummemberdeclaration", path: './etc/c/curl/curl_pause.html#send_cont', attributes: []},
{name: 'etc.c.curl.CurlPoll', kind: "enumdeclaration", path: './etc/c/curl/curl_poll.html', attributes: []},
{name: 'etc.c.curl.CurlPoll.in_', kind: "enummemberdeclaration", path: './etc/c/curl/curl_poll.html#in_', attributes: []},
{name: 'etc.c.curl.CurlPoll.inout_', kind: "enummemberdeclaration", path: './etc/c/curl/curl_poll.html#inout_', attributes: []},
{name: 'etc.c.curl.CurlPoll.none_', kind: "enummemberdeclaration", path: './etc/c/curl/curl_poll.html#none_', attributes: []},
{name: 'etc.c.curl.CurlPoll.out_', kind: "enummemberdeclaration", path: './etc/c/curl/curl_poll.html#out_', attributes: []},
{name: 'etc.c.curl.CurlPoll.remove_', kind: "enummemberdeclaration", path: './etc/c/curl/curl_poll.html#remove_', attributes: []},
{name: 'etc.c.curl.CurlProto', kind: "enumdeclaration", path: './etc/c/curl/curl_proto.html', attributes: []},
{name: 'etc.c.curl.CurlProto.all', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#all', attributes: []},
{name: 'etc.c.curl.CurlProto.dict', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#dict', attributes: []},
{name: 'etc.c.curl.CurlProto.file', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#file', attributes: []},
{name: 'etc.c.curl.CurlProto.ftp', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#ftp', attributes: []},
{name: 'etc.c.curl.CurlProto.ftps', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#ftps', attributes: []},
{name: 'etc.c.curl.CurlProto.gopher', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#gopher', attributes: []},
{name: 'etc.c.curl.CurlProto.http', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#http', attributes: []},
{name: 'etc.c.curl.CurlProto.https', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#https', attributes: []},
{name: 'etc.c.curl.CurlProto.imap', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#imap', attributes: []},
{name: 'etc.c.curl.CurlProto.imaps', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#imaps', attributes: []},
{name: 'etc.c.curl.CurlProto.ldap', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#ldap', attributes: []},
{name: 'etc.c.curl.CurlProto.ldaps', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#ldaps', attributes: []},
{name: 'etc.c.curl.CurlProto.pop3', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#pop3', attributes: []},
{name: 'etc.c.curl.CurlProto.pop3s', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#pop3s', attributes: []},
{name: 'etc.c.curl.CurlProto.rtmp', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#rtmp', attributes: []},
{name: 'etc.c.curl.CurlProto.rtmpe', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#rtmpe', attributes: []},
{name: 'etc.c.curl.CurlProto.rtmps', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#rtmps', attributes: []},
{name: 'etc.c.curl.CurlProto.rtmpt', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#rtmpt', attributes: []},
{name: 'etc.c.curl.CurlProto.rtmpte', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#rtmpte', attributes: []},
{name: 'etc.c.curl.CurlProto.rtmpts', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#rtmpts', attributes: []},
{name: 'etc.c.curl.CurlProto.rtsp', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#rtsp', attributes: []},
{name: 'etc.c.curl.CurlProto.scp', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#scp', attributes: []},
{name: 'etc.c.curl.CurlProto.sftp', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#sftp', attributes: []},
{name: 'etc.c.curl.CurlProto.smtp', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#smtp', attributes: []},
{name: 'etc.c.curl.CurlProto.smtps', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#smtps', attributes: []},
{name: 'etc.c.curl.CurlProto.telnet', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#telnet', attributes: []},
{name: 'etc.c.curl.CurlProto.tftp', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proto.html#tftp', attributes: []},
{name: 'etc.c.curl.CurlProxy', kind: "enumdeclaration", path: './etc/c/curl/curl_proxy.html', attributes: []},
{name: 'etc.c.curl.CurlProxy.http', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proxy.html#http', attributes: []},
{name: 'etc.c.curl.CurlProxy.http_1_0', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proxy.html#http_1_0', attributes: []},
{name: 'etc.c.curl.CurlProxy.socks4', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proxy.html#socks4', attributes: []},
{name: 'etc.c.curl.CurlProxy.socks4a', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proxy.html#socks4a', attributes: []},
{name: 'etc.c.curl.CurlProxy.socks5', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proxy.html#socks5', attributes: []},
{name: 'etc.c.curl.CurlProxy.socks5_hostname', kind: "enummemberdeclaration", path: './etc/c/curl/curl_proxy.html#socks5_hostname', attributes: []},
{name: 'etc.c.curl.CurlReadFunc', kind: "enumdeclaration", path: './etc/c/curl/curl_read_func.html', attributes: []},
{name: 'etc.c.curl.CurlReadFunc.abort', kind: "enummemberdeclaration", path: './etc/c/curl/curl_read_func.html#abort', attributes: []},
{name: 'etc.c.curl.CurlReadFunc.pause', kind: "enummemberdeclaration", path: './etc/c/curl/curl_read_func.html#pause', attributes: []},
{name: 'etc.c.curl.CurlRedir', kind: "enumdeclaration", path: './etc/c/curl/curl_redir.html', attributes: []},
{name: 'etc.c.curl.CurlRedir.get_all', kind: "enummemberdeclaration", path: './etc/c/curl/curl_redir.html#get_all', attributes: []},
{name: 'etc.c.curl.CurlRedir.post_301', kind: "enummemberdeclaration", path: './etc/c/curl/curl_redir.html#post_301', attributes: []},
{name: 'etc.c.curl.CurlRedir.post_302', kind: "enummemberdeclaration", path: './etc/c/curl/curl_redir.html#post_302', attributes: []},
{name: 'etc.c.curl.CurlRedir.post_all', kind: "enummemberdeclaration", path: './etc/c/curl/curl_redir.html#post_all', attributes: []},
{name: 'etc.c.curl.CurlRtspReq', kind: "enumdeclaration", path: './etc/c/curl/curl_rtsp_req.html', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.announce', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.html#announce', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.describe', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.html#describe', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.get_parameter', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.html#get_parameter', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.html#last', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.html#none', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.options', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.html#options', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.pause', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.html#pause', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.play', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.html#play', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.receive', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.html#receive', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.record', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.html#record', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.set_parameter', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.html#set_parameter', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.setup', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.html#setup', attributes: []},
{name: 'etc.c.curl.CurlRtspReq.teardown', kind: "enummemberdeclaration", path: './etc/c/curl/curl_rtsp_req.html#teardown', attributes: []},
{name: 'etc.c.curl.CurlSeek', kind: "enumdeclaration", path: './etc/c/curl/curl_seek.html', attributes: []},
{name: 'etc.c.curl.CurlSeek.cantseek', kind: "enummemberdeclaration", path: './etc/c/curl/curl_seek.html#cantseek', attributes: []},
{name: 'etc.c.curl.CurlSeek.fail', kind: "enummemberdeclaration", path: './etc/c/curl/curl_seek.html#fail', attributes: []},
{name: 'etc.c.curl.CurlSeek.ok', kind: "enummemberdeclaration", path: './etc/c/curl/curl_seek.html#ok', attributes: []},
{name: 'etc.c.curl.CurlSeekPos', kind: "enumdeclaration", path: './etc/c/curl/curl_seek_pos.html', attributes: []},
{name: 'etc.c.curl.CurlSeekPos.current', kind: "enummemberdeclaration", path: './etc/c/curl/curl_seek_pos.html#current', attributes: []},
{name: 'etc.c.curl.CurlSeekPos.end', kind: "enummemberdeclaration", path: './etc/c/curl/curl_seek_pos.html#end', attributes: []},
{name: 'etc.c.curl.CurlSeekPos.set', kind: "enummemberdeclaration", path: './etc/c/curl/curl_seek_pos.html#set', attributes: []},
{name: 'etc.c.curl.CURLSH', kind: "aliasdeclaration", path: './etc/c/curl/curlsh.html', attributes: []},
{name: 'etc.c.curl.CURLSHcode', kind: "aliasdeclaration", path: './etc/c/curl/curls_hcode.html', attributes: []},
{name: 'etc.c.curl.CurlShError', kind: "enumdeclaration", path: './etc/c/curl/curl_sh_error.html', attributes: []},
{name: 'etc.c.curl.CurlShError.bad_option', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_error.html#bad_option', attributes: []},
{name: 'etc.c.curl.CurlShError.in_use', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_error.html#in_use', attributes: []},
{name: 'etc.c.curl.CurlShError.invalid', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_error.html#invalid', attributes: []},
{name: 'etc.c.curl.CurlShError.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_error.html#last', attributes: []},
{name: 'etc.c.curl.CurlShError.nomem', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_error.html#nomem', attributes: []},
{name: 'etc.c.curl.CurlShError.ok', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_error.html#ok', attributes: []},
{name: 'etc.c.curl.CURLSHoption', kind: "aliasdeclaration", path: './etc/c/curl/curls_hoption.html', attributes: []},
{name: 'etc.c.curl.CurlShOption', kind: "enumdeclaration", path: './etc/c/curl/curl_sh_option.html', attributes: []},
{name: 'etc.c.curl.CurlShOption.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_option.html#last', attributes: []},
{name: 'etc.c.curl.CurlShOption.lockfunc', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_option.html#lockfunc', attributes: []},
{name: 'etc.c.curl.CurlShOption.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_option.html#none', attributes: []},
{name: 'etc.c.curl.CurlShOption.share', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_option.html#share', attributes: []},
{name: 'etc.c.curl.CurlShOption.unlockfunc', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_option.html#unlockfunc', attributes: []},
{name: 'etc.c.curl.CurlShOption.unshare', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_option.html#unshare', attributes: []},
{name: 'etc.c.curl.CurlShOption.userdata', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sh_option.html#userdata', attributes: []},
{name: 'etc.c.curl.curlsocktype', kind: "aliasdeclaration", path: './etc/c/curl/curlsocktype.html', attributes: []},
{name: 'etc.c.curl.CurlSockType', kind: "enumdeclaration", path: './etc/c/curl/curl_sock_type.html', attributes: []},
{name: 'etc.c.curl.CurlSockType.ipcxn', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sock_type.html#ipcxn', attributes: []},
{name: 'etc.c.curl.CurlSockType.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_sock_type.html#last', attributes: []},
{name: 'etc.c.curl.CurlSshAuth', kind: "enumdeclaration", path: './etc/c/curl/curl_ssh_auth.html', attributes: []},
{name: 'etc.c.curl.CurlSshAuth.any', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssh_auth.html#any', attributes: []},
{name: 'etc.c.curl.CurlSshAuth.host', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssh_auth.html#host', attributes: []},
{name: 'etc.c.curl.CurlSshAuth.keyboard', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssh_auth.html#keyboard', attributes: []},
{name: 'etc.c.curl.CurlSshAuth.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssh_auth.html#none', attributes: []},
{name: 'etc.c.curl.CurlSshAuth.password', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssh_auth.html#password', attributes: []},
{name: 'etc.c.curl.CurlSshAuth.publickey', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssh_auth.html#publickey', attributes: []},
{name: 'etc.c.curl.CurlSslVersion', kind: "enumdeclaration", path: './etc/c/curl/curl_ssl_version.html', attributes: []},
{name: 'etc.c.curl.CurlSslVersion.default_version', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssl_version.html#default_version', attributes: []},
{name: 'etc.c.curl.CurlSslVersion.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssl_version.html#last', attributes: []},
{name: 'etc.c.curl.CurlSslVersion.sslv2', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssl_version.html#sslv2', attributes: []},
{name: 'etc.c.curl.CurlSslVersion.sslv3', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssl_version.html#sslv3', attributes: []},
{name: 'etc.c.curl.CurlSslVersion.tlsv1', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ssl_version.html#tlsv1', attributes: []},
{name: 'etc.c.curl.CurlTimeCond', kind: "enumdeclaration", path: './etc/c/curl/curl_time_cond.html', attributes: []},
{name: 'etc.c.curl.CurlTimeCond.ifmodsince', kind: "enummemberdeclaration", path: './etc/c/curl/curl_time_cond.html#ifmodsince', attributes: []},
{name: 'etc.c.curl.CurlTimeCond.ifunmodsince', kind: "enummemberdeclaration", path: './etc/c/curl/curl_time_cond.html#ifunmodsince', attributes: []},
{name: 'etc.c.curl.CurlTimeCond.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_time_cond.html#last', attributes: []},
{name: 'etc.c.curl.CurlTimeCond.lastmod', kind: "enummemberdeclaration", path: './etc/c/curl/curl_time_cond.html#lastmod', attributes: []},
{name: 'etc.c.curl.CurlTimeCond.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_time_cond.html#none', attributes: []},
{name: 'etc.c.curl.CurlTlsAuth', kind: "enumdeclaration", path: './etc/c/curl/curl_tls_auth.html', attributes: []},
{name: 'etc.c.curl.CurlTlsAuth.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_tls_auth.html#last', attributes: []},
{name: 'etc.c.curl.CurlTlsAuth.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_tls_auth.html#none', attributes: []},
{name: 'etc.c.curl.CurlTlsAuth.srp', kind: "enummemberdeclaration", path: './etc/c/curl/curl_tls_auth.html#srp', attributes: []},
{name: 'etc.c.curl.CurlUseSSL', kind: "enumdeclaration", path: './etc/c/curl/curl_use_ssl.html', attributes: []},
{name: 'etc.c.curl.CurlUseSSL.all', kind: "enummemberdeclaration", path: './etc/c/curl/curl_use_ssl.html#all', attributes: []},
{name: 'etc.c.curl.CurlUseSSL.control', kind: "enummemberdeclaration", path: './etc/c/curl/curl_use_ssl.html#control', attributes: []},
{name: 'etc.c.curl.CurlUseSSL.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_use_ssl.html#last', attributes: []},
{name: 'etc.c.curl.CurlUseSSL.none', kind: "enummemberdeclaration", path: './etc/c/curl/curl_use_ssl.html#none', attributes: []},
{name: 'etc.c.curl.CurlUseSSL.tryssl', kind: "enummemberdeclaration", path: './etc/c/curl/curl_use_ssl.html#tryssl', attributes: []},
{name: 'etc.c.curl.CurlVer', kind: "enumdeclaration", path: './etc/c/curl/curl_ver.html', attributes: []},
{name: 'etc.c.curl.CurlVer.first', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ver.html#first', attributes: []},
{name: 'etc.c.curl.CurlVer.fourth', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ver.html#fourth', attributes: []},
{name: 'etc.c.curl.CurlVer.last', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ver.html#last', attributes: []},
{name: 'etc.c.curl.CurlVer.second', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ver.html#second', attributes: []},
{name: 'etc.c.curl.CurlVer.third', kind: "enummemberdeclaration", path: './etc/c/curl/curl_ver.html#third', attributes: []},
{name: 'etc.c.curl.CURLversion', kind: "aliasdeclaration", path: './etc/c/curl/cur_lversion.html', attributes: []},
{name: 'etc.c.curl.CurlVersion', kind: "enumdeclaration", path: './etc/c/curl/curl_version.html', attributes: []},
{name: 'etc.c.curl.CurlVersion.asynchdns', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.html#asynchdns', attributes: []},
{name: 'etc.c.curl.CurlVersion.conv', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.html#conv', attributes: []},
{name: 'etc.c.curl.CurlVersion.curldebug', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.html#curldebug', attributes: []},
{name: 'etc.c.curl.CurlVersion.dbg', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.html#dbg', attributes: []},
{name: 'etc.c.curl.CurlVersion.gssnegotiate', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.html#gssnegotiate', attributes: []},
{name: 'etc.c.curl.CurlVersion.idn', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.html#idn', attributes: []},
{name: 'etc.c.curl.CurlVersion.ipv6', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.html#ipv6', attributes: []},
{name: 'etc.c.curl.CurlVersion.kerberos4', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.html#kerberos4', attributes: []},
{name: 'etc.c.curl.CurlVersion.largefile', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.html#largefile', attributes: []},
{name: 'etc.c.curl.CurlVersion.libz', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.html#libz', attributes: []},
{name: 'etc.c.curl.CurlVersion.ntlm', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.html#ntlm', attributes: []},
{name: 'etc.c.curl.CurlVersion.spnego', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.html#spnego', attributes: []},
{name: 'etc.c.curl.CurlVersion.ssl', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.html#ssl', attributes: []},
{name: 'etc.c.curl.CurlVersion.sspi', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.html#sspi', attributes: []},
{name: 'etc.c.curl.CurlVersion.tlsauth_srp', kind: "enummemberdeclaration", path: './etc/c/curl/curl_version.html#tlsauth_srp', attributes: []},
{name: 'etc.c.curl.CURLVERSION_NOW', kind: "enummemberdeclaration", path: './etc/c/curl/curlversio_n_now.html', attributes: []},
{name: 'etc.c.curl.fd_set', kind: "aliasdeclaration", path: './etc/c/curl/fd_set.html', attributes: []},
{name: 'etc.c.curl.FUNCTIONPOINT', kind: "aliasdeclaration", path: './etc/c/curl/functionpoint.html', attributes: []},
{name: 'etc.c.curl.HTTPPOST_BUFFER', kind: "enummemberdeclaration", path: './etc/c/curl/httppos_t_buffer.html', attributes: []},
{name: 'etc.c.curl.HTTPPOST_CALLBACK', kind: "enummemberdeclaration", path: './etc/c/curl/httppos_t_callback.html', attributes: []},
{name: 'etc.c.curl.HTTPPOST_FILENAME', kind: "enummemberdeclaration", path: './etc/c/curl/httppos_t_filename.html', attributes: []},
{name: 'etc.c.curl.HTTPPOST_PTRBUFFER', kind: "enummemberdeclaration", path: './etc/c/curl/httppos_t_ptrbuffer.html', attributes: []},
{name: 'etc.c.curl.HTTPPOST_PTRCONTENTS', kind: "enummemberdeclaration", path: './etc/c/curl/httppos_t_ptrcontents.html', attributes: []},
{name: 'etc.c.curl.HTTPPOST_PTRNAME', kind: "enummemberdeclaration", path: './etc/c/curl/httppos_t_ptrname.html', attributes: []},
{name: 'etc.c.curl.HTTPPOST_READFILE', kind: "enummemberdeclaration", path: './etc/c/curl/httppos_t_readfile.html', attributes: []},
{name: 'etc.c.curl.LIBCURL_COPYRIGHT', kind: "enummemberdeclaration", path: './etc/c/curl/libcur_l_copyright.html', attributes: []},
{name: 'etc.c.curl.LIBCURL_TIMESTAMP', kind: "enummemberdeclaration", path: './etc/c/curl/libcur_l_timestamp.html', attributes: []},
{name: 'etc.c.curl.LIBCURL_VERSION', kind: "enummemberdeclaration", path: './etc/c/curl/libcur_l_version.html', attributes: []},
{name: 'etc.c.curl.LIBCURL_VERSION_MAJOR', kind: "enummemberdeclaration", path: './etc/c/curl/libcur_l_versio_n_major.html', attributes: []},
{name: 'etc.c.curl.LIBCURL_VERSION_MINOR', kind: "enummemberdeclaration", path: './etc/c/curl/libcur_l_versio_n_minor.html', attributes: []},
{name: 'etc.c.curl.LIBCURL_VERSION_NUM', kind: "enummemberdeclaration", path: './etc/c/curl/libcur_l_versio_n_num.html', attributes: []},
{name: 'etc.c.curl.LIBCURL_VERSION_PATCH', kind: "enummemberdeclaration", path: './etc/c/curl/libcur_l_versio_n_patch.html', attributes: []},
{name: 'etc.c.curl.LONG', kind: "aliasdeclaration", path: './etc/c/curl/long.html', attributes: []},
{name: 'etc.c.curl.OBJECTPOINT', kind: "aliasdeclaration", path: './etc/c/curl/objectpoint.html', attributes: []},
{name: 'etc.c.curl.OFF_T', kind: "aliasdeclaration", path: './etc/c/curl/of_f_t.html', attributes: []},
{name: 'gc.impl.conservative.gc', kind: "module", path: './gc/impl/conservative/gc.html', attributes: []},
{name: 'gc.impl.manual.gc', kind: "module", path: './gc/impl/manual/gc.html', attributes: []},
{name: 'gc.bits', kind: "module", path: './gc/bits.html', attributes: []},
{name: 'gc.os', kind: "module", path: './gc/os.html', attributes: []},
{name: 'gc.os.isLowOnMem', kind: "functiondeclaration", path: './gc/os/is_low_on_mem.html', attributes: ["nothrow", "nogc"]},
{name: 'gc.os.os_physical_mem', kind: "functiondeclaration", path: './gc/os/os_physical_mem.html', attributes: ["nothrow", "nogc"]},
{name: 'gc.pooltable', kind: "module", path: './gc/pooltable.html', attributes: []},
{name: 'gc.proxy', kind: "module", path: './gc/proxy.html', attributes: []},
{name: 'rt.backtrace.dwarf', kind: "module", path: './rt/backtrace/dwarf.html', attributes: []},
{name: 'rt.backtrace.elf', kind: "module", path: './rt/backtrace/elf.html', attributes: []},
{name: 'rt.backtrace.macho', kind: "module", path: './rt/backtrace/macho.html', attributes: []},
{name: 'rt.typeinfo.ti_Acdouble', kind: "module", path: './rt/typeinfo/ti_Acdouble.html', attributes: []},
{name: 'rt.typeinfo.ti_Acfloat', kind: "module", path: './rt/typeinfo/ti_Acfloat.html', attributes: []},
{name: 'rt.typeinfo.ti_Acreal', kind: "module", path: './rt/typeinfo/ti_Acreal.html', attributes: []},
{name: 'rt.typeinfo.ti_Adouble', kind: "module", path: './rt/typeinfo/ti_Adouble.html', attributes: []},
{name: 'rt.typeinfo.ti_Afloat', kind: "module", path: './rt/typeinfo/ti_Afloat.html', attributes: []},
{name: 'rt.typeinfo.ti_Ag', kind: "module", path: './rt/typeinfo/ti_Ag.html', attributes: []},
{name: 'rt.typeinfo.ti_Aint', kind: "module", path: './rt/typeinfo/ti_Aint.html', attributes: []},
{name: 'rt.typeinfo.ti_Along', kind: "module", path: './rt/typeinfo/ti_Along.html', attributes: []},
{name: 'rt.typeinfo.ti_Areal', kind: "module", path: './rt/typeinfo/ti_Areal.html', attributes: []},
{name: 'rt.typeinfo.ti_Ashort', kind: "module", path: './rt/typeinfo/ti_Ashort.html', attributes: []},
{name: 'rt.typeinfo.ti_byte', kind: "module", path: './rt/typeinfo/ti_byte.html', attributes: []},
{name: 'rt.typeinfo.ti_C', kind: "module", path: './rt/typeinfo/ti_C.html', attributes: []},
{name: 'rt.typeinfo.ti_cdouble', kind: "module", path: './rt/typeinfo/ti_cdouble.html', attributes: []},
{name: 'rt.typeinfo.ti_cent', kind: "module", path: './rt/typeinfo/ti_cent.html', attributes: []},
{name: 'rt.typeinfo.ti_cfloat', kind: "module", path: './rt/typeinfo/ti_cfloat.html', attributes: []},
{name: 'rt.typeinfo.ti_char', kind: "module", path: './rt/typeinfo/ti_char.html', attributes: []},
{name: 'rt.typeinfo.ti_creal', kind: "module", path: './rt/typeinfo/ti_creal.html', attributes: []},
{name: 'rt.typeinfo.ti_dchar', kind: "module", path: './rt/typeinfo/ti_dchar.html', attributes: []},
{name: 'rt.typeinfo.ti_delegate', kind: "module", path: './rt/typeinfo/ti_delegate.html', attributes: []},
{name: 'rt.typeinfo.ti_double', kind: "module", path: './rt/typeinfo/ti_double.html', attributes: []},
{name: 'rt.typeinfo.ti_float', kind: "module", path: './rt/typeinfo/ti_float.html', attributes: []},
{name: 'rt.typeinfo.ti_idouble', kind: "module", path: './rt/typeinfo/ti_idouble.html', attributes: []},
{name: 'rt.typeinfo.ti_ifloat', kind: "module", path: './rt/typeinfo/ti_ifloat.html', attributes: []},
{name: 'rt.typeinfo.ti_int', kind: "module", path: './rt/typeinfo/ti_int.html', attributes: []},
{name: 'rt.typeinfo.ti_ireal', kind: "module", path: './rt/typeinfo/ti_ireal.html', attributes: []},
{name: 'rt.typeinfo.ti_long', kind: "module", path: './rt/typeinfo/ti_long.html', attributes: []},
{name: 'rt.typeinfo.ti_n', kind: "module", path: './rt/typeinfo/ti_n.html', attributes: []},
{name: 'rt.typeinfo.ti_ptr', kind: "module", path: './rt/typeinfo/ti_ptr.html', attributes: []},
{name: 'rt.typeinfo.ti_real', kind: "module", path: './rt/typeinfo/ti_real.html', attributes: []},
{name: 'rt.typeinfo.ti_short', kind: "module", path: './rt/typeinfo/ti_short.html', attributes: []},
{name: 'rt.typeinfo.ti_ubyte', kind: "module", path: './rt/typeinfo/ti_ubyte.html', attributes: []},
{name: 'rt.typeinfo.ti_ucent', kind: "module", path: './rt/typeinfo/ti_ucent.html', attributes: []},
{name: 'rt.typeinfo.ti_uint', kind: "module", path: './rt/typeinfo/ti_uint.html', attributes: []},
{name: 'rt.typeinfo.ti_ulong', kind: "module", path: './rt/typeinfo/ti_ulong.html', attributes: []},
{name: 'rt.typeinfo.ti_ushort', kind: "module", path: './rt/typeinfo/ti_ushort.html', attributes: []},
{name: 'rt.typeinfo.ti_void', kind: "module", path: './rt/typeinfo/ti_void.html', attributes: []},
{name: 'rt.typeinfo.ti_wchar', kind: "module", path: './rt/typeinfo/ti_wchar.html', attributes: []},
{name: 'rt.util.container.array', kind: "module", path: './rt/util/container/array.html', attributes: []},
{name: 'rt.util.container.common', kind: "module", path: './rt/util/container/common.html', attributes: []},
{name: 'rt.util.container.hashtab', kind: "module", path: './rt/util/container/hashtab.html', attributes: []},
{name: 'rt.util.container.treap', kind: "module", path: './rt/util/container/treap.html', attributes: []},
{name: 'rt.util.random', kind: "module", path: './rt/util/random.html', attributes: []},
{name: 'rt.util.typeinfo', kind: "module", path: './rt/util/typeinfo.html', attributes: []},
{name: 'rt.util.utility', kind: "module", path: './rt/util/utility.html', attributes: []},
{name: 'rt.aaA', kind: "module", path: './rt/aaA.html', attributes: []},
{name: 'rt.aaA._aaApply', kind: "functiondeclaration", path: './rt/aaA/_aa_apply.html', attributes: ["extern(C)"]},
{name: 'rt.aaA._aaApply2', kind: "functiondeclaration", path: './rt/aaA/_aa_apply2.html', attributes: ["extern(C)"]},
{name: 'rt.aaA._aaClear', kind: "functiondeclaration", path: './rt/aaA/_aa_clear.html', attributes: ["pure", "extern(C)"]},
{name: 'rt.aaA._aaDelX', kind: "functiondeclaration", path: './rt/aaA/_aa_del_x.html', attributes: ["extern(C)"]},
{name: 'rt.aaA._aaEqual', kind: "functiondeclaration", path: './rt/aaA/_aa_equal.html', attributes: ["extern(C)"]},
{name: 'rt.aaA._aaGetHash', kind: "functiondeclaration", path: './rt/aaA/_aa_get_hash.html', attributes: ["extern(C)"]},
{name: 'rt.aaA._aaGetRvalueX', kind: "functiondeclaration", path: './rt/aaA/_aa_get_rvalue_x.html', attributes: ["extern(C)"]},
{name: 'rt.aaA._aaGetX', kind: "functiondeclaration", path: './rt/aaA/_aa_get_x.html', attributes: ["extern(C)"]},
{name: 'rt.aaA._aaGetY', kind: "functiondeclaration", path: './rt/aaA/_aa_get_y.html', attributes: ["extern(C)"]},
{name: 'rt.aaA._aaInX', kind: "functiondeclaration", path: './rt/aaA/_aa_inx.html', attributes: ["extern(C)"]},
{name: 'rt.aaA._aaKeys', kind: "functiondeclaration", path: './rt/aaA/_aa_keys.html', attributes: ["pure", "extern(C)"]},
{name: 'rt.aaA._aaLen', kind: "functiondeclaration", path: './rt/aaA/_aa_len.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'rt.aaA._aaRehash', kind: "functiondeclaration", path: './rt/aaA/_aa_rehash.html', attributes: ["pure", "extern(C)"]},
{name: 'rt.aaA._aaValues', kind: "functiondeclaration", path: './rt/aaA/_aa_values.html', attributes: ["pure", "extern(C)"]},
{name: 'rt.aaA._aaVersion', kind: "variabledeclaration", path: './rt/aaA/_aa_version.html', attributes: []},
{name: 'rt.aaA._d_assocarrayliteralTX', kind: "functiondeclaration", path: './rt/aaA/_d_assocarrayliteral_tx.html', attributes: ["extern(C)"]},
{name: 'rt.aaA.AA', kind: "structdeclaration", path: './rt/aaA/aa.html', attributes: []},
{name: 'rt.aaA.Range', kind: "structdeclaration", path: './rt/aaA/range.html', attributes: []},
{name: 'rt.aApply', kind: "module", path: './rt/aApply.html', attributes: []},
{name: 'rt.aApply._aApplycw1', kind: "functiondeclaration", path: './rt/aApply/_a_applycw1.html', attributes: ["extern(C)"]},
{name: 'rt.aApply._aApplycw2', kind: "functiondeclaration", path: './rt/aApply/_a_applycw2.html', attributes: ["extern(C)"]},
{name: 'rt.aApply._aApplydc1', kind: "functiondeclaration", path: './rt/aApply/_a_applydc1.html', attributes: ["extern(C)"]},
{name: 'rt.aApply._aApplydc2', kind: "functiondeclaration", path: './rt/aApply/_a_applydc2.html', attributes: ["extern(C)"]},
{name: 'rt.aApply._aApplydw1', kind: "functiondeclaration", path: './rt/aApply/_a_applydw1.html', attributes: ["extern(C)"]},
{name: 'rt.aApply._aApplydw2', kind: "functiondeclaration", path: './rt/aApply/_a_applydw2.html', attributes: ["extern(C)"]},
{name: 'rt.aApply._aApplywc1', kind: "functiondeclaration", path: './rt/aApply/_a_applywc1.html', attributes: ["extern(C)"]},
{name: 'rt.aApply._aApplywc2', kind: "functiondeclaration", path: './rt/aApply/_a_applywc2.html', attributes: ["extern(C)"]},
{name: 'rt.aApply._aApplywd1', kind: "functiondeclaration", path: './rt/aApply/_a_applywd1.html', attributes: ["extern(C)"]},
{name: 'rt.aApply._aApplywd2', kind: "functiondeclaration", path: './rt/aApply/_a_applywd2.html', attributes: ["extern(C)"]},
{name: 'rt.aApply.dg2_t', kind: "aliasdeclaration", path: './rt/aApply/dg2_t.html', attributes: []},
{name: 'rt.aApply.dg_t', kind: "aliasdeclaration", path: './rt/aApply/dg_t.html', attributes: []},
{name: 'rt.aApplyR', kind: "module", path: './rt/aApplyR.html', attributes: []},
{name: 'rt.aApplyR._aApplyRcw1', kind: "functiondeclaration", path: './rt/aApplyR/_a_apply_rcw1.html', attributes: ["extern(C)"]},
{name: 'rt.aApplyR._aApplyRcw2', kind: "functiondeclaration", path: './rt/aApplyR/_a_apply_rcw2.html', attributes: ["extern(C)"]},
{name: 'rt.aApplyR._aApplyRdc1', kind: "functiondeclaration", path: './rt/aApplyR/_a_apply_rdc1.html', attributes: ["extern(C)"]},
{name: 'rt.aApplyR._aApplyRdc2', kind: "functiondeclaration", path: './rt/aApplyR/_a_apply_rdc2.html', attributes: ["extern(C)"]},
{name: 'rt.aApplyR._aApplyRdw1', kind: "functiondeclaration", path: './rt/aApplyR/_a_apply_rdw1.html', attributes: ["extern(C)"]},
{name: 'rt.aApplyR._aApplyRdw2', kind: "functiondeclaration", path: './rt/aApplyR/_a_apply_rdw2.html', attributes: ["extern(C)"]},
{name: 'rt.aApplyR._aApplyRwc1', kind: "functiondeclaration", path: './rt/aApplyR/_a_apply_rwc1.html', attributes: ["extern(C)"]},
{name: 'rt.aApplyR._aApplyRwc2', kind: "functiondeclaration", path: './rt/aApplyR/_a_apply_rwc2.html', attributes: ["extern(C)"]},
{name: 'rt.aApplyR._aApplyRwd1', kind: "functiondeclaration", path: './rt/aApplyR/_a_apply_rwd1.html', attributes: ["extern(C)"]},
{name: 'rt.aApplyR._aApplyRwd2', kind: "functiondeclaration", path: './rt/aApplyR/_a_apply_rwd2.html', attributes: ["extern(C)"]},
{name: 'rt.aApplyR.dg2_t', kind: "aliasdeclaration", path: './rt/aApplyR/dg2_t.html', attributes: []},
{name: 'rt.aApplyR.dg_t', kind: "aliasdeclaration", path: './rt/aApplyR/dg_t.html', attributes: []},
{name: 'rt.adi', kind: "module", path: './rt/adi.html', attributes: []},
{name: 'rt.adi._adEq2', kind: "functiondeclaration", path: './rt/adi/_ad_eq2.html', attributes: ["extern(C)"]},
{name: 'rt.alloca', kind: "module", path: './rt/alloca.html', attributes: []},
{name: 'rt.arrayassign', kind: "module", path: './rt/arrayassign.html', attributes: []},
{name: 'rt.arrayassign._d_arrayassign', kind: "functiondeclaration", path: './rt/arrayassign/_d_arrayassign.html', attributes: ["extern(C)"]},
{name: 'rt.arrayassign._d_arrayassign_l', kind: "functiondeclaration", path: './rt/arrayassign/_d_arrayassign_l.html', attributes: ["extern(C)"]},
{name: 'rt.arrayassign._d_arrayassign_r', kind: "functiondeclaration", path: './rt/arrayassign/_d_arrayassign_r.html', attributes: ["extern(C)"]},
{name: 'rt.arrayassign._d_arrayctor', kind: "functiondeclaration", path: './rt/arrayassign/_d_arrayctor.html', attributes: ["extern(C)"]},
{name: 'rt.arrayassign._d_arraysetassign', kind: "functiondeclaration", path: './rt/arrayassign/_d_arraysetassign.html', attributes: ["extern(C)"]},
{name: 'rt.arrayassign._d_arraysetctor', kind: "functiondeclaration", path: './rt/arrayassign/_d_arraysetctor.html', attributes: ["extern(C)"]},
{name: 'rt.arraycat', kind: "module", path: './rt/arraycat.html', attributes: []},
{name: 'rt.cast_', kind: "module", path: './rt/cast_.html', attributes: []},
{name: 'rt.cast_._d_interface_cast', kind: "functiondeclaration", path: './rt/cast_/_d_interface_cast.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'rt.cast_._d_toObject', kind: "functiondeclaration", path: './rt/cast_/_d_to_object.html', attributes: ["pure", "nothrow", "nogc", "extern(C)"]},
{name: 'rt.cmath2', kind: "module", path: './rt/cmath2.html', attributes: []},
{name: 'rt.cmath2._Ccmp', kind: "functiondeclaration", path: './rt/cmath2/__ccmp.html', attributes: ["extern(C)"]},
{name: 'rt.cmath2._Cdiv', kind: "functiondeclaration", path: './rt/cmath2/__cdiv.html', attributes: ["extern(C)"]},
{name: 'rt.cmath2._Cmul', kind: "functiondeclaration", path: './rt/cmath2/__cmul.html', attributes: ["extern(C)"]},
{name: 'rt.config', kind: "module", path: './rt/config.html', attributes: []},
{name: 'rt.config.rt_configOption', kind: "functiondeclaration", path: './rt/config/rt_config_option.html', attributes: ["nothrow", "nogc"]},
{name: 'rt.cover', kind: "module", path: './rt/cover.html', attributes: []},
{name: 'rt.cover._d_cover_register2', kind: "functiondeclaration", path: './rt/cover/_d_cover_register2.html', attributes: ["extern(C)"]},
{name: 'rt.cover.dmd_coverDestPath', kind: "functiondeclaration", path: './rt/cover/dmd_cover_dest_path.html', attributes: ["extern(C)"]},
{name: 'rt.cover.dmd_coverSetMerge', kind: "functiondeclaration", path: './rt/cover/dmd_cover_set_merge.html', attributes: ["extern(C)"]},
{name: 'rt.cover.dmd_coverSourcePath', kind: "functiondeclaration", path: './rt/cover/dmd_cover_source_path.html', attributes: ["extern(C)"]},
{name: 'rt.critical_', kind: "module", path: './rt/critical_.html', attributes: []},
{name: 'rt.deh', kind: "module", path: './rt/deh.html', attributes: []},
{name: 'rt.deh_win32', kind: "module", path: './rt/deh_win32.html', attributes: []},
{name: 'rt.deh_win64_posix', kind: "module", path: './rt/deh_win64_posix.html', attributes: []},
{name: 'rt.deh_win64_posix._d_throwc', kind: "functiondeclaration", path: './rt/deh_win64_posix/_d_throwc.html', attributes: ["extern(C)"]},
{name: 'rt.dmain2', kind: "module", path: './rt/dmain2.html', attributes: []},
{name: 'rt.dmain2._d_run_main', kind: "functiondeclaration", path: './rt/dmain2/_d_run_main.html', attributes: ["extern(C)"]},
{name: 'rt.dmain2._d_traceContext', kind: "functiondeclaration", path: './rt/dmain2/_d_trace_context.html', attributes: ["extern(C)"]},
{name: 'rt.dmain2._initCount', kind: "variabledeclaration", path: './rt/dmain2/_init_count.html', attributes: []},
{name: 'rt.dmain2.CArgs', kind: "structdeclaration", path: './rt/dmain2/c_args.html', attributes: []},
{name: 'rt.dmain2.gc_clrProxy', kind: "functiondeclaration", path: './rt/dmain2/gc_clr_proxy.html', attributes: ["extern(C)"]},
{name: 'rt.dmain2.gc_getProxy', kind: "functiondeclaration", path: './rt/dmain2/gc_get_proxy.html', attributes: ["extern(C)"]},
{name: 'rt.dmain2.gc_setProxy', kind: "functiondeclaration", path: './rt/dmain2/gc_set_proxy.html', attributes: ["extern(C)"]},
{name: 'rt.dmain2.gcClrFn', kind: "aliasdeclaration", path: './rt/dmain2/gc_clr_fn.html', attributes: []},
{name: 'rt.dmain2.gcGetFn', kind: "aliasdeclaration", path: './rt/dmain2/gc_get_fn.html', attributes: []},
{name: 'rt.dmain2.gcSetFn', kind: "aliasdeclaration", path: './rt/dmain2/gc_set_fn.html', attributes: []},
{name: 'rt.dmain2.rt_getTraceHandler', kind: "functiondeclaration", path: './rt/dmain2/rt_get_trace_handler.html', attributes: ["extern(C)"]},
{name: 'rt.dmain2.rt_init', kind: "functiondeclaration", path: './rt/dmain2/rt_init.html', attributes: ["extern(C)"]},
{name: 'rt.dmain2.rt_setTraceHandler', kind: "functiondeclaration", path: './rt/dmain2/rt_set_trace_handler.html', attributes: ["extern(C)"]},
{name: 'rt.dmain2.rt_term', kind: "functiondeclaration", path: './rt/dmain2/rt_term.html', attributes: ["extern(C)"]},
{name: 'rt.dmain2.TraceHandler', kind: "aliasdeclaration", path: './rt/dmain2/trace_handler.html', attributes: []},
{name: 'rt.dwarfeh', kind: "module", path: './rt/dwarfeh.html', attributes: []},
{name: 'rt.dwarfeh._d_eh_swapContextDwarf', kind: "functiondeclaration", path: './rt/dwarfeh/_d_eh_swap_context_dwarf.html', attributes: ["nothrow", "nogc", "extern(C)"]},
{name: 'rt.dwarfeh._d_throwdwarf', kind: "functiondeclaration", path: './rt/dwarfeh/_d_throwdwarf.html', attributes: ["extern(C)"]},
{name: 'rt.dwarfeh.actionTableLookup', kind: "functiondeclaration", path: './rt/dwarfeh/action_table_lookup.html', attributes: []},
{name: 'rt.dwarfeh.cppExceptionClass', kind: "enummemberdeclaration", path: './rt/dwarfeh/cpp_exception_class.html', attributes: []},
{name: 'rt.dwarfeh.CppExceptionHeader', kind: "structdeclaration", path: './rt/dwarfeh/cpp_exception_header.html', attributes: []},
{name: 'rt.dwarfeh.CppExceptionHeader.toExceptionHeader', kind: "functiondeclaration", path: './rt/dwarfeh/cpp_exception_header.to_exception_header.html', attributes: ["static"]},
{name: 'rt.dwarfeh.CppTypeInfo', kind: "interfacedeclaration", path: './rt/dwarfeh/cpp_type_info.html', attributes: []},
{name: 'rt.dwarfeh.ExceptionHeader', kind: "structdeclaration", path: './rt/dwarfeh/exception_header.html', attributes: []},
{name: 'rt.dwarfeh.ExceptionHeader.create', kind: "functiondeclaration", path: './rt/dwarfeh/exception_header.create.html', attributes: ["static", "nogc"]},
{name: 'rt.dwarfeh.ExceptionHeader.free', kind: "functiondeclaration", path: './rt/dwarfeh/exception_header.free.html', attributes: ["static"]},
{name: 'rt.dwarfeh.ExceptionHeader.pop', kind: "functiondeclaration", path: './rt/dwarfeh/exception_header.pop.html', attributes: ["static"]},
{name: 'rt.dwarfeh.ExceptionHeader.push', kind: "functiondeclaration", path: './rt/dwarfeh/exception_header.push.html', attributes: []},
{name: 'rt.dwarfeh.ExceptionHeader.toExceptionHeader', kind: "functiondeclaration", path: './rt/dwarfeh/exception_header.to_exception_header.html', attributes: ["static"]},
{name: 'rt.dwarfeh.getClassInfo', kind: "functiondeclaration", path: './rt/dwarfeh/get_class_info.html', attributes: []},
{name: 'rt.dwarfeh.getCppPtrToThrownObject', kind: "functiondeclaration", path: './rt/dwarfeh/get_cpp_ptr_to_thrown_object.html', attributes: []},
{name: 'rt.dwarfeh.scanLSDA', kind: "functiondeclaration", path: './rt/dwarfeh/scan_lsda.html', attributes: []},
{name: 'rt.dwarfeh.sLEB128', kind: "functiondeclaration", path: './rt/dwarfeh/sle_b128.html', attributes: []},
{name: 'rt.dwarfeh.uLEB128', kind: "functiondeclaration", path: './rt/dwarfeh/ule_b128.html', attributes: []},
{name: 'rt.ehalloc', kind: "module", path: './rt/ehalloc.html', attributes: []},
{name: 'rt.ehalloc._d_delThrowable', kind: "functiondeclaration", path: './rt/ehalloc/_d_del_throwable.html', attributes: ["extern(C)"]},
{name: 'rt.ehalloc._d_newThrowable', kind: "functiondeclaration", path: './rt/ehalloc/_d_new_throwable.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime', kind: "module", path: './rt/lifetime.html', attributes: []},
{name: 'rt.lifetime._d_allocmemory', kind: "functiondeclaration", path: './rt/lifetime/_d_allocmemory.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_arrayappendcd', kind: "functiondeclaration", path: './rt/lifetime/_d_arrayappendcd.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_arrayappendcTX', kind: "functiondeclaration", path: './rt/lifetime/_d_arrayappendc_tx.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_arrayappendT', kind: "functiondeclaration", path: './rt/lifetime/_d_arrayappend_t.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_arrayappendwd', kind: "functiondeclaration", path: './rt/lifetime/_d_arrayappendwd.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_arraycatnTX', kind: "functiondeclaration", path: './rt/lifetime/_d_arraycatn_tx.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_arraycatT', kind: "functiondeclaration", path: './rt/lifetime/_d_arraycat_t.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_arrayliteralTX', kind: "functiondeclaration", path: './rt/lifetime/_d_arrayliteral_tx.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_arraysetcapacity', kind: "functiondeclaration", path: './rt/lifetime/_d_arraysetcapacity.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_arraysetlengthiT', kind: "functiondeclaration", path: './rt/lifetime/_d_arraysetlengthi_t.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_arraysetlengthT', kind: "functiondeclaration", path: './rt/lifetime/_d_arraysetlength_t.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_arrayshrinkfit', kind: "functiondeclaration", path: './rt/lifetime/_d_arrayshrinkfit.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_callfinalizer', kind: "functiondeclaration", path: './rt/lifetime/_d_callfinalizer.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_callinterfacefinalizer', kind: "functiondeclaration", path: './rt/lifetime/_d_callinterfacefinalizer.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_delarray_t', kind: "functiondeclaration", path: './rt/lifetime/_d_delarray_t.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_delclass', kind: "functiondeclaration", path: './rt/lifetime/_d_delclass.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_delinterface', kind: "functiondeclaration", path: './rt/lifetime/_d_delinterface.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_delmemory', kind: "functiondeclaration", path: './rt/lifetime/_d_delmemory.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_delstruct', kind: "functiondeclaration", path: './rt/lifetime/_d_delstruct.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_newarrayiT', kind: "functiondeclaration", path: './rt/lifetime/_d_newarrayi_t.html', attributes: ["pure", "extern(C)"]},
{name: 'rt.lifetime._d_newarraymiTX', kind: "functiondeclaration", path: './rt/lifetime/_d_newarraymi_tx.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_newarraymTX', kind: "functiondeclaration", path: './rt/lifetime/_d_newarraym_tx.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_newarrayOpT', kind: "functiondeclaration", path: './rt/lifetime/_d_newarray_opt.html', attributes: []},
{name: 'rt.lifetime._d_newarrayT', kind: "functiondeclaration", path: './rt/lifetime/_d_newarray_t.html', attributes: ["pure", "extern(C)"]},
{name: 'rt.lifetime._d_newarrayU', kind: "functiondeclaration", path: './rt/lifetime/_d_newarray_u.html', attributes: ["pure", "extern(C)"]},
{name: 'rt.lifetime._d_newclass', kind: "functiondeclaration", path: './rt/lifetime/_d_newclass.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_newitemiT', kind: "functiondeclaration", path: './rt/lifetime/_d_newitemi_t.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_newitemT', kind: "functiondeclaration", path: './rt/lifetime/_d_newitem_t.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime._d_newitemU', kind: "functiondeclaration", path: './rt/lifetime/_d_newitem_u.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime.Array', kind: "structdeclaration", path: './rt/lifetime/array.html', attributes: []},
{name: 'rt.lifetime.N_CACHE_BLOCKS', kind: "enummemberdeclaration", path: './rt/lifetime/n_cach_e_blocks.html', attributes: []},
{name: 'rt.lifetime.newCapacity', kind: "functiondeclaration", path: './rt/lifetime/new_capacity.html', attributes: []},
{name: 'rt.lifetime.rt_finalize2', kind: "functiondeclaration", path: './rt/lifetime/rt_finalize2.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime.rt_getCollectHandler', kind: "functiondeclaration", path: './rt/lifetime/rt_get_collect_handler.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime.rt_hasFinalizerInSegment', kind: "functiondeclaration", path: './rt/lifetime/rt_has_finalizer_in_segment.html', attributes: ["extern(C)"]},
{name: 'rt.lifetime.rt_setCollectHandler', kind: "functiondeclaration", path: './rt/lifetime/rt_set_collect_handler.html', attributes: ["extern(C)"]},
{name: 'rt.llmath', kind: "module", path: './rt/llmath.html', attributes: []},
{name: 'rt.memory', kind: "module", path: './rt/memory.html', attributes: []},
{name: 'rt.memset', kind: "module", path: './rt/memset.html', attributes: []},
{name: 'rt.minfo', kind: "module", path: './rt/minfo.html', attributes: []},
{name: 'rt.minfo.ModuleGroup', kind: "structdeclaration", path: './rt/minfo/module_group.html', attributes: []},
{name: 'rt.minfo.ModuleGroup.sortCtors', kind: "functiondeclaration", path: './rt/minfo/module_group.sort_ctors.html', attributes: []},
{name: 'rt.minfo.ModuleGroup.sortCtorsOld', kind: "functiondeclaration", path: './rt/minfo/module_group.sort_ctors_old.html', attributes: []},
{name: 'rt.minfo.moduleinfos_apply', kind: "functiondeclaration", path: './rt/minfo/moduleinfos_apply.html', attributes: []},
{name: 'rt.minfo.rt_moduleCtor', kind: "functiondeclaration", path: './rt/minfo/rt_module_ctor.html', attributes: ["extern(C)"]},
{name: 'rt.minfo.rt_moduleDtor', kind: "functiondeclaration", path: './rt/minfo/rt_module_dtor.html', attributes: ["extern(C)"]},
{name: 'rt.minfo.rt_moduleTlsCtor', kind: "functiondeclaration", path: './rt/minfo/rt_module_tls_ctor.html', attributes: ["extern(C)"]},
{name: 'rt.minfo.rt_moduleTlsDtor', kind: "functiondeclaration", path: './rt/minfo/rt_module_tls_dtor.html', attributes: ["extern(C)"]},
{name: 'rt.minfo.runModuleFuncs', kind: "functiondeclaration", path: './rt/minfo/run_module_funcs.html', attributes: []},
{name: 'rt.monitor_', kind: "module", path: './rt/monitor_.html', attributes: []},
{name: 'rt.qsort', kind: "module", path: './rt/qsort.html', attributes: []},
{name: 'rt.sections', kind: "module", path: './rt/sections.html', attributes: []},
{name: 'rt.sections_android', kind: "module", path: './rt/sections_android.html', attributes: []},
{name: 'rt.sections_darwin_64', kind: "module", path: './rt/sections_darwin_64.html', attributes: []},
{name: 'rt.sections_elf_shared', kind: "module", path: './rt/sections_elf_shared.html', attributes: []},
{name: 'rt.sections_elf_shared._isRuntimeInitialized', kind: "variabledeclaration", path: './rt/sections_elf_shared/_is_runtime_initialized.html', attributes: []},
{name: 'rt.sections_elf_shared.finiSections', kind: "functiondeclaration", path: './rt/sections_elf_shared/fini_sections.html', attributes: ["nothrow", "nogc"]},
{name: 'rt.sections_elf_shared.initSections', kind: "functiondeclaration", path: './rt/sections_elf_shared/init_sections.html', attributes: ["nothrow", "nogc"]},
{name: 'rt.sections_elf_shared.initTLSRanges', kind: "functiondeclaration", path: './rt/sections_elf_shared/init_tls_ranges.html', attributes: ["nothrow", "nogc"]},
{name: 'rt.sections_osx_x86', kind: "module", path: './rt/sections_osx_x86.html', attributes: []},
{name: 'rt.sections_osx_x86_64', kind: "module", path: './rt/sections_osx_x86_64.html', attributes: []},
{name: 'rt.sections_solaris', kind: "module", path: './rt/sections_solaris.html', attributes: []},
{name: 'rt.sections_win32', kind: "module", path: './rt/sections_win32.html', attributes: []},
{name: 'rt.sections_win64', kind: "module", path: './rt/sections_win64.html', attributes: []},
{name: 'rt.tlsgc', kind: "module", path: './rt/tlsgc.html', attributes: []},
{name: 'rt.tlsgc.Data', kind: "structdeclaration", path: './rt/tlsgc/data.html', attributes: []},
{name: 'rt.tlsgc.destroy', kind: "functiondeclaration", path: './rt/tlsgc/destroy.html', attributes: ["nothrow", "nogc"]},
{name: 'rt.tlsgc.init', kind: "functiondeclaration", path: './rt/tlsgc/init.html', attributes: ["nothrow", "nogc"]},
{name: 'rt.tlsgc.processGCMarks', kind: "functiondeclaration", path: './rt/tlsgc/process_gc_marks.html', attributes: []},
{name: 'rt.tlsgc.scan', kind: "functiondeclaration", path: './rt/tlsgc/scan.html', attributes: []},
{name: 'rt.trace', kind: "module", path: './rt/trace.html', attributes: []},
{name: 'rt.trace.trace_setdeffilename', kind: "functiondeclaration", path: './rt/trace/trace_setdeffilename.html', attributes: ["extern(C)"]},
{name: 'rt.trace.trace_setlogfilename', kind: "functiondeclaration", path: './rt/trace/trace_setlogfilename.html', attributes: ["extern(C)"]},
{name: 'rt.tracegc', kind: "module", path: './rt/tracegc.html', attributes: []},
{name: 'rt.unwind', kind: "module", path: './rt/unwind.html', attributes: []},
{name: 'object', kind: "module", path: './object.html', attributes: []},
{name: 'object.assumeSafeAppend', kind: "functiondeclaration", path: './object/assume_safe_append.html', attributes: ["auto", "nothrow", "ref", "system"]},
{name: 'object.byKey', kind: "functiondeclaration", path: './object/by_key.html', attributes: ["auto", "pure", "nothrow", "nogc", "safe"]},
{name: 'object.byKeyValue', kind: "functiondeclaration", path: './object/by_key_value.html', attributes: ["auto", "pure", "nothrow", "nogc", "safe"]},
{name: 'object.byValue', kind: "functiondeclaration", path: './object/by_value.html', attributes: ["auto", "pure", "nothrow", "nogc", "safe"]},
{name: 'object.capacity', kind: "functiondeclaration", path: './object/capacity.html', attributes: ["pure", "nothrow", "property", "trusted"]},
{name: 'object.clear', kind: "functiondeclaration", path: './object/clear.html', attributes: []},
{name: 'object.destroy', kind: "functiondeclaration", path: './object/destroy.html', attributes: []},
{name: 'object.dup', kind: "functiondeclaration", path: './object/dup.html', attributes: []},
{name: 'object.Error', kind: "classdeclaration", path: './object/error.html', attributes: []},
{name: 'object.Error.this', kind: "functiondeclaration", path: './object/error.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'object.Exception', kind: "classdeclaration", path: './object/exception.html', attributes: []},
{name: 'object.Exception.this', kind: "functiondeclaration", path: './object/exception.this.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'object.get', kind: "functiondeclaration", path: './object/get.html', attributes: []},
{name: 'object.hashOf', kind: "functiondeclaration", path: './object/hash_of.html', attributes: []},
{name: 'object.idup', kind: "functiondeclaration", path: './object/idup.html', attributes: ["property"]},
{name: 'object.Interface', kind: "structdeclaration", path: './object/interface.html', attributes: []},
{name: 'object.Interface.classinfo', kind: "variabledeclaration", path: './object/interface.classinfo.html', attributes: []},
{name: 'object.Interface.offset', kind: "variabledeclaration", path: './object/interface.offset.html', attributes: []},
{name: 'object.keys', kind: "functiondeclaration", path: './object/keys.html', attributes: ["property"]},
{name: 'object.ModuleInfo', kind: "structdeclaration", path: './object/module_info.html', attributes: []},
{name: 'object.ModuleInfo.ctor', kind: "functiondeclaration", path: './object/module_info.ctor.html', attributes: []},
{name: 'object.ModuleInfo.dtor', kind: "functiondeclaration", path: './object/module_info.dtor.html', attributes: []},
{name: 'object.ModuleInfo.ictor', kind: "functiondeclaration", path: './object/module_info.ictor.html', attributes: []},
{name: 'object.ModuleInfo.importedModules', kind: "functiondeclaration", path: './object/module_info.imported_modules.html', attributes: ["pure", "nothrow", "property", "nogc", "const"]},
{name: 'object.ModuleInfo.localClasses', kind: "functiondeclaration", path: './object/module_info.local_classes.html', attributes: ["pure", "nothrow", "property", "nogc", "const"]},
{name: 'object.ModuleInfo.name', kind: "functiondeclaration", path: './object/module_info.name.html', attributes: ["pure", "nothrow", "property", "nogc", "const"]},
{name: 'object.ModuleInfo.tlsctor', kind: "functiondeclaration", path: './object/module_info.tlsctor.html', attributes: []},
{name: 'object.ModuleInfo.tlsdtor', kind: "functiondeclaration", path: './object/module_info.tlsdtor.html', attributes: []},
{name: 'object.ModuleInfo.unitTest', kind: "functiondeclaration", path: './object/module_info.unit_test.html', attributes: []},
{name: 'object.ModuleInfo.xgetMembers', kind: "functiondeclaration", path: './object/module_info.xget_members.html', attributes: ["pure", "nothrow", "property", "nogc", "const"]},
{name: 'object.Object', kind: "classdeclaration", path: './object/object.html', attributes: []},
{name: 'object.OffsetTypeInfo', kind: "structdeclaration", path: './object/offset_type_info.html', attributes: []},
{name: 'object.OffsetTypeInfo.offset', kind: "variabledeclaration", path: './object/offset_type_info.offset.html', attributes: []},
{name: 'object.OffsetTypeInfo.ti', kind: "variabledeclaration", path: './object/offset_type_info.ti.html', attributes: []},
{name: 'object.opEquals', kind: "functiondeclaration", path: './object/op_equals.html', attributes: []},
{name: 'object.rehash', kind: "functiondeclaration", path: './object/rehash.html', attributes: []},
{name: 'object.require', kind: "functiondeclaration", path: './object/require.html', attributes: ["ref"]},
{name: 'object.reserve', kind: "functiondeclaration", path: './object/reserve.html', attributes: ["pure", "nothrow", "trusted"]},
{name: 'object.RTInfoImpl', kind: "variabledeclaration", path: './object/rt_info_impl.html', attributes: []},
{name: 'object.rtinfoNoPointers', kind: "enummemberdeclaration", path: './object/rtinfo_no_pointers.html', attributes: []},
{name: 'object.Throwable', kind: "classdeclaration", path: './object/throwable.html', attributes: []},
{name: 'object.TypeInfo', kind: "classdeclaration", path: './object/type_info.html', attributes: []},
{name: 'object.TypeInfo.argTypes', kind: "functiondeclaration", path: './object/type_info.arg_types.html', attributes: ["nothrow", "safe"]},
{name: 'object.TypeInfo.compare', kind: "functiondeclaration", path: './object/type_info.compare.html', attributes: ["const"]},
{name: 'object.TypeInfo.destroy', kind: "functiondeclaration", path: './object/type_info.destroy.html', attributes: ["const"]},
{name: 'object.TypeInfo.equals', kind: "functiondeclaration", path: './object/type_info.equals.html', attributes: ["const"]},
{name: 'object.TypeInfo.flags', kind: "functiondeclaration", path: './object/type_info.flags.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'object.TypeInfo.getHash', kind: "functiondeclaration", path: './object/type_info.get_hash.html', attributes: ["nothrow", "trusted", "const"]},
{name: 'object.TypeInfo.initializer', kind: "functiondeclaration", path: './object/type_info.initializer.html', attributes: ["abstract", "pure", "nothrow", "nogc", "safe", "const"]},
{name: 'object.TypeInfo.next', kind: "functiondeclaration", path: './object/type_info.next.html', attributes: ["pure", "nothrow", "property", "nogc", "inout"]},
{name: 'object.TypeInfo.offTi', kind: "functiondeclaration", path: './object/type_info.off_ti.html', attributes: ["const"]},
{name: 'object.TypeInfo.postblit', kind: "functiondeclaration", path: './object/type_info.postblit.html', attributes: ["const"]},
{name: 'object.TypeInfo.rtInfo', kind: "functiondeclaration", path: './object/type_info.rt_info.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'object.TypeInfo.swap', kind: "functiondeclaration", path: './object/type_info.swap.html', attributes: ["const"]},
{name: 'object.TypeInfo.talign', kind: "functiondeclaration", path: './object/type_info.talign.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'object.TypeInfo.tsize', kind: "functiondeclaration", path: './object/type_info.tsize.html', attributes: ["pure", "nothrow", "property", "nogc", "safe", "const"]},
{name: 'object.TypeInfo_Class', kind: "classdeclaration", path: './object/type_info__class.html', attributes: []},
{name: 'object.TypeInfo_Class.base', kind: "variabledeclaration", path: './object/type_info__class.base.html', attributes: []},
{name: 'object.TypeInfo_Class.create', kind: "functiondeclaration", path: './object/type_info__class.create.html', attributes: ["const"]},
{name: 'object.TypeInfo_Class.find', kind: "functiondeclaration", path: './object/type_info__class.find.html', attributes: ["static"]},
{name: 'object.TypeInfo_Class.interfaces', kind: "variabledeclaration", path: './object/type_info__class.interfaces.html', attributes: []},
{name: 'object.TypeInfo_Class.isBaseOf', kind: "functiondeclaration", path: './object/type_info__class.is_base_of.html', attributes: ["final", "pure", "nothrow", "nogc", "trusted", "const"]},
{name: 'object.TypeInfo_Class.m_init', kind: "variabledeclaration", path: './object/type_info__class.m_init.html', attributes: []},
{name: 'object.TypeInfo_Class.name', kind: "variabledeclaration", path: './object/type_info__class.name.html', attributes: []},
{name: 'object.TypeInfo_Class.vtbl', kind: "variabledeclaration", path: './object/type_info__class.vtbl.html', attributes: []},
{name: 'object.update', kind: "functiondeclaration", path: './object/update.html', attributes: []},
{name: 'object.values', kind: "functiondeclaration", path: './object/values.html', attributes: ["property"]},
{name: 'std', kind: "module", path: './std.html', attributes: []},
];
